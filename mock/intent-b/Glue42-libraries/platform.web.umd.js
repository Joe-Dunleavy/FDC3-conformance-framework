(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.platform = global.platform || {}, global.platform.web = factory()));
}(this, (function () { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    function __rest$1(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __awaiter$1(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    const defaultConfig = {
        logger: "info",
        gateway: { webPlatform: {} },
        libraries: [],
        exposeGlue: true
    };
    const parseConfig = (config) => {
        var _a, _b, _c, _d;
        const isPlatformInternal = !!((_c = (_b = (_a = config) === null || _a === void 0 ? void 0 : _a.gateway) === null || _b === void 0 ? void 0 : _b.webPlatform) === null || _c === void 0 ? void 0 : _c.port);
        const combined = Object.assign({}, defaultConfig, config, { isPlatformInternal });
        if (combined.systemLogger) {
            combined.logger = (_d = combined.systemLogger.level) !== null && _d !== void 0 ? _d : "info";
        }
        return combined;
    };

    const checkSingleton = () => {
        const glue42CoreNamespace = window.glue42core;
        if (glue42CoreNamespace && glue42CoreNamespace.webStarted) {
            throw new Error("The Glue42 Core Web has already been started for this application.");
        }
        if (!glue42CoreNamespace) {
            window.glue42core = { webStarted: true };
            return;
        }
        glue42CoreNamespace.webStarted = true;
    };

    const enterprise = (config) => {
        var _a, _b, _c;
        const enterpriseConfig = {
            windows: true,
            layouts: "full",
            appManager: "full",
            channels: true,
            libraries: (_a = config === null || config === void 0 ? void 0 : config.libraries) !== null && _a !== void 0 ? _a : [],
            logger: (_c = (_b = config === null || config === void 0 ? void 0 : config.systemLogger) === null || _b === void 0 ? void 0 : _b.level) !== null && _c !== void 0 ? _c : "warn"
        };
        return window.Glue(enterpriseConfig);
    };

    /**
     * Wraps values in an `Ok` type.
     *
     * Example: `ok(5) // => {ok: true, result: 5}`
     */
    var ok = function (result) { return ({ ok: true, result: result }); };
    /**
     * Typeguard for `Ok`.
     */
    var isOk = function (r) { return r.ok === true; };
    /**
     * Wraps errors in an `Err` type.
     *
     * Example: `err('on fire') // => {ok: false, error: 'on fire'}`
     */
    var err = function (error) { return ({ ok: false, error: error }); };
    /**
     * Typeguard for `Err`.
     */
    var isErr = function (r) { return r.ok === false; };
    /**
     * Create a `Promise` that either resolves with the result of `Ok` or rejects
     * with the error of `Err`.
     */
    var asPromise = function (r) {
        return r.ok === true ? Promise.resolve(r.result) : Promise.reject(r.error);
    };
    /**
     * Unwraps a `Result` and returns either the result of an `Ok`, or
     * `defaultValue`.
     *
     * Example:
     * ```
     * Result.withDefault(5, number().run(json))
     * ```
     *
     * It would be nice if `Decoder` had an instance method that mirrored this
     * function. Such a method would look something like this:
     * ```
     * class Decoder<A> {
     *   runWithDefault = (defaultValue: A, json: any): A =>
     *     Result.withDefault(defaultValue, this.run(json));
     * }
     *
     * number().runWithDefault(5, json)
     * ```
     * Unfortunately, the type of `defaultValue: A` on the method causes issues
     * with type inference on  the `object` decoder in some situations. While these
     * inference issues can be solved by providing the optional type argument for
     * `object`s, the extra trouble and confusion doesn't seem worth it.
     */
    var withDefault = function (defaultValue, r) {
        return r.ok === true ? r.result : defaultValue;
    };
    /**
     * Return the successful result, or throw an error.
     */
    var withException = function (r) {
        if (r.ok === true) {
            return r.result;
        }
        else {
            throw r.error;
        }
    };
    /**
     * Given an array of `Result`s, return the successful values.
     */
    var successes = function (results) {
        return results.reduce(function (acc, r) { return (r.ok === true ? acc.concat(r.result) : acc); }, []);
    };
    /**
     * Apply `f` to the result of an `Ok`, or pass the error through.
     */
    var map = function (f, r) {
        return r.ok === true ? ok(f(r.result)) : r;
    };
    /**
     * Apply `f` to the result of two `Ok`s, or pass an error through. If both
     * `Result`s are errors then the first one is returned.
     */
    var map2 = function (f, ar, br) {
        return ar.ok === false ? ar :
            br.ok === false ? br :
                ok(f(ar.result, br.result));
    };
    /**
     * Apply `f` to the error of an `Err`, or pass the success through.
     */
    var mapError = function (f, r) {
        return r.ok === true ? r : err(f(r.error));
    };
    /**
     * Chain together a sequence of computations that may fail, similar to a
     * `Promise`. If the first computation fails then the error will propagate
     * through. If it succeeds, then `f` will be applied to the value, returning a
     * new `Result`.
     */
    var andThen = function (f, r) {
        return r.ok === true ? f(r.result) : r;
    };


    var result = Object.freeze({
    	ok: ok,
    	isOk: isOk,
    	err: err,
    	isErr: isErr,
    	asPromise: asPromise,
    	withDefault: withDefault,
    	withException: withException,
    	successes: successes,
    	map: map,
    	map2: map2,
    	mapError: mapError,
    	andThen: andThen
    });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */



    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest$1$1(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function isEqual(a, b) {
        if (a === b) {
            return true;
        }
        if (a === null && b === null) {
            return true;
        }
        if (typeof (a) !== typeof (b)) {
            return false;
        }
        if (typeof (a) === 'object') {
            // Array
            if (Array.isArray(a)) {
                if (!Array.isArray(b)) {
                    return false;
                }
                if (a.length !== b.length) {
                    return false;
                }
                for (var i = 0; i < a.length; i++) {
                    if (!isEqual(a[i], b[i])) {
                        return false;
                    }
                }
                return true;
            }
            // Hash table
            var keys = Object.keys(a);
            if (keys.length !== Object.keys(b).length) {
                return false;
            }
            for (var i = 0; i < keys.length; i++) {
                if (!b.hasOwnProperty(keys[i])) {
                    return false;
                }
                if (!isEqual(a[keys[i]], b[keys[i]])) {
                    return false;
                }
            }
            return true;
        }
    }
    /*
     * Helpers
     */
    var isJsonArray = function (json) { return Array.isArray(json); };
    var isJsonObject = function (json) {
        return typeof json === 'object' && json !== null && !isJsonArray(json);
    };
    var typeString = function (json) {
        switch (typeof json) {
            case 'string':
                return 'a string';
            case 'number':
                return 'a number';
            case 'boolean':
                return 'a boolean';
            case 'undefined':
                return 'undefined';
            case 'object':
                if (json instanceof Array) {
                    return 'an array';
                }
                else if (json === null) {
                    return 'null';
                }
                else {
                    return 'an object';
                }
            default:
                return JSON.stringify(json);
        }
    };
    var expectedGot = function (expected, got) {
        return "expected " + expected + ", got " + typeString(got);
    };
    var printPath = function (paths) {
        return paths.map(function (path) { return (typeof path === 'string' ? "." + path : "[" + path + "]"); }).join('');
    };
    var prependAt = function (newAt, _a) {
        var at = _a.at, rest = __rest$1$1(_a, ["at"]);
        return (__assign({ at: newAt + (at || '') }, rest));
    };
    /**
     * Decoders transform json objects with unknown structure into known and
     * verified forms. You can create objects of type `Decoder<A>` with either the
     * primitive decoder functions, such as `boolean()` and `string()`, or by
     * applying higher-order decoders to the primitives, such as `array(boolean())`
     * or `dict(string())`.
     *
     * Each of the decoder functions are available both as a static method on
     * `Decoder` and as a function alias -- for example the string decoder is
     * defined at `Decoder.string()`, but is also aliased to `string()`. Using the
     * function aliases exported with the library is recommended.
     *
     * `Decoder` exposes a number of 'run' methods, which all decode json in the
     * same way, but communicate success and failure in different ways. The `map`
     * and `andThen` methods modify decoders without having to call a 'run' method.
     *
     * Alternatively, the main decoder `run()` method returns an object of type
     * `Result<A, DecoderError>`. This library provides a number of helper
     * functions for dealing with the `Result` type, so you can do all the same
     * things with a `Result` as with the decoder methods.
     */
    var Decoder = /** @class */ (function () {
        /**
         * The Decoder class constructor is kept private to separate the internal
         * `decode` function from the external `run` function. The distinction
         * between the two functions is that `decode` returns a
         * `Partial<DecoderError>` on failure, which contains an unfinished error
         * report. When `run` is called on a decoder, the relevant series of `decode`
         * calls is made, and then on failure the resulting `Partial<DecoderError>`
         * is turned into a `DecoderError` by filling in the missing information.
         *
         * While hiding the constructor may seem restrictive, leveraging the
         * provided decoder combinators and helper functions such as
         * `andThen` and `map` should be enough to build specialized decoders as
         * needed.
         */
        function Decoder(decode) {
            var _this = this;
            this.decode = decode;
            /**
             * Run the decoder and return a `Result` with either the decoded value or a
             * `DecoderError` containing the json input, the location of the error, and
             * the error message.
             *
             * Examples:
             * ```
             * number().run(12)
             * // => {ok: true, result: 12}
             *
             * string().run(9001)
             * // =>
             * // {
             * //   ok: false,
             * //   error: {
             * //     kind: 'DecoderError',
             * //     input: 9001,
             * //     at: 'input',
             * //     message: 'expected a string, got 9001'
             * //   }
             * // }
             * ```
             */
            this.run = function (json) {
                return mapError(function (error) { return ({
                    kind: 'DecoderError',
                    input: json,
                    at: 'input' + (error.at || ''),
                    message: error.message || ''
                }); }, _this.decode(json));
            };
            /**
             * Run the decoder as a `Promise`.
             */
            this.runPromise = function (json) { return asPromise(_this.run(json)); };
            /**
             * Run the decoder and return the value on success, or throw an exception
             * with a formatted error string.
             */
            this.runWithException = function (json) { return withException(_this.run(json)); };
            /**
             * Construct a new decoder that applies a transformation to the decoded
             * result. If the decoder succeeds then `f` will be applied to the value. If
             * it fails the error will propagated through.
             *
             * Example:
             * ```
             * number().map(x => x * 5).run(10)
             * // => {ok: true, result: 50}
             * ```
             */
            this.map = function (f) {
                return new Decoder(function (json) { return map(f, _this.decode(json)); });
            };
            /**
             * Chain together a sequence of decoders. The first decoder will run, and
             * then the function will determine what decoder to run second. If the result
             * of the first decoder succeeds then `f` will be applied to the decoded
             * value. If it fails the error will propagate through.
             *
             * This is a very powerful method -- it can act as both the `map` and `where`
             * methods, can improve error messages for edge cases, and can be used to
             * make a decoder for custom types.
             *
             * Example of adding an error message:
             * ```
             * const versionDecoder = valueAt(['version'], number());
             * const infoDecoder3 = object({a: boolean()});
             *
             * const decoder = versionDecoder.andThen(version => {
             *   switch (version) {
             *     case 3:
             *       return infoDecoder3;
             *     default:
             *       return fail(`Unable to decode info, version ${version} is not supported.`);
             *   }
             * });
             *
             * decoder.run({version: 3, a: true})
             * // => {ok: true, result: {a: true}}
             *
             * decoder.run({version: 5, x: 'abc'})
             * // =>
             * // {
             * //   ok: false,
             * //   error: {... message: 'Unable to decode info, version 5 is not supported.'}
             * // }
             * ```
             *
             * Example of decoding a custom type:
             * ```
             * // nominal type for arrays with a length of at least one
             * type NonEmptyArray<T> = T[] & { __nonEmptyArrayBrand__: void };
             *
             * const nonEmptyArrayDecoder = <T>(values: Decoder<T>): Decoder<NonEmptyArray<T>> =>
             *   array(values).andThen(arr =>
             *     arr.length > 0
             *       ? succeed(createNonEmptyArray(arr))
             *       : fail(`expected a non-empty array, got an empty array`)
             *   );
             * ```
             */
            this.andThen = function (f) {
                return new Decoder(function (json) {
                    return andThen(function (value) { return f(value).decode(json); }, _this.decode(json));
                });
            };
            /**
             * Add constraints to a decoder _without_ changing the resulting type. The
             * `test` argument is a predicate function which returns true for valid
             * inputs. When `test` fails on an input, the decoder fails with the given
             * `errorMessage`.
             *
             * ```
             * const chars = (length: number): Decoder<string> =>
             *   string().where(
             *     (s: string) => s.length === length,
             *     `expected a string of length ${length}`
             *   );
             *
             * chars(5).run('12345')
             * // => {ok: true, result: '12345'}
             *
             * chars(2).run('HELLO')
             * // => {ok: false, error: {... message: 'expected a string of length 2'}}
             *
             * chars(12).run(true)
             * // => {ok: false, error: {... message: 'expected a string, got a boolean'}}
             * ```
             */
            this.where = function (test, errorMessage) {
                return _this.andThen(function (value) { return (test(value) ? Decoder.succeed(value) : Decoder.fail(errorMessage)); });
            };
        }
        /**
         * Decoder primitive that validates strings, and fails on all other input.
         */
        Decoder.string = function () {
            return new Decoder(function (json) {
                return typeof json === 'string'
                    ? ok(json)
                    : err({ message: expectedGot('a string', json) });
            });
        };
        /**
         * Decoder primitive that validates numbers, and fails on all other input.
         */
        Decoder.number = function () {
            return new Decoder(function (json) {
                return typeof json === 'number'
                    ? ok(json)
                    : err({ message: expectedGot('a number', json) });
            });
        };
        /**
         * Decoder primitive that validates booleans, and fails on all other input.
         */
        Decoder.boolean = function () {
            return new Decoder(function (json) {
                return typeof json === 'boolean'
                    ? ok(json)
                    : err({ message: expectedGot('a boolean', json) });
            });
        };
        Decoder.constant = function (value) {
            return new Decoder(function (json) {
                return isEqual(json, value)
                    ? ok(value)
                    : err({ message: "expected " + JSON.stringify(value) + ", got " + JSON.stringify(json) });
            });
        };
        Decoder.object = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonObject(json) && decoders) {
                    var obj = {};
                    for (var key in decoders) {
                        if (decoders.hasOwnProperty(key)) {
                            var r = decoders[key].decode(json[key]);
                            if (r.ok === true) {
                                // tslint:disable-next-line:strict-type-predicates
                                if (r.result !== undefined) {
                                    obj[key] = r.result;
                                }
                            }
                            else if (json[key] === undefined) {
                                return err({ message: "the key '" + key + "' is required but was not present" });
                            }
                            else {
                                return err(prependAt("." + key, r.error));
                            }
                        }
                    }
                    return ok(obj);
                }
                else if (isJsonObject(json)) {
                    return ok(json);
                }
                else {
                    return err({ message: expectedGot('an object', json) });
                }
            });
        };
        Decoder.array = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonArray(json) && decoder) {
                    var decodeValue_1 = function (v, i) {
                        return mapError(function (err$$1) { return prependAt("[" + i + "]", err$$1); }, decoder.decode(v));
                    };
                    return json.reduce(function (acc, v, i) {
                        return map2(function (arr, result) { return arr.concat([result]); }, acc, decodeValue_1(v, i));
                    }, ok([]));
                }
                else if (isJsonArray(json)) {
                    return ok(json);
                }
                else {
                    return err({ message: expectedGot('an array', json) });
                }
            });
        };
        Decoder.tuple = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonArray(json)) {
                    if (json.length !== decoders.length) {
                        return err({
                            message: "expected a tuple of length " + decoders.length + ", got one of length " + json.length
                        });
                    }
                    var result = [];
                    for (var i = 0; i < decoders.length; i++) {
                        var nth = decoders[i].decode(json[i]);
                        if (nth.ok) {
                            result[i] = nth.result;
                        }
                        else {
                            return err(prependAt("[" + i + "]", nth.error));
                        }
                    }
                    return ok(result);
                }
                else {
                    return err({ message: expectedGot("a tuple of length " + decoders.length, json) });
                }
            });
        };
        Decoder.union = function (ad, bd) {
            var decoders = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                decoders[_i - 2] = arguments[_i];
            }
            return Decoder.oneOf.apply(Decoder, [ad, bd].concat(decoders));
        };
        Decoder.intersection = function (ad, bd) {
            var ds = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                ds[_i - 2] = arguments[_i];
            }
            return new Decoder(function (json) {
                return [ad, bd].concat(ds).reduce(function (acc, decoder) { return map2(Object.assign, acc, decoder.decode(json)); }, ok({}));
            });
        };
        /**
         * Escape hatch to bypass validation. Always succeeds and types the result as
         * `any`. Useful for defining decoders incrementally, particularly for
         * complex objects.
         *
         * Example:
         * ```
         * interface User {
         *   name: string;
         *   complexUserData: ComplexType;
         * }
         *
         * const userDecoder: Decoder<User> = object({
         *   name: string(),
         *   complexUserData: anyJson()
         * });
         * ```
         */
        Decoder.anyJson = function () { return new Decoder(function (json) { return ok(json); }); };
        /**
         * Decoder identity function which always succeeds and types the result as
         * `unknown`.
         */
        Decoder.unknownJson = function () {
            return new Decoder(function (json) { return ok(json); });
        };
        /**
         * Decoder for json objects where the keys are unknown strings, but the values
         * should all be of the same type.
         *
         * Example:
         * ```
         * dict(number()).run({chocolate: 12, vanilla: 10, mint: 37});
         * // => {ok: true, result: {chocolate: 12, vanilla: 10, mint: 37}}
         * ```
         */
        Decoder.dict = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonObject(json)) {
                    var obj = {};
                    for (var key in json) {
                        if (json.hasOwnProperty(key)) {
                            var r = decoder.decode(json[key]);
                            if (r.ok === true) {
                                obj[key] = r.result;
                            }
                            else {
                                return err(prependAt("." + key, r.error));
                            }
                        }
                    }
                    return ok(obj);
                }
                else {
                    return err({ message: expectedGot('an object', json) });
                }
            });
        };
        /**
         * Decoder for values that may be `undefined`. This is primarily helpful for
         * decoding interfaces with optional fields.
         *
         * Example:
         * ```
         * interface User {
         *   id: number;
         *   isOwner?: boolean;
         * }
         *
         * const decoder: Decoder<User> = object({
         *   id: number(),
         *   isOwner: optional(boolean())
         * });
         * ```
         */
        Decoder.optional = function (decoder) {
            return new Decoder(function (json) { return (json === undefined || json === null ? ok(undefined) : decoder.decode(json)); });
        };
        /**
         * Decoder that attempts to run each decoder in `decoders` and either succeeds
         * with the first successful decoder, or fails after all decoders have failed.
         *
         * Note that `oneOf` expects the decoders to all have the same return type,
         * while `union` creates a decoder for the union type of all the input
         * decoders.
         *
         * Examples:
         * ```
         * oneOf(string(), number().map(String))
         * oneOf(constant('start'), constant('stop'), succeed('unknown'))
         * ```
         */
        Decoder.oneOf = function () {
            var decoders = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                decoders[_i] = arguments[_i];
            }
            return new Decoder(function (json) {
                var errors = [];
                for (var i = 0; i < decoders.length; i++) {
                    var r = decoders[i].decode(json);
                    if (r.ok === true) {
                        return r;
                    }
                    else {
                        errors[i] = r.error;
                    }
                }
                var errorsList = errors
                    .map(function (error) { return "at error" + (error.at || '') + ": " + error.message; })
                    .join('", "');
                return err({
                    message: "expected a value matching one of the decoders, got the errors [\"" + errorsList + "\"]"
                });
            });
        };
        /**
         * Decoder that always succeeds with either the decoded value, or a fallback
         * default value.
         */
        Decoder.withDefault = function (defaultValue, decoder) {
            return new Decoder(function (json) {
                return ok(withDefault(defaultValue, decoder.decode(json)));
            });
        };
        /**
         * Decoder that pulls a specific field out of a json structure, instead of
         * decoding and returning the full structure. The `paths` array describes the
         * object keys and array indices to traverse, so that values can be pulled out
         * of a nested structure.
         *
         * Example:
         * ```
         * const decoder = valueAt(['a', 'b', 0], string());
         *
         * decoder.run({a: {b: ['surprise!']}})
         * // => {ok: true, result: 'surprise!'}
         *
         * decoder.run({a: {x: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b[0]' message: 'path does not exist'}}
         * ```
         *
         * Note that the `decoder` is ran on the value found at the last key in the
         * path, even if the last key is not found. This allows the `optional`
         * decoder to succeed when appropriate.
         * ```
         * const optionalDecoder = valueAt(['a', 'b', 'c'], optional(string()));
         *
         * optionalDecoder.run({a: {b: {c: 'surprise!'}}})
         * // => {ok: true, result: 'surprise!'}
         *
         * optionalDecoder.run({a: {b: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b.c' message: 'expected an object, got "cats"'}
         *
         * optionalDecoder.run({a: {b: {z: 1}}})
         * // => {ok: true, result: undefined}
         * ```
         */
        Decoder.valueAt = function (paths, decoder) {
            return new Decoder(function (json) {
                var jsonAtPath = json;
                for (var i = 0; i < paths.length; i++) {
                    if (jsonAtPath === undefined) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: 'path does not exist'
                        });
                    }
                    else if (typeof paths[i] === 'string' && !isJsonObject(jsonAtPath)) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: expectedGot('an object', jsonAtPath)
                        });
                    }
                    else if (typeof paths[i] === 'number' && !isJsonArray(jsonAtPath)) {
                        return err({
                            at: printPath(paths.slice(0, i + 1)),
                            message: expectedGot('an array', jsonAtPath)
                        });
                    }
                    else {
                        jsonAtPath = jsonAtPath[paths[i]];
                    }
                }
                return mapError(function (error) {
                    return jsonAtPath === undefined
                        ? { at: printPath(paths), message: 'path does not exist' }
                        : prependAt(printPath(paths), error);
                }, decoder.decode(jsonAtPath));
            });
        };
        /**
         * Decoder that ignores the input json and always succeeds with `fixedValue`.
         */
        Decoder.succeed = function (fixedValue) {
            return new Decoder(function (json) { return ok(fixedValue); });
        };
        /**
         * Decoder that ignores the input json and always fails with `errorMessage`.
         */
        Decoder.fail = function (errorMessage) {
            return new Decoder(function (json) { return err({ message: errorMessage }); });
        };
        /**
         * Decoder that allows for validating recursive data structures. Unlike with
         * functions, decoders assigned to variables can't reference themselves
         * before they are fully defined. We can avoid prematurely referencing the
         * decoder by wrapping it in a function that won't be called until use, at
         * which point the decoder has been defined.
         *
         * Example:
         * ```
         * interface Comment {
         *   msg: string;
         *   replies: Comment[];
         * }
         *
         * const decoder: Decoder<Comment> = object({
         *   msg: string(),
         *   replies: lazy(() => array(decoder))
         * });
         * ```
         */
        Decoder.lazy = function (mkDecoder) {
            return new Decoder(function (json) { return mkDecoder().decode(json); });
        };
        return Decoder;
    }());

    /* tslint:disable:variable-name */
    /** See `Decoder.string` */
    var string = Decoder.string;
    /** See `Decoder.number` */
    var number = Decoder.number;
    /** See `Decoder.boolean` */
    var boolean = Decoder.boolean;
    /** See `Decoder.anyJson` */
    var anyJson = Decoder.anyJson;
    /** See `Decoder.constant` */
    var constant = Decoder.constant;
    /** See `Decoder.object` */
    var object = Decoder.object;
    /** See `Decoder.array` */
    var array = Decoder.array;
    /** See `Decoder.optional` */
    var optional = Decoder.optional;
    /** See `Decoder.oneOf` */
    var oneOf = Decoder.oneOf;
    /** See `Decoder.lazy` */
    var lazy = Decoder.lazy;

    const nonEmptyStringDecoder = string().where((s) => s.length > 0, "Expected a non-empty string");
    const nonNegativeNumberDecoder = number().where((num) => num >= 0, "Expected a non-negative number");
    const libDomainDecoder = oneOf(constant("system"), constant("windows"), constant("appManager"), constant("layouts"), constant("intents"), constant("notifications"), constant("channels"), constant("extension"));
    const windowOperationTypesDecoder = oneOf(constant("openWindow"), constant("windowHello"), constant("windowAdded"), constant("windowRemoved"), constant("getBounds"), constant("getFrameBounds"), constant("getUrl"), constant("moveResize"), constant("focus"), constant("close"), constant("getTitle"), constant("setTitle"));
    const appManagerOperationTypesDecoder = oneOf(constant("appHello"), constant("appDirectoryStateChange"), constant("instanceStarted"), constant("instanceStopped"), constant("applicationStart"), constant("instanceStop"), constant("clear"));
    const layoutsOperationTypesDecoder = oneOf(constant("layoutAdded"), constant("layoutChanged"), constant("layoutRemoved"), constant("get"), constant("getAll"), constant("export"), constant("import"), constant("remove"), constant("clientSaveRequest"), constant("getGlobalPermissionState"), constant("checkGlobalActivated"), constant("requestGlobalPermission"));
    const notificationsOperationTypesDecoder = oneOf(constant("raiseNotification"), constant("requestPermission"), constant("notificationShow"), constant("notificationClick"), constant("getPermission"));
    const windowRelativeDirectionDecoder = oneOf(constant("top"), constant("left"), constant("right"), constant("bottom"));
    const windowBoundsDecoder = object({
        top: number(),
        left: number(),
        width: nonNegativeNumberDecoder,
        height: nonNegativeNumberDecoder
    });
    const windowOpenSettingsDecoder = optional(object({
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        context: optional(anyJson()),
        relativeTo: optional(nonEmptyStringDecoder),
        relativeDirection: optional(windowRelativeDirectionDecoder),
        windowId: optional(nonEmptyStringDecoder)
    }));
    const openWindowConfigDecoder = object({
        name: nonEmptyStringDecoder,
        url: nonEmptyStringDecoder,
        options: windowOpenSettingsDecoder
    });
    const windowHelloDecoder = object({
        windowId: optional(nonEmptyStringDecoder)
    });
    const coreWindowDataDecoder = object({
        windowId: nonEmptyStringDecoder,
        name: nonEmptyStringDecoder
    });
    const simpleWindowDecoder = object({
        windowId: nonEmptyStringDecoder
    });
    const helloSuccessDecoder = object({
        windows: array(coreWindowDataDecoder),
        isWorkspaceFrame: boolean()
    });
    const windowTitleConfigDecoder = object({
        windowId: nonEmptyStringDecoder,
        title: string()
    });
    const windowMoveResizeConfigDecoder = object({
        windowId: nonEmptyStringDecoder,
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        relative: optional(boolean())
    });
    const windowBoundsResultDecoder = object({
        windowId: nonEmptyStringDecoder,
        bounds: object({
            top: number(),
            left: number(),
            width: nonNegativeNumberDecoder,
            height: nonNegativeNumberDecoder
        })
    });
    const frameWindowBoundsResultDecoder = object({
        bounds: object({
            top: number(),
            left: number(),
            width: nonNegativeNumberDecoder,
            height: nonNegativeNumberDecoder
        })
    });
    const windowUrlResultDecoder = object({
        windowId: nonEmptyStringDecoder,
        url: nonEmptyStringDecoder
    });
    const anyDecoder = anyJson();
    const boundsDecoder = object({
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder)
    });
    const instanceDataDecoder = object({
        id: nonEmptyStringDecoder,
        applicationName: nonEmptyStringDecoder
    });
    const applicationDetailsDecoder = object({
        url: nonEmptyStringDecoder,
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder)
    });
    const intentDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        displayName: optional(string()),
        contexts: optional(array(string())),
        customConfig: optional(object())
    });
    const fdc3AppDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        appId: optional(nonEmptyStringDecoder),
        manifest: nonEmptyStringDecoder,
        manifestType: nonEmptyStringDecoder,
        tooltip: optional(nonEmptyStringDecoder),
        description: optional(nonEmptyStringDecoder),
        contactEmail: optional(nonEmptyStringDecoder),
        supportEmail: optional(nonEmptyStringDecoder),
        publisher: optional(nonEmptyStringDecoder),
        images: optional(array(object({ url: optional(nonEmptyStringDecoder) }))),
        icons: optional(array(object({ icon: optional(nonEmptyStringDecoder) }))),
        customConfig: anyJson(),
        intents: optional(array(intentDefinitionDecoder))
    });
    const applicationDefinitionDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        customProperties: optional(anyJson()),
        icon: optional(string()),
        caption: optional(string()),
        details: applicationDetailsDecoder,
        intents: optional(array(intentDefinitionDecoder)),
        hidden: optional(boolean())
    });
    const allApplicationDefinitionsDecoder = oneOf(applicationDefinitionDecoder, fdc3AppDefinitionDecoder);
    const appsImportOperationDecoder = object({
        definitions: array(allApplicationDefinitionsDecoder),
        mode: oneOf(constant("replace"), constant("merge"))
    });
    const appRemoveConfigDecoder = object({
        name: nonEmptyStringDecoder
    });
    const appsExportOperationDecoder = object({
        definitions: array(applicationDefinitionDecoder)
    });
    const applicationDataDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        instances: array(instanceDataDecoder),
        userProperties: optional(anyJson()),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        icon: optional(nonEmptyStringDecoder),
        caption: optional(nonEmptyStringDecoder)
    });
    const baseApplicationDataDecoder = object({
        name: nonEmptyStringDecoder,
        type: nonEmptyStringDecoder.where((s) => s === "window", "Expected a value of window"),
        userProperties: anyJson(),
        title: optional(nonEmptyStringDecoder),
        version: optional(nonEmptyStringDecoder),
        icon: optional(nonEmptyStringDecoder),
        caption: optional(nonEmptyStringDecoder)
    });
    const appDirectoryStateChangeDecoder = object({
        appsAdded: array(baseApplicationDataDecoder),
        appsChanged: array(baseApplicationDataDecoder),
        appsRemoved: array(baseApplicationDataDecoder)
    });
    const appHelloSuccessDecoder = object({
        apps: array(applicationDataDecoder)
    });
    const basicInstanceDataDecoder = object({
        id: nonEmptyStringDecoder
    });
    const applicationStartConfigDecoder = object({
        name: nonEmptyStringDecoder,
        waitForAGMReady: boolean(),
        id: optional(nonEmptyStringDecoder),
        context: optional(anyJson()),
        top: optional(number()),
        left: optional(number()),
        width: optional(nonNegativeNumberDecoder),
        height: optional(nonNegativeNumberDecoder),
        relativeTo: optional(nonEmptyStringDecoder),
        relativeDirection: optional(oneOf(constant("top"), constant("left"), constant("right"), constant("bottom"))),
        forceChromeTab: optional(boolean())
    });
    const layoutTypeDecoder = oneOf(constant("Global"), constant("Activity"), constant("ApplicationDefault"), constant("Swimlane"), constant("Workspace"));
    const componentTypeDecoder = oneOf(constant("application"), constant("activity"));
    const windowComponentStateDecoder = object({
        context: optional(anyJson()),
        bounds: windowBoundsDecoder,
        createArgs: object({
            name: optional(nonEmptyStringDecoder),
            url: optional(nonEmptyStringDecoder),
            context: optional(anyJson())
        }),
        windowState: optional(nonEmptyStringDecoder),
        restoreState: optional(nonEmptyStringDecoder),
        instanceId: nonEmptyStringDecoder,
        isCollapsed: optional(boolean()),
        isSticky: optional(boolean()),
        restoreSettings: object({
            groupId: optional(nonEmptyStringDecoder),
            groupZOrder: optional(number())
        })
    });
    const windowLayoutComponentDecoder = object({
        type: constant("window"),
        componentType: optional(componentTypeDecoder),
        application: nonEmptyStringDecoder,
        state: windowComponentStateDecoder
    });
    const windowLayoutItemDecoder = object({
        type: constant("window"),
        config: object({
            appName: nonEmptyStringDecoder,
            url: optional(nonEmptyStringDecoder),
            title: optional(string()),
            allowExtract: optional(boolean()),
            allowReorder: optional(boolean()),
            showCloseButton: optional(boolean()),
            isMaximized: optional(boolean())
        })
    });
    const groupLayoutItemDecoder = object({
        type: constant("group"),
        config: anyJson(),
        children: array(oneOf(windowLayoutItemDecoder))
    });
    const columnLayoutItemDecoder = object({
        type: constant("column"),
        config: anyJson(),
        children: array(oneOf(groupLayoutItemDecoder, windowLayoutItemDecoder, lazy(() => columnLayoutItemDecoder), lazy(() => rowLayoutItemDecoder)))
    });
    const rowLayoutItemDecoder = object({
        type: constant("row"),
        config: anyJson(),
        children: array(oneOf(columnLayoutItemDecoder, groupLayoutItemDecoder, windowLayoutItemDecoder, lazy(() => rowLayoutItemDecoder)))
    });
    const workspaceLayoutComponentStateDecoder = object({
        config: anyJson(),
        context: anyJson(),
        children: array(oneOf(rowLayoutItemDecoder, columnLayoutItemDecoder, groupLayoutItemDecoder, windowLayoutItemDecoder))
    });
    const workspaceLayoutComponentDecoder = object({
        type: constant("Workspace"),
        application: optional(nonEmptyStringDecoder),
        state: workspaceLayoutComponentStateDecoder
    });
    const workspaceFrameComponentStateDecoder = object({
        bounds: windowBoundsDecoder,
        instanceId: nonEmptyStringDecoder,
        selectedWorkspace: nonNegativeNumberDecoder,
        workspaces: array(workspaceLayoutComponentStateDecoder),
        windowState: optional(nonEmptyStringDecoder),
        restoreState: optional(nonEmptyStringDecoder)
    });
    const workspaceFrameComponentDecoder = object({
        type: constant("workspaceFrame"),
        application: nonEmptyStringDecoder,
        componentType: optional(componentTypeDecoder),
        state: workspaceFrameComponentStateDecoder
    });
    const glueLayoutDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder,
        components: array(oneOf(windowLayoutComponentDecoder, workspaceLayoutComponentDecoder, workspaceFrameComponentDecoder)),
        context: optional(anyJson()),
        metadata: optional(anyJson())
    });
    const newLayoutOptionsDecoder = object({
        name: nonEmptyStringDecoder,
        context: optional(anyJson()),
        metadata: optional(anyJson()),
        instances: optional(array(nonEmptyStringDecoder)),
        ignoreInstances: optional(array(nonEmptyStringDecoder))
    });
    const restoreOptionsDecoder = object({
        name: nonEmptyStringDecoder,
        context: optional(anyJson()),
        closeRunningInstance: optional(boolean()),
        closeMe: optional(boolean()),
        timeout: optional(nonNegativeNumberDecoder)
    });
    const layoutSummaryDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder,
        context: optional(anyJson()),
        metadata: optional(anyJson())
    });
    const simpleLayoutConfigDecoder = object({
        name: nonEmptyStringDecoder,
        type: layoutTypeDecoder
    });
    const saveLayoutConfigDecoder = object({
        layout: newLayoutOptionsDecoder
    });
    const restoreLayoutConfigDecoder = object({
        layout: restoreOptionsDecoder
    });
    const getAllLayoutsConfigDecoder = object({
        type: layoutTypeDecoder
    });
    const allLayoutsFullConfigDecoder = object({
        layouts: array(glueLayoutDecoder)
    });
    const importModeDecoder = oneOf(constant("replace"), constant("merge"));
    const layoutsImportConfigDecoder = object({
        layouts: array(glueLayoutDecoder),
        mode: importModeDecoder
    });
    const allLayoutsSummariesResultDecoder = object({
        summaries: array(layoutSummaryDecoder)
    });
    const simpleLayoutResultDecoder = object({
        layout: glueLayoutDecoder
    });
    const optionalSimpleLayoutResult = object({
        layout: optional(glueLayoutDecoder)
    });
    const intentsOperationTypesDecoder = oneOf(constant("findIntent"), constant("getIntents"), constant("raiseIntent"));
    const intentHandlerDecoder = object({
        applicationName: nonEmptyStringDecoder,
        applicationTitle: string(),
        applicationDescription: optional(string()),
        applicationIcon: optional(string()),
        type: oneOf(constant("app"), constant("instance")),
        displayName: optional(string()),
        contextTypes: optional(array(nonEmptyStringDecoder)),
        instanceId: optional(string()),
        instanceTitle: optional(string()),
        resultType: optional(string())
    });
    const intentResolverResponseDecoder = object({
        intent: nonEmptyStringDecoder,
        handler: intentHandlerDecoder
    });
    const intentDecoder = object({
        name: nonEmptyStringDecoder,
        handlers: array(intentHandlerDecoder)
    });
    const intentTargetDecoder = oneOf(constant("startNew"), constant("reuse"), object({
        app: optional(nonEmptyStringDecoder),
        instance: optional(nonEmptyStringDecoder)
    }));
    const intentContextDecoder = object({
        type: optional(nonEmptyStringDecoder),
        data: optional(object())
    });
    const intentsDecoder = array(intentDecoder);
    const wrappedIntentsDecoder = object({
        intents: intentsDecoder
    });
    const intentFilterDecoder = object({
        name: optional(nonEmptyStringDecoder),
        contextType: optional(nonEmptyStringDecoder),
        resultType: optional(nonEmptyStringDecoder)
    });
    const findFilterDecoder = oneOf(nonEmptyStringDecoder, intentFilterDecoder);
    const wrappedIntentFilterDecoder = object({
        filter: optional(intentFilterDecoder)
    });
    const intentRequestDecoder = object({
        intent: nonEmptyStringDecoder,
        target: optional(intentTargetDecoder),
        context: optional(intentContextDecoder),
        options: optional(windowOpenSettingsDecoder)
    });
    const raiseRequestDecoder = oneOf(nonEmptyStringDecoder, intentRequestDecoder);
    const intentResultDecoder = object({
        request: intentRequestDecoder,
        handler: intentHandlerDecoder,
        result: anyJson()
    });
    const addIntentListenerRequestDecoder = object({
        intent: nonEmptyStringDecoder,
        contextTypes: optional(array(nonEmptyStringDecoder)),
        displayName: optional(string()),
        icon: optional(string()),
        description: optional(string()),
        resultType: optional(string())
    });
    const addIntentListenerIntentDecoder = oneOf(nonEmptyStringDecoder, addIntentListenerRequestDecoder);
    const channelNameDecoder = (channelNames) => {
        return nonEmptyStringDecoder.where(s => channelNames.includes(s), "Expected a valid channel name");
    };
    const interopActionSettingsDecoder = object({
        method: nonEmptyStringDecoder,
        arguments: optional(anyJson()),
        target: optional(oneOf(constant("all"), constant("best")))
    });
    const glue42NotificationActionDecoder = object({
        action: string(),
        title: nonEmptyStringDecoder,
        icon: optional(string()),
        interop: optional(interopActionSettingsDecoder)
    });
    const notificationDefinitionDecoder = object({
        badge: optional(string()),
        body: optional(string()),
        data: optional(anyJson()),
        dir: optional(oneOf(constant("auto"), constant("ltr"), constant("rtl"))),
        icon: optional(string()),
        image: optional(string()),
        lang: optional(string()),
        renotify: optional(boolean()),
        requireInteraction: optional(boolean()),
        silent: optional(boolean()),
        tag: optional(string()),
        timestamp: optional(nonNegativeNumberDecoder),
        vibrate: optional(array(number()))
    });
    const glue42NotificationOptionsDecoder = object({
        title: nonEmptyStringDecoder,
        clickInterop: optional(interopActionSettingsDecoder),
        actions: optional(array(glue42NotificationActionDecoder)),
        focusPlatformOnDefaultClick: optional(boolean()),
        badge: optional(string()),
        body: optional(string()),
        data: optional(anyJson()),
        dir: optional(oneOf(constant("auto"), constant("ltr"), constant("rtl"))),
        icon: optional(string()),
        image: optional(string()),
        lang: optional(string()),
        renotify: optional(boolean()),
        requireInteraction: optional(boolean()),
        silent: optional(boolean()),
        tag: optional(string()),
        timestamp: optional(nonNegativeNumberDecoder),
        vibrate: optional(array(number()))
    });
    const channelContextDecoder = object({
        name: nonEmptyStringDecoder,
        meta: object({
            color: nonEmptyStringDecoder
        }),
        data: optional(object()),
    });
    const raiseNotificationDecoder = object({
        settings: glue42NotificationOptionsDecoder,
        id: nonEmptyStringDecoder
    });
    const permissionRequestResultDecoder = object({
        permissionGranted: boolean()
    });
    const permissionQueryResultDecoder = object({
        permission: oneOf(constant("default"), constant("granted"), constant("denied"))
    });
    const notificationEventPayloadDecoder = object({
        definition: notificationDefinitionDecoder,
        action: optional(string()),
        id: optional(nonEmptyStringDecoder)
    });
    const platformSaveRequestConfigDecoder = object({
        layoutType: oneOf(constant("Global"), constant("Workspace")),
        layoutName: nonEmptyStringDecoder,
        context: optional(anyJson())
    });
    const saveRequestClientResponseDecoder = object({
        windowContext: optional(anyJson()),
    });
    const permissionStateResultDecoder = object({
        state: oneOf(constant("prompt"), constant("denied"), constant("granted"))
    });
    const simpleAvailabilityResultDecoder = object({
        isAvailable: boolean()
    });

    const operations = {
        openWindow: { name: "openWindow", dataDecoder: openWindowConfigDecoder, resultDecoder: coreWindowDataDecoder },
        windowHello: { name: "windowHello", dataDecoder: windowHelloDecoder, resultDecoder: helloSuccessDecoder },
        windowAdded: { name: "windowAdded", dataDecoder: coreWindowDataDecoder },
        windowRemoved: { name: "windowRemoved", dataDecoder: simpleWindowDecoder },
        getBounds: { name: "getBounds", dataDecoder: simpleWindowDecoder, resultDecoder: windowBoundsResultDecoder },
        getFrameBounds: { name: "getFrameBounds", dataDecoder: simpleWindowDecoder, resultDecoder: frameWindowBoundsResultDecoder },
        getUrl: { name: "getUrl", dataDecoder: simpleWindowDecoder, resultDecoder: windowUrlResultDecoder },
        moveResize: { name: "moveResize", dataDecoder: windowMoveResizeConfigDecoder },
        focus: { name: "focus", dataDecoder: simpleWindowDecoder },
        close: { name: "close", dataDecoder: simpleWindowDecoder },
        getTitle: { name: "getTitle", dataDecoder: simpleWindowDecoder, resultDecoder: windowTitleConfigDecoder },
        setTitle: { name: "setTitle", dataDecoder: windowTitleConfigDecoder }
    };

    function createRegistry(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                callbacks[key] = allForKey;
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry.default = createRegistry;
    var lib = createRegistry;

    class WebWindowModel {
        constructor(_id, _name, _bridge) {
            this._id = _id;
            this._name = _name;
            this._bridge = _bridge;
            this.registry = lib();
            this.myCtxKey = `___window___${this.id}`;
        }
        get id() {
            return this._id.slice();
        }
        get name() {
            return this._name.slice();
        }
        clean() {
            if (this.ctxUnsubscribe) {
                this.ctxUnsubscribe();
            }
        }
        toApi() {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.ctxUnsubscribe = yield this._bridge.contextLib.subscribe(this.myCtxKey, (data) => this.registry.execute("context-updated", data));
                const api = {
                    id: this.id,
                    name: this.name,
                    getURL: this.getURL.bind(this),
                    moveResize: this.moveResize.bind(this),
                    resizeTo: this.resizeTo.bind(this),
                    moveTo: this.moveTo.bind(this),
                    focus: this.focus.bind(this),
                    close: this.close.bind(this),
                    getTitle: this.getTitle.bind(this),
                    setTitle: this.setTitle.bind(this),
                    getBounds: this.getBounds.bind(this),
                    getContext: this.getContext.bind(this),
                    updateContext: this.updateContext.bind(this),
                    setContext: this.setContext.bind(this),
                    onContextUpdated: this.onContextUpdated.bind(this)
                };
                this.me = Object.freeze(api);
                return this.me;
            });
        }
        getURL() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getUrl, { windowId: this.id });
                return result.url;
            });
        }
        moveResize(dimension) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const targetBounds = boundsDecoder.runWithException(dimension);
                const commandArgs = Object.assign({}, targetBounds, { windowId: this.id, relative: false });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        resizeTo(width, height) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (typeof width === "undefined" && typeof height === "undefined") {
                    return this.me;
                }
                if (typeof width !== "undefined") {
                    nonNegativeNumberDecoder.runWithException(width);
                }
                if (typeof height !== "undefined") {
                    nonNegativeNumberDecoder.runWithException(height);
                }
                const commandArgs = Object.assign({}, { width, height }, { windowId: this.id, relative: true });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        moveTo(top, left) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (typeof top === "undefined" && typeof left === "undefined") {
                    return this.me;
                }
                if (typeof top !== "undefined") {
                    number().runWithException(top);
                }
                if (typeof left !== "undefined") {
                    number().runWithException(left);
                }
                const commandArgs = Object.assign({}, { top, left }, { windowId: this.id, relative: true });
                yield this._bridge.send("windows", operations.moveResize, commandArgs);
                return this.me;
            });
        }
        focus() {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.name === "Platform") {
                    window.open(undefined, this.id);
                }
                else {
                    yield this._bridge.send("windows", operations.focus, { windowId: this.id });
                }
                return this.me;
            });
        }
        close() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this._bridge.send("windows", operations.close, { windowId: this.id });
                return this.me;
            });
        }
        getTitle() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getTitle, { windowId: this.id });
                return result.title;
            });
        }
        setTitle(title) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ttl = nonEmptyStringDecoder.runWithException(title);
                yield this._bridge.send("windows", operations.setTitle, { windowId: this.id, title: ttl });
                return this.me;
            });
        }
        getBounds() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this._bridge.send("windows", operations.getBounds, { windowId: this.id });
                return result.bounds;
            });
        }
        getContext() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = yield this._bridge.contextLib.get(this.myCtxKey);
                return ctx;
            });
        }
        updateContext(context) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = anyDecoder.runWithException(context);
                yield this._bridge.contextLib.update(this.myCtxKey, ctx);
                return this.me;
            });
        }
        setContext(context) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const ctx = anyDecoder.runWithException(context);
                yield this._bridge.contextLib.set(this.myCtxKey, ctx);
                return this.me;
            });
        }
        onContextUpdated(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to context changes, because the provided callback is not a function!");
            }
            const wrappedCallback = (data) => {
                callback(data, this.me);
            };
            return this.registry.add("context-updated", wrappedCallback);
        }
    }

    class WindowsController {
        constructor() {
            this.registry = lib();
            this.allWindowProjections = [];
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("windows.controller.web");
                this.logger.trace("starting the web windows controller");
                this.publicWindowId = ioc.publicWindowId;
                this.actualWindowId = ioc.actualWindowId;
                this.addWindowOperationExecutors();
                this.ioc = ioc;
                this.bridge = ioc.bridge;
                this.logger.trace(`set the public window id: ${this.publicWindowId} and actual window id: ${this.actualWindowId}, set the bridge operations and ioc, registering with the platform now`);
                this.platformRegistration = this.registerWithPlatform();
                yield this.platformRegistration;
                this.logger.trace("registration with the platform successful, attaching the windows property to glue and returning");
                const api = this.toApi();
                coreGlue.windows = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.platformRegistration;
                const operationName = windowOperationTypesDecoder.runWithException(args.operation);
                const operation = operations[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        open(name, url, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                nonEmptyStringDecoder.runWithException(url);
                const settings = windowOpenSettingsDecoder.runWithException(options);
                const windowSuccess = yield this.bridge.send("windows", operations.openWindow, { name, url, options: settings });
                const projection = yield this.ioc.buildWebWindow(windowSuccess.windowId, windowSuccess.name);
                return projection.api;
            });
        }
        list() {
            return this.allWindowProjections.map((projection) => projection.api);
        }
        findById(id) {
            var _a;
            nonEmptyStringDecoder.runWithException(id);
            return (_a = this.allWindowProjections.find((projection) => projection.id === id)) === null || _a === void 0 ? void 0 : _a.api;
        }
        toApi() {
            return {
                open: this.open.bind(this),
                my: this.my.bind(this),
                list: this.list.bind(this),
                findById: this.findById.bind(this),
                onWindowAdded: this.onWindowAdded.bind(this),
                onWindowRemoved: this.onWindowRemoved.bind(this)
            };
        }
        addWindowOperationExecutors() {
            operations.windowAdded.execute = this.handleWindowAdded.bind(this);
            operations.windowRemoved.execute = this.handleWindowRemoved.bind(this);
            operations.getBounds.execute = this.handleGetBounds.bind(this);
            operations.getFrameBounds.execute = this.handleGetBounds.bind(this);
            operations.getTitle.execute = this.handleGetTitle.bind(this);
            operations.getUrl.execute = this.handleGetUrl.bind(this);
            operations.moveResize.execute = this.handleMoveResize.bind(this);
            operations.setTitle.execute = this.handleSetTitle.bind(this);
        }
        my() {
            return Object.assign({}, this.me);
        }
        onWindowAdded(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to window added, because the provided callback is not a function!");
            }
            return this.registry.add("window-added", callback);
        }
        onWindowRemoved(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to window removed, because the provided callback is not a function!");
            }
            return this.registry.add("window-removed", callback);
        }
        sayHello() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const helloSuccess = yield this.bridge.send("windows", operations.windowHello, { windowId: this.actualWindowId });
                return helloSuccess;
            });
        }
        registerWithPlatform() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const { windows, isWorkspaceFrame } = yield this.sayHello();
                this.logger.trace("the platform responded to the hello message");
                if (!isWorkspaceFrame) {
                    this.logger.trace("i am not treated as a workspace frame, setting my window");
                    const myWindow = windows.find((w) => w.windowId === this.publicWindowId);
                    if (!myWindow) {
                        throw new Error("Cannot initialize the window library, because I received no information about me from the platform");
                    }
                    this.me = (yield this.ioc.buildWebWindow(this.publicWindowId, myWindow.name)).api;
                }
                const currentWindows = yield Promise.all(windows.map((w) => this.ioc.buildWebWindow(w.windowId, w.name)));
                this.logger.trace("all windows projections are completed, building the list collection");
                this.allWindowProjections.push(...currentWindows);
            });
        }
        handleWindowAdded(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.allWindowProjections.some((projection) => projection.id === data.windowId)) {
                    return;
                }
                const webWindowProjection = yield this.ioc.buildWebWindow(data.windowId, data.name);
                this.allWindowProjections.push(webWindowProjection);
                this.registry.execute("window-added", webWindowProjection.api);
            });
        }
        handleWindowRemoved(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const removed = this.allWindowProjections.find((w) => w.id === data.windowId);
                if (!removed) {
                    return;
                }
                this.allWindowProjections = this.allWindowProjections.filter((w) => w.id !== data.windowId);
                removed.model.clean();
                this.registry.execute("window-removed", removed.api);
            });
        }
        handleGetBounds() {
            var _a;
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: (_a = this.me) === null || _a === void 0 ? void 0 : _a.id,
                    bounds: {
                        top: window.screenTop,
                        left: window.screenLeft,
                        width: window.innerWidth,
                        height: window.innerHeight
                    }
                };
            });
        }
        handleGetTitle() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: this.me.id,
                    title: document.title
                };
            });
        }
        handleGetUrl() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return {
                    windowId: this.me.id,
                    url: window.location.href
                };
            });
        }
        handleMoveResize(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const targetTop = typeof config.top === "number" ? config.top :
                    config.relative ? 0 : window.screenTop;
                const targetLeft = typeof config.left === "number" ? config.left :
                    config.relative ? 0 : window.screenLeft;
                const targetHeight = typeof config.height === "number" ? config.height :
                    config.relative ? 0 : window.innerHeight;
                const targetWidth = typeof config.width === "number" ? config.width :
                    config.relative ? 0 : window.innerWidth;
                const moveMethod = config.relative ? window.moveBy : window.moveTo;
                const resizeMethod = config.relative ? window.resizeBy : window.resizeTo;
                moveMethod(targetLeft, targetTop);
                resizeMethod(targetWidth, targetHeight);
            });
        }
        handleSetTitle(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                document.title = config.title;
            });
        }
    }

    const PromiseWrap = (promise, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            let promiseActive = true;
            const timeout = setTimeout(() => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            promise()
                .then((result) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                reject(error);
            });
        });
    };
    const PromisePlus = (executor, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            const timeout = setTimeout(() => {
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            const providedPromise = new Promise(executor);
            providedPromise
                .then((result) => {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    const GlueWebPlatformControlName = "T42.Web.Platform.Control";
    const GlueWebPlatformStreamName = "T42.Web.Platform.Stream";
    const GlueClientControlName = "T42.Web.Client.Control";

    class GlueBridge {
        constructor(coreGlue, communicationId) {
            this.coreGlue = coreGlue;
            this.communicationId = communicationId;
            this.platformMethodTimeoutMs = 10000;
        }
        get contextLib() {
            return this.coreGlue.contexts;
        }
        get interopInstance() {
            return this.coreGlue.interop.instance.instance;
        }
        start(controllers) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.controllers = controllers;
                yield Promise.all([
                    this.checkWaitMethod(GlueWebPlatformControlName),
                    this.checkWaitMethod(GlueWebPlatformStreamName)
                ]);
                const systemId = this.communicationId;
                const [sub] = yield Promise.all([
                    this.coreGlue.interop.subscribe(GlueWebPlatformStreamName, systemId ? { target: { instance: this.communicationId } } : undefined),
                    this.coreGlue.interop.registerAsync(GlueClientControlName, (args, _, success, error) => this.passMessageController(args, success, error))
                ]);
                this.sub = sub;
                this.sub.onData((pkg) => this.passMessageController(pkg.data));
            });
        }
        getInteropInstance(windowId) {
            const result = this.coreGlue.interop.servers().find((s) => s.windowId && s.windowId === windowId);
            return {
                application: result === null || result === void 0 ? void 0 : result.application,
                applicationName: result === null || result === void 0 ? void 0 : result.applicationName,
                peerId: result === null || result === void 0 ? void 0 : result.peerId,
                instance: result === null || result === void 0 ? void 0 : result.instance,
                windowId: result === null || result === void 0 ? void 0 : result.windowId
            };
        }
        send(domain, operation, operationData, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (operation.dataDecoder) {
                    try {
                        operation.dataDecoder.runWithException(operationData);
                    }
                    catch (error) {
                        throw new Error(`Unexpected internal outgoing validation error: ${error.message}, for operation: ${operation.name} and input: ${JSON.stringify(error.input)}`);
                    }
                }
                try {
                    const operationResult = yield this.transmitMessage(domain, operation, operationData, options);
                    if (operation.resultDecoder) {
                        operation.resultDecoder.runWithException(operationResult);
                    }
                    return operationResult;
                }
                catch (error) {
                    if (error.kind) {
                        throw new Error(`Unexpected internal incoming validation error: ${error.message}, for operation: ${operation.name} and input: ${JSON.stringify(error.input)}`);
                    }
                    throw new Error(error.message);
                }
            });
        }
        checkWaitMethod(name) {
            return PromisePlus((resolve) => {
                const hasMethod = this.coreGlue.interop.methods().some((method) => {
                    const nameMatch = method.name === name;
                    const serverMatch = this.communicationId ?
                        method.getServers().some((server) => server.instance === this.communicationId) :
                        true;
                    return nameMatch && serverMatch;
                });
                if (hasMethod) {
                    return resolve();
                }
                const unSub = this.coreGlue.interop.serverMethodAdded((data) => {
                    const method = data.method;
                    const server = data.server;
                    const serverMatch = this.communicationId ?
                        server.instance === this.communicationId :
                        true;
                    if (method.name === name && serverMatch) {
                        unSub();
                        resolve();
                    }
                });
            }, this.platformMethodTimeoutMs, `Cannot initiate Glue Web, because a system method's discovery timed out: ${name}`);
        }
        passMessageController(args, success, error) {
            const decodeResult = libDomainDecoder.run(args.domain);
            if (!decodeResult.ok) {
                if (error) {
                    error(`Cannot execute this client control, because of domain validation error: ${JSON.stringify(decodeResult.error)}`);
                }
                return;
            }
            const domain = decodeResult.result;
            this.controllers[domain]
                .handleBridgeMessage(args)
                .then((resolutionData) => {
                if (success) {
                    success(resolutionData);
                }
            })
                .catch((err) => {
                if (error) {
                    error(err);
                }
                console.warn(err);
            });
        }
        transmitMessage(domain, operation, data, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const messageData = { domain, data, operation: operation.name };
                let invocationResult;
                const baseErrorMessage = `Internal Platform Communication Error. Attempted operation: ${JSON.stringify(operation.name)} with data: ${JSON.stringify(data)}. `;
                const systemId = this.communicationId;
                try {
                    invocationResult = yield this.coreGlue.interop.invoke(GlueWebPlatformControlName, messageData, systemId ? { instance: this.communicationId } : undefined, options);
                    if (!invocationResult) {
                        throw new Error("Received unsupported result from the platform - empty result");
                    }
                    if (!Array.isArray(invocationResult.all_return_values) || invocationResult.all_return_values.length === 0) {
                        throw new Error("Received unsupported result from the platform - empty values collection");
                    }
                }
                catch (error) {
                    if (error && error.all_errors && error.all_errors.length) {
                        const invocationErrorMessage = error.all_errors[0].message;
                        throw new Error(`${baseErrorMessage} -> Inner message: ${invocationErrorMessage}`);
                    }
                    throw new Error(`${baseErrorMessage} -> Inner message: ${error.message}`);
                }
                return invocationResult.all_return_values[0].returned;
            });
        }
    }

    const operations$1 = {
        appHello: { name: "appHello", dataDecoder: windowHelloDecoder, resultDecoder: appHelloSuccessDecoder },
        appDirectoryStateChange: { name: "appDirectoryStateChange", dataDecoder: appDirectoryStateChangeDecoder },
        instanceStarted: { name: "instanceStarted", dataDecoder: instanceDataDecoder },
        instanceStopped: { name: "instanceStopped", dataDecoder: instanceDataDecoder },
        applicationStart: { name: "applicationStart", dataDecoder: applicationStartConfigDecoder, resultDecoder: instanceDataDecoder },
        instanceStop: { name: "instanceStop", dataDecoder: basicInstanceDataDecoder },
        import: { name: "import" },
        remove: { name: "remove", dataDecoder: appRemoveConfigDecoder },
        export: { name: "export", resultDecoder: appsExportOperationDecoder },
        clear: { name: "clear" }
    };

    class AppManagerController {
        constructor() {
            this.baseApplicationsTimeoutMS = 60000;
            this.appImportTimeoutMS = 20;
            this.registry = lib();
            this.applications = [];
            this.instances = [];
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("appManger.controller.web");
                this.logger.trace("starting the web appManager controller");
                this.publicWindowId = ioc.publicWindowId;
                this.actualWindowId = ioc.actualWindowId;
                this.addOperationsExecutors();
                this.ioc = ioc;
                this.bridge = ioc.bridge;
                this.platformRegistration = this.registerWithPlatform();
                yield this.platformRegistration;
                this.logger.trace("registration with the platform successful, attaching the appManager property to glue and returning");
                const api = this.toApi();
                coreGlue.appManager = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.platformRegistration;
                const operationName = appManagerOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$1[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        onInstanceStarted(callback) {
            if (typeof callback !== "function") {
                throw new Error("onInstanceStarted requires a single argument of type function");
            }
            return this.registry.add("instance-started", callback, this.instances);
        }
        onInstanceStopped(callback) {
            if (typeof callback !== "function") {
                throw new Error("onInstanceStopped requires a single argument of type function");
            }
            return this.registry.add("instance-stopped", callback);
        }
        startApplication(appName, context, options) {
            var _a, _b, _c;
            return __awaiter$1(this, void 0, void 0, function* () {
                const startOptions = {
                    name: appName,
                    waitForAGMReady: (_a = options === null || options === void 0 ? void 0 : options.waitForAGMReady) !== null && _a !== void 0 ? _a : true,
                    context,
                    top: options === null || options === void 0 ? void 0 : options.top,
                    left: options === null || options === void 0 ? void 0 : options.left,
                    width: options === null || options === void 0 ? void 0 : options.width,
                    height: options === null || options === void 0 ? void 0 : options.height,
                    relativeTo: options === null || options === void 0 ? void 0 : options.relativeTo,
                    relativeDirection: options === null || options === void 0 ? void 0 : options.relativeDirection,
                    id: (_b = options) === null || _b === void 0 ? void 0 : _b.reuseId,
                    forceChromeTab: (_c = options) === null || _c === void 0 ? void 0 : _c.forceTab
                };
                const openResult = yield this.bridge.send("appManager", operations$1.applicationStart, startOptions);
                const app = this.applications.find((a) => a.name === openResult.applicationName);
                return this.ioc.buildInstance(openResult, app);
            });
        }
        getApplication(name) {
            const verifiedName = nonEmptyStringDecoder.runWithException(name);
            return this.applications.find((app) => app.name === verifiedName);
        }
        toApi() {
            const api = {
                myInstance: this.me,
                inMemory: {
                    import: this.import.bind(this),
                    remove: this.remove.bind(this),
                    export: this.export.bind(this),
                    clear: this.clear.bind(this)
                },
                application: this.getApplication.bind(this),
                applications: this.getApplications.bind(this),
                instances: this.getInstances.bind(this),
                onAppAdded: this.onAppAdded.bind(this),
                onAppChanged: this.onAppChanged.bind(this),
                onAppRemoved: this.onAppRemoved.bind(this),
                onInstanceStarted: this.onInstanceStarted.bind(this),
                onInstanceStopped: this.onInstanceStopped.bind(this)
            };
            return api;
        }
        addOperationsExecutors() {
            operations$1.appDirectoryStateChange.execute = this.handleAppDirectoryStateChange.bind(this);
            operations$1.instanceStarted.execute = this.handleInstanceStartedMessage.bind(this);
            operations$1.instanceStopped.execute = this.handleInstanceStoppedMessage.bind(this);
        }
        handleAppDirectoryStateChange(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                data.appsAdded.forEach(this.handleApplicationAddedMessage.bind(this));
                data.appsChanged.forEach(this.handleApplicationChangedMessage.bind(this));
                data.appsRemoved.forEach(this.handleApplicationRemovedMessage.bind(this));
            });
        }
        onAppAdded(callback) {
            if (typeof callback !== "function") {
                throw new Error("onAppAdded requires a single argument of type function");
            }
            return this.registry.add("application-added", callback, this.applications);
        }
        onAppRemoved(callback) {
            if (typeof callback !== "function") {
                throw new Error("onAppRemoved requires a single argument of type function");
            }
            return this.registry.add("application-removed", callback);
        }
        onAppChanged(callback) {
            if (typeof callback !== "function") {
                throw new Error("onAppChanged requires a single argument of type function");
            }
            return this.registry.add("application-changed", callback);
        }
        handleApplicationAddedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.applications.some((app) => app.name === appData.name)) {
                    return;
                }
                const app = yield this.ioc.buildApplication(appData, []);
                const instances = this.instances.filter((instance) => instance.application.name === app.name);
                app.instances.push(...instances);
                this.applications.push(app);
                this.registry.execute("application-added", app);
            });
        }
        handleApplicationRemovedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const appIndex = this.applications.findIndex((app) => app.name === appData.name);
                if (appIndex < 0) {
                    return;
                }
                const app = this.applications[appIndex];
                this.applications.splice(appIndex, 1);
                this.registry.execute("application-removed", app);
            });
        }
        handleApplicationChangedMessage(appData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const app = this.applications.find((app) => app.name === appData.name);
                if (!app) {
                    return this.handleApplicationAddedMessage(appData);
                }
                app.title = appData.title;
                app.version = appData.version;
                app.icon = appData.icon;
                app.caption = appData.caption;
                app.userProperties = appData.userProperties;
                this.registry.execute("application-changed", app);
            });
        }
        handleInstanceStartedMessage(instanceData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (this.instances.some((instance) => instance.id === instanceData.id)) {
                    return;
                }
                const application = this.applications.find((app) => app.name === instanceData.applicationName);
                if (!application) {
                    throw new Error(`Cannot add instance: ${instanceData.id}, because there is no application definition associated with it`);
                }
                const instance = this.ioc.buildInstance(instanceData, application);
                this.instances.push(instance);
                application.instances.push(instance);
                this.registry.execute("instance-started", instance);
            });
        }
        handleInstanceStoppedMessage(instanceData) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const instance = this.instances.find((i) => i.id === instanceData.id);
                if (instance) {
                    const instIdx = this.instances.findIndex((inst) => inst.id === instanceData.id);
                    this.instances.splice(instIdx, 1);
                }
                const application = this.applications.find((app) => app.instances.some((inst) => inst.id === instanceData.id));
                if (application) {
                    const instIdxApps = application.instances.findIndex((inst) => inst.id === instanceData.id);
                    application.instances.splice(instIdxApps, 1);
                }
                if (!instance) {
                    return;
                }
                this.registry.execute("instance-stopped", instance);
            });
        }
        import(definitions, mode = "replace") {
            return __awaiter$1(this, void 0, void 0, function* () {
                importModeDecoder.runWithException(mode);
                if (!Array.isArray(definitions)) {
                    throw new Error("Import must be called with an array of definitions");
                }
                if (definitions.length > 10000) {
                    throw new Error("Cannot import more than 10000 app definitions in Glue42 Core.");
                }
                const parseResult = definitions.reduce((soFar, definition) => {
                    const decodeResult = allApplicationDefinitionsDecoder.run(definition);
                    if (!decodeResult.ok) {
                        soFar.invalid.push({ app: definition === null || definition === void 0 ? void 0 : definition.name, error: JSON.stringify(decodeResult.error) });
                    }
                    else {
                        soFar.valid.push(definition);
                    }
                    return soFar;
                }, { valid: [], invalid: [] });
                const responseTimeout = this.baseApplicationsTimeoutMS + this.appImportTimeoutMS * parseResult.valid.length;
                yield this.bridge.send("appManager", operations$1.import, { definitions: parseResult.valid, mode }, { methodResponseTimeoutMs: responseTimeout });
                return {
                    imported: parseResult.valid.map((valid) => valid.name),
                    errors: parseResult.invalid
                };
            });
        }
        remove(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                yield this.bridge.send("appManager", operations$1.remove, { name }, { methodResponseTimeoutMs: this.baseApplicationsTimeoutMS });
            });
        }
        clear() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.bridge.send("appManager", operations$1.clear, undefined, { methodResponseTimeoutMs: this.baseApplicationsTimeoutMS });
            });
        }
        export() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const response = yield this.bridge.send("appManager", operations$1.export, undefined, { methodResponseTimeoutMs: this.baseApplicationsTimeoutMS });
                return response.definitions;
            });
        }
        getApplications() {
            return this.applications.slice();
        }
        getInstances() {
            return this.instances.slice();
        }
        registerWithPlatform() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.bridge.send("appManager", operations$1.appHello, { windowId: this.actualWindowId }, { methodResponseTimeoutMs: this.baseApplicationsTimeoutMS });
                this.logger.trace("the platform responded to the hello message with a full list of apps");
                this.applications = yield Promise.all(result.apps.map((app) => this.ioc.buildApplication(app, app.instances)));
                this.instances = this.applications.reduce((instancesSoFar, app) => {
                    instancesSoFar.push(...app.instances);
                    return instancesSoFar;
                }, []);
                this.me = this.findMyInstance();
                this.logger.trace(`all applications were parsed and saved. I am ${this.me ? "NOT a" : "a"} valid instance`);
            });
        }
        findMyInstance() {
            for (const app of this.applications) {
                const foundInstance = app.instances.find((instance) => instance.id === this.publicWindowId);
                if (foundInstance) {
                    return foundInstance;
                }
            }
        }
    }

    class InstanceModel {
        constructor(data, bridge, application) {
            this.data = data;
            this.bridge = bridge;
            this.application = application;
            this.myCtxKey = `___instance___${this.data.id}`;
        }
        toApi() {
            const agm = this.bridge.getInteropInstance(this.data.id);
            const api = {
                id: this.data.id,
                agm,
                application: this.application,
                stop: this.stop.bind(this),
                getContext: this.getContext.bind(this)
            };
            this.me = Object.freeze(api);
            return this.me;
        }
        getContext() {
            return __awaiter$1(this, void 0, void 0, function* () {
                return this.bridge.contextLib.get(this.myCtxKey);
            });
        }
        stop() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.bridge.send("appManager", operations$1.instanceStop, { id: this.data.id });
            });
        }
    }

    class ApplicationModel {
        constructor(data, instances, controller) {
            this.data = data;
            this.instances = instances;
            this.controller = controller;
        }
        toApi() {
            const api = {
                name: this.data.name,
                title: this.data.title,
                version: this.data.version,
                icon: this.data.icon,
                caption: this.data.caption,
                userProperties: this.data.userProperties,
                instances: this.instances,
                start: this.start.bind(this),
                onInstanceStarted: this.onInstanceStarted.bind(this),
                onInstanceStopped: this.onInstanceStopped.bind(this)
            };
            this.me = api;
            return this.me;
        }
        onInstanceStarted(callback) {
            if (typeof callback !== "function") {
                throw new Error("OnInstanceStarted requires a single argument of type function");
            }
            return this.controller.onInstanceStarted((instance) => {
                if (instance.application.name === this.data.name) {
                    callback(instance);
                }
            });
        }
        onInstanceStopped(callback) {
            if (typeof callback !== "function") {
                throw new Error("OnInstanceStarted requires a single argument of type function");
            }
            return this.controller.onInstanceStopped((instance) => {
                if (instance.application.name === this.data.name) {
                    callback(instance);
                }
            });
        }
        start(context, options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                return this.controller.startApplication(this.data.name, context, options);
            });
        }
    }

    const operations$2 = {
        layoutAdded: { name: "layoutAdded", dataDecoder: glueLayoutDecoder },
        layoutChanged: { name: "layoutChanged", dataDecoder: glueLayoutDecoder },
        layoutRemoved: { name: "layoutRemoved", dataDecoder: glueLayoutDecoder },
        get: { name: "get", dataDecoder: simpleLayoutConfigDecoder, resultDecoder: optionalSimpleLayoutResult },
        getAll: { name: "getAll", dataDecoder: getAllLayoutsConfigDecoder, resultDecoder: allLayoutsSummariesResultDecoder },
        export: { name: "export", dataDecoder: getAllLayoutsConfigDecoder, resultDecoder: allLayoutsFullConfigDecoder },
        import: { name: "import", dataDecoder: layoutsImportConfigDecoder },
        remove: { name: "remove", dataDecoder: simpleLayoutConfigDecoder },
        save: { name: "save", dataDecoder: saveLayoutConfigDecoder, resultDecoder: simpleLayoutResultDecoder },
        restore: { name: "restore", dataDecoder: restoreLayoutConfigDecoder },
        clientSaveRequest: { name: "clientSaveRequest", dataDecoder: platformSaveRequestConfigDecoder, resultDecoder: saveRequestClientResponseDecoder },
        getGlobalPermissionState: { name: "getGlobalPermissionState", resultDecoder: permissionStateResultDecoder },
        requestGlobalPermission: { name: "requestGlobalPermission", resultDecoder: simpleAvailabilityResultDecoder },
        checkGlobalActivated: { name: "checkGlobalActivated", resultDecoder: simpleAvailabilityResultDecoder }
    };

    class LayoutsController {
        constructor() {
            this.defaultLayoutRestoreTimeoutMS = 120000;
            this.registry = lib();
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("layouts.controller.web");
                this.logger.trace("starting the web layouts controller");
                this.bridge = ioc.bridge;
                this.windowsController = ioc.windowsController;
                this.addOperationsExecutors();
                const api = this.toApi();
                this.logger.trace("no need for platform registration, attaching the layouts property to glue and returning");
                coreGlue.layouts = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const operationName = layoutsOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$2[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        toApi() {
            const api = {
                get: this.get.bind(this),
                getAll: this.getAll.bind(this),
                export: this.export.bind(this),
                import: this.import.bind(this),
                save: this.save.bind(this),
                restore: this.restore.bind(this),
                remove: this.remove.bind(this),
                onAdded: this.onAdded.bind(this),
                onChanged: this.onChanged.bind(this),
                onRemoved: this.onRemoved.bind(this),
                onSaveRequested: this.subscribeOnSaveRequested.bind(this),
                getMultiScreenPermissionState: this.getGlobalPermissionState.bind(this),
                requestMultiScreenPermission: this.requestGlobalPermission.bind(this),
                getGlobalTypeState: this.checkGlobalActivated.bind(this)
            };
            return Object.freeze(api);
        }
        addOperationsExecutors() {
            operations$2.layoutAdded.execute = this.handleOnAdded.bind(this);
            operations$2.layoutChanged.execute = this.handleOnChanged.bind(this);
            operations$2.layoutRemoved.execute = this.handleOnRemoved.bind(this);
            operations$2.clientSaveRequest.execute = this.handleSaveRequest.bind(this);
        }
        get(name, type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                nonEmptyStringDecoder.runWithException(name);
                layoutTypeDecoder.runWithException(type);
                const result = yield this.bridge.send("layouts", operations$2.get, { name, type });
                return result.layout;
            });
        }
        getAll(type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                layoutTypeDecoder.runWithException(type);
                const result = yield this.bridge.send("layouts", operations$2.getAll, { type });
                return result.summaries;
            });
        }
        export(type) {
            return __awaiter$1(this, void 0, void 0, function* () {
                layoutTypeDecoder.runWithException(type);
                const result = yield this.bridge.send("layouts", operations$2.export, { type });
                return result.layouts;
            });
        }
        import(layouts, mode = "replace") {
            return __awaiter$1(this, void 0, void 0, function* () {
                importModeDecoder.runWithException(mode);
                if (!Array.isArray(layouts)) {
                    throw new Error("Import must be called with an array of layouts");
                }
                if (layouts.length > 1000) {
                    throw new Error("Cannot import more than 1000 layouts at once in Glue42 Core.");
                }
                const parseResult = layouts.reduce((soFar, layout) => {
                    const decodeResult = glueLayoutDecoder.run(layout);
                    if (decodeResult.ok) {
                        soFar.valid.push(layout);
                    }
                    else {
                        this.logger.warn(`A layout with name: ${layout.name} was not imported, because of error: ${JSON.stringify(decodeResult.error)}`);
                    }
                    return soFar;
                }, { valid: [] });
                const layoutsToImport = layouts.filter((layout) => parseResult.valid.some((validLayout) => validLayout.name === layout.name));
                yield this.bridge.send("layouts", operations$2.import, { layouts: layoutsToImport, mode });
            });
        }
        save(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                newLayoutOptionsDecoder.runWithException(layout);
                const saveResult = yield this.bridge.send("layouts", operations$2.save, { layout });
                return saveResult.layout;
            });
        }
        restore(options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                restoreOptionsDecoder.runWithException(options);
                const invocationTimeout = options.timeout ? options.timeout * 2 : this.defaultLayoutRestoreTimeoutMS;
                yield this.bridge.send("layouts", operations$2.restore, { layout: options }, { methodResponseTimeoutMs: invocationTimeout });
            });
        }
        remove(type, name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                layoutTypeDecoder.runWithException(type);
                nonEmptyStringDecoder.runWithException(name);
                yield this.bridge.send("layouts", operations$2.remove, { type, name });
            });
        }
        handleSaveRequest(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const response = {};
                if (this.saveRequestSubscription) {
                    try {
                        const onSaveRequestResponse = this.saveRequestSubscription(config);
                        response.windowContext = onSaveRequestResponse === null || onSaveRequestResponse === void 0 ? void 0 : onSaveRequestResponse.windowContext;
                    }
                    catch (error) {
                        this.logger.warn(`An error was thrown by the onSaveRequested callback, ignoring the callback: ${JSON.stringify(error)}`);
                    }
                }
                return response;
            });
        }
        getGlobalPermissionState() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const requestResult = yield this.bridge.send("layouts", operations$2.getGlobalPermissionState, undefined);
                return requestResult;
            });
        }
        requestGlobalPermission() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const currentState = (yield this.getGlobalPermissionState()).state;
                if (currentState === "denied") {
                    return { permissionGranted: false };
                }
                if (currentState === "granted") {
                    return { permissionGranted: true };
                }
                const myWindow = this.windowsController.my();
                if (myWindow.name !== "Platform") {
                    throw new Error("Cannot request permission for multi-window placement from any app other than the Platform.");
                }
                const requestResult = yield this.bridge.send("layouts", operations$2.requestGlobalPermission, undefined, { methodResponseTimeoutMs: 180000 });
                return { permissionGranted: requestResult.isAvailable };
            });
        }
        checkGlobalActivated() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const requestResult = yield this.bridge.send("layouts", operations$2.checkGlobalActivated, undefined);
                return { activated: requestResult.isAvailable };
            });
        }
        onAdded(callback) {
            this.export("Global").then((layouts) => layouts.forEach((layout) => callback(layout))).catch(() => { });
            this.export("Workspace").then((layouts) => layouts.forEach((layout) => callback(layout))).catch(() => { });
            return this.registry.add(operations$2.layoutAdded.name, callback);
        }
        onChanged(callback) {
            return this.registry.add(operations$2.layoutChanged.name, callback);
        }
        onRemoved(callback) {
            return this.registry.add(operations$2.layoutRemoved.name, callback);
        }
        subscribeOnSaveRequested(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to onSaveRequested, because the provided argument is not a valid callback function.");
            }
            if (this.saveRequestSubscription) {
                throw new Error("Cannot subscribe to onSaveRequested, because this client has already subscribed and only one subscription is supported. Consider unsubscribing from the initial one.");
            }
            this.saveRequestSubscription = callback;
            return () => {
                delete this.saveRequestSubscription;
            };
        }
        handleOnAdded(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutAdded.name, layout);
            });
        }
        handleOnChanged(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutChanged.name, layout);
            });
        }
        handleOnRemoved(layout) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.registry.execute(operations$2.layoutRemoved.name, layout);
            });
        }
    }

    const operations$3 = {
        raiseNotification: { name: "raiseNotification", dataDecoder: raiseNotificationDecoder },
        requestPermission: { name: "requestPermission", resultDecoder: permissionRequestResultDecoder },
        notificationShow: { name: "notificationShow", dataDecoder: notificationEventPayloadDecoder },
        notificationClick: { name: "notificationClick", dataDecoder: notificationEventPayloadDecoder },
        getPermission: { name: "getPermission", resultDecoder: permissionQueryResultDecoder }
    };

    function createCommonjsModule(fn, basedir, module) {
    	return module = {
    	  path: basedir,
    	  exports: {},
    	  require: function (path, base) {
          return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
        }
    	}, fn(module, module.exports), module.exports;
    }

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue() {
        seed = (seed * 9301 + 49297) % 233280;
        return seed/(233280.0);
    }

    function setSeed(_seed_) {
        seed = _seed_;
    }

    var randomFromSeed = {
        nextValue: getNextValue,
        seed: setSeed
    };

    var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet;
    var previousSeed;

    var shuffled;

    function reset() {
        shuffled = false;
    }

    function setCharacters(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet !== ORIGINAL) {
                alphabet = ORIGINAL;
                reset();
            }
            return;
        }

        if (_alphabet_ === alphabet) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet = _alphabet_;
        reset();
    }

    function characters(_alphabet_) {
        setCharacters(_alphabet_);
        return alphabet;
    }

    function setSeed$1(seed) {
        randomFromSeed.seed(seed);
        if (previousSeed !== seed) {
            reset();
            previousSeed = seed;
        }
    }

    function shuffle() {
        if (!alphabet) {
            setCharacters(ORIGINAL);
        }

        var sourceArray = alphabet.split('');
        var targetArray = [];
        var r = randomFromSeed.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled() {
        if (shuffled) {
            return shuffled;
        }
        shuffled = shuffle();
        return shuffled;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup(index) {
        var alphabetShuffled = getShuffled();
        return alphabetShuffled[index];
    }

    function get () {
      return alphabet || ORIGINAL;
    }

    var alphabet_1 = {
        get: get,
        characters: characters,
        seed: setSeed$1,
        lookup: lookup,
        shuffled: getShuffled
    };

    var crypto$1 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    var randomByte;

    if (!crypto$1 || !crypto$1.getRandomValues) {
        randomByte = function(size) {
            var bytes = [];
            for (var i = 0; i < size; i++) {
                bytes.push(Math.floor(Math.random() * 256));
            }
            return bytes;
        };
    } else {
        randomByte = function(size) {
            return crypto$1.getRandomValues(new Uint8Array(size));
        };
    }

    var randomByteBrowser = randomByte;

    // This file replaces `format.js` in bundlers like webpack or Rollup,
    // according to `browser` config in `package.json`.

    var format_browser = function (random, alphabet, size) {
      // We can’t use bytes bigger than the alphabet. To make bytes values closer
      // to the alphabet, we apply bitmask on them. We look for the closest
      // `2 ** x - 1` number, which will be bigger than alphabet size. If we have
      // 30 symbols in the alphabet, we will take 31 (00011111).
      // We do not use faster Math.clz32, because it is not available in browsers.
      var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
      // Bitmask is not a perfect solution (in our example it will pass 31 bytes,
      // which is bigger than the alphabet). As a result, we will need more bytes,
      // than ID size, because we will refuse bytes bigger than the alphabet.

      // Every hardware random generator call is costly,
      // because we need to wait for entropy collection. This is why often it will
      // be faster to ask for few extra bytes in advance, to avoid additional calls.

      // Here we calculate how many random bytes should we call in advance.
      // It depends on ID length, mask / alphabet size and magic number 1.6
      // (which was selected according benchmarks).

      // -~f => Math.ceil(f) if n is float number
      // -~i => i + 1 if n is integer number
      var step = -~(1.6 * mask * size / alphabet.length);
      var id = '';

      while (true) {
        var bytes = random(step);
        // Compact alternative for `for (var i = 0; i < step; i++)`
        var i = step;
        while (i--) {
          // If random byte is bigger than alphabet even after bitmask,
          // we refuse it by `|| ''`.
          id += alphabet[bytes[i] & mask] || '';
          // More compact than `id.length + 1 === size`
          if (id.length === +size) return id
        }
      }
    };

    function generate(number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + format_browser(randomByteBrowser, alphabet_1.get(), 1);
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var generate_1 = generate;

    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1567752802062;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version = 7;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function build(clusterWorkerId) {
        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + generate_1(version);
        str = str + generate_1(clusterWorkerId);
        if (counter > 0) {
            str = str + generate_1(counter);
        }
        str = str + generate_1(seconds);
        return str;
    }

    var build_1 = build;

    function isShortId(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var nonAlphabetic = new RegExp('[^' +
          alphabet_1.get().replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&') +
        ']');
        return !nonAlphabetic.test(id);
    }

    var isValid = isShortId;

    var lib$1 = createCommonjsModule(function (module) {





    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1.characters(newCharacters);
        }

        return alphabet_1.shuffled();
    }

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {
      return build_1(clusterWorkerId);
    }

    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.isValid = isValid;
    });

    var shortid = lib$1;

    class NotificationsController {
        constructor() {
            this.notifications = {};
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("notifications.controller.web");
                this.logger.trace("starting the web notifications controller");
                this.bridge = ioc.bridge;
                this.coreGlue = coreGlue;
                this.notificationsSettings = ioc.config.notifications;
                this.buildNotificationFunc = ioc.buildNotification;
                const api = this.toApi();
                this.addOperationExecutors();
                coreGlue.notifications = api;
                this.logger.trace("notifications are ready");
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const operationName = notificationsOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$3[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        toApi() {
            const api = {
                raise: this.raise.bind(this),
                requestPermission: this.requestPermission.bind(this),
                getPermission: this.getPermission.bind(this)
            };
            return Object.freeze(api);
        }
        getPermission() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const queryResult = yield this.bridge.send("notifications", operations$3.getPermission, undefined);
                return queryResult.permission;
            });
        }
        requestPermission() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const permissionResult = yield this.bridge.send("notifications", operations$3.requestPermission, undefined);
                return permissionResult.permissionGranted;
            });
        }
        raise(options) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const settings = glue42NotificationOptionsDecoder.runWithException(options);
                const permissionGranted = yield this.requestPermission();
                if (!permissionGranted) {
                    throw new Error("Cannot raise the notification, because the user has declined the permission request");
                }
                const id = shortid.generate();
                yield this.bridge.send("notifications", operations$3.raiseNotification, { settings, id });
                const notification = this.buildNotificationFunc(options);
                this.notifications[id] = notification;
                return notification;
            });
        }
        addOperationExecutors() {
            operations$3.notificationShow.execute = this.handleNotificationShow.bind(this);
            operations$3.notificationClick.execute = this.handleNotificationClick.bind(this);
        }
        handleNotificationShow(data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (!data.id) {
                    return;
                }
                const notification = this.notifications[data.id];
                if (notification && notification.onshow) {
                    notification.onshow();
                }
            });
        }
        handleNotificationClick(data) {
            var _a, _b, _c, _d, _e;
            return __awaiter$1(this, void 0, void 0, function* () {
                if (!data.action && ((_a = this.notificationsSettings) === null || _a === void 0 ? void 0 : _a.defaultClick)) {
                    this.notificationsSettings.defaultClick(this.coreGlue, data.definition);
                }
                if (data.action && ((_c = (_b = this.notificationsSettings) === null || _b === void 0 ? void 0 : _b.actionClicks) === null || _c === void 0 ? void 0 : _c.some((actionDef) => actionDef.action === data.action))) {
                    const foundHandler = (_e = (_d = this.notificationsSettings) === null || _d === void 0 ? void 0 : _d.actionClicks) === null || _e === void 0 ? void 0 : _e.find((actionDef) => actionDef.action === data.action);
                    foundHandler.handler(this.coreGlue, data.definition);
                }
                if (!data.id) {
                    return;
                }
                const notification = this.notifications[data.id];
                if (notification && notification.onclick) {
                    notification.onclick();
                    delete this.notifications[data.id];
                }
            });
        }
    }

    const operations$4 = {
        getIntents: { name: "getIntents", resultDecoder: wrappedIntentsDecoder },
        findIntent: { name: "findIntent", dataDecoder: wrappedIntentFilterDecoder, resultDecoder: wrappedIntentsDecoder },
        raiseIntent: { name: "raiseIntent", dataDecoder: intentRequestDecoder, resultDecoder: intentResultDecoder }
    };

    const GLUE42_FDC3_INTENTS_METHOD_PREFIX = "Tick42.FDC3.Intents.";
    const INTENTS_RESOLVER_INTEROP_PREFIX = "T42.Intents.Resolver.Control";
    const INTENTS_RESOLVER_WIDTH = 400;
    const INTENTS_RESOLVER_HEIGHT = 440;
    const INTENTS_RESOLVER_APP_NAME = "intentsResolver";

    class IntentsController {
        constructor() {
            this.myIntents = new Set();
            this.useIntentsResolverUI = true;
            this.intentsResolverResponsePromises = {};
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("intents.controller.web");
                this.logger.trace("starting the web intents controller");
                this.bridge = ioc.bridge;
                this.interop = coreGlue.interop;
                this.appManager = ioc.appManagerController;
                this.windowsManager = ioc.windowsController;
                this.checkIfIntentsResolverIsEnabled(ioc.config);
                const api = this.toApi();
                this.logger.trace("no need for platform registration, attaching the intents property to glue and returning");
                coreGlue.intents = api;
            });
        }
        handleBridgeMessage(args) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const operationName = intentsOperationTypesDecoder.runWithException(args.operation);
                const operation = operations$4[operationName];
                if (!operation.execute) {
                    return;
                }
                let operationData = args.data;
                if (operation.dataDecoder) {
                    operationData = operation.dataDecoder.runWithException(args.data);
                }
                return yield operation.execute(operationData);
            });
        }
        toApi() {
            const api = {
                raise: this.raise.bind(this),
                all: this.all.bind(this),
                addIntentListener: this.addIntentListener.bind(this),
                find: this.find.bind(this)
            };
            return api;
        }
        raise(request) {
            return __awaiter$1(this, void 0, void 0, function* () {
                let intentDecoder = raiseRequestDecoder.runWithException(request);
                const intent = typeof intentDecoder === "string"
                    ? { intent: intentDecoder }
                    : intentDecoder;
                if (intent.target) {
                    this.logger.trace(`Intents Resolver won't be used. Target is provided in Intent Request - ${JSON.stringify(intent)}`);
                    return this.raiseIntent(intent);
                }
                if (!this.useIntentsResolverUI) {
                    this.logger.trace(`Intent Resolver is disabled. Raising intent to first found handler`);
                    return this.raiseIntent(intent);
                }
                const intentsResolverApp = this.appManager.getApplication(this.intentsResolverAppName);
                if (!intentsResolverApp) {
                    this.logger.trace(`Intent Resolver Application with name ${this.intentsResolverAppName} not found. Intents Resolver won't be used for handling raised intents`);
                    return this.raiseIntent(intent);
                }
                const hasOneHandler = (yield this.find(intent.intent))[0].handlers.length === 1;
                if (hasOneHandler) {
                    this.logger.trace(`Intents Resolver won't be used - intent has only one handler.`);
                    return this.raiseIntent(intent);
                }
                const registeredMethod = yield this.registerIntentResolverMethod();
                this.logger.trace(`Registered interop method ${registeredMethod}`);
                const resolverInstance = yield this.openIntentResolverApplication(intent, registeredMethod);
                const { handler } = yield this.intentsResolverResponsePromises[resolverInstance.id].promise;
                this.stopIntensResolverInstance(resolverInstance.id);
                const target = handler.type === "app"
                    ? { app: handler.applicationName }
                    : { instance: handler.instanceId };
                this.logger.trace(`Intent handler chosen by the user: ${JSON.stringify(target)}`);
                const data = Object.assign(Object.assign({}, intent), { target });
                return this.raiseIntent(data);
            });
        }
        raiseIntent(requestObj) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = this.bridge.send("intents", operations$4.raiseIntent, requestObj);
                return result;
            });
        }
        all() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.bridge.send("intents", operations$4.getIntents, undefined);
                return result.intents;
            });
        }
        addIntentListener(intent, handler) {
            addIntentListenerIntentDecoder.runWithException(intent);
            if (typeof handler !== "function") {
                throw new Error("Cannot add intent listener, because the provided handler is not a function!");
            }
            let registerPromise;
            const intentName = typeof intent === "string" ? intent : intent.intent;
            const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;
            const alreadyRegistered = this.myIntents.has(intentName);
            if (alreadyRegistered) {
                throw new Error(`Intent listener for intent ${intentName} already registered!`);
            }
            this.myIntents.add(intentName);
            const result = {
                unsubscribe: () => {
                    this.myIntents.delete(intentName);
                    registerPromise
                        .then(() => this.interop.unregister(methodName))
                        .catch((err) => this.logger.trace(`Unregistration of a method with name ${methodName} failed with reason: ${err}`));
                }
            };
            let intentFlag = {};
            if (typeof intent === "object") {
                const rest = __rest$1(intent, ["intent"]);
                intentFlag = rest;
            }
            registerPromise = this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args) => {
                if (this.myIntents.has(intentName)) {
                    return handler(args);
                }
            });
            registerPromise.catch(err => {
                this.myIntents.delete(intentName);
                this.logger.warn(`Registration of a method with name ${methodName} failed with reason: ${err}`);
            });
            return result;
        }
        find(intentFilter) {
            return __awaiter$1(this, void 0, void 0, function* () {
                let data = undefined;
                if (typeof intentFilter !== "undefined") {
                    const intentFilterObj = findFilterDecoder.runWithException(intentFilter);
                    if (typeof intentFilterObj === "string") {
                        data = {
                            filter: {
                                name: intentFilterObj
                            }
                        };
                    }
                    else if (typeof intentFilterObj === "object") {
                        data = {
                            filter: intentFilterObj
                        };
                    }
                }
                const result = yield this.bridge.send("intents", operations$4.findIntent, data);
                return result.intents;
            });
        }
        createResponsePromise(intent, instanceId, methodName) {
            let resolve = () => { };
            let reject = () => { };
            const promise = new Promise((res, rej) => {
                resolve = res;
                reject = rej;
            });
            this.intentsResolverResponsePromises[instanceId] = { intent, resolve, reject, promise, methodName };
        }
        resolverResponseHandler(args, callerId) {
            const response = intentResolverResponseDecoder.run(args);
            const instanceId = callerId.instance;
            if (!response.ok) {
                this.logger.trace(`Intent Resolver sent invalid response. Error: ${response.error}`);
                this.intentsResolverResponsePromises[instanceId].reject(response.error.message);
                this.stopIntensResolverInstance(instanceId);
                return;
            }
            this.intentsResolverResponsePromises[instanceId].resolve(response.result);
        }
        stopIntensResolverInstance(instanceId) {
            const appInstances = this.appManager.getApplication(this.intentsResolverAppName).instances;
            const searchedInstance = appInstances.find((inst) => inst.id === instanceId);
            if (!searchedInstance) {
                return;
            }
            searchedInstance.stop().catch(err => this.logger.error(err));
        }
        registerIntentResolverMethod() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const methodName = INTENTS_RESOLVER_INTEROP_PREFIX + shortid();
                yield this.interop.register(methodName, this.resolverResponseHandler.bind(this));
                return methodName;
            });
        }
        openIntentResolverApplication(requestObj, methodName) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const startContext = {
                    intent: requestObj.intent,
                    callerId: this.interop.instance.instance,
                    methodName
                };
                const startOptions = yield this.composeStartOptions();
                const instance = yield this.appManager.getApplication(this.intentsResolverAppName).start(startContext, startOptions);
                this.subscribeOnInstanceStopped(instance);
                this.createResponsePromise(requestObj.intent, instance.id, methodName);
                return instance;
            });
        }
        cleanUpIntentResolverPromise(instanceId) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const intentPromise = this.intentsResolverResponsePromises[instanceId];
                if (!intentPromise) {
                    return;
                }
                const unregisterPromise = this.interop.unregister(intentPromise.methodName);
                unregisterPromise.catch((error) => this.logger.warn(error));
                delete this.intentsResolverResponsePromises[instanceId];
            });
        }
        composeStartOptions() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const bounds = yield this.windowsManager.my().getBounds();
                return {
                    top: (bounds.height - INTENTS_RESOLVER_HEIGHT) / 2 + bounds.top,
                    left: (bounds.width - INTENTS_RESOLVER_WIDTH) / 2 + bounds.left,
                    width: INTENTS_RESOLVER_WIDTH,
                    height: INTENTS_RESOLVER_HEIGHT
                };
            });
        }
        subscribeOnInstanceStopped(instance) {
            const { application } = instance;
            const unsub = application.onInstanceStopped((inst) => {
                if (inst.id !== instance.id) {
                    return;
                }
                const intentPromise = this.intentsResolverResponsePromises[inst.id];
                if (!intentPromise) {
                    return unsub();
                }
                intentPromise.reject(`Cannot resolve raise intent ${intentPromise.intent} - User closed ${this.intentsResolverAppName} app without choosing an intent handler`);
                this.cleanUpIntentResolverPromise(inst.id);
                unsub();
            });
        }
        checkIfIntentsResolverIsEnabled(options) {
            var _a, _b, _c;
            this.useIntentsResolverUI = typeof ((_a = options.intents) === null || _a === void 0 ? void 0 : _a.enableIntentsResolverUI) === "boolean"
                ? options.intents.enableIntentsResolverUI
                : true;
            this.intentsResolverAppName = (_c = (_b = options.intents) === null || _b === void 0 ? void 0 : _b.intentsResolverAppName) !== null && _c !== void 0 ? _c : INTENTS_RESOLVER_APP_NAME;
        }
    }

    const Glue42CoreMessageTypes = {
        platformUnload: { name: "platformUnload" },
        transportSwitchRequest: { name: "transportSwitchRequest" },
        transportSwitchResponse: { name: "transportSwitchResponse" },
        getCurrentTransport: { name: "getCurrentTransport" },
        getCurrentTransportResponse: { name: "getCurrentTransportResponse" },
        checkPreferredLogic: { name: "checkPreferredLogic" },
        checkPreferredConnection: { name: "checkPreferredConnection" },
        checkPreferredLogicResponse: { name: "checkPreferredLogicResponse" },
        checkPreferredConnectionResponse: { name: "checkPreferredConnectionResponse" }
    };
    const webPlatformTransportName = "web-platform";
    const latestFDC3Type = "latest_fdc3_type";

    const operations$5 = {
        addChannel: { name: "addChannel", dataDecoder: channelContextDecoder },
    };

    class ChannelsController {
        constructor() {
            this.registry = lib();
            this.GlueWebChannelsPrefix = "___channel___";
            this.SubsKey = "subs";
            this.ChangedKey = "changed";
            this.replaySubscribe = (callback, channelId) => {
                this.get(channelId)
                    .then((channelContext) => {
                    if (typeof channelContext.data === "object" && Object.keys(channelContext.data).length) {
                        const contextName = this.createContextName(channelContext.name);
                        return this.contexts.subscribe(contextName, (context, _, __, ___, extraData) => {
                            callback(context.data, context, extraData === null || extraData === void 0 ? void 0 : extraData.updaterId);
                        });
                    }
                })
                    .then((un) => {
                    if (un && typeof un === "function") {
                        un();
                    }
                })
                    .catch(err => this.logger.trace(err));
            };
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("channels.controller.web");
                this.logger.trace("starting the web channels controller");
                this.contexts = coreGlue.contexts;
                this.bridge = ioc.bridge;
                this.logger.trace("no need for platform registration, attaching the channels property to glue and returning");
                const api = this.toApi();
                coreGlue.channels = api;
            });
        }
        handleBridgeMessage() {
            return __awaiter$1(this, void 0, void 0, function* () {
            });
        }
        list() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                const channelContexts = yield Promise.all(channelNames.map((channelName) => this.get(channelName)));
                return channelContexts;
            });
        }
        my() {
            return this.current();
        }
        join(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                yield this.switchToChannel(name);
            });
        }
        onChanged(callback) {
            return this.changed(callback);
        }
        leave() {
            return __awaiter$1(this, void 0, void 0, function* () {
                yield this.switchToChannel();
            });
        }
        toApi() {
            const api = {
                subscribe: this.subscribe.bind(this),
                subscribeFor: this.subscribeFor.bind(this),
                publish: this.publish.bind(this),
                all: this.all.bind(this),
                list: this.list.bind(this),
                get: this.get.bind(this),
                join: this.join.bind(this),
                leave: this.leave.bind(this),
                current: this.current.bind(this),
                my: this.my.bind(this),
                changed: this.changed.bind(this),
                onChanged: this.onChanged.bind(this),
                add: this.add.bind(this)
            };
            return Object.freeze(api);
        }
        createContextName(channelName) {
            return `${this.GlueWebChannelsPrefix}${channelName}`;
        }
        getAllChannelNames() {
            const contextNames = this.contexts.all();
            const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(this.GlueWebChannelsPrefix));
            const channelNames = channelContextNames.map((channelContextName) => channelContextName.replace(this.GlueWebChannelsPrefix, ""));
            return channelNames;
        }
        unsubscribe() {
            if (this.unsubscribeFunc) {
                this.unsubscribeFunc();
                this.unsubscribeFunc = undefined;
            }
        }
        switchToChannel(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.unsubscribe();
                this.currentChannelName = name;
                if (typeof name !== "undefined") {
                    const contextName = this.createContextName(name);
                    this.unsubscribeFunc = yield this.contexts.subscribe(contextName, (context, _, __, ___, extraData) => {
                        this.registry.execute(this.SubsKey, context.data, context, extraData === null || extraData === void 0 ? void 0 : extraData.updaterId);
                    });
                }
                this.registry.execute(this.ChangedKey, name);
            });
        }
        updateData(name, data) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const contextName = this.createContextName(name);
                const fdc3Type = this.getFDC3Type(data);
                if (this.contexts.setPathSupported) {
                    const pathValues = Object.keys(data).map((key) => {
                        return {
                            path: `data.${key}`,
                            value: data[key]
                        };
                    });
                    if (fdc3Type) {
                        pathValues.push({ path: latestFDC3Type, value: fdc3Type });
                    }
                    yield this.contexts.setPaths(contextName, pathValues);
                }
                else {
                    if (fdc3Type) {
                        data[latestFDC3Type] = fdc3Type;
                    }
                    yield this.contexts.update(contextName, { data });
                }
            });
        }
        getFDC3Type(data) {
            const fdc3PropsArr = Object.keys(data).filter((key) => key.indexOf("fdc3_") === 0);
            if (fdc3PropsArr.length === 0) {
                return;
            }
            if (fdc3PropsArr.length > 1) {
                throw new Error("FDC3 does not support updating of multiple context keys");
            }
            return fdc3PropsArr[0].split("_").slice(1).join("_");
        }
        subscribe(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to channels, because the provided callback is not a function!");
            }
            const currentChannel = this.current();
            if (currentChannel) {
                this.replaySubscribe(callback, currentChannel);
            }
            return this.registry.add(this.SubsKey, callback);
        }
        subscribeFor(name, callback) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                if (typeof callback !== "function") {
                    throw new Error(`Cannot subscribe to channel ${name}, because the provided callback is not a function!`);
                }
                const contextName = this.createContextName(name);
                return this.contexts.subscribe(contextName, (context, _, __, ___, extraData) => {
                    callback(context.data, context, extraData === null || extraData === void 0 ? void 0 : extraData.updaterId);
                });
            });
        }
        publish(data, name) {
            if (typeof data !== "object") {
                throw new Error("Cannot publish to channel, because the provided data is not an object!");
            }
            if (typeof name !== "undefined") {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                return this.updateData(name, data);
            }
            if (typeof this.currentChannelName === "undefined") {
                throw new Error("Cannot publish to channel, because not joined to a channel!");
            }
            return this.updateData(this.currentChannelName, data);
        }
        all() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                return channelNames;
            });
        }
        get(name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelNames = this.getAllChannelNames();
                channelNameDecoder(channelNames).runWithException(name);
                const contextName = this.createContextName(name);
                const channelContext = yield this.contexts.get(contextName);
                if (channelContext.latest_fdc3_type) {
                    const rest = __rest$1(channelContext, ["latest_fdc3_type"]);
                    return Object.assign({}, rest);
                }
                return channelContext;
            });
        }
        current() {
            return this.currentChannelName;
        }
        changed(callback) {
            if (typeof callback !== "function") {
                throw new Error("Cannot subscribe to channel changed, because the provided callback is not a function!");
            }
            return this.registry.add(this.ChangedKey, callback);
        }
        add(info) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const channelContext = channelContextDecoder.runWithException(info);
                const channelWithSuchNameExists = this.getAllChannelNames().includes(channelContext.name);
                if (channelWithSuchNameExists) {
                    throw new Error("There's an already existing channel with such name");
                }
                yield this.bridge.send("channels", operations$5.addChannel, channelContext);
                return channelContext;
            });
        }
    }

    const operations$6 = {
        getEnvironment: { name: "getEnvironment", resultDecoder: anyDecoder },
        getBase: { name: "getBase", resultDecoder: anyDecoder }
    };

    class SystemController {
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.bridge = ioc.bridge;
                yield this.setEnvironment();
            });
        }
        handleBridgeMessage() {
            return __awaiter$1(this, void 0, void 0, function* () {
            });
        }
        setEnvironment() {
            return __awaiter$1(this, void 0, void 0, function* () {
                const environment = yield this.bridge.send("system", operations$6.getEnvironment, undefined);
                const base = yield this.bridge.send("system", operations$6.getBase, undefined);
                const glue42core = Object.assign({}, window.glue42core, base, { environment });
                window.glue42core = Object.freeze(glue42core);
            });
        }
    }

    class Notification$1 {
        constructor(config) {
            this.onclick = () => { };
            this.onshow = () => { };
            this.badge = config.badge;
            this.body = config.body;
            this.data = config.data;
            this.dir = config.dir;
            this.icon = config.icon;
            this.image = config.image;
            this.lang = config.lang;
            this.renotify = config.renotify;
            this.requireInteraction = config.requireInteraction;
            this.silent = config.silent;
            this.tag = config.tag;
            this.timestamp = config.timestamp;
            this.vibrate = config.vibrate;
        }
    }

    const extensionOperationTypesDecoder = oneOf(constant("clientHello"));
    const extensionConfigDecoder = object({
        widget: object({
            inject: boolean()
        })
    });

    const operations$7 = {
        clientHello: { name: "clientHello", resultDecoder: extensionConfigDecoder }
    };

    class ExtController {
        constructor() {
            this.channels = [];
            this.contentCommands = {
                widgetVisualizationPermission: { name: "widgetVisualizationPermission", handle: this.handleWidgetVisualizationPermission.bind(this) },
                changeChannel: { name: "changeChannel", handle: this.handleChangeChannel.bind(this) }
            };
        }
        start(coreGlue, ioc) {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger = coreGlue.logger.subLogger("extension.controller.web");
                this.windowId = ioc.publicWindowId;
                this.logger.trace("starting the extension web controller");
                this.bridge = ioc.bridge;
                this.channelsController = ioc.channelsController;
                this.eventsDispatcher = ioc.eventsDispatcher;
                try {
                    yield this.registerWithPlatform();
                }
                catch (error) {
                    return;
                }
                this.channels = yield this.channelsController.list();
                this.eventsDispatcher.onContentMessage(this.handleContentMessage.bind(this));
                this.channelsController.onChanged((channel) => {
                    this.eventsDispatcher.sendContentMessage({ command: "channelChange", newChannel: channel });
                });
            });
        }
        handleBridgeMessage(_) {
            return __awaiter$1(this, void 0, void 0, function* () {
            });
        }
        handleContentMessage(message) {
            if (!message || typeof message.command !== "string") {
                return;
            }
            const foundHandler = this.contentCommands[message.command];
            if (!foundHandler) {
                return;
            }
            foundHandler.handle(message);
        }
        registerWithPlatform() {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger.trace("registering with the platform");
                this.config = yield this.bridge.send("extension", operations$7.clientHello, { windowId: this.windowId });
                this.logger.trace("the platform responded to the hello message with a valid extension config");
            });
        }
        handleWidgetVisualizationPermission() {
            var _a;
            return __awaiter$1(this, void 0, void 0, function* () {
                if (!((_a = this.config) === null || _a === void 0 ? void 0 : _a.widget.inject)) {
                    return this.eventsDispatcher.sendContentMessage({ command: "permissionResponse", allowed: false });
                }
                const currentChannel = this.channels.find((channel) => channel.name === this.channelsController.my());
                this.eventsDispatcher.sendContentMessage({ command: "permissionResponse", allowed: true, channels: this.channels, currentChannel });
            });
        }
        handleChangeChannel(message) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (message.name === "no-channel") {
                    yield this.channelsController.leave();
                    return;
                }
                yield this.channelsController.join(message.name);
            });
        }
    }

    class EventsDispatcher {
        constructor(config) {
            this.config = config;
            this.registry = lib();
            this.glue42EventName = "Glue42";
            this.events = {
                notifyStarted: { name: "notifyStarted", handle: this.handleNotifyStarted.bind(this) },
                contentInc: { name: "contentInc", handle: this.handleContentInc.bind(this) },
                requestGlue: { name: "requestGlue", handle: this.handleRequestGlue.bind(this) }
            };
        }
        start(glue) {
            this.glue = glue;
            this.wireCustomEventListener();
            this.announceStarted();
        }
        sendContentMessage(message) {
            this.send("contentOut", "glue42core", message);
        }
        onContentMessage(callback) {
            return this.registry.add("content-inc", callback);
        }
        wireCustomEventListener() {
            window.addEventListener(this.glue42EventName, (event) => {
                var _a;
                const data = event.detail;
                const namespace = (_a = data === null || data === void 0 ? void 0 : data.glue42) !== null && _a !== void 0 ? _a : data === null || data === void 0 ? void 0 : data.glue42core;
                if (!namespace) {
                    return;
                }
                const glue42Event = namespace.event;
                const foundHandler = this.events[glue42Event];
                if (!foundHandler) {
                    return;
                }
                foundHandler.handle(namespace.message);
            });
        }
        announceStarted() {
            this.send("start", "glue42");
        }
        handleRequestGlue() {
            if (!this.config.exposeGlue) {
                this.send("requestGlueResponse", "glue42", { error: "Will not give access to the underlying Glue API, because it was explicitly denied upon initialization." });
                return;
            }
            this.send("requestGlueResponse", "glue42", { glue: this.glue });
        }
        handleNotifyStarted() {
            this.announceStarted();
        }
        handleContentInc(message) {
            this.registry.execute("content-inc", message);
        }
        send(eventName, namespace, message) {
            const payload = {};
            payload[namespace] = { event: eventName, message };
            const event = new CustomEvent(this.glue42EventName, { detail: payload });
            window.dispatchEvent(event);
        }
    }

    class PreferredConnectionController {
        constructor(coreGlue) {
            this.coreGlue = coreGlue;
            this.transactionTimeout = 15000;
            this.transactionLocks = {};
            this.reconnectCounter = 0;
            this.logger = this.coreGlue.logger.subLogger("web.preferred.connection.controller");
        }
        start(coreConfig) {
            return __awaiter$1(this, void 0, void 0, function* () {
                if (coreConfig.isPlatformInternal) {
                    this.logger.trace("This is an internal client to the platform, skipping all client preferred communication logic.");
                    return;
                }
                const isConnectedToPlatform = this.coreGlue.connection.transport.name() === webPlatformTransportName;
                if (!isConnectedToPlatform) {
                    throw new Error("Cannot initiate the Glue Web Bridge, because the initial connection was not handled by a Web Platform transport.");
                }
                if (!this.coreGlue.connection.transport.isPreferredActivated) {
                    this.logger.trace("The platform of this client was configured without a preferred connection, skipping the rest of the initialization.");
                    return;
                }
                this.webPlatformTransport = this.coreGlue.connection.transport;
                this.webPlatformMessagesUnsubscribe = this.webPlatformTransport.onMessage(this.handleWebPlatformMessage.bind(this));
                const transportState = yield this.getCurrentPlatformTransportState();
                yield this.checkSwitchTransport(transportState);
            });
        }
        handleWebPlatformMessage(msg) {
            if (typeof msg === "string") {
                return;
            }
            const isConnectedToPlatform = this.coreGlue.connection.transport.name() === webPlatformTransportName;
            const type = msg.type;
            const args = msg.args;
            const transactionId = msg.transactionId;
            if (type === Glue42CoreMessageTypes.transportSwitchRequest.name) {
                return this.handleTransportSwitchRequest(args, transactionId);
            }
            if (type === Glue42CoreMessageTypes.platformUnload.name && !isConnectedToPlatform) {
                return this.handlePlatformUnload();
            }
            if (type === Glue42CoreMessageTypes.getCurrentTransportResponse.name) {
                return this.handleGetCurrentTransportResponse(args, transactionId);
            }
            if (type === Glue42CoreMessageTypes.checkPreferredLogic.name) {
                return this.handleCheckPreferredLogic(transactionId);
            }
            if (type === Glue42CoreMessageTypes.checkPreferredConnection.name) {
                return this.handleCheckPreferredConnection(args, transactionId);
            }
        }
        reEstablishPlatformPort() {
            return __awaiter$1(this, void 0, void 0, function* () {
                try {
                    yield this.webPlatformTransport.connect();
                }
                catch (error) {
                    this.logger.trace(`Error when re-establishing port connection to the platform: ${JSON.stringify(error)}`);
                    --this.reconnectCounter;
                    if (this.reconnectCounter > 0) {
                        return this.reEstablishPlatformPort();
                    }
                    this.logger.warn("This client lost connection to the platform while connected to a preferred GW and was not able to re-connect to the platform.");
                }
                this.logger.trace("The connection to the platform was re-established, closing the connection to the web gateway.");
                this.reconnectCounter = 0;
                this.webPlatformTransport.close();
                const transportState = yield this.getCurrentPlatformTransportState();
                yield this.checkSwitchTransport(transportState);
            });
        }
        checkSwitchTransport(config) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const myCurrentTransportName = this.coreGlue.connection.transport.name();
                if (myCurrentTransportName === config.transportName) {
                    this.logger.trace("A check switch was requested, but the platform transport and my transport are identical, no switch is necessary");
                    return;
                }
                this.logger.trace(`A check switch was requested and a transport switch is necessary, because this client is now on ${myCurrentTransportName}, but it should reconnect to ${JSON.stringify(config)}`);
                const result = yield this.coreGlue.connection.switchTransport(config);
                this.setConnected();
                this.logger.trace(`The transport switch was completed with result: ${JSON.stringify(result)}`);
            });
        }
        getCurrentPlatformTransportState() {
            return __awaiter$1(this, void 0, void 0, function* () {
                this.logger.trace("Requesting the current transport state of the platform.");
                const transaction = this.setTransaction(Glue42CoreMessageTypes.getCurrentTransport.name);
                this.sendPlatformMessage(Glue42CoreMessageTypes.getCurrentTransport.name, transaction.id);
                const transportState = yield transaction.lock;
                this.logger.trace(`The platform responded with transport state: ${JSON.stringify(transportState)}`);
                return transportState;
            });
        }
        setTransaction(operation) {
            const transaction = {};
            const transactionId = shortid.generate();
            const transactionLock = new Promise((resolve, reject) => {
                let transactionLive = true;
                transaction.lift = (args) => {
                    transactionLive = false;
                    delete this.transactionLocks[transactionId];
                    resolve(args);
                };
                transaction.fail = (reason) => {
                    transactionLive = false;
                    delete this.transactionLocks[transactionId];
                    reject(reason);
                };
                setTimeout(() => {
                    if (!transactionLive) {
                        return;
                    }
                    transactionLive = false;
                    this.logger.warn(`Transaction for operation: ${operation} timed out.`);
                    delete this.transactionLocks[transactionId];
                    reject(`Transaction for operation: ${operation} timed out.`);
                }, this.transactionTimeout);
            });
            transaction.lock = transactionLock;
            transaction.id = transactionId;
            this.transactionLocks[transactionId] = transaction;
            return transaction;
        }
        sendPlatformMessage(type, transactionId, args) {
            this.logger.trace(`Sending a platform message of type: ${type}, id: ${transactionId} and args: ${JSON.stringify(args)}`);
            this.webPlatformTransport.sendObject({
                glue42core: { type, args, transactionId }
            });
        }
        handleTransportSwitchRequest(args, transactionId) {
            this.logger.trace(`Received a transport switch request with id: ${transactionId} and data: ${JSON.stringify(args)}`);
            this.coreGlue.connection.switchTransport(args.switchSettings)
                .then((result) => {
                this.logger.trace(`The transport switch was completed with result: ${JSON.stringify(result)}`);
                this.setConnected();
                this.sendPlatformMessage(Glue42CoreMessageTypes.transportSwitchResponse.name, transactionId, { success: result.success });
            })
                .catch((error) => {
                this.logger.error(error);
                this.sendPlatformMessage(Glue42CoreMessageTypes.transportSwitchResponse.name, transactionId, { success: false });
            });
        }
        handlePlatformUnload() {
            this.reconnectCounter = 5;
            this.logger.trace("The platform was unloaded while I am connected to a preferred connection, re-establishing the port connection.");
            this.reEstablishPlatformPort();
        }
        handleGetCurrentTransportResponse(args, transactionId) {
            this.logger.trace(`Got a current transport response from the platform with id: ${transactionId} and data: ${JSON.stringify(args)}`);
            const transportState = args.transportState;
            const transaction = this.transactionLocks[transactionId];
            transaction === null || transaction === void 0 ? void 0 : transaction.lift(transportState);
        }
        handleCheckPreferredLogic(transactionId) {
            setTimeout(() => this.sendPlatformMessage(Glue42CoreMessageTypes.checkPreferredLogicResponse.name, transactionId), 0);
        }
        handleCheckPreferredConnection(args, transactionId) {
            const url = args.url;
            this.logger.trace(`Testing the possible connection to: ${url}`);
            this.checkPreferredConnection(url)
                .then((result) => {
                this.logger.trace(`The connection to ${url} is possible`);
                this.sendPlatformMessage(Glue42CoreMessageTypes.checkPreferredConnectionResponse.name, transactionId, result);
            })
                .catch((error) => {
                this.logger.trace(`The connection to ${url} is not possible`);
                this.sendPlatformMessage(Glue42CoreMessageTypes.checkPreferredConnectionResponse.name, transactionId, { error });
            });
        }
        checkPreferredConnection(url) {
            return new Promise((resolve) => {
                const ws = new WebSocket(url);
                ws.onerror = () => resolve({ live: false });
                ws.onopen = () => {
                    ws.close();
                    resolve({ live: true });
                };
            });
        }
        setConnected() {
            this.webPlatformTransport.manualSetReadyState();
        }
    }

    class IoC {
        constructor() {
            this.controllers = {
                windows: this.windowsController,
                appManager: this.appManagerController,
                layouts: this.layoutsController,
                notifications: this.notificationsController,
                intents: this.intentsController,
                channels: this.channelsController,
                system: this.systemController,
                extension: this.extensionController
            };
        }
        get communicationId() {
            return this._communicationId;
        }
        get publicWindowId() {
            if (!this._publicWindowId) {
                throw new Error("Accessing undefined public window id.");
            }
            return this._publicWindowId;
        }
        get actualWindowId() {
            return this._actualWindowId;
        }
        get windowsController() {
            if (!this._windowsControllerInstance) {
                this._windowsControllerInstance = new WindowsController();
            }
            return this._windowsControllerInstance;
        }
        get appManagerController() {
            if (!this._appManagerControllerInstance) {
                this._appManagerControllerInstance = new AppManagerController();
            }
            return this._appManagerControllerInstance;
        }
        get layoutsController() {
            if (!this._layoutsControllerInstance) {
                this._layoutsControllerInstance = new LayoutsController();
            }
            return this._layoutsControllerInstance;
        }
        get notificationsController() {
            if (!this._notificationsControllerInstance) {
                this._notificationsControllerInstance = new NotificationsController();
            }
            return this._notificationsControllerInstance;
        }
        get intentsController() {
            if (!this._intentsControllerInstance) {
                this._intentsControllerInstance = new IntentsController();
            }
            return this._intentsControllerInstance;
        }
        get systemController() {
            if (!this._systemControllerInstance) {
                this._systemControllerInstance = new SystemController();
            }
            return this._systemControllerInstance;
        }
        get channelsController() {
            if (!this._channelsControllerInstance) {
                this._channelsControllerInstance = new ChannelsController();
            }
            return this._channelsControllerInstance;
        }
        get extensionController() {
            if (!this._extensionController) {
                this._extensionController = new ExtController();
            }
            return this._extensionController;
        }
        get eventsDispatcher() {
            if (!this._eventsDispatcher) {
                this._eventsDispatcher = new EventsDispatcher(this.config);
            }
            return this._eventsDispatcher;
        }
        get bridge() {
            if (!this._bridgeInstance) {
                this._bridgeInstance = new GlueBridge(this._coreGlue, this.communicationId);
            }
            return this._bridgeInstance;
        }
        get preferredConnectionController() {
            if (!this._preferredConnectionController) {
                this._preferredConnectionController = new PreferredConnectionController(this._coreGlue);
            }
            return this._preferredConnectionController;
        }
        get config() {
            return this._webConfig;
        }
        defineGlue(coreGlue) {
            this._coreGlue = coreGlue;
            this._publicWindowId = coreGlue.connection.transport.publicWindowId;
            this._actualWindowId = coreGlue.interop.instance.windowId;
            this._communicationId = coreGlue.connection.transport.communicationId || window.glue42core.communicationId;
        }
        defineConfig(config) {
            this._webConfig = config;
        }
        buildWebWindow(id, name) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const model = new WebWindowModel(id, name, this.bridge);
                const api = yield model.toApi();
                return { id, model, api };
            });
        }
        buildNotification(config) {
            return new Notification$1(config);
        }
        buildApplication(app, applicationInstances) {
            return __awaiter$1(this, void 0, void 0, function* () {
                const application = (new ApplicationModel(app, [], this.appManagerController)).toApi();
                const instances = applicationInstances.map((instanceData) => this.buildInstance(instanceData, application));
                application.instances.push(...instances);
                return application;
            });
        }
        buildInstance(instanceData, app) {
            return (new InstanceModel(instanceData, this.bridge, app)).toApi();
        }
    }

    var version$1 = "2.10.0";

    const createFactoryFunction = (coreFactoryFunction) => {
        return (userConfig) => __awaiter$1(void 0, void 0, void 0, function* () {
            if (window.glue42gd) {
                return enterprise(userConfig);
            }
            const ioc = new IoC();
            const config = parseConfig(userConfig);
            checkSingleton();
            const glue = yield PromiseWrap(() => coreFactoryFunction(config, { version: version$1 }), 30000, "Glue Web initialization timed out, because core didn't resolve");
            const logger = glue.logger.subLogger("web.main.controller");
            ioc.defineGlue(glue);
            yield ioc.preferredConnectionController.start(config);
            yield ioc.bridge.start(ioc.controllers);
            ioc.defineConfig(config);
            logger.trace("the bridge has been started, initializing all controllers");
            yield Promise.all(Object.values(ioc.controllers).map((controller) => controller.start(glue, ioc)));
            logger.trace("all controllers reported started, starting all additional libraries");
            yield Promise.all(config.libraries.map((lib) => lib(glue, config)));
            logger.trace("all libraries were started");
            ioc.eventsDispatcher.start(glue);
            logger.trace("start event dispatched, glue is ready, returning it");
            return glue;
        });
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign$1 = function() {
        __assign$1 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$1.apply(this, arguments);
    };

    function __awaiter$1$1(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    var MetricTypes = {
        STRING: 1,
        NUMBER: 2,
        TIMESTAMP: 3,
        OBJECT: 4
    };

    function getMetricTypeByValue(metric) {
        if (metric.type === MetricTypes.TIMESTAMP) {
            return "timestamp";
        }
        else if (metric.type === MetricTypes.NUMBER) {
            return "number";
        }
        else if (metric.type === MetricTypes.STRING) {
            return "string";
        }
        else if (metric.type === MetricTypes.OBJECT) {
            return "object";
        }
        return "unknown";
    }
    function getTypeByValue(value) {
        if (value.constructor === Date) {
            return "timestamp";
        }
        else if (typeof value === "number") {
            return "number";
        }
        else if (typeof value === "string") {
            return "string";
        }
        else if (typeof value === "object") {
            return "object";
        }
        else {
            return "string";
        }
    }
    function serializeMetric(metric) {
        var serializedMetrics = {};
        var type = getMetricTypeByValue(metric);
        if (type === "object") {
            var values = Object.keys(metric.value).reduce(function (memo, key) {
                var innerType = getTypeByValue(metric.value[key]);
                if (innerType === "object") {
                    var composite = defineNestedComposite(metric.value[key]);
                    memo[key] = {
                        type: "object",
                        description: "",
                        context: {},
                        composite: composite,
                    };
                }
                else {
                    memo[key] = {
                        type: innerType,
                        description: "",
                        context: {},
                    };
                }
                return memo;
            }, {});
            serializedMetrics.composite = values;
        }
        serializedMetrics.name = normalizeMetricName(metric.path.join("/") + "/" + metric.name);
        serializedMetrics.type = type;
        serializedMetrics.description = metric.description;
        serializedMetrics.context = {};
        return serializedMetrics;
    }
    function defineNestedComposite(values) {
        return Object.keys(values).reduce(function (memo, key) {
            var type = getTypeByValue(values[key]);
            if (type === "object") {
                memo[key] = {
                    type: "object",
                    description: "",
                    context: {},
                    composite: defineNestedComposite(values[key]),
                };
            }
            else {
                memo[key] = {
                    type: type,
                    description: "",
                    context: {},
                };
            }
            return memo;
        }, {});
    }
    function normalizeMetricName(name) {
        if (typeof name !== "undefined" && name.length > 0 && name[0] !== "/") {
            return "/" + name;
        }
        else {
            return name;
        }
    }
    function getMetricValueByType(metric) {
        var type = getMetricTypeByValue(metric);
        if (type === "timestamp") {
            return Date.now();
        }
        else {
            return publishNestedComposite(metric.value);
        }
    }
    function publishNestedComposite(values) {
        if (typeof values !== "object") {
            return values;
        }
        return Object.keys(values).reduce(function (memo, key) {
            var value = values[key];
            if (typeof value === "object" && value.constructor !== Date) {
                memo[key] = publishNestedComposite(value);
            }
            else if (value.constructor === Date) {
                memo[key] = new Date(value).getTime();
            }
            else if (value.constructor === Boolean) {
                memo[key] = value.toString();
            }
            else {
                memo[key] = value;
            }
            return memo;
        }, {});
    }
    function flatten(arr) {
        return arr.reduce(function (flat, toFlatten) {
            return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);
        }, []);
    }
    function getHighestState(arr) {
        return arr.sort(function (a, b) {
            if (!a.state) {
                return 1;
            }
            if (!b.state) {
                return -1;
            }
            return b.state - a.state;
        })[0];
    }
    function aggregateDescription(arr) {
        var msg = "";
        arr.forEach(function (m, idx, a) {
            var path = m.path.join(".");
            if (idx === a.length - 1) {
                msg += path + "." + m.name + ": " + m.description;
            }
            else {
                msg += path + "." + m.name + ": " + m.description + ",";
            }
        });
        if (msg.length > 100) {
            return msg.slice(0, 100) + "...";
        }
        else {
            return msg;
        }
    }
    function composeMsgForRootStateMetric(system) {
        var aggregatedState = system.root.getAggregateState();
        var merged = flatten(aggregatedState);
        var highestState = getHighestState(merged);
        var aggregateDesc = aggregateDescription(merged);
        return {
            description: aggregateDesc,
            value: highestState.state,
        };
    }

    function gw3 (connection, config) {
        var _this = this;
        if (!connection || typeof connection !== "object") {
            throw new Error("Connection is required parameter");
        }
        var joinPromise;
        var session;
        var init = function (repo) {
            var resolveReadyPromise;
            joinPromise = new Promise(function (resolve) {
                resolveReadyPromise = resolve;
            });
            session = connection.domain("metrics");
            session.onJoined(function (reconnect) {
                if (!reconnect && resolveReadyPromise) {
                    resolveReadyPromise();
                    resolveReadyPromise = undefined;
                }
                var rootStateMetric = {
                    name: "/State",
                    type: "object",
                    composite: {
                        Description: {
                            type: "string",
                            description: "",
                        },
                        Value: {
                            type: "number",
                            description: "",
                        },
                    },
                    description: "System state",
                    context: {},
                };
                var defineRootMetricsMsg = {
                    type: "define",
                    metrics: [rootStateMetric],
                };
                session.send(defineRootMetricsMsg);
                if (reconnect) {
                    replayRepo(repo);
                }
            });
            session.join({
                system: config.system,
                service: config.service,
                instance: config.instance
            });
        };
        var replayRepo = function (repo) {
            replaySystem(repo.root);
        };
        var replaySystem = function (system) {
            createSystem(system);
            system.metrics.forEach(function (m) {
                createMetric(m);
            });
            system.subSystems.forEach(function (ss) {
                replaySystem(ss);
            });
        };
        var createSystem = function (system) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metric, createMetricsMsg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (system.parent === undefined) {
                            return [2];
                        }
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        metric = {
                            name: normalizeMetricName(system.path.join("/") + "/" + system.name + "/State"),
                            type: "object",
                            composite: {
                                Description: {
                                    type: "string",
                                    description: "",
                                },
                                Value: {
                                    type: "number",
                                    description: "",
                                },
                            },
                            description: "System state",
                            context: {},
                        };
                        createMetricsMsg = {
                            type: "define",
                            metrics: [metric],
                        };
                        session.send(createMetricsMsg);
                        return [2];
                }
            });
        }); };
        var updateSystem = function (system, state) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var shadowedUpdateMetric, stateObj, rootMetric;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, joinPromise];
                    case 1:
                        _a.sent();
                        shadowedUpdateMetric = {
                            type: "publish",
                            values: [{
                                    name: normalizeMetricName(system.path.join("/") + "/" + system.name + "/State"),
                                    value: {
                                        Description: state.description,
                                        Value: state.state,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(shadowedUpdateMetric);
                        stateObj = composeMsgForRootStateMetric(system);
                        rootMetric = {
                            type: "publish",
                            peer_id: connection.peerId,
                            values: [{
                                    name: "/State",
                                    value: {
                                        Description: stateObj.description,
                                        Value: stateObj.value,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(rootMetric);
                        return [2];
                }
            });
        }); };
        var createMetric = function (metric) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metricClone, m, createMetricsMsg;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        m = serializeMetric(metricClone);
                        createMetricsMsg = {
                            type: "define",
                            metrics: [m],
                        };
                        session.send(createMetricsMsg);
                        if (typeof metricClone.value !== "undefined") {
                            updateMetricCore(metricClone);
                        }
                        return [2];
                }
            });
        }); };
        var updateMetric = function (metric) { return __awaiter$1$1(_this, void 0, void 0, function () {
            var metricClone;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        updateMetricCore(metricClone);
                        return [2];
                }
            });
        }); };
        var updateMetricCore = function (metric) {
            if (canUpdate()) {
                var value = getMetricValueByType(metric);
                var publishMetricsMsg = {
                    type: "publish",
                    values: [{
                            name: normalizeMetricName(metric.path.join("/") + "/" + metric.name),
                            value: value,
                            timestamp: Date.now(),
                        }],
                };
                return session.sendFireAndForget(publishMetricsMsg);
            }
            return Promise.resolve();
        };
        var cloneMetric = function (metric) {
            var metricClone = __assign$1({}, metric);
            if (typeof metric.value === "object" && metric.value !== null) {
                metricClone.value = __assign$1({}, metric.value);
            }
            return metricClone;
        };
        var canUpdate = function () {
            var _a;
            try {
                var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });
                return func();
            }
            catch (_b) {
                return true;
            }
        };
        return {
            init: init,
            createSystem: createSystem,
            updateSystem: updateSystem,
            createMetric: createMetric,
            updateMetric: updateMetric,
        };
    }

    var Helpers = {
        validate: function (definition, parent, transport) {
            if (definition === null || typeof definition !== "object") {
                throw new Error("Missing definition");
            }
            if (parent === null || typeof parent !== "object") {
                throw new Error("Missing parent");
            }
            if (transport === null || typeof transport !== "object") {
                throw new Error("Missing transport");
            }
        },
    };

    var BaseMetric = (function () {
        function BaseMetric(definition, system, transport, value, type) {
            this.definition = definition;
            this.system = system;
            this.transport = transport;
            this.value = value;
            this.type = type;
            this.path = [];
            Helpers.validate(definition, system, transport);
            this.path = system.path.slice(0);
            this.path.push(system.name);
            this.name = definition.name;
            this.description = definition.description;
            transport.createMetric(this);
        }
        Object.defineProperty(BaseMetric.prototype, "repo", {
            get: function () {
                var _a;
                return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseMetric.prototype, "id", {
            get: function () { return this.system.path + "/" + name; },
            enumerable: true,
            configurable: true
        });
        BaseMetric.prototype.update = function (newValue) {
            this.value = newValue;
            return this.transport.updateMetric(this);
        };
        return BaseMetric;
    }());

    var NumberMetric = (function (_super) {
        __extends(NumberMetric, _super);
        function NumberMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;
        }
        NumberMetric.prototype.incrementBy = function (num) {
            this.update(this.value + num);
        };
        NumberMetric.prototype.increment = function () {
            this.incrementBy(1);
        };
        NumberMetric.prototype.decrement = function () {
            this.incrementBy(-1);
        };
        NumberMetric.prototype.decrementBy = function (num) {
            this.incrementBy(num * -1);
        };
        return NumberMetric;
    }(BaseMetric));

    var ObjectMetric = (function (_super) {
        __extends(ObjectMetric, _super);
        function ObjectMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;
        }
        ObjectMetric.prototype.update = function (newValue) {
            this.mergeValues(newValue);
            return this.transport.updateMetric(this);
        };
        ObjectMetric.prototype.mergeValues = function (values) {
            var _this = this;
            return Object.keys(this.value).forEach(function (k) {
                if (typeof values[k] !== "undefined") {
                    _this.value[k] = values[k];
                }
            });
        };
        return ObjectMetric;
    }(BaseMetric));

    var StringMetric = (function (_super) {
        __extends(StringMetric, _super);
        function StringMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;
        }
        return StringMetric;
    }(BaseMetric));

    var TimestampMetric = (function (_super) {
        __extends(TimestampMetric, _super);
        function TimestampMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;
        }
        TimestampMetric.prototype.now = function () {
            this.update(new Date());
        };
        return TimestampMetric;
    }(BaseMetric));

    function system(name, repo, protocol, parent, description) {
        if (!repo) {
            throw new Error("Repository is required");
        }
        if (!protocol) {
            throw new Error("Transport is required");
        }
        var _transport = protocol;
        var _name = name;
        var _description = description || "";
        var _repo = repo;
        var _parent = parent;
        var _path = _buildPath(parent);
        var _state = {};
        var id = _arrayToString(_path, "/") + name;
        var root = repo.root;
        var _subSystems = [];
        var _metrics = [];
        function subSystem(nameSystem, descriptionSystem) {
            if (!nameSystem || nameSystem.length === 0) {
                throw new Error("name is required");
            }
            var match = _subSystems.filter(function (s) { return s.name === nameSystem; });
            if (match.length > 0) {
                return match[0];
            }
            var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);
            _subSystems.push(_system);
            return _system;
        }
        function setState(state, stateDescription) {
            _state = { state: state, description: stateDescription };
            _transport.updateSystem(me, _state);
        }
        function stringMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });
        }
        function numberMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });
        }
        function objectMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });
        }
        function timestampMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });
        }
        function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {
            var metricDef = { name: "" };
            if (typeof metricObject === "string") {
                metricDef = { name: metricObject };
            }
            else {
                metricDef = metricObject;
            }
            var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });
            if (matching.length > 0) {
                var existing = matching[0];
                if (existing.type !== expectedType) {
                    throw new Error("A metric named " + metricDef.name + " is already defined with different type.");
                }
                if (typeof value !== "undefined") {
                    existing
                        .update(value)
                        .catch(function () { });
                }
                return existing;
            }
            var metric = createMetric(metricDef);
            _metrics.push(metric);
            return metric;
        }
        function _buildPath(shadowedSystem) {
            if (!shadowedSystem || !shadowedSystem.parent) {
                return [];
            }
            var path = _buildPath(shadowedSystem.parent);
            path.push(shadowedSystem.name);
            return path;
        }
        function _arrayToString(path, separator) {
            return ((path && path.length > 0) ? path.join(separator) : "");
        }
        function getAggregateState() {
            var aggState = [];
            if (Object.keys(_state).length > 0) {
                aggState.push({
                    name: _name,
                    path: _path,
                    state: _state.state,
                    description: _state.description,
                });
            }
            _subSystems.forEach(function (shadowedSubSystem) {
                var result = shadowedSubSystem.getAggregateState();
                if (result.length > 0) {
                    aggState.push.apply(aggState, result);
                }
            });
            return aggState;
        }
        var me = {
            get name() {
                return _name;
            },
            get description() {
                return _description;
            },
            get repo() {
                return _repo;
            },
            get parent() {
                return _parent;
            },
            path: _path,
            id: id,
            root: root,
            get subSystems() {
                return _subSystems;
            },
            get metrics() {
                return _metrics;
            },
            subSystem: subSystem,
            getState: function () {
                return _state;
            },
            setState: setState,
            stringMetric: stringMetric,
            timestampMetric: timestampMetric,
            objectMetric: objectMetric,
            numberMetric: numberMetric,
            getAggregateState: getAggregateState,
        };
        _transport.createSystem(me);
        return me;
    }

    var Repository = (function () {
        function Repository(options, protocol) {
            protocol.init(this);
            this.root = system("", this, protocol);
            this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);
        }
        Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {
            if (typeof navigator !== "undefined") {
                rootSystem.stringMetric("UserAgent", navigator.userAgent);
            }
            if (useClickStream && typeof document !== "undefined") {
                var clickStream_1 = rootSystem.subSystem("ClickStream");
                var documentClickHandler = function (e) {
                    var _a;
                    if (!e.target) {
                        return;
                    }
                    var target = e.target;
                    var className = target ? (_a = target.getAttribute("class")) !== null && _a !== void 0 ? _a : "" : "";
                    clickStream_1.objectMetric("LastBrowserEvent", {
                        type: "click",
                        timestamp: new Date(),
                        target: {
                            className: className,
                            id: target.id,
                            type: "<" + target.tagName.toLowerCase() + ">",
                            href: target.href || "",
                        },
                    });
                };
                clickStream_1.objectMetric("Page", {
                    title: document.title,
                    page: window.location.href,
                });
                if (document.addEventListener) {
                    document.addEventListener("click", documentClickHandler);
                }
                else {
                    document.attachEvent("onclick", documentClickHandler);
                }
            }
            var startTime = rootSystem.stringMetric("StartTime", (new Date()).toString());
            var urlMetric = rootSystem.stringMetric("StartURL", "");
            var appNameMetric = rootSystem.stringMetric("AppName", "");
            if (typeof window !== "undefined") {
                if (typeof window.location !== "undefined") {
                    var startUrl = window.location.href;
                    urlMetric.update(startUrl);
                }
                if (typeof window.glue42gd !== "undefined") {
                    appNameMetric.update(window.glue42gd.appName);
                }
            }
        };
        return Repository;
    }());

    var NullProtocol = (function () {
        function NullProtocol() {
        }
        NullProtocol.prototype.init = function (repo) {
        };
        NullProtocol.prototype.createSystem = function (system) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateSystem = function (metric, state) {
            return Promise.resolve();
        };
        NullProtocol.prototype.createMetric = function (metric) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateMetric = function (metric) {
            return Promise.resolve();
        };
        return NullProtocol;
    }());

    var PerfTracker = (function () {
        function PerfTracker(api, initialPublishTimeout, publishInterval) {
            this.api = api;
            this.lastCount = 0;
            this.initialPublishTimeout = 10 * 1000;
            this.publishInterval = 60 * 1000;
            this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;
            this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;
            this.scheduleCollection();
            this.system = this.api.subSystem("performance", "Performance data published by the web application");
        }
        PerfTracker.prototype.scheduleCollection = function () {
            var _this = this;
            setTimeout(function () {
                _this.collect();
                setInterval(function () {
                    _this.collect();
                }, _this.publishInterval);
            }, this.initialPublishTimeout);
        };
        PerfTracker.prototype.collect = function () {
            try {
                this.collectMemory();
                this.collectEntries();
            }
            catch (_a) {
            }
        };
        PerfTracker.prototype.collectMemory = function () {
            var memory = window.performance.memory;
            this.system.stringMetric("memory", JSON.stringify({
                totalJSHeapSize: memory.totalJSHeapSize,
                usedJSHeapSize: memory.usedJSHeapSize
            }));
        };
        PerfTracker.prototype.collectEntries = function () {
            var allEntries = window.performance.getEntries();
            if (allEntries.length <= this.lastCount) {
                return;
            }
            this.lastCount = allEntries.length;
            var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });
            this.system.stringMetric("entries", JSON.stringify(jsonfiedEntries));
        };
        return PerfTracker;
    }());

    var metrics = (function (options) {
        var protocol;
        if (!options.connection || typeof options.connection !== "object") {
            protocol = new NullProtocol();
        }
        else {
            protocol = gw3(options.connection, options);
        }
        var repo = new Repository(options, protocol);
        var rootSystem = repo.root;
        if (!options.disableAutoAppSystem) {
            rootSystem = rootSystem.subSystem("App");
        }
        var api = addFAVSupport(rootSystem);
        initPerf(api, options.pagePerformanceMetrics);
        return api;
    });
    var perf;
    function initPerf(api, config) {
        var _a, _b;
        if (typeof window === "undefined") {
            return;
        }
        var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;
        if (perfConfig) {
            config = perfConfig;
        }
        if (config === null || config === void 0 ? void 0 : config.enabled) {
            perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);
        }
    }
    function addFAVSupport(system) {
        var reportingSystem = system.subSystem("reporting");
        var def = {
            name: "features"
        };
        var featureMetric;
        var featureMetricFunc = function (name, action, payload) {
            if (typeof name === "undefined" || name === "") {
                throw new Error("name is mandatory");
            }
            else if (typeof action === "undefined" || action === "") {
                throw new Error("action is mandatory");
            }
            else if (typeof payload === "undefined" || payload === "") {
                throw new Error("payload is mandatory");
            }
            if (!featureMetric) {
                featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });
            }
            else {
                featureMetric.update({
                    name: name,
                    action: action,
                    payload: payload
                });
            }
        };
        system.featureMetric = featureMetricFunc;
        return system;
    }

    function createRegistry$1(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$1.default = createRegistry$1;
    var lib$2 = createRegistry$1;

    var InProcTransport = (function () {
        function InProcTransport(settings, logger) {
            var _this = this;
            this.registry = lib$2();
            this.gw = settings.facade;
            this.gw.connect(function (_client, message) {
                _this.messageHandler(message);
            }).then(function (client) {
                _this.client = client;
            });
        }
        Object.defineProperty(InProcTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InProcTransport.prototype.sendObject = function (msg) {
            if (this.client) {
                this.client.send(msg);
                return Promise.resolve(undefined);
            }
            else {
                return Promise.reject("not connected");
            }
        };
        InProcTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        InProcTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        InProcTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
            return function () { };
        };
        InProcTransport.prototype.close = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.open = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.name = function () {
            return "in-memory";
        };
        InProcTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return InProcTransport;
    }());

    var SharedWorkerTransport = (function () {
        function SharedWorkerTransport(workerFile, logger) {
            var _this = this;
            this.logger = logger;
            this.registry = lib$2();
            this.worker = new SharedWorker(workerFile);
            this.worker.port.onmessage = function (e) {
                _this.messageHandler(e.data);
            };
        }
        Object.defineProperty(SharedWorkerTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        SharedWorkerTransport.prototype.sendObject = function (msg) {
            this.worker.port.postMessage(msg);
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        SharedWorkerTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
            return function () { };
        };
        SharedWorkerTransport.prototype.close = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.open = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.name = function () {
            return "shared-worker";
        };
        SharedWorkerTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return SharedWorkerTransport;
    }());

    var Utils = (function () {
        function Utils() {
        }
        Utils.getGDMajorVersion = function () {
            if (typeof window === "undefined") {
                return undefined;
            }
            if (!window.glueDesktop) {
                return undefined;
            }
            if (!window.glueDesktop.version) {
                return undefined;
            }
            var ver = Number(window.glueDesktop.version.substr(0, 1));
            return isNaN(ver) ? undefined : ver;
        };
        Utils.isNode = function () {
            if (typeof Utils._isNode !== "undefined") {
                return Utils._isNode;
            }
            if (typeof window !== "undefined") {
                Utils._isNode = false;
                return false;
            }
            try {
                Utils._isNode = Object.prototype.toString.call(global.process) === "[object process]";
            }
            catch (e) {
                Utils._isNode = false;
            }
            return Utils._isNode;
        };
        return Utils;
    }());

    var PromiseWrapper = (function () {
        function PromiseWrapper() {
            var _this = this;
            this.rejected = false;
            this.resolved = false;
            this.promise = new Promise(function (resolve, reject) {
                _this.resolve = function (t) {
                    _this.resolved = true;
                    resolve(t);
                };
                _this.reject = function (err) {
                    _this.rejected = true;
                    reject(err);
                };
            });
        }
        PromiseWrapper.delay = function (time) {
            return new Promise(function (resolve) { return setTimeout(resolve, time); });
        };
        Object.defineProperty(PromiseWrapper.prototype, "ended", {
            get: function () {
                return this.rejected || this.resolved;
            },
            enumerable: true,
            configurable: true
        });
        return PromiseWrapper;
    }());

    var timers = {};
    function getAllTimers() {
        return timers;
    }
    function timer (timerName) {
        var existing = timers[timerName];
        if (existing) {
            return existing;
        }
        var marks = [];
        function now() {
            return new Date().getTime();
        }
        var startTime = now();
        mark("start", startTime);
        var endTime;
        var period;
        function stop() {
            endTime = now();
            mark("end", endTime);
            period = endTime - startTime;
            return period;
        }
        function mark(name, time) {
            var currentTime = time !== null && time !== void 0 ? time : now();
            var diff = 0;
            if (marks.length > 0) {
                diff = currentTime - marks[marks.length - 1].time;
            }
            marks.push({ name: name, time: currentTime, diff: diff });
        }
        var timerObj = {
            get startTime() {
                return startTime;
            },
            get endTime() {
                return endTime;
            },
            get period() {
                return period;
            },
            stop: stop,
            mark: mark,
            marks: marks
        };
        timers[timerName] = timerObj;
        return timerObj;
    }

    var WebSocketConstructor = Utils.isNode() ? require("ws") : window.WebSocket;
    var WS = (function () {
        function WS(settings, logger) {
            this.startupTimer = timer("connection");
            this._running = true;
            this._registry = lib$2();
            this.wsRequests = [];
            this.settings = settings;
            this.logger = logger;
            if (!this.settings.ws) {
                throw new Error("ws is missing");
            }
        }
        WS.prototype.onMessage = function (callback) {
            return this._registry.add("onMessage", callback);
        };
        WS.prototype.send = function (msg, options) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(function () {
                    var _a;
                    try {
                        (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);
                        resolve();
                    }
                    catch (e) {
                        reject(e);
                    }
                }, reject);
            });
        };
        WS.prototype.open = function () {
            var _this = this;
            this.logger.info("opening ws...");
            this._running = true;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(resolve, reject);
            });
        };
        WS.prototype.close = function () {
            this._running = false;
            if (this.ws) {
                this.ws.close();
            }
            return Promise.resolve();
        };
        WS.prototype.onConnectedChanged = function (callback) {
            return this._registry.add("onConnectedChanged", callback);
        };
        WS.prototype.name = function () {
            return this.settings.ws;
        };
        WS.prototype.reconnect = function () {
            var _a;
            (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();
            var pw = new PromiseWrapper();
            this.waitForSocketConnection(function () {
                pw.resolve();
            });
            return pw.promise;
        };
        WS.prototype.waitForSocketConnection = function (callback, failed) {
            var _a;
            failed = failed !== null && failed !== void 0 ? failed : (function () { });
            if (!this._running) {
                failed("wait for socket on " + this.settings.ws + " failed - socket closed by user");
                return;
            }
            if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {
                callback();
                return;
            }
            this.wsRequests.push({ callback: callback, failed: failed });
            if (this.wsRequests.length > 1) {
                return;
            }
            this.openSocket();
        };
        WS.prototype.openSocket = function (retryInterval, retriesLeft) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var _a;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.startupTimer.mark("opening-socket");
                            if (retryInterval === undefined) {
                                retryInterval = this.settings.reconnectInterval;
                            }
                            if (typeof retriesLeft === "undefined") {
                                retriesLeft = this.settings.reconnectAttempts;
                            }
                            if (retriesLeft !== undefined) {
                                if (retriesLeft === 0) {
                                    this.notifyForSocketState("wait for socket on " + this.settings.ws + " failed - no more retries left");
                                    return [2];
                                }
                                this.logger.debug("will retry " + retriesLeft + " more times (every " + retryInterval + " ms)");
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4, this.initiateSocket()];
                        case 2:
                            _b.sent();
                            this.startupTimer.mark("socket-initiated");
                            this.notifyForSocketState();
                            return [3, 4];
                        case 3:
                            _a = _b.sent();
                            setTimeout(function () {
                                var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;
                                _this.openSocket(retryInterval, retries);
                            }, retryInterval);
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        };
        WS.prototype.initiateSocket = function () {
            var _this = this;
            var pw = new PromiseWrapper();
            this.logger.debug("initiating ws to " + this.settings.ws + "...");
            this.ws = new WebSocketConstructor(this.settings.ws || "");
            this.ws.onerror = function (err) {
                var reason = "";
                try {
                    reason = JSON.stringify(err);
                }
                catch (error) {
                    var seen_1 = new WeakSet();
                    var replacer = function (key, value) {
                        if (typeof value === "object" && value !== null) {
                            if (seen_1.has(value)) {
                                return;
                            }
                            seen_1.add(value);
                        }
                        return value;
                    };
                    reason = JSON.stringify(err, replacer);
                }
                pw.reject("error");
                _this.notifyStatusChanged(false, reason);
            };
            this.ws.onclose = function (err) {
                _this.logger.info("ws closed " + err);
                pw.reject("closed");
                _this.notifyStatusChanged(false);
            };
            this.ws.onopen = function () {
                var _a;
                _this.startupTimer.mark("ws-opened");
                _this.logger.info("ws opened " + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));
                pw.resolve();
                _this.notifyStatusChanged(true);
            };
            this.ws.onmessage = function (message) {
                _this._registry.execute("onMessage", message.data);
            };
            return pw.promise;
        };
        WS.prototype.notifyForSocketState = function (error) {
            this.wsRequests.forEach(function (wsRequest) {
                if (error) {
                    if (wsRequest.failed) {
                        wsRequest.failed(error);
                    }
                }
                else {
                    wsRequest.callback();
                }
            });
            this.wsRequests = [];
        };
        WS.prototype.notifyStatusChanged = function (status, reason) {
            this._registry.execute("onConnectedChanged", status, reason);
        };
        return WS;
    }());

    function createCommonjsModule$1(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed$1 = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue$1() {
        seed$1 = (seed$1 * 9301 + 49297) % 233280;
        return seed$1/(233280.0);
    }

    function setSeed$2(_seed_) {
        seed$1 = _seed_;
    }

    var randomFromSeed$1 = {
        nextValue: getNextValue$1,
        seed: setSeed$2
    };

    var ORIGINAL$1 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet$1;
    var previousSeed$1;

    var shuffled$1;

    function reset$1() {
        shuffled$1 = false;
    }

    function setCharacters$1(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet$1 !== ORIGINAL$1) {
                alphabet$1 = ORIGINAL$1;
                reset$1();
            }
            return;
        }

        if (_alphabet_ === alphabet$1) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL$1.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$1.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$1.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet$1 = _alphabet_;
        reset$1();
    }

    function characters$1(_alphabet_) {
        setCharacters$1(_alphabet_);
        return alphabet$1;
    }

    function setSeed$1$1(seed) {
        randomFromSeed$1.seed(seed);
        if (previousSeed$1 !== seed) {
            reset$1();
            previousSeed$1 = seed;
        }
    }

    function shuffle$1() {
        if (!alphabet$1) {
            setCharacters$1(ORIGINAL$1);
        }

        var sourceArray = alphabet$1.split('');
        var targetArray = [];
        var r = randomFromSeed$1.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed$1.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled$1() {
        if (shuffled$1) {
            return shuffled$1;
        }
        shuffled$1 = shuffle$1();
        return shuffled$1;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup$1(index) {
        var alphabetShuffled = getShuffled$1();
        return alphabetShuffled[index];
    }

    var alphabet_1$1 = {
        characters: characters$1,
        seed: setSeed$1$1,
        lookup: lookup$1,
        shuffled: getShuffled$1
    };

    var crypto$1$1 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    function randomByte$1() {
        if (!crypto$1$1 || !crypto$1$1.getRandomValues) {
            return Math.floor(Math.random() * 256) & 0x30;
        }
        var dest = new Uint8Array(1);
        crypto$1$1.getRandomValues(dest);
        return dest[0] & 0x30;
    }

    var randomByteBrowser$1 = randomByte$1;

    function encode(lookup, number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser$1() );
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var encode_1 = encode;

    /**
     * Decode the id to get the version and worker
     * Mainly for debugging and testing.
     * @param id - the shortid-generated id.
     */
    function decode(id) {
        var characters = alphabet_1$1.shuffled();
        return {
            version: characters.indexOf(id.substr(0, 1)) & 0x0f,
            worker: characters.indexOf(id.substr(1, 1)) & 0x0f
        };
    }

    var decode_1 = decode;

    function isShortId$1(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var characters = alphabet_1$1.characters();
        var len = id.length;
        for(var i = 0; i < len;i++) {
            if (characters.indexOf(id[i]) === -1) {
                return false;
            }
        }
        return true;
    }

    var isValid$1 = isShortId$1;

    var lib$1$1 = createCommonjsModule$1(function (module) {






    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1459707606518;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version = 6;

    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {

        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + encode_1(alphabet_1$1.lookup, version);
        str = str + encode_1(alphabet_1$1.lookup, clusterWorkerId);
        if (counter > 0) {
            str = str + encode_1(alphabet_1$1.lookup, counter);
        }
        str = str + encode_1(alphabet_1$1.lookup, seconds);

        return str;
    }


    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1$1.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1$1.characters(newCharacters);
        }

        return alphabet_1$1.shuffled();
    }


    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.decode = decode_1;
    module.exports.isValid = isValid$1;
    });
    var lib_1 = lib$1$1.generate;
    var lib_2 = lib$1$1.seed;
    var lib_3 = lib$1$1.worker;
    var lib_4 = lib$1$1.characters;
    var lib_5 = lib$1$1.decode;
    var lib_6 = lib$1$1.isValid;

    var shortid$1 = lib$1$1;

    function domainSession (domain, connection, logger, successMessages, errorMessages) {
        if (domain == null) {
            domain = "global";
        }
        successMessages = successMessages || ["success"];
        errorMessages = errorMessages || ["error"];
        var isJoined = false;
        var tryReconnecting = false;
        var _latestOptions;
        var _connectionOn = false;
        var callbacks = lib$2();
        connection.disconnected(handleConnectionDisconnected);
        connection.loggedIn(handleConnectionLoggedIn);
        connection.on("success", function (msg) { return handleSuccessMessage(msg); });
        connection.on("error", function (msg) { return handleErrorMessage(msg); });
        connection.on("result", function (msg) { return handleSuccessMessage(msg); });
        if (successMessages) {
            successMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleSuccessMessage(msg); });
            });
        }
        if (errorMessages) {
            errorMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleErrorMessage(msg); });
            });
        }
        var requestsMap = {};
        function join(options) {
            _latestOptions = options;
            return new Promise(function (resolve, reject) {
                if (isJoined) {
                    resolve();
                    return;
                }
                var joinPromise;
                if (domain === "global") {
                    joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject("not connected to gateway");
                }
                else {
                    logger.debug("joining domain " + domain);
                    var joinMsg = {
                        type: "join",
                        destination: domain,
                        domain: "global",
                        options: options,
                    };
                    joinPromise = send(joinMsg);
                }
                joinPromise
                    .then(function () {
                    handleJoined();
                    resolve();
                })
                    .catch(function (err) {
                    logger.debug("error joining " + domain + " domain: " + JSON.stringify(err));
                    reject(err);
                });
            });
        }
        function leave() {
            if (domain === "global") {
                return Promise.resolve();
            }
            logger.debug("stopping session " + domain + "...");
            var leaveMsg = {
                type: "leave",
                destination: domain,
                domain: "global",
            };
            tryReconnecting = false;
            return send(leaveMsg)
                .then(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            })
                .catch(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            });
        }
        function handleJoined() {
            logger.debug("did join " + domain);
            isJoined = true;
            var wasReconnect = tryReconnecting;
            tryReconnecting = false;
            callbacks.execute("onJoined", wasReconnect);
        }
        function handleConnectionDisconnected() {
            _connectionOn = false;
            logger.debug("connection is down");
            isJoined = false;
            tryReconnecting = true;
            callbacks.execute("onLeft", { disconnected: true });
        }
        function handleConnectionLoggedIn() {
            _connectionOn = true;
            if (tryReconnecting) {
                logger.debug("connection is now up - trying to reconnect...");
                join(_latestOptions);
            }
        }
        function onJoined(callback) {
            if (isJoined) {
                callback(false);
            }
            return callbacks.add("onJoined", callback);
        }
        function onLeft(callback) {
            if (!isJoined) {
                callback();
            }
            return callbacks.add("onLeft", callback);
        }
        function handleErrorMessage(msg) {
            if (domain !== msg.domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.error(msg);
        }
        function handleSuccessMessage(msg) {
            if (msg.domain !== domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.success(msg);
        }
        function getNextRequestId() {
            return shortid$1();
        }
        function send(msg, tag, options) {
            options = options || {};
            msg.request_id = msg.request_id || getNextRequestId();
            msg.domain = msg.domain || domain;
            if (!options.skipPeerId) {
                msg.peer_id = connection.peerId;
            }
            var requestId = msg.request_id;
            return new Promise(function (resolve, reject) {
                requestsMap[requestId] = {
                    success: function (successMsg) {
                        delete requestsMap[requestId];
                        successMsg._tag = tag;
                        resolve(successMsg);
                    },
                    error: function (errorMsg) {
                        logger.warn("GW error - " + JSON.stringify(errorMsg) + " for request " + JSON.stringify(msg));
                        delete requestsMap[requestId];
                        errorMsg._tag = tag;
                        reject(errorMsg);
                    },
                };
                connection
                    .send(msg, options)
                    .catch(function (err) {
                    requestsMap[requestId].error({ err: err });
                });
            });
        }
        function sendFireAndForget(msg) {
            msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();
            msg.domain = msg.domain || domain;
            msg.peer_id = connection.peerId;
            return connection.send(msg);
        }
        return {
            join: join,
            leave: leave,
            onJoined: onJoined,
            onLeft: onLeft,
            send: send,
            sendFireAndForget: sendFireAndForget,
            on: function (type, callback) {
                connection.on(type, function (msg) {
                    if (msg.domain !== domain) {
                        return;
                    }
                    try {
                        callback(msg);
                    }
                    catch (e) {
                        logger.error("Callback  failed: " + e + " \n " + e.stack + " \n msg was: " + JSON.stringify(msg), e);
                    }
                });
            },
            loggedIn: function (callback) { return connection.loggedIn(callback); },
            connected: function (callback) { return connection.connected(callback); },
            disconnected: function (callback) { return connection.disconnected(callback); },
            get peerId() {
                return connection.peerId;
            },
            get domain() {
                return domain;
            },
        };
    }

    var GW3ProtocolImpl = (function () {
        function GW3ProtocolImpl(connection, settings, logger) {
            var _this = this;
            this.connection = connection;
            this.settings = settings;
            this.logger = logger;
            this.protocolVersion = 3;
            this.datePrefix = "#T42_DATE#";
            this.datePrefixLen = this.datePrefix.length;
            this.dateMinLen = this.datePrefixLen + 1;
            this.datePrefixFirstChar = this.datePrefix[0];
            this.registry = lib$2();
            this._isLoggedIn = false;
            this.shouldTryLogin = true;
            this.initialLogin = true;
            this.initialLoginAttempts = 3;
            this.sessions = [];
            connection.disconnected(function () {
                _this.handleDisconnected();
            });
            this.ping();
        }
        Object.defineProperty(GW3ProtocolImpl.prototype, "isLoggedIn", {
            get: function () {
                return this._isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        GW3ProtocolImpl.prototype.processStringMessage = function (message) {
            var _this = this;
            var msg = JSON.parse(message, function (key, value) {
                if (typeof value !== "string") {
                    return value;
                }
                if (value.length < _this.dateMinLen) {
                    return value;
                }
                if (value[0] !== _this.datePrefixFirstChar) {
                    return value;
                }
                if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {
                    return value;
                }
                try {
                    var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);
                    if (isNaN(milliseconds)) {
                        return value;
                    }
                    return new Date(milliseconds);
                }
                catch (ex) {
                    return value;
                }
            });
            return {
                msg: msg,
                msgType: msg.type,
            };
        };
        GW3ProtocolImpl.prototype.createStringMessage = function (message) {
            var oldToJson = Date.prototype.toJSON;
            try {
                var datePrefix_1 = this.datePrefix;
                Date.prototype.toJSON = function () {
                    return datePrefix_1 + this.getTime();
                };
                var result = JSON.stringify(message);
                return result;
            }
            finally {
                Date.prototype.toJSON = oldToJson;
            }
        };
        GW3ProtocolImpl.prototype.processObjectMessage = function (message) {
            if (!message.type) {
                throw new Error("Object should have type property");
            }
            return {
                msg: message,
                msgType: message.type,
            };
        };
        GW3ProtocolImpl.prototype.createObjectMessage = function (message) {
            return message;
        };
        GW3ProtocolImpl.prototype.login = function (config, reconnect) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.logger.debug("logging in...");
                            this.loginConfig = config;
                            if (!this.loginConfig) {
                                this.loginConfig = { username: "", password: "" };
                            }
                            this.shouldTryLogin = true;
                            authentication = {};
                            this.connection.gatewayToken = config.gatewayToken;
                            if (!config.gatewayToken) return [3, 5];
                            if (!reconnect) return [3, 4];
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 3, , 4]);
                            return [4, this.getNewGWToken()];
                        case 2:
                            token = _c.sent();
                            config.gatewayToken = token;
                            return [3, 4];
                        case 3:
                            e_1 = _c.sent();
                            this.logger.warn("failed to get GW token when reconnecting " + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));
                            return [3, 4];
                        case 4:
                            authentication.method = "gateway-token";
                            authentication.token = config.gatewayToken;
                            this.connection.gatewayToken = config.gatewayToken;
                            return [3, 10];
                        case 5:
                            if (!(config.flowName === "sspi")) return [3, 9];
                            authentication.provider = "win";
                            authentication.method = "access-token";
                            if (!(config.flowCallback && config.sessionId)) return [3, 7];
                            _a = authentication;
                            return [4, config.flowCallback(config.sessionId, null)];
                        case 6:
                            _a.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            return [3, 8];
                        case 7: throw new Error("Invalid SSPI config");
                        case 8: return [3, 10];
                        case 9:
                            if (config.token) {
                                authentication.method = "access-token";
                                authentication.token = config.token;
                            }
                            else if (config.username) {
                                authentication.method = "secret";
                                authentication.login = config.username;
                                authentication.secret = config.password;
                            }
                            else if (config.provider) {
                                authentication.provider = config.provider;
                                authentication.providerContext = config.providerContext;
                            }
                            else {
                                throw new Error("invalid auth message" + JSON.stringify(config));
                            }
                            _c.label = 10;
                        case 10:
                            helloMsg = {
                                type: "hello",
                                identity: this.settings.identity,
                                authentication: authentication
                            };
                            if (config.sessionId) {
                                helloMsg.request_id = config.sessionId;
                            }
                            this.globalDomain = domainSession("global", this.connection, this.logger.subLogger("global-domain"), [
                                "welcome",
                                "token",
                                "authentication-request"
                            ]);
                            sendOptions = { skipPeerId: true };
                            if (this.initialLogin) {
                                sendOptions.retryInterval = this.settings.reconnectInterval;
                                sendOptions.maxRetries = this.settings.reconnectAttempts;
                            }
                            _c.label = 11;
                        case 11:
                            _c.trys.push([11, 19, 20, 21]);
                            welcomeMsg = void 0;
                            _c.label = 12;
                        case 12:
                            return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];
                        case 13:
                            msg = _c.sent();
                            if (!(msg.type === "authentication-request")) return [3, 16];
                            token = Buffer.from(msg.authentication.token, "base64");
                            if (!(config.flowCallback && config.sessionId)) return [3, 15];
                            _b = helloMsg.authentication;
                            return [4, config.flowCallback(config.sessionId, token)];
                        case 14:
                            _b.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            _c.label = 15;
                        case 15:
                            helloMsg.request_id = config.sessionId;
                            return [3, 12];
                        case 16:
                            if (msg.type === "welcome") {
                                welcomeMsg = msg;
                                return [3, 18];
                            }
                            else if (msg.type === "error") {
                                throw new Error("Authentication failed: " + msg.reason);
                            }
                            else {
                                throw new Error("Unexpected message type during authentication: " + msg.type);
                            }
                        case 17: return [3, 12];
                        case 18:
                            this.initialLogin = false;
                            this.logger.debug("login successful with peerId " + welcomeMsg.peer_id);
                            this.connection.peerId = welcomeMsg.peer_id;
                            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;
                            this.connection.availableDomains = welcomeMsg.available_domains;
                            if (welcomeMsg.options) {
                                this.connection.token = welcomeMsg.options.access_token;
                                this.connection.info = welcomeMsg.options.info;
                            }
                            this.setLoggedIn(true);
                            return [2, welcomeMsg.resolved_identity];
                        case 19:
                            err_1 = _c.sent();
                            this.logger.error("error sending hello message - " + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);
                            throw err_1;
                        case 20:
                            if (config && config.flowCallback && config.sessionId) {
                                config.flowCallback(config.sessionId, null);
                            }
                            return [7];
                        case 21: return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.logout = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var promises;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("logging out...");
                            this.shouldTryLogin = false;
                            if (this.pingTimer) {
                                clearTimeout(this.pingTimer);
                            }
                            promises = this.sessions.map(function (session) {
                                session.leave();
                            });
                            return [4, Promise.all(promises)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.loggedIn = function (callback) {
            if (this._isLoggedIn) {
                callback();
            }
            return this.registry.add("onLoggedIn", callback);
        };
        GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {
            var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];
            if (!session) {
                session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);
                this.sessions.push(session);
            }
            return session;
        };
        GW3ProtocolImpl.prototype.handleDisconnected = function () {
            var _this = this;
            this.setLoggedIn(false);
            var tryToLogin = this.shouldTryLogin;
            if (tryToLogin && this.initialLogin) {
                if (this.initialLoginAttempts <= 0) {
                    return;
                }
                this.initialLoginAttempts--;
            }
            this.logger.debug("disconnected - will try new login?" + this.shouldTryLogin);
            if (this.shouldTryLogin) {
                if (!this.loginConfig) {
                    throw new Error("no login info");
                }
                this.connection.login(this.loginConfig, true)
                    .catch(function () {
                    setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);
                });
            }
        };
        GW3ProtocolImpl.prototype.setLoggedIn = function (value) {
            this._isLoggedIn = value;
            if (this._isLoggedIn) {
                this.registry.execute("onLoggedIn");
            }
        };
        GW3ProtocolImpl.prototype.ping = function () {
            var _this = this;
            if (!this.shouldTryLogin) {
                return;
            }
            if (this._isLoggedIn) {
                this.connection.send({ type: "ping" });
            }
            this.pingTimer = setTimeout(function () {
                _this.ping();
            }, 30 * 1000);
        };
        GW3ProtocolImpl.prototype.authToken = function () {
            var createTokenReq = {
                type: "create-token"
            };
            if (!this.globalDomain) {
                return Promise.reject(new Error("no global domain session"));
            }
            return this.globalDomain.send(createTokenReq)
                .then(function (res) {
                return res.token;
            });
        };
        GW3ProtocolImpl.prototype.getNewGWToken = function () {
            if (typeof window !== undefined) {
                var glue42gd = window.glue42gd;
                if (glue42gd) {
                    return glue42gd.getGWToken();
                }
            }
            return Promise.reject(new Error("not running in GD"));
        };
        return GW3ProtocolImpl;
    }());

    var MessageReplayerImpl = (function () {
        function MessageReplayerImpl(specs) {
            this.specsNames = [];
            this.messages = {};
            this.subs = {};
            this.subsRefCount = {};
            this.specs = {};
            for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
                var spec = specs_1[_i];
                this.specs[spec.name] = spec;
                this.specsNames.push(spec.name);
            }
        }
        MessageReplayerImpl.prototype.init = function (connection) {
            var _this = this;
            this.connection = connection;
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var _loop_1 = function (type) {
                    var refCount = this_1.subsRefCount[type];
                    if (!refCount) {
                        refCount = 0;
                    }
                    refCount += 1;
                    this_1.subsRefCount[type] = refCount;
                    if (refCount > 1) {
                        return "continue";
                    }
                    var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });
                    this_1.subs[type] = sub;
                };
                var this_1 = this;
                for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {
                    var type = _c[_b];
                    _loop_1(type);
                }
            }
        };
        MessageReplayerImpl.prototype.processMessage = function (type, msg) {
            if (this.isDone || !msg) {
                return;
            }
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_2 = _a[_i];
                if (this.specs[name_2].types.indexOf(type) !== -1) {
                    var messages = this.messages[name_2] || [];
                    this.messages[name_2] = messages;
                    messages.push(msg);
                }
            }
        };
        MessageReplayerImpl.prototype.drain = function (name, callback) {
            var _a;
            if (callback) {
                (this.messages[name] || []).forEach(callback);
            }
            delete this.messages[name];
            for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {
                var type = _b[_i];
                this.subsRefCount[type] -= 1;
                if (this.subsRefCount[type] <= 0) {
                    (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);
                    delete this.subs[type];
                    delete this.subsRefCount[type];
                }
            }
            delete this.specs[name];
            if (!this.specs.length) {
                this.isDone = true;
            }
        };
        return MessageReplayerImpl;
    }());

    var PromisePlus$1 = function (executor, timeoutMilliseconds, timeoutMessage) {
        return new Promise(function (resolve, reject) {
            var timeout = setTimeout(function () {
                var message = timeoutMessage || "Promise timeout hit: " + timeoutMilliseconds;
                reject(message);
            }, timeoutMilliseconds);
            var providedPromise = new Promise(executor);
            providedPromise
                .then(function (result) {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch(function (error) {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var WebPlatformTransport = (function () {
        function WebPlatformTransport(settings, logger, identity) {
            this.settings = settings;
            this.logger = logger;
            this.identity = identity;
            this.iAmConnected = false;
            this.parentReady = false;
            this.rejected = false;
            this.children = [];
            this.extContentAvailable = false;
            this.extContentConnecting = false;
            this.extContentConnected = false;
            this.parentInExtMode = false;
            this.webNamespace = "g42_core_web";
            this.parentPingTimeout = 5000;
            this.connectionRequestTimeout = 7000;
            this.defaultTargetString = "*";
            this.registry = lib$2();
            this.messages = {
                connectionAccepted: { name: "connectionAccepted", handle: this.handleConnectionAccepted.bind(this) },
                connectionRejected: { name: "connectionRejected", handle: this.handleConnectionRejected.bind(this) },
                connectionRequest: { name: "connectionRequest", handle: this.handleConnectionRequest.bind(this) },
                parentReady: { name: "parentReady", handle: this.handleParentReady.bind(this) },
                parentPing: { name: "parentPing", handle: this.handleParentPing.bind(this) },
                platformPing: { name: "platformPing", handle: this.handlePlatformPing.bind(this) },
                platformReady: { name: "platformReady", handle: this.handlePlatformReady.bind(this) },
                clientUnload: { name: "clientUnload", handle: this.handleClientUnload.bind(this) },
                manualUnload: { name: "manualUnload", handle: this.handleManualUnload.bind(this) },
                extConnectionResponse: { name: "extConnectionResponse", handle: this.handleExtConnectionResponse.bind(this) },
                extSetupRequest: { name: "extSetupRequest", handle: this.handleExtSetupRequest.bind(this) },
                gatewayDisconnect: { name: "gatewayDisconnect", handle: this.handleGatewayDisconnect.bind(this) },
                gatewayInternalConnect: { name: "gatewayInternalConnect", handle: this.handleGatewayInternalConnect.bind(this) }
            };
            this.extContentAvailable = !!window.glue42ext;
            this.setUpMessageListener();
            this.setUpUnload();
            this.setupPlatformUnloadListener();
            if (!this.settings.port) {
                this.parent = window.opener || window.top;
                this.parentType = window.opener ? "opener" :
                    window.name.indexOf("#wsp") !== -1 ? "workspace" : "top";
            }
        }
        WebPlatformTransport.prototype.manualSetReadyState = function () {
            this.iAmConnected = true;
            this.parentReady = true;
        };
        Object.defineProperty(WebPlatformTransport.prototype, "transportWindowId", {
            get: function () {
                return this.publicWindowId;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WebPlatformTransport.prototype, "communicationId", {
            get: function () {
                return this._communicationId;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.sendObject = function (msg) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    if (this.extContentConnected) {
                        return [2, window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString)];
                    }
                    if (!this.port) {
                        throw new Error("Cannot send message, because the port was not opened yet");
                    }
                    this.port.postMessage(msg);
                    return [2];
                });
            });
        };
        Object.defineProperty(WebPlatformTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        WebPlatformTransport.prototype.send = function () {
            return Promise.reject("not supported");
        };
        WebPlatformTransport.prototype.onConnectedChanged = function (callback) {
            return this.registry.add("onConnectedChanged", callback);
        };
        WebPlatformTransport.prototype.open = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("opening a connection to the web platform gateway.");
                            return [4, this.connect()];
                        case 1:
                            _a.sent();
                            this.notifyStatusChanged(true);
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.close = function () {
            var _a, _b;
            var message = {
                glue42core: {
                    type: this.messages.gatewayDisconnect.name,
                    data: {
                        clientId: this.myClientId,
                        ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                    }
                }
            };
            (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            this.parentReady = false;
            this.notifyStatusChanged(false, "manual reconnection");
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.name = function () {
            return "web-platform";
        };
        WebPlatformTransport.prototype.reconnect = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.close()];
                        case 1:
                            _a.sent();
                            return [2, Promise.resolve()];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.connect = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.settings.port) return [3, 2];
                            return [4, this.initiateInternalConnection()];
                        case 1:
                            _a.sent();
                            this.logger.debug("internal web platform connection completed");
                            return [2];
                        case 2:
                            if (!this.parentType || !this.parent) {
                                throw new Error("Cannot initiate a connection, because there is no opener, no top and no port.");
                            }
                            this.logger.debug("opening a " + (this.parentType === "opener" ? "child" : "grandchild") + " client web platform connection");
                            return [4, this.waitParent(this.parent, this.parentType)];
                        case 3:
                            _a.sent();
                            if (!this.parentInExtMode) return [3, 5];
                            return [4, this.requestConnectionPermissionFromExt()];
                        case 4:
                            _a.sent();
                            _a.label = 5;
                        case 5: return [4, this.initiateRemoteConnection(this.parent, this.parentType)];
                        case 6:
                            _a.sent();
                            this.logger.debug("the " + (this.parentType === "opener" ? "child" : "grandchild") + " client is connected");
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateInternalConnection = function () {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.logger.debug("opening an internal web platform connection");
                _this.port = _this.settings.port;
                if (_this.iAmConnected) {
                    _this.logger.warn("cannot open a new connection, because this client is currently connected");
                    return;
                }
                _this.port.onmessage = function (event) {
                    var _a, _b;
                    if (_this.iAmConnected && !((_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core)) {
                        _this.registry.execute("onMessage", event.data);
                        return;
                    }
                    var data = (_b = event.data) === null || _b === void 0 ? void 0 : _b.glue42core;
                    if (!data) {
                        return;
                    }
                    if (data.type === _this.messages.gatewayInternalConnect.name && data.success) {
                        _this.publicWindowId = _this.settings.windowId;
                        if (_this.identity && _this.publicWindowId) {
                            _this.identity.windowId = _this.publicWindowId;
                            _this.identity.instance = _this.publicWindowId;
                        }
                        resolve();
                    }
                    if (data.type === _this.messages.gatewayInternalConnect.name && data.error) {
                        reject(data.error);
                    }
                };
                _this.port.postMessage({
                    glue42core: {
                        type: _this.messages.gatewayInternalConnect.name
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {
            var _this = this;
            return PromisePlus$1(function (resolve, reject) {
                var _a;
                _this.connectionResolve = resolve;
                _this.connectionReject = reject;
                _this.myClientId = (_a = _this.myClientId) !== null && _a !== void 0 ? _a : shortid$1();
                var bridgeInstanceId = _this.parentType === "workspace" ? window.name.substring(0, window.name.indexOf("#wsp")) : window.name;
                var request = {
                    glue42core: {
                        type: _this.messages.connectionRequest.name,
                        clientId: _this.myClientId,
                        clientType: parentType === "top" || parentType === "workspace" ? "grandChild" : "child",
                        bridgeInstanceId: bridgeInstanceId
                    }
                };
                _this.logger.debug("sending connection request to " + parentType);
                if (_this.extContentConnecting) {
                    request.glue42core.clientType = "child";
                    request.glue42core.bridgeInstanceId = _this.myClientId;
                    request.glue42core.parentWindowId = _this.parentWindowId;
                    return window.postMessage(request, _this.defaultTargetString);
                }
                target.postMessage(request, _this.defaultTargetString);
            }, this.connectionRequestTimeout, "The connection to the opener/top window timed out");
        };
        WebPlatformTransport.prototype.waitParent = function (target, parentType) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var connectionNotPossibleMsg, parentCheck, error_1;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            connectionNotPossibleMsg = "Cannot initiate glue, because this window was not opened or created by a glue client";
                            parentCheck = PromisePlus$1(function (resolve, reject) {
                                var isIframe = window.self !== window.top;
                                if (parentType === "top" && !isIframe) {
                                    return reject(connectionNotPossibleMsg);
                                }
                                _this.parentPingResolve = resolve;
                                var message = {
                                    glue42core: {
                                        type: parentType === "opener" ? _this.messages.platformPing.name : _this.messages.parentPing.name
                                    }
                                };
                                _this.logger.debug("checking for " + parentType + " window availability");
                                _this.parentPingInterval = setInterval(function () {
                                    target.postMessage(message, _this.defaultTargetString);
                                }, 1000);
                            }, this.parentPingTimeout, connectionNotPossibleMsg);
                            parentCheck.catch(function () {
                                if (_this.parentPingInterval) {
                                    clearInterval(_this.parentPingInterval);
                                    delete _this.parentPingInterval;
                                }
                            });
                            if (!this.extContentAvailable) {
                                return [2, parentCheck];
                            }
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 5]);
                            return [4, parentCheck];
                        case 2:
                            _a.sent();
                            return [2];
                        case 3:
                            error_1 = _a.sent();
                            this.logger.debug("the parent check failed, but there is an associated extension content script, requesting permission...");
                            return [4, this.requestConnectionPermissionFromExt()];
                        case 4:
                            _a.sent();
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.setUpMessageListener = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping generic message listener, because this is an internal client");
                return;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || _this.rejected) {
                    return;
                }
                if (!_this.checkMessageTypeValid(data.type)) {
                    _this.logger.error("cannot handle the incoming glue42 core message, because the type is invalid: " + data.type);
                    return;
                }
                var messageType = data.type;
                _this.logger.debug("received valid glue42core message of type: " + messageType);
                _this.messages[messageType].handle(event);
            });
        };
        WebPlatformTransport.prototype.setUpUnload = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping unload event listener, because this is an internal client");
                return;
            }
            window.addEventListener("beforeunload", function () {
                var _a, _b;
                if (_this.extContentConnected) {
                    return;
                }
                var message = {
                    glue42core: {
                        type: _this.messages.clientUnload.name,
                        data: {
                            clientId: _this.myClientId,
                            ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                        }
                    }
                };
                if (_this.parent) {
                    _this.parent.postMessage(message, _this.defaultTargetString);
                }
                (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            });
        };
        WebPlatformTransport.prototype.handleParentReady = function (event) {
            var _a;
            this.logger.debug("handling the ready signal from the parent, by resoling the pending promise.");
            this.parentReady = true;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (data && data.extMode) {
                this.logger.debug("my parent is connected to its content script, fetching windowId and proceeding with content script connection");
                this.parentWindowId = data.extMode.windowId;
                this.parentInExtMode = true;
            }
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
            }
            if (this.parentPingInterval) {
                clearInterval(this.parentPingInterval);
                delete this.parentPingInterval;
            }
        };
        WebPlatformTransport.prototype.handlePlatformReady = function () {
            this.logger.debug("the web platform gave the ready signal");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
            }
            if (this.parentPingInterval) {
                clearInterval(this.parentPingInterval);
                delete this.parentPingInterval;
            }
        };
        WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (this.myClientId === data.clientId) {
                return this.handleAcceptanceOfMyRequest(data);
            }
            return this.handleAcceptanceOfGrandChildRequest(data, event);
        };
        WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {
            var _this = this;
            var _a, _b, _c;
            this.logger.debug("handling a connection accepted signal targeted at me.");
            this.isPreferredActivated = data.isPreferredActivated;
            if (this.extContentConnecting) {
                return this.processExtContentConnection(data);
            }
            if (!data.port) {
                this.logger.error("cannot set up my connection, because I was not provided with a port");
                return;
            }
            this.publicWindowId = this.parentType === "opener" ? window.name :
                this.parentType === "top" ? data.parentWindowId :
                    window.name.substring(0, window.name.indexOf("#wsp"));
            if (this.identity && this.parentType !== "top") {
                this.identity.windowId = (_a = this.identity.windowId) !== null && _a !== void 0 ? _a : this.publicWindowId;
                this.identity.instance = (_b = this.identity.instance) !== null && _b !== void 0 ? _b : this.publicWindowId;
            }
            if (this.identity && this.parentType === "top") {
                this.identity.instance = (_c = this.identity.instance) !== null && _c !== void 0 ? _c : shortid$1();
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            this._communicationId = data.communicationId;
            this.port = data.port;
            this.port.onmessage = function (e) { return _this.registry.execute("onMessage", e.data); };
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
            this.logger.error("unable to call the connection resolve, because no connection promise was found");
        };
        WebPlatformTransport.prototype.processExtContentConnection = function (data) {
            var _this = this;
            this.logger.debug("handling a connection accepted signal targeted at me for extension content connection.");
            this.extContentConnecting = false;
            this.extContentConnected = true;
            this.publicWindowId = this.parentWindowId || this.myClientId;
            if (this.extContentConnecting && this.identity) {
                this.identity.windowId = this.publicWindowId;
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var extData = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42ExtInc;
                if (!extData) {
                    return;
                }
                _this.registry.execute("onMessage", extData);
            });
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
        };
        WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {
            if (this.extContentConnecting || this.extContentConnected) {
                this.logger.debug("cannot process acceptance of a grandchild, because I am connected to a content script");
                return;
            }
            this.logger.debug("handling a connection accepted signal targeted at a grandchild: " + data.clientId);
            var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });
            if (!child) {
                this.logger.error("cannot handle connection accepted for grandchild: " + data.clientId + ", because there is no grandchild with this id");
                return;
            }
            child.connected = true;
            this.logger.debug("the grandchild connection for " + data.clientId + " is set up, forwarding the success message and the gateway port");
            data.parentWindowId = this.publicWindowId;
            child.source.postMessage(event.data, child.origin, [data.port]);
            return;
        };
        WebPlatformTransport.prototype.handleConnectionRejected = function () {
            this.logger.debug("handling a connection rejection. Most likely the reason is that this window was not created by a glue API call");
            if (this.connectionReject) {
                this.connectionReject("The platform connection was rejected. Most likely because this window was not created by a glue API call");
                delete this.connectionReject;
            }
        };
        WebPlatformTransport.prototype.handleConnectionRequest = function (event) {
            if (this.extContentConnecting) {
                this.logger.debug("This connection request event is targeted at the extension content");
                return;
            }
            var source = event.source;
            var data = event.data.glue42core;
            if (!data.clientType || data.clientType !== "grandChild") {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source was not opened by a glue API call");
            }
            if (!data.clientId) {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source did not provide a valid id");
            }
            if (this.parentType !== "opener" || !this.parent) {
                return this.rejectConnectionRequest(source, event.origin, "Cannot forward the connection request, because no direct connection to the platform was found");
            }
            this.logger.debug("handling a connection request for a grandchild: " + data.clientId);
            this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });
            this.logger.debug("grandchild: " + data.clientId + " is prepared, forwarding connection request to the platform");
            this.parent.postMessage(event.data, this.defaultTargetString);
        };
        WebPlatformTransport.prototype.handleParentPing = function (event) {
            if (!this.parentReady) {
                this.logger.debug("my parent is not ready, I am ignoring the parent ping");
                return;
            }
            if (!this.iAmConnected) {
                this.logger.debug("i am not fully connected yet, I am ignoring the parent ping");
                return;
            }
            var message = {
                glue42core: {
                    type: this.messages.parentReady.name
                }
            };
            if (this.extContentConnected) {
                message.glue42core.extMode = { windowId: this.myClientId };
            }
            var source = event.source;
            this.logger.debug("responding to a parent ping with a ready message");
            source.postMessage(message, event.origin);
        };
        WebPlatformTransport.prototype.setupPlatformUnloadListener = function () {
            var _this = this;
            this.onMessage(function (msg) {
                if (msg.type === "platformUnload") {
                    _this.logger.debug("detected a web platform unload");
                    _this.parentReady = false;
                    _this.notifyStatusChanged(false, "Gateway unloaded");
                }
            });
        };
        WebPlatformTransport.prototype.handleManualUnload = function () {
            var _a, _b;
            var message = {
                glue42core: {
                    type: this.messages.clientUnload.name,
                    data: {
                        clientId: this.myClientId,
                        ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                    }
                }
            };
            if (this.extContentConnected) {
                return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);
            }
            (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
        };
        WebPlatformTransport.prototype.handleClientUnload = function (event) {
            var data = event.data.glue42core;
            var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;
            if (!clientId) {
                this.logger.warn("cannot process grand child unload, because the provided id was not valid");
                return;
            }
            var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });
            if (!foundChild) {
                this.logger.warn("cannot process grand child unload, because this client is unaware of this grandchild");
                return;
            }
            this.logger.debug("handling grandchild unload for id: " + clientId);
            this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });
        };
        WebPlatformTransport.prototype.handlePlatformPing = function () {
            this.logger.error("cannot handle platform ping, because this is not a platform calls handling component");
        };
        WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {
            this.iAmConnected = status;
            this.registry.execute("onConnectedChanged", status, reason);
        };
        WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {
            return typeof typeToValidate === "string" && !!this.messages[typeToValidate];
        };
        WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {
            this.rejected = true;
            this.logger.error(reason);
            var rejection = {
                glue42core: {
                    type: this.messages.connectionRejected.name
                }
            };
            source.postMessage(rejection, origin);
        };
        WebPlatformTransport.prototype.requestConnectionPermissionFromExt = function () {
            var _this = this;
            return this.waitForContentScript()
                .then(function () { return PromisePlus$1(function (resolve, reject) {
                _this.extConnectionResolve = resolve;
                _this.extConnectionReject = reject;
                var message = {
                    glue42core: {
                        type: "extSetupRequest"
                    }
                };
                _this.logger.debug("permission request to the extension content script was sent");
                window.postMessage(message, _this.defaultTargetString);
            }, _this.parentPingTimeout, "Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out"); });
        };
        WebPlatformTransport.prototype.handleExtConnectionResponse = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (!data.approved && this.extConnectionReject) {
                return this.extConnectionReject("Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected");
            }
            if (this.extConnectionResolve) {
                this.extContentConnecting = true;
                this.logger.debug("The extension connection was approved, proceeding.");
                this.extConnectionResolve();
                delete this.extConnectionResolve;
            }
        };
        WebPlatformTransport.prototype.handleExtSetupRequest = function () {
            return;
        };
        WebPlatformTransport.prototype.handleGatewayDisconnect = function () {
            return;
        };
        WebPlatformTransport.prototype.handleGatewayInternalConnect = function () {
            return;
        };
        WebPlatformTransport.prototype.waitForContentScript = function () {
            var _a;
            var contentReady = !!((_a = window.glue42ext) === null || _a === void 0 ? void 0 : _a.content);
            if (contentReady) {
                return Promise.resolve();
            }
            return PromisePlus$1(function (resolve) {
                window.addEventListener("Glue42EXTReady", function () {
                    resolve();
                });
            }, this.connectionRequestTimeout, "The content script was available, but was never heard to be ready");
        };
        return WebPlatformTransport;
    }());

    var waitForInvocations = function (invocations, callback) {
        var left = invocations;
        return function () {
            left--;
            if (left === 0) {
                callback();
            }
        };
    };

    var AsyncSequelizer = (function () {
        function AsyncSequelizer(minSequenceInterval) {
            if (minSequenceInterval === void 0) { minSequenceInterval = 0; }
            this.minSequenceInterval = minSequenceInterval;
            this.queue = [];
            this.isExecutingQueue = false;
        }
        AsyncSequelizer.prototype.enqueue = function (action) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.queue.push({ action: action, resolve: resolve, reject: reject });
                _this.executeQueue();
            });
        };
        AsyncSequelizer.prototype.executeQueue = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var operation, actionResult, error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (this.isExecutingQueue) {
                                return [2];
                            }
                            this.isExecutingQueue = true;
                            _a.label = 1;
                        case 1:
                            if (!this.queue.length) return [3, 7];
                            operation = this.queue.shift();
                            if (!operation) {
                                this.isExecutingQueue = false;
                                return [2];
                            }
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            return [4, operation.action()];
                        case 3:
                            actionResult = _a.sent();
                            operation.resolve(actionResult);
                            return [3, 5];
                        case 4:
                            error_1 = _a.sent();
                            operation.reject(error_1);
                            return [3, 5];
                        case 5: return [4, this.intervalBreak()];
                        case 6:
                            _a.sent();
                            return [3, 1];
                        case 7:
                            this.isExecutingQueue = false;
                            return [2];
                    }
                });
            });
        };
        AsyncSequelizer.prototype.intervalBreak = function () {
            var _this = this;
            return new Promise(function (res) { return setTimeout(res, _this.minSequenceInterval); });
        };
        return AsyncSequelizer;
    }());

    var Connection = (function () {
        function Connection(settings, logger) {
            this.settings = settings;
            this.logger = logger;
            this.messageHandlers = {};
            this.ids = 1;
            this.registry = lib$2();
            this._connected = false;
            this.isTrace = false;
            this._swapTransport = false;
            this._switchInProgress = false;
            this._transportSubscriptions = [];
            this._sequelizer = new AsyncSequelizer();
            settings = settings || {};
            settings.reconnectAttempts = settings.reconnectAttempts || 10;
            settings.reconnectInterval = settings.reconnectInterval || 1000;
            if (settings.inproc) {
                this.transport = new InProcTransport(settings.inproc, logger.subLogger("inMemory"));
            }
            else if (settings.sharedWorker) {
                this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger("shared-worker"));
            }
            else if (settings.webPlatform) {
                this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger("web-platform"), settings.identity);
            }
            else if (settings.ws !== undefined) {
                this.transport = new WS(settings, logger.subLogger("ws"));
            }
            else {
                throw new Error("No connection information specified");
            }
            this.isTrace = logger.canPublish("trace");
            logger.debug("starting with " + this.transport.name() + " transport");
            this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger("protocol"));
            var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));
            this._transportSubscriptions.push(unsubConnectionChanged);
            this._transportSubscriptions.push(unsubOnMessage);
            this._defaultTransport = this.transport;
        }
        Object.defineProperty(Connection.prototype, "protocolVersion", {
            get: function () {
                var _a;
                return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.switchTransport = function (settings) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2, this._sequelizer.enqueue(function () { return __awaiter$1$1(_this, void 0, void 0, function () {
                            var switchTargetTransport, verifyPromise, isSwitchSuccess, error_1;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!settings || typeof settings !== "object") {
                                            throw new Error("Cannot switch transports, because the settings are missing or invalid.");
                                        }
                                        if (typeof settings.type === "undefined") {
                                            throw new Error("Cannot switch the transport, because the type is not defined");
                                        }
                                        this.logger.trace("Starting transport switch with settings: " + JSON.stringify(settings));
                                        switchTargetTransport = settings.type === "secondary" ? this.getNewSecondaryTransport(settings) : this._defaultTransport;
                                        this._targetTransport = switchTargetTransport;
                                        this._targetAuth = settings.type === "secondary" ? this.getNewSecondaryAuth(settings) : this._defaultAuth;
                                        verifyPromise = this.verifyConnection();
                                        this._swapTransport = true;
                                        this._switchInProgress = true;
                                        this.logger.trace("The new transport has been set, closing the current transport");
                                        return [4, this.transport.close()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        _a.trys.push([2, 4, , 5]);
                                        return [4, verifyPromise];
                                    case 3:
                                        _a.sent();
                                        isSwitchSuccess = this.transport === switchTargetTransport;
                                        this.logger.info("The reconnection after the switch was completed. Was the switch a success: " + isSwitchSuccess);
                                        this._switchInProgress = false;
                                        return [2, { success: isSwitchSuccess }];
                                    case 4:
                                        error_1 = _a.sent();
                                        this.logger.info("The reconnection after the switch timed out, reverting back to the default transport.");
                                        this.switchTransport({ type: "default" });
                                        this._switchInProgress = false;
                                        return [2, { success: false }];
                                    case 5: return [2];
                                }
                            });
                        }); })];
                });
            });
        };
        Connection.prototype.onLibReAnnounced = function (callback) {
            return this.registry.add("libReAnnounced", callback);
        };
        Connection.prototype.setLibReAnnounced = function (lib) {
            this.registry.execute("libReAnnounced", lib);
        };
        Connection.prototype.send = function (message, options) {
            if (this.transport.sendObject &&
                this.transport.isObjectBasedTransport) {
                var msg = this.protocol.createObjectMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + JSON.stringify(msg));
                }
                return this.transport.sendObject(msg, options);
            }
            else {
                var strMessage = this.protocol.createStringMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + strMessage);
                }
                return this.transport.send(strMessage, options);
            }
        };
        Connection.prototype.on = function (type, messageHandler) {
            type = type.toLowerCase();
            if (this.messageHandlers[type] === undefined) {
                this.messageHandlers[type] = {};
            }
            var id = this.ids++;
            this.messageHandlers[type][id] = messageHandler;
            return {
                type: type,
                id: id,
            };
        };
        Connection.prototype.off = function (info) {
            delete this.messageHandlers[info.type.toLowerCase()][info.id];
        };
        Object.defineProperty(Connection.prototype, "isConnected", {
            get: function () {
                return this.protocol.isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.connected = function (callback) {
            var _this = this;
            return this.protocol.loggedIn(function () {
                var currentServer = _this.transport.name();
                callback(currentServer);
            });
        };
        Connection.prototype.disconnected = function (callback) {
            return this.registry.add("disconnected", callback);
        };
        Connection.prototype.login = function (authRequest, reconnect) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var newAuth, identity, error_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this._defaultAuth) {
                                this._defaultAuth = authRequest;
                            }
                            if (this._swapTransport) {
                                this.logger.trace("Detected a transport swap, swapping transports");
                                newAuth = this.transportSwap();
                                authRequest = newAuth !== null && newAuth !== void 0 ? newAuth : authRequest;
                            }
                            this.logger.trace("Starting login for transport: " + this.transport.name() + " and auth " + JSON.stringify(authRequest));
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 4, , 5]);
                            return [4, this.transport.open()];
                        case 2:
                            _a.sent();
                            this.logger.trace("Transport: " + this.transport.name() + " opened, logging in");
                            timer("connection").mark("transport-opened");
                            return [4, this.protocol.login(authRequest, reconnect)];
                        case 3:
                            identity = _a.sent();
                            this.logger.trace("Logged in with identity: " + JSON.stringify(identity));
                            timer("connection").mark("protocol-logged-in");
                            return [2, identity];
                        case 4:
                            error_2 = _a.sent();
                            if (this._switchInProgress) {
                                this.logger.trace("An error while logging in after a transport swap, preparing a default swap.");
                                this.prepareDefaultSwap();
                            }
                            throw new Error(error_2);
                        case 5: return [2];
                    }
                });
            });
        };
        Connection.prototype.logout = function () {
            return __awaiter$1$1(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.protocol.logout()];
                        case 1:
                            _a.sent();
                            return [4, this.transport.close()];
                        case 2:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Connection.prototype.loggedIn = function (callback) {
            return this.protocol.loggedIn(callback);
        };
        Connection.prototype.domain = function (domain, successMessages, errorMessages) {
            return this.protocol.domain(domain, this.logger.subLogger("domain=" + domain), successMessages, errorMessages);
        };
        Connection.prototype.authToken = function () {
            return this.protocol.authToken();
        };
        Connection.prototype.reconnect = function () {
            return this.transport.reconnect();
        };
        Connection.prototype.distributeMessage = function (message, type) {
            var _this = this;
            var handlers = this.messageHandlers[type.toLowerCase()];
            if (handlers !== undefined) {
                Object.keys(handlers).forEach(function (handlerId) {
                    var handler = handlers[handlerId];
                    if (handler !== undefined) {
                        try {
                            handler(message);
                        }
                        catch (error) {
                            try {
                                _this.logger.error("Message handler failed with " + error.stack, error);
                            }
                            catch (loggerError) {
                                console.log("Message handler failed", error);
                            }
                        }
                    }
                });
            }
        };
        Connection.prototype.handleConnectionChanged = function (connected) {
            if (this._connected === connected) {
                return;
            }
            this._connected = connected;
            if (connected) {
                if (this.settings.replaySpecs && this.settings.replaySpecs.length) {
                    this.replayer = new MessageReplayerImpl(this.settings.replaySpecs);
                    this.replayer.init(this);
                }
                this.registry.execute("connected");
            }
            else {
                this.registry.execute("disconnected");
            }
        };
        Connection.prototype.handleTransportMessage = function (msg) {
            var msgObj;
            if (typeof msg === "string") {
                msgObj = this.protocol.processStringMessage(msg);
            }
            else {
                msgObj = this.protocol.processObjectMessage(msg);
            }
            if (this.isTrace) {
                this.logger.trace("<< " + JSON.stringify(msgObj));
            }
            this.distributeMessage(msgObj.msg, msgObj.msgType);
        };
        Connection.prototype.verifyConnection = function () {
            var _this = this;
            return PromisePlus$1(function (resolve) {
                var unsub;
                var ready = waitForInvocations(2, function () {
                    if (unsub) {
                        unsub();
                    }
                    resolve();
                });
                unsub = _this.onLibReAnnounced(function (lib) {
                    if (lib.name === "interop") {
                        return ready();
                    }
                    if (lib.name === "contexts") {
                        return ready();
                    }
                });
            }, 10000, "Transport switch timed out waiting for all libraries to be re-announced");
        };
        Connection.prototype.getNewSecondaryTransport = function (settings) {
            var _a;
            if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.url)) {
                throw new Error("Missing secondary transport URL.");
            }
            return new WS(Object.assign({}, this.settings, { ws: settings.transportConfig.url, reconnectAttempts: 1 }), this.logger.subLogger("ws-secondary"));
        };
        Connection.prototype.getNewSecondaryAuth = function (settings) {
            var _a;
            if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.auth)) {
                throw new Error("Missing secondary transport auth information.");
            }
            return settings.transportConfig.auth;
        };
        Connection.prototype.transportSwap = function () {
            this._swapTransport = false;
            if (!this._targetTransport || !this._targetAuth) {
                this.logger.warn("Error while switching transports - either the target transport or auth is not defined: transport defined -> " + !!this._defaultTransport + ", auth defined -> " + !!this._targetAuth + ". Staying on the current one.");
                return;
            }
            this._transportSubscriptions.forEach(function (unsub) { return unsub(); });
            this._transportSubscriptions = [];
            this.transport = this._targetTransport;
            var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));
            this._transportSubscriptions.push(unsubConnectionChanged);
            this._transportSubscriptions.push(unsubOnMessage);
            return this._targetAuth;
        };
        Connection.prototype.prepareDefaultSwap = function () {
            var _this = this;
            this._transportSubscriptions.forEach(function (unsub) { return unsub(); });
            this._transportSubscriptions = [];
            this.transport.close().catch(function (error) { return _this.logger.warn("Error closing the " + _this.transport.name() + " transport after a failed connection attempt: " + JSON.stringify(error)); });
            this._targetTransport = this._defaultTransport;
            this._targetAuth = this._defaultAuth;
            this._swapTransport = true;
        };
        return Connection;
    }());

    var order = ["trace", "debug", "info", "warn", "error", "off"];
    var Logger = (function () {
        function Logger(name, parent, logFn) {
            this.name = name;
            this.parent = parent;
            this.subLoggers = [];
            this.logFn = console;
            this.customLogFn = false;
            this.name = name;
            if (parent) {
                this.path = parent.path + "." + name;
            }
            else {
                this.path = name;
            }
            this.loggerFullName = "[" + this.path + "]";
            this.includeTimeAndLevel = !logFn;
            if (logFn) {
                this.logFn = logFn;
                this.customLogFn = true;
            }
        }
        Logger.prototype.subLogger = function (name) {
            var existingSub = this.subLoggers.filter(function (subLogger) {
                return subLogger.name === name;
            })[0];
            if (existingSub !== undefined) {
                return existingSub;
            }
            Object.keys(this).forEach(function (key) {
                if (key === name) {
                    throw new Error("This sub logger name is not allowed.");
                }
            });
            var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);
            this.subLoggers.push(sub);
            return sub;
        };
        Logger.prototype.publishLevel = function (level) {
            var _a;
            if (level) {
                this._publishLevel = level;
            }
            return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());
        };
        Logger.prototype.consoleLevel = function (level) {
            var _a;
            if (level) {
                this._consoleLevel = level;
            }
            return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());
        };
        Logger.prototype.log = function (message, level, error) {
            this.publishMessage(level || "info", message, error);
        };
        Logger.prototype.trace = function (message) {
            this.log(message, "trace");
        };
        Logger.prototype.debug = function (message) {
            this.log(message, "debug");
        };
        Logger.prototype.info = function (message) {
            this.log(message, "info");
        };
        Logger.prototype.warn = function (message) {
            this.log(message, "warn");
        };
        Logger.prototype.error = function (message, err) {
            this.log(message, "error");
        };
        Logger.prototype.canPublish = function (level, compareWith) {
            var levelIdx = order.indexOf(level);
            var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || "trace");
            return levelIdx >= restrictionIdx;
        };
        Logger.prototype.publishMessage = function (level, message, error) {
            var loggerName = this.loggerFullName;
            if (level === "error" && !error) {
                var e = new Error();
                if (e.stack) {
                    message =
                        message +
                            "\n" +
                            e.stack
                                .split("\n")
                                .slice(3)
                                .join("\n");
                }
            }
            if (this.canPublish(level, this.publishLevel())) {
                var interop = Logger.Interop;
                if (interop) {
                    try {
                        if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {
                            interop.invoke(Logger.InteropMethodName, {
                                msg: "" + message,
                                logger: loggerName,
                                level: level
                            });
                        }
                    }
                    catch (_a) {
                    }
                }
            }
            if (this.canPublish(level)) {
                var prefix = "";
                if (this.includeTimeAndLevel) {
                    var date = new Date();
                    var time = date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
                    prefix = "[" + time + "] [" + level + "] ";
                }
                var toPrint = "" + prefix + loggerName + ": " + message;
                switch (level) {
                    case "trace":
                        this.logFn.debug(toPrint);
                        break;
                    case "debug":
                        if (this.logFn.debug) {
                            this.logFn.debug(toPrint);
                        }
                        else {
                            this.logFn.log(toPrint);
                        }
                        break;
                    case "info":
                        this.logFn.info(toPrint);
                        break;
                    case "warn":
                        this.logFn.warn(toPrint);
                        break;
                    case "error":
                        this.logFn.error(toPrint, error);
                        break;
                }
            }
        };
        Logger.InteropMethodName = "T42.AppLogger.Log";
        return Logger;
    }());

    var GW_MESSAGE_CREATE_CONTEXT = "create-context";
    var GW_MESSAGE_ACTIVITY_CREATED = "created";
    var GW_MESSAGE_ACTIVITY_DESTROYED = "destroyed";
    var GW_MESSAGE_CONTEXT_CREATED = "context-created";
    var GW_MESSAGE_CONTEXT_ADDED = "context-added";
    var GW_MESSAGE_SUBSCRIBE_CONTEXT = "subscribe-context";
    var GW_MESSAGE_SUBSCRIBED_CONTEXT = "subscribed-context";
    var GW_MESSAGE_UNSUBSCRIBE_CONTEXT = "unsubscribe-context";
    var GW_MESSAGE_DESTROY_CONTEXT = "destroy-context";
    var GW_MESSAGE_CONTEXT_DESTROYED = "context-destroyed";
    var GW_MESSAGE_UPDATE_CONTEXT = "update-context";
    var GW_MESSAGE_CONTEXT_UPDATED = "context-updated";
    var GW_MESSAGE_JOINED_ACTIVITY = "joined";

    var ContextMessageReplaySpec = {
        get name() {
            return "context";
        },
        get types() {
            return [
                GW_MESSAGE_CREATE_CONTEXT,
                GW_MESSAGE_ACTIVITY_CREATED,
                GW_MESSAGE_ACTIVITY_DESTROYED,
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_CONTEXT_ADDED,
                GW_MESSAGE_SUBSCRIBE_CONTEXT,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_UNSUBSCRIBE_CONTEXT,
                GW_MESSAGE_DESTROY_CONTEXT,
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_UPDATE_CONTEXT,
                GW_MESSAGE_CONTEXT_UPDATED,
                GW_MESSAGE_JOINED_ACTIVITY
            ];
        }
    };

    var version$2 = "5.7.8";

    function prepareConfig (configuration, ext, glue42gd) {
        var _a, _b, _c, _d;
        var nodeStartingContext;
        if (Utils.isNode()) {
            var startingContextString = process.env._GD_STARTING_CONTEXT_;
            if (startingContextString) {
                try {
                    nodeStartingContext = JSON.parse(startingContextString);
                }
                catch (_e) {
                }
            }
        }
        function getConnection() {
            var _a, _b, _c, _d, _e, _f;
            var gwConfig = configuration.gateway;
            var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;
            var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;
            var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;
            var defaultWs = "ws://localhost:8385";
            var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;
            var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;
            var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;
            var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;
            if (glue42gd) {
                ws = glue42gd.gwURL;
            }
            if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {
                ws = nodeStartingContext.gwURL;
            }
            if (!ws && !sharedWorker && !inproc) {
                ws = defaultWs;
            }
            var instanceId;
            var windowId;
            var pid;
            var environment;
            var region;
            var appName = getApplication();
            var uniqueAppName = appName;
            if (typeof glue42gd !== "undefined") {
                windowId = glue42gd.windowId;
                pid = glue42gd.pid;
                if (glue42gd.env) {
                    environment = glue42gd.env.env;
                    region = glue42gd.env.region;
                }
                uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : "glue-app";
                instanceId = glue42gd.appInstanceId;
            }
            else if (Utils.isNode()) {
                pid = process.pid;
                if (nodeStartingContext) {
                    environment = nodeStartingContext.env;
                    region = nodeStartingContext.region;
                    instanceId = nodeStartingContext.instanceId;
                }
            }
            else if (typeof (window === null || window === void 0 ? void 0 : window.glue42electron) !== "undefined") {
                windowId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;
                pid = window === null || window === void 0 ? void 0 : window.glue42electron.pid;
                environment = window === null || window === void 0 ? void 0 : window.glue42electron.env;
                region = window === null || window === void 0 ? void 0 : window.glue42electron.region;
                uniqueAppName = (_d = window === null || window === void 0 ? void 0 : window.glue42electron.application) !== null && _d !== void 0 ? _d : "glue-app";
                instanceId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;
            }
            var replaySpecs = (_f = (_e = configuration.gateway) === null || _e === void 0 ? void 0 : _e.replaySpecs) !== null && _f !== void 0 ? _f : [];
            replaySpecs.push(ContextMessageReplaySpec);
            var identity = {
                application: uniqueAppName,
                applicationName: appName,
                windowId: windowId,
                instance: instanceId,
                process: pid,
                region: region,
                environment: environment,
                api: ext.version || version$2
            };
            if (configuration.identity) {
                identity = Object.assign(identity, configuration.identity);
            }
            return {
                identity: identity,
                reconnectInterval: reconnectInterval,
                ws: ws,
                sharedWorker: sharedWorker,
                webPlatform: webPlatform,
                inproc: inproc,
                protocolVersion: protocolVersion,
                reconnectAttempts: reconnectAttempts,
                replaySpecs: replaySpecs,
            };
        }
        function getContexts() {
            if (typeof configuration.contexts === "undefined") {
                return { reAnnounceKnownContexts: true };
            }
            if (typeof configuration.contexts === "boolean" && configuration.contexts) {
                return { reAnnounceKnownContexts: true };
            }
            if (typeof configuration.contexts === "object") {
                return Object.assign({}, { reAnnounceKnownContexts: true }, configuration.contexts);
            }
            return false;
        }
        function getApplication() {
            if (configuration.application) {
                return configuration.application;
            }
            if (glue42gd) {
                return glue42gd.applicationName;
            }
            if (typeof window !== "undefined" && typeof window.glue42electron !== "undefined") {
                return window.glue42electron.application;
            }
            var uid = shortid$1();
            if (Utils.isNode()) {
                if (nodeStartingContext) {
                    return nodeStartingContext.applicationConfig.name;
                }
                return "NodeJS" + uid;
            }
            if (typeof window !== "undefined" && typeof document !== "undefined") {
                return document.title + (" (" + uid + ")");
            }
            return uid;
        }
        function getAuth() {
            var _a, _b, _c;
            if (typeof configuration.auth === "string") {
                return {
                    token: configuration.auth
                };
            }
            if (configuration.auth) {
                return configuration.auth;
            }
            if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {
                return {
                    gatewayToken: nodeStartingContext.gwToken
                };
            }
            if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {
                return {
                    username: "glue42", password: "glue42"
                };
            }
        }
        function getLogger() {
            var _a, _b;
            var config = configuration.logger;
            var defaultLevel = "warn";
            if (!config) {
                config = defaultLevel;
            }
            var gdConsoleLevel;
            if (glue42gd) {
                gdConsoleLevel = glue42gd.consoleLogLevel;
            }
            if (typeof config === "string") {
                return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };
            }
            return {
                console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,
                publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel
            };
        }
        var connection = getConnection();
        var application = getApplication();
        if (typeof window !== "undefined") {
            var windowAsAny = window;
            var containerApplication = windowAsAny.htmlContainer ?
                windowAsAny.htmlContainer.containerName + "." + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;
            if (containerApplication) {
                application = containerApplication;
            }
        }
        return {
            bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,
            application: application,
            auth: getAuth(),
            logger: getLogger(),
            connection: connection,
            metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,
            contexts: getContexts(),
            version: ext.version || version$2,
            libs: (_d = ext.libs) !== null && _d !== void 0 ? _d : [],
            customLogger: configuration.customLogger
        };
    }

    var GW3ContextData = (function () {
        function GW3ContextData(contextId, name, isAnnounced, activityId) {
            this.updateCallbacks = {};
            this.contextId = contextId;
            this.name = name;
            this.isAnnounced = isAnnounced;
            this.activityId = activityId;
            this.context = {};
        }
        GW3ContextData.prototype.hasCallbacks = function () {
            return Object.keys(this.updateCallbacks).length > 0;
        };
        GW3ContextData.prototype.getState = function () {
            if (this.isAnnounced && this.hasCallbacks()) {
                return 3;
            }
            if (this.isAnnounced) {
                return 2;
            }
            if (this.hasCallbacks()) {
                return 1;
            }
            return 0;
        };
        return GW3ContextData;
    }());

    function applyContextDelta(context, delta, logger) {
        try {
            if (logger === null || logger === void 0 ? void 0 : logger.canPublish("trace")) {
                logger === null || logger === void 0 ? void 0 : logger.trace("applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context));
            }
            if (!delta) {
                return context;
            }
            if (delta.reset) {
                context = __assign$1({}, delta.reset);
                return context;
            }
            context = deepClone(context, undefined);
            if (delta.commands) {
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        deletePath(context, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath(context, command.value, command.path);
                    }
                }
                return context;
            }
            var added_1 = delta.added;
            var updated_1 = delta.updated;
            var removed = delta.removed;
            if (added_1) {
                Object.keys(added_1).forEach(function (key) {
                    context[key] = added_1[key];
                });
            }
            if (updated_1) {
                Object.keys(updated_1).forEach(function (key) {
                    mergeObjectsProperties(key, context, updated_1);
                });
            }
            if (removed) {
                removed.forEach(function (key) {
                    delete context[key];
                });
            }
            return context;
        }
        catch (e) {
            logger === null || logger === void 0 ? void 0 : logger.error("error applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context), e);
            return context;
        }
    }
    function deepClone(obj, hash) {
        hash = hash || new WeakMap();
        if (Object(obj) !== obj) {
            return obj;
        }
        if (obj instanceof Set) {
            return new Set(obj);
        }
        if (hash.has(obj)) {
            return hash.get(obj);
        }
        var result = obj instanceof Date ? new Date(obj)
            : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)
                : obj.constructor ? new obj.constructor()
                    : Object.create(null);
        hash.set(obj, result);
        return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {
            var _a;
            return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);
        })));
    }
    var mergeObjectsProperties = function (key, what, withWhat) {
        var right = withWhat[key];
        if (right === undefined) {
            return what;
        }
        var left = what[key];
        if (!left || !right) {
            what[key] = right;
            return what;
        }
        if (typeof left === "string" ||
            typeof left === "number" ||
            typeof left === "boolean" ||
            typeof right === "string" ||
            typeof right === "number" ||
            typeof right === "boolean" ||
            Array.isArray(left) ||
            Array.isArray(right)) {
            what[key] = right;
            return what;
        }
        what[key] = Object.assign({}, left, right);
        return what;
    };
    function deepEqual(x, y) {
        if (x === y) {
            return true;
        }
        if (!(x instanceof Object) || !(y instanceof Object)) {
            return false;
        }
        if (x.constructor !== y.constructor) {
            return false;
        }
        for (var p in x) {
            if (!x.hasOwnProperty(p)) {
                continue;
            }
            if (!y.hasOwnProperty(p)) {
                return false;
            }
            if (x[p] === y[p]) {
                continue;
            }
            if (typeof (x[p]) !== "object") {
                return false;
            }
            if (!deepEqual(x[p], y[p])) {
                return false;
            }
        }
        for (var p in y) {
            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
                return false;
            }
        }
        return true;
    }
    function setValueToPath(obj, value, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                obj[pathArr[i]] = {};
            }
            if (typeof obj[pathArr[i]] !== "object") {
                obj[pathArr[i]] = {};
            }
            obj = obj[pathArr[i]];
        }
        obj[pathArr[i]] = value;
    }
    function isSubset(superObj, subObj) {
        return Object.keys(subObj).every(function (ele) {
            if (typeof subObj[ele] === "object") {
                return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});
            }
            return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);
        });
    }
    function deletePath(obj, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                return;
            }
            obj = obj[pathArr[i]];
        }
        delete obj[pathArr[i]];
    }

    var GW3Bridge = (function () {
        function GW3Bridge(config) {
            var _this = this;
            var _a;
            this._contextNameToData = {};
            this._gw3Subscriptions = [];
            this._nextCallbackSubscriptionNumber = 0;
            this._contextNameToId = {};
            this._contextIdToName = {};
            this._protocolVersion = undefined;
            this._contextsTempCache = {};
            this._contextsSubscriptionsCache = [];
            this._connection = config.connection;
            this._logger = config.logger;
            this._trackAllContexts = config.trackAllContexts;
            this._reAnnounceKnownContexts = config.reAnnounceKnownContexts;
            this._gw3Session = this._connection.domain("global", [
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_CONTEXT_UPDATED,
            ]);
            this._gw3Session.disconnected(this.resetState.bind(this));
            this._gw3Session.onJoined(function (wasReconnect) {
                if (!wasReconnect) {
                    return;
                }
                if (!_this._reAnnounceKnownContexts) {
                    return _this._connection.setLibReAnnounced({ name: "contexts" });
                }
                _this.reInitiateState().then(function () { return _this._connection.setLibReAnnounced({ name: "contexts" }); });
            });
            this.subscribeToContextCreatedMessages();
            this.subscribeToContextUpdatedMessages();
            this.subscribeToContextDestroyedMessages();
            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {
                var type = message.type;
                if (!type) {
                    return;
                }
                if (type === GW_MESSAGE_CONTEXT_CREATED ||
                    type === GW_MESSAGE_CONTEXT_ADDED ||
                    type === GW_MESSAGE_ACTIVITY_CREATED) {
                    _this.handleContextCreatedMessage(message);
                }
                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||
                    type === GW_MESSAGE_CONTEXT_UPDATED ||
                    type === GW_MESSAGE_JOINED_ACTIVITY) {
                    _this.handleContextUpdatedMessage(message);
                }
                else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||
                    type === GW_MESSAGE_ACTIVITY_DESTROYED) {
                    _this.handleContextDestroyedMessage(message);
                }
            });
        }
        Object.defineProperty(GW3Bridge.prototype, "protocolVersion", {
            get: function () {
                var _a;
                if (!this._protocolVersion) {
                    var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === "context"; });
                    this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;
                }
                return this._protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GW3Bridge.prototype, "setPathSupported", {
            get: function () {
                return this.protocolVersion >= 2;
            },
            enumerable: true,
            configurable: true
        });
        GW3Bridge.prototype.dispose = function () {
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            this._gw3Subscriptions.length = 0;
            for (var contextName in this._contextNameToData) {
                if (this._contextNameToId.hasOwnProperty(contextName)) {
                    delete this._contextNameToData[contextName];
                }
            }
        };
        GW3Bridge.prototype.createContext = function (name, data) {
            var _this = this;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_CREATE_CONTEXT,
                domain: "global",
                name: name,
                data: data,
                lifetime: "retained",
            })
                .then(function (createContextMsg) {
                _this._contextNameToId[name] = createContextMsg.context_id;
                _this._contextIdToName[createContextMsg.context_id] = name;
                var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);
                contextData.isAnnounced = true;
                contextData.name = name;
                contextData.contextId = createContextMsg.context_id;
                contextData.context = createContextMsg.data || data;
                contextData.hasReceivedSnapshot = true;
                _this._contextNameToData[name] = contextData;
                return createContextMsg.context_id;
            });
        };
        GW3Bridge.prototype.all = function () {
            var _this = this;
            return Object.keys(this._contextNameToData)
                .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });
        };
        GW3Bridge.prototype.update = function (name, delta) {
            var _a;
            return __awaiter$1$1(this, void 0, void 0, function () {
                var contextData, currentContext, calculatedDelta;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            contextData = this._contextNameToData[name];
                            if (!contextData || !contextData.isAnnounced) {
                                return [2, this.createContext(name, delta)];
                            }
                            currentContext = contextData.context;
                            if (!!contextData.hasCallbacks()) return [3, 2];
                            return [4, this.get(contextData.name)];
                        case 1:
                            currentContext = _b.sent();
                            _b.label = 2;
                        case 2:
                            calculatedDelta = this.protocolVersion === 2 ?
                                this.calculateContextDeltaV2(currentContext, delta) :
                                this.calculateContextDeltaV1(currentContext, delta);
                            if (!Object.keys(calculatedDelta.added).length
                                && !Object.keys(calculatedDelta.updated).length
                                && !calculatedDelta.removed.length
                                && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {
                                return [2, Promise.resolve()];
                            }
                            return [2, this._gw3Session
                                    .send({
                                    type: GW_MESSAGE_UPDATE_CONTEXT,
                                    domain: "global",
                                    context_id: contextData.contextId,
                                    delta: calculatedDelta,
                                }, {}, { skipPeerId: false })
                                    .then(function (gwResponse) {
                                    _this.handleUpdated(contextData, calculatedDelta, {
                                        updaterId: gwResponse.peer_id
                                    });
                                })];
                    }
                });
            });
        };
        GW3Bridge.prototype.set = function (name, data) {
            var _this = this;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return this.createContext(name, data);
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
                delta: { reset: data },
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.setPath = function (name, path, value) {
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPath operation is not supported, use Glue42 3.10 or later");
            }
            return this.setPaths(name, [{ path: path, value: value }]);
        };
        GW3Bridge.prototype.setPaths = function (name, pathValues) {
            var _this = this;
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later");
            }
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                var obj = {};
                for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {
                    var pathValue = pathValues_1[_i];
                    setValueToPath(obj, pathValue.value, pathValue.path);
                }
                return this.createContext(name, obj);
            }
            var commands = [];
            for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {
                var pathValue = pathValues_2[_a];
                if (pathValue.value === null) {
                    commands.push({ type: "remove", path: pathValue.path });
                }
                else {
                    commands.push({ type: "set", path: pathValue.path, value: pathValue.value });
                }
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
                delta: { commands: commands }
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.get = function (name) {
            var _this = this;
            var _a;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return Promise.resolve({});
            }
            if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {
                return new Promise(function (resolve) {
                    _this.subscribe(name, function (data, _d, _r, un) {
                        _this.unsubscribe(un);
                        resolve(data);
                    });
                });
            }
            var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};
            return Promise.resolve(context);
        };
        GW3Bridge.prototype.subscribe = function (name, callback, subscriptionKey) {
            var _this = this;
            var thisCallbackSubscriptionNumber = typeof subscriptionKey === "undefined" ? this._nextCallbackSubscriptionNumber : subscriptionKey;
            if (typeof subscriptionKey === "undefined") {
                this._nextCallbackSubscriptionNumber += 1;
            }
            if (this._contextsSubscriptionsCache.every(function (subscription) { return subscription.subKey !== _this._nextCallbackSubscriptionNumber; })) {
                this._contextsSubscriptionsCache.push({ contextName: name, subKey: thisCallbackSubscriptionNumber, callback: callback });
            }
            var contextData = this._contextNameToData[name];
            if (!contextData ||
                !contextData.isAnnounced) {
                contextData = contextData || new GW3ContextData(undefined, name, false, undefined);
                this._contextNameToData[name] = contextData;
                contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
            var hadCallbacks = contextData.hasCallbacks();
            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
            if (!hadCallbacks) {
                if (!contextData.joinedActivity) {
                    if (contextData.context && contextData.sentExplicitSubscription) {
                        if (contextData.hasReceivedSnapshot) {
                            var clone = deepClone(contextData.context);
                            callback(clone, clone, [], thisCallbackSubscriptionNumber);
                        }
                        return Promise.resolve(thisCallbackSubscriptionNumber);
                    }
                    return this.sendSubscribe(contextData)
                        .then(function () { return thisCallbackSubscriptionNumber; });
                }
                else {
                    if (contextData.hasReceivedSnapshot) {
                        var clone = deepClone(contextData.context);
                        callback(clone, clone, [], thisCallbackSubscriptionNumber);
                    }
                    return Promise.resolve(thisCallbackSubscriptionNumber);
                }
            }
            else {
                if (contextData.hasReceivedSnapshot) {
                    var clone = deepClone(contextData.context);
                    callback(clone, clone, [], thisCallbackSubscriptionNumber);
                }
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
        };
        GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {
            this._contextsSubscriptionsCache = this._contextsSubscriptionsCache.filter(function (subscription) { return subscription.subKey !== subscriptionKey; });
            for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var contextData = this._contextNameToData[name_1];
                if (!contextData) {
                    return;
                }
                var hadCallbacks = contextData.hasCallbacks();
                delete contextData.updateCallbacks[subscriptionKey];
                if (contextData.isAnnounced &&
                    hadCallbacks &&
                    !contextData.hasCallbacks() &&
                    contextData.sentExplicitSubscription) {
                    this.sendUnsubscribe(contextData);
                }
                if (!contextData.isAnnounced &&
                    !contextData.hasCallbacks()) {
                    delete this._contextNameToData[name_1];
                }
            }
        };
        GW3Bridge.prototype.destroy = function (name) {
            var contextData = this._contextNameToData[name];
            if (!contextData) {
                return Promise.reject("context with " + name + " does not exist");
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_DESTROY_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {
            var oldContext = contextData.context;
            contextData.context = applyContextDelta(contextData.context, delta, this._logger);
            contextData.hasReceivedSnapshot = true;
            if (this._contextNameToData[contextData.name] === contextData &&
                !deepEqual(oldContext, contextData.context)) {
                this.invokeUpdateCallbacks(contextData, delta, extraData);
            }
        };
        GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {
            var createdMessageTypes = [
                GW_MESSAGE_CONTEXT_ADDED,
                GW_MESSAGE_CONTEXT_CREATED,
                GW_MESSAGE_ACTIVITY_CREATED,
            ];
            for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {
                var createdMessageType = createdMessageTypes_1[_i];
                var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {
            var _this = this;
            var createdMessageType = contextCreatedMsg.type;
            if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {
                this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;
            }
            else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {
                this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;
            }
            var name = this._contextIdToName[contextCreatedMsg.context_id];
            if (!name) {
                throw new Error("Received created event for context with unknown name: " + contextCreatedMsg.context_id);
            }
            if (!this._contextNameToId[name]) {
                throw new Error("Received created event for context with unknown id: " + contextCreatedMsg.context_id);
            }
            var contextData = this._contextNameToData[name];
            if (contextData) {
                if (contextData.isAnnounced) {
                    return;
                }
                else {
                    if (!contextData.hasCallbacks()) {
                        throw new Error("Assertion failure: contextData.hasCallbacks()");
                    }
                    contextData.isAnnounced = true;
                    contextData.contextId = contextCreatedMsg.context_id;
                    contextData.activityId = contextCreatedMsg.activity_id;
                    if (!contextData.sentExplicitSubscription) {
                        this.sendSubscribe(contextData);
                    }
                }
            }
            else {
                this._contextNameToData[name] = contextData =
                    new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);
                if (this._trackAllContexts) {
                    this.subscribe(name, function () { }).then(function (subKey) { return _this._systemContextsSubKey = subKey; });
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {
            var updatedMessageTypes = [
                GW_MESSAGE_CONTEXT_UPDATED,
                GW_MESSAGE_SUBSCRIBED_CONTEXT,
                GW_MESSAGE_JOINED_ACTIVITY,
            ];
            for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {
                var updatedMessageType = updatedMessageTypes_1[_i];
                var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {
            var updatedMessageType = contextUpdatedMsg.type;
            var contextId = contextUpdatedMsg.context_id;
            var contextData = this._contextNameToData[this._contextIdToName[contextId]];
            var justSeen = !contextData || !contextData.isAnnounced;
            if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {
                if (!contextData) {
                    contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);
                    this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;
                    this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;
                    this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;
                }
                else {
                    contextData.contextId = contextId;
                    contextData.isAnnounced = true;
                    contextData.activityId = contextUpdatedMsg.activity_id;
                }
                contextData.joinedActivity = true;
            }
            else {
                if (!contextData || !contextData.isAnnounced) {
                    if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                        contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);
                        contextData.sentExplicitSubscription = true;
                        this._contextNameToData[contextUpdatedMsg.name] = contextData;
                        this._contextIdToName[contextId] = contextUpdatedMsg.name;
                        this._contextNameToId[contextUpdatedMsg.name] = contextId;
                    }
                    else {
                        this._logger.error("Received 'update' for unknown context: " + contextId);
                    }
                    return;
                }
            }
            var oldContext = contextData.context;
            contextData.hasReceivedSnapshot = true;
            if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                contextData.context = contextUpdatedMsg.data || {};
            }
            else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {
                contextData.context = contextUpdatedMsg.context_snapshot || {};
            }
            else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {
                contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);
            }
            else {
                throw new Error("Unrecognized context update message " + updatedMessageType);
            }
            if (justSeen ||
                !deepEqual(contextData.context, oldContext) ||
                updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {
                this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });
            }
        };
        GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {
            delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };
            if (delta.commands) {
                delta.added = delta.updated = delta.reset = {};
                delta.removed = [];
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        if (command.path.indexOf(".") === -1) {
                            delta.removed.push(command.path);
                        }
                        setValueToPath(delta.updated, null, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath(delta.updated, command.value, command.path);
                    }
                }
            }
            for (var updateCallbackIndex in contextData.updateCallbacks) {
                if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {
                    try {
                        var updateCallback = contextData.updateCallbacks[updateCallbackIndex];
                        updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);
                    }
                    catch (err) {
                        this._logger.debug("callback error: " + JSON.stringify(err));
                    }
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {
            var destroyedMessageTypes = [
                GW_MESSAGE_CONTEXT_DESTROYED,
                GW_MESSAGE_ACTIVITY_DESTROYED,
            ];
            for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {
                var destroyedMessageType = destroyedMessageTypes_1[_i];
                var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {
            var destroyedMessageType = destroyedMsg.type;
            var contextId;
            var name;
            if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {
                name = destroyedMsg.activity_id;
                contextId = this._contextNameToId[name];
                if (!contextId) {
                    this._logger.error("Received 'destroyed' for unknown activity: " + destroyedMsg.activity_id);
                    return;
                }
            }
            else {
                contextId = destroyedMsg.context_id;
                name = this._contextIdToName[contextId];
                if (!name) {
                    this._logger.error("Received 'destroyed' for unknown context: " + destroyedMsg.context_id);
                    return;
                }
            }
            delete this._contextIdToName[contextId];
            delete this._contextNameToId[name];
            var contextData = this._contextNameToData[name];
            delete this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                this._logger.error("Received 'destroyed' for unknown context: " + contextId);
                return;
            }
        };
        GW3Bridge.prototype.sendSubscribe = function (contextData) {
            contextData.sentExplicitSubscription = true;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_SUBSCRIBE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.sendUnsubscribe = function (contextData) {
            contextData.sentExplicitSubscription = false;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {
            var delta = { added: {}, updated: {}, removed: [], reset: undefined };
            if (from) {
                for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {
                    var x = _a[_i];
                    if (Object.keys(to).indexOf(x) !== -1
                        && to[x] !== null
                        && !deepEqual(from[x], to[x])) {
                        delta.updated[x] = to[x];
                    }
                }
            }
            for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {
                var x = _c[_b];
                if (!from || (Object.keys(from).indexOf(x) === -1)) {
                    if (to[x] !== null) {
                        delta.added[x] = to[x];
                    }
                }
                else if (to[x] === null) {
                    delta.removed.push(x);
                }
            }
            return delta;
        };
        GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {
            var _a, _b;
            var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };
            for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {
                var x = _c[_i];
                if (to[x] !== null) {
                    var fromX = from ? from[x] : null;
                    if (!deepEqual(fromX, to[x])) {
                        (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: "set", path: x, value: to[x] });
                    }
                }
                else {
                    (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: "remove", path: x });
                }
            }
            return delta;
        };
        GW3Bridge.prototype.resetState = function () {
            var _this = this;
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            if (this._systemContextsSubKey) {
                this.unsubscribe(this._systemContextsSubKey);
                delete this._systemContextsSubKey;
            }
            this._gw3Subscriptions = [];
            this._contextNameToId = {};
            this._contextIdToName = {};
            delete this._protocolVersion;
            this._contextsTempCache = Object.keys(this._contextNameToData).reduce(function (cacheSoFar, ctxName) {
                cacheSoFar[ctxName] = _this._contextNameToData[ctxName].context;
                return cacheSoFar;
            }, {});
            this._contextNameToData = {};
        };
        GW3Bridge.prototype.reInitiateState = function () {
            var _a;
            return __awaiter$1$1(this, void 0, void 0, function () {
                var _b, _c, _i, ctxName, lastKnownData;
                var _this = this;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            this.subscribeToContextCreatedMessages();
                            this.subscribeToContextUpdatedMessages();
                            this.subscribeToContextDestroyedMessages();
                            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {
                                var type = message.type;
                                if (!type) {
                                    return;
                                }
                                if (type === GW_MESSAGE_CONTEXT_CREATED ||
                                    type === GW_MESSAGE_CONTEXT_ADDED ||
                                    type === GW_MESSAGE_ACTIVITY_CREATED) {
                                    _this.handleContextCreatedMessage(message);
                                }
                                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||
                                    type === GW_MESSAGE_CONTEXT_UPDATED ||
                                    type === GW_MESSAGE_JOINED_ACTIVITY) {
                                    _this.handleContextUpdatedMessage(message);
                                }
                                else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||
                                    type === GW_MESSAGE_ACTIVITY_DESTROYED) {
                                    _this.handleContextDestroyedMessage(message);
                                }
                            });
                            return [4, Promise.all(this._contextsSubscriptionsCache.map(function (subscription) { return _this.subscribe(subscription.contextName, subscription.callback, subscription.subKey); }))];
                        case 1:
                            _e.sent();
                            return [4, this.flushQueue()];
                        case 2:
                            _e.sent();
                            _b = [];
                            for (_c in this._contextsTempCache)
                                _b.push(_c);
                            _i = 0;
                            _e.label = 3;
                        case 3:
                            if (!(_i < _b.length)) return [3, 7];
                            ctxName = _b[_i];
                            if (typeof this._contextsTempCache[ctxName] !== "object" || Object.keys(this._contextsTempCache[ctxName]).length === 0) {
                                return [3, 6];
                            }
                            lastKnownData = this._contextsTempCache[ctxName];
                            this._logger.info("Re-announcing known context: " + ctxName);
                            return [4, this.flushQueue()];
                        case 4:
                            _e.sent();
                            return [4, this.update(ctxName, lastKnownData)];
                        case 5:
                            _e.sent();
                            _e.label = 6;
                        case 6:
                            _i++;
                            return [3, 3];
                        case 7:
                            this._contextsTempCache = {};
                            this._logger.info("Contexts are re-announced");
                            return [2];
                    }
                });
            });
        };
        GW3Bridge.prototype.flushQueue = function () {
            return new Promise(function (resolve) { return setTimeout(function () { return resolve(); }, 0); });
        };
        return GW3Bridge;
    }());

    var ContextsModule = (function () {
        function ContextsModule(config) {
            this._bridge = new GW3Bridge(config);
        }
        ContextsModule.prototype.all = function () {
            return this._bridge.all();
        };
        ContextsModule.prototype.update = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.update(name, data);
        };
        ContextsModule.prototype.set = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.set(name, data);
        };
        ContextsModule.prototype.setPath = function (name, path, data) {
            this.checkName(name);
            this.checkPath(path);
            var isTopLevelPath = path === "";
            if (isTopLevelPath) {
                this.checkData(data);
                return this.set(name, data);
            }
            return this._bridge.setPath(name, path, data);
        };
        ContextsModule.prototype.setPaths = function (name, paths) {
            this.checkName(name);
            if (!Array.isArray(paths)) {
                throw new Error("Please provide the paths as an array of PathValues!");
            }
            for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {
                var _a = paths_1[_i], path = _a.path, value = _a.value;
                this.checkPath(path);
                var isTopLevelPath = path === "";
                if (isTopLevelPath) {
                    this.checkData(value);
                }
            }
            return this._bridge.setPaths(name, paths);
        };
        ContextsModule.prototype.subscribe = function (name, callback) {
            var _this = this;
            this.checkName(name);
            if (typeof callback !== "function") {
                throw new Error("Please provide the callback as a function!");
            }
            return this._bridge
                .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })
                .then(function (key) {
                return function () {
                    _this._bridge.unsubscribe(key);
                };
            });
        };
        ContextsModule.prototype.get = function (name) {
            this.checkName(name);
            return this._bridge.get(name);
        };
        ContextsModule.prototype.ready = function () {
            return Promise.resolve(this);
        };
        ContextsModule.prototype.destroy = function (name) {
            this.checkName(name);
            return this._bridge.destroy(name);
        };
        Object.defineProperty(ContextsModule.prototype, "setPathSupported", {
            get: function () {
                return this._bridge.setPathSupported;
            },
            enumerable: true,
            configurable: true
        });
        ContextsModule.prototype.checkName = function (name) {
            if (typeof name !== "string" || name === "") {
                throw new Error("Please provide the name as a non-empty string!");
            }
        };
        ContextsModule.prototype.checkPath = function (path) {
            if (typeof path !== "string") {
                throw new Error("Please provide the path as a dot delimited string!");
            }
        };
        ContextsModule.prototype.checkData = function (data) {
            if (typeof data !== "object") {
                throw new Error("Please provide the data as an object!");
            }
        };
        return ContextsModule;
    }());

    function promisify (promise, successCallback, errorCallback) {
        if (typeof successCallback !== "function" && typeof errorCallback !== "function") {
            return promise;
        }
        if (typeof successCallback !== "function") {
            successCallback = function () { };
        }
        else if (typeof errorCallback !== "function") {
            errorCallback = function () { };
        }
        return promise.then(successCallback, errorCallback);
    }

    function rejectAfter(ms, promise, error) {
        if (ms === void 0) { ms = 0; }
        var timeout;
        var clearTimeoutIfThere = function () {
            if (timeout) {
                clearTimeout(timeout);
            }
        };
        promise
            .then(function () {
            clearTimeoutIfThere();
        })
            .catch(function () {
            clearTimeoutIfThere();
        });
        return new Promise(function (resolve, reject) {
            timeout = setTimeout(function () { return reject(error); }, ms);
        });
    }

    var InvokeStatus;
    (function (InvokeStatus) {
        InvokeStatus[InvokeStatus["Success"] = 0] = "Success";
        InvokeStatus[InvokeStatus["Error"] = 1] = "Error";
    })(InvokeStatus || (InvokeStatus = {}));
    var Client = (function () {
        function Client(protocol, repo, instance, configuration) {
            this.protocol = protocol;
            this.repo = repo;
            this.instance = instance;
            this.configuration = configuration;
        }
        Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {
            var _this = this;
            var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {
                var _a;
                options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;
                _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);
            };
            var promise = new Promise(function (resolve, reject) {
                var successProxy = function (sub) {
                    resolve(sub);
                };
                var errorProxy = function (err) {
                    reject(err);
                };
                if (!method) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                var methodDef;
                if (typeof method === "string") {
                    methodDef = { name: method };
                }
                else {
                    methodDef = method;
                }
                if (!methodDef.name) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                if (options === undefined) {
                    options = {};
                }
                var target = options.target;
                if (target === undefined) {
                    target = "best";
                }
                if (typeof target === "string" && target !== "all" && target !== "best") {
                    reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\", \"best\", or an instance."));
                    return;
                }
                if (options.methodResponseTimeout === undefined) {
                    options.methodResponseTimeout = options.method_response_timeout;
                    if (options.methodResponseTimeout === undefined) {
                        options.methodResponseTimeout = _this.configuration.methodResponseTimeout;
                    }
                }
                if (options.waitTimeoutMs === undefined) {
                    options.waitTimeoutMs = options.wait_for_method_timeout;
                    if (options.waitTimeoutMs === undefined) {
                        options.waitTimeoutMs = _this.configuration.waitTimeoutMs;
                    }
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                if (currentServers.length > 0) {
                    callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);
                }
                else {
                    var retry_1 = function () {
                        if (!target || !(options.waitTimeoutMs)) {
                            return;
                        }
                        delayTillNow += delayStep;
                        currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                        if (currentServers.length > 0) {
                            var streamInfo = currentServers[0].methods[0];
                            callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);
                        }
                        else if (delayTillNow >= options.waitTimeoutMs) {
                            var def = typeof method === "string" ? { name: method } : method;
                            callProtocolSubscribe(currentServers, def, successProxy, errorProxy);
                        }
                        else {
                            setTimeout(retry_1, delayStep);
                        }
                    };
                    setTimeout(retry_1, delayStep);
                }
            });
            return promisify(promise, successCallback, errorCallback);
        };
        Client.prototype.servers = function (methodFilter) {
            var filterCopy = methodFilter === undefined
                ? undefined
                : __assign$1({}, methodFilter);
            return this.getServers(filterCopy).map(function (serverMethodMap) {
                return serverMethodMap.server.instance;
            });
        };
        Client.prototype.methods = function (methodFilter) {
            if (typeof methodFilter === "string") {
                methodFilter = { name: methodFilter };
            }
            else {
                methodFilter = __assign$1({}, methodFilter);
            }
            return this.getMethods(methodFilter);
        };
        Client.prototype.methodsForInstance = function (instance) {
            return this.getMethodsForInstance(instance);
        };
        Client.prototype.methodAdded = function (callback) {
            return this.repo.onMethodAdded(callback);
        };
        Client.prototype.methodRemoved = function (callback) {
            return this.repo.onMethodRemoved(callback);
        };
        Client.prototype.serverAdded = function (callback) {
            return this.repo.onServerAdded(callback);
        };
        Client.prototype.serverRemoved = function (callback) {
            return this.repo.onServerRemoved(function (server, reason) {
                callback(server, reason);
            });
        };
        Client.prototype.serverMethodAdded = function (callback) {
            return this.repo.onServerMethodAdded(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.serverMethodRemoved = function (callback) {
            return this.repo.onServerMethodRemoved(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var getInvokePromise;
                var _this = this;
                return __generator(this, function (_a) {
                    getInvokePromise = function () { return __awaiter$1$1(_this, void 0, void 0, function () {
                        var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;
                        var _this = this;
                        var _a, _b, _c;
                        return __generator(this, function (_d) {
                            switch (_d.label) {
                                case 0:
                                    if (typeof methodFilter === "string") {
                                        methodDefinition = { name: methodFilter };
                                    }
                                    else {
                                        methodDefinition = __assign$1({}, methodFilter);
                                    }
                                    if (!methodDefinition.name) {
                                        return [2, Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.")];
                                    }
                                    if (!argumentObj) {
                                        argumentObj = {};
                                    }
                                    if (!target) {
                                        target = "best";
                                    }
                                    if (typeof target === "string" && target !== "all" && target !== "best" && target !== "skipMine") {
                                        return [2, Promise.reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\" and \"best\"."))];
                                    }
                                    if (!additionalOptions) {
                                        additionalOptions = {};
                                    }
                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                        additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;
                                        if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                            additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs === undefined) {
                                        additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;
                                        if (additionalOptions.waitTimeoutMs === undefined) {
                                            additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== "number") {
                                        return [2, Promise.reject(new Error("\"" + additionalOptions.waitTimeoutMs + "\" is not a valid number for \"waitTimeoutMs\" "))];
                                    }
                                    if (typeof argumentObj !== "object") {
                                        return [2, Promise.reject(new Error("The method arguments must be an object. method: " + methodDefinition.name))];
                                    }
                                    serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                                    if (!(serversMethodMap.length === 0)) return [3, 4];
                                    _d.label = 1;
                                case 1:
                                    _d.trys.push([1, 3, , 4]);
                                    return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];
                                case 2:
                                    serversMethodMap = _d.sent();
                                    return [3, 4];
                                case 3:
                                    err_1 = _d.sent();
                                    method = __assign$1(__assign$1({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });
                                    errorObj = {
                                        method: method,
                                        called_with: argumentObj,
                                        message: "Can not find a method matching " + JSON.stringify(methodFilter) + " with server filter " + JSON.stringify(target),
                                        executed_by: undefined,
                                        returned: undefined,
                                        status: undefined,
                                    };
                                    return [2, Promise.reject(errorObj)];
                                case 4:
                                    timeout = additionalOptions.methodResponseTimeoutMs;
                                    additionalOptionsCopy = additionalOptions;
                                    invokePromises = serversMethodMap.map(function (serversMethodPair) {
                                        var invId = shortid$1();
                                        var method = serversMethodPair.methods[0];
                                        var server = serversMethodPair.server;
                                        var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);
                                        return Promise.race([
                                            invokePromise,
                                            rejectAfter(timeout, invokePromise, {
                                                invocationId: invId,
                                                message: "Invocation timeout (" + timeout + " ms) reached for method name: " + (method === null || method === void 0 ? void 0 : method.name) + ", target instance: " + JSON.stringify(server.instance) + ", options: " + JSON.stringify(additionalOptionsCopy),
                                                status: InvokeStatus.Error,
                                            })
                                        ]);
                                    });
                                    return [4, Promise.all(invokePromises)];
                                case 5:
                                    invocationMessages = _d.sent();
                                    results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);
                                    allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });
                                    if (allRejected) {
                                        return [2, Promise.reject(results)];
                                    }
                                    return [2, results];
                            }
                        });
                    }); };
                    return [2, promisify(getInvokePromise(), success, error)];
                });
            });
        };
        Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {
            var all_return_values = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })
                .reduce(function (allValues, currentValue) {
                allValues = __spreadArrays(allValues, [
                    {
                        executed_by: currentValue.instance,
                        returned: currentValue.result,
                        called_with: calledWith,
                        method: method,
                        message: currentValue.message,
                        status: currentValue.status,
                    }
                ]);
                return allValues;
            }, []);
            var all_errors = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })
                .reduce(function (allErrors, currError) {
                allErrors = __spreadArrays(allErrors, [
                    {
                        executed_by: currError.instance,
                        called_with: calledWith,
                        name: method.name,
                        message: currError.message,
                    }
                ]);
                return allErrors;
            }, []);
            var invResult = invocationResults[0];
            var result = {
                method: method,
                called_with: calledWith,
                returned: invResult.result,
                executed_by: invResult.instance,
                all_return_values: all_return_values,
                all_errors: all_errors,
                message: invResult.message,
                status: invResult.status
            };
            return result;
        };
        Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (additionalOptions.waitTimeoutMs === 0) {
                    reject();
                    return;
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var retry = function () {
                    delayTillNow += delayStep;
                    var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                    if (serversMethodMap.length > 0) {
                        clearInterval(interval);
                        resolve(serversMethodMap);
                    }
                    else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {
                        clearInterval(interval);
                        reject();
                        return;
                    }
                };
                var interval = setInterval(retry, delayStep);
            });
        };
        Client.prototype.filterByTarget = function (target, serverMethodMap) {
            var _this = this;
            if (typeof target === "string") {
                if (target === "all") {
                    return __spreadArrays(serverMethodMap);
                }
                else if (target === "best") {
                    var localMachine = serverMethodMap
                        .find(function (s) { return s.server.instance.isLocal; });
                    if (localMachine) {
                        return [localMachine];
                    }
                    if (serverMethodMap[0] !== undefined) {
                        return [serverMethodMap[0]];
                    }
                }
                else if (target === "skipMine") {
                    return serverMethodMap.filter(function (_a) {
                        var server = _a.server;
                        return server.instance.peerId !== _this.instance.peerId;
                    });
                }
            }
            else {
                var targetArray = void 0;
                if (!Array.isArray(target)) {
                    targetArray = [target];
                }
                else {
                    targetArray = target;
                }
                var allServersMatching = targetArray.reduce(function (matches, filter) {
                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {
                        return _this.instanceMatch(filter, serverMethodPair.server.instance);
                    });
                    return matches.concat(myMatches);
                }, []);
                return allServersMatching;
            }
            return [];
        };
        Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {
            return this.containsProps(instanceFilter, instanceDefinition);
        };
        Client.prototype.methodMatch = function (methodFilter, methodDefinition) {
            return this.containsProps(methodFilter, methodDefinition);
        };
        Client.prototype.containsProps = function (filter, repoMethod) {
            var filterProps = Object.keys(filter)
                .filter(function (prop) {
                return filter[prop] !== undefined
                    && filter[prop] !== null
                    && typeof filter[prop] !== "function"
                    && prop !== "object_types"
                    && prop !== "display_name"
                    && prop !== "id"
                    && prop !== "gatewayId"
                    && prop !== "identifier"
                    && prop[0] !== "_";
            });
            return filterProps.every(function (prop) {
                var isMatch;
                var filterValue = filter[prop];
                var repoMethodValue = repoMethod[prop];
                switch (prop) {
                    case "objectTypes":
                        isMatch = (filterValue || []).every(function (filterValueEl) {
                            return (repoMethodValue || []).includes(filterValueEl);
                        });
                        break;
                    case "flags":
                        isMatch = isSubset(repoMethodValue || {}, filterValue || {});
                        break;
                    default:
                        isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();
                }
                return isMatch;
            });
        };
        Client.prototype.getMethods = function (methodFilter) {
            var _this = this;
            if (methodFilter === undefined) {
                return this.repo.getMethods();
            }
            var methods = this.repo.getMethods().filter(function (method) {
                return _this.methodMatch(methodFilter, method);
            });
            return methods;
        };
        Client.prototype.getMethodsForInstance = function (instanceFilter) {
            var _this = this;
            var allServers = this.repo.getServers();
            var matchingServers = allServers.filter(function (server) {
                return _this.instanceMatch(instanceFilter, server.instance);
            });
            if (matchingServers.length === 0) {
                return [];
            }
            var resultMethodsObject = {};
            if (matchingServers.length === 1) {
                resultMethodsObject = matchingServers[0].methods;
            }
            else {
                matchingServers.forEach(function (server) {
                    Object.keys(server.methods).forEach(function (methodKey) {
                        var method = server.methods[methodKey];
                        resultMethodsObject[method.identifier] = method;
                    });
                });
            }
            return Object.keys(resultMethodsObject)
                .map(function (key) {
                return resultMethodsObject[key];
            });
        };
        Client.prototype.getServers = function (methodFilter) {
            var _this = this;
            var servers = this.repo.getServers();
            if (methodFilter === undefined) {
                return servers.map(function (server) {
                    return { server: server, methods: [] };
                });
            }
            return servers.reduce(function (prev, current) {
                var methodsForServer = Object.values(current.methods);
                var matchingMethods = methodsForServer.filter(function (method) {
                    return _this.methodMatch(methodFilter, method);
                });
                if (matchingMethods.length > 0) {
                    prev.push({ server: current, methods: matchingMethods });
                }
                return prev;
            }, []);
        };
        Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {
            var serversMethodMap = this.getServers(methodFilter);
            return this.filterByTarget(target, serversMethodMap);
        };
        return Client;
    }());

    var ServerSubscription = (function () {
        function ServerSubscription(protocol, repoMethod, subscription) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.subscription = subscription;
        }
        Object.defineProperty(ServerSubscription.prototype, "stream", {
            get: function () {
                if (!this.repoMethod.stream) {
                    throw new Error("no stream");
                }
                return this.repoMethod.stream;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "arguments", {
            get: function () { return this.subscription.arguments || {}; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "branchKey", {
            get: function () { return this.subscription.branchKey; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "instance", {
            get: function () {
                if (!this.subscription.instance) {
                    throw new Error("no instance");
                }
                return this.subscription.instance;
            },
            enumerable: true,
            configurable: true
        });
        ServerSubscription.prototype.close = function () {
            this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);
        };
        ServerSubscription.prototype.push = function (data) {
            this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);
        };
        return ServerSubscription;
    }());

    var Request$1 = (function () {
        function Request(protocol, repoMethod, requestContext) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.requestContext = requestContext;
            this.arguments = requestContext.arguments;
            this.instance = requestContext.instance;
        }
        Request.prototype.accept = function () {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, "");
        };
        Request.prototype.acceptOnBranch = function (branch) {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);
        };
        Request.prototype.reject = function (reason) {
            this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);
        };
        return Request;
    }());

    var ServerStreaming = (function () {
        function ServerStreaming(protocol, server) {
            var _this = this;
            this.protocol = protocol;
            this.server = server;
            protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });
            protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });
            protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });
        }
        ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRequestHandler === "function")) {
                return;
            }
            var request = new Request$1(this.protocol, repoMethod, requestContext);
            repoMethod.streamCallbacks.subscriptionRequestHandler(request);
        };
        ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionAddedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionAddedHandler(sub);
        };
        ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);
        };
        return ServerStreaming;
    }());

    var ServerBranch = (function () {
        function ServerBranch(key, protocol, repoMethod) {
            this.key = key;
            this.protocol = protocol;
            this.repoMethod = repoMethod;
        }
        ServerBranch.prototype.subscriptions = function () {
            var _this = this;
            var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);
            return subList.map(function (sub) {
                return new ServerSubscription(_this.protocol, _this.repoMethod, sub);
            });
        };
        ServerBranch.prototype.close = function () {
            this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);
        };
        ServerBranch.prototype.push = function (data) {
            this.protocol.server.pushData(this.repoMethod, data, [this.key]);
        };
        return ServerBranch;
    }());

    var ServerStream = (function () {
        function ServerStream(_protocol, _repoMethod, _server) {
            this._protocol = _protocol;
            this._repoMethod = _repoMethod;
            this._server = _server;
            this.name = this._repoMethod.definition.name;
        }
        ServerStream.prototype.branches = function (key) {
            var _this = this;
            var bList = this._protocol.server.getBranchList(this._repoMethod);
            if (key) {
                if (bList.indexOf(key) > -1) {
                    return new ServerBranch(key, this._protocol, this._repoMethod);
                }
                return undefined;
            }
            else {
                return bList.map(function (branchKey) {
                    return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);
                });
            }
        };
        ServerStream.prototype.branch = function (key) {
            return this.branches(key);
        };
        ServerStream.prototype.subscriptions = function () {
            var _this = this;
            var subList = this._protocol.server.getSubscriptionList(this._repoMethod);
            return subList.map(function (sub) {
                return new ServerSubscription(_this._protocol, _this._repoMethod, sub);
            });
        };
        Object.defineProperty(ServerStream.prototype, "definition", {
            get: function () {
                var _a;
                var def2 = this._repoMethod.definition;
                return {
                    accepts: def2.accepts,
                    description: def2.description,
                    displayName: def2.displayName,
                    name: def2.name,
                    objectTypes: def2.objectTypes,
                    returns: def2.returns,
                    supportsStreaming: def2.supportsStreaming,
                    flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,
                };
            },
            enumerable: true,
            configurable: true
        });
        ServerStream.prototype.close = function () {
            this._protocol.server.closeAllSubscriptions(this._repoMethod);
            this._server.unregister(this._repoMethod.definition, true);
        };
        ServerStream.prototype.push = function (data, branches) {
            if (typeof branches !== "string" && !Array.isArray(branches) && branches !== undefined) {
                throw new Error("invalid branches should be string or string array");
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            this._protocol.server.pushData(this._repoMethod, data, branches);
        };
        ServerStream.prototype.updateRepoMethod = function (repoMethod) {
            this._repoMethod = repoMethod;
        };
        return ServerStream;
    }());

    var Server = (function () {
        function Server(protocol, serverRepository) {
            this.protocol = protocol;
            this.serverRepository = serverRepository;
            this.invocations = 0;
            this.currentlyUnregistering = {};
            this.streaming = new ServerStreaming(protocol, this);
            this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));
        }
        Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {
            var _this = this;
            var promise = new Promise(function (resolve, reject) {
                if (!streamDef) {
                    reject("The stream name must be unique! Please, provide either a unique string for a stream name to \u201Cglue.interop.createStream()\u201D or a \u201CmethodDefinition\u201D object with a unique \u201Cname\u201D property for the stream.");
                    return;
                }
                var streamMethodDefinition;
                if (typeof streamDef === "string") {
                    streamMethodDefinition = { name: "" + streamDef };
                }
                else {
                    streamMethodDefinition = __assign$1({}, streamDef);
                }
                if (!streamMethodDefinition.name) {
                    return reject("The \u201Cname\u201D property is required for the \u201CstreamDefinition\u201D object and must be unique. Stream definition: " + JSON.stringify(streamMethodDefinition));
                }
                var nameAlreadyExists = _this.serverRepository.getList()
                    .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });
                if (nameAlreadyExists) {
                    return reject("A stream with the name \"" + streamMethodDefinition.name + "\" already exists! Please, provide a unique name for the stream.");
                }
                streamMethodDefinition.supportsStreaming = true;
                if (!callbacks) {
                    callbacks = {};
                }
                if (typeof callbacks.subscriptionRequestHandler !== "function") {
                    callbacks.subscriptionRequestHandler = function (request) {
                        request.accept();
                    };
                }
                var repoMethod = _this.serverRepository.add({
                    definition: streamMethodDefinition,
                    streamCallbacks: callbacks,
                    protocolState: {},
                });
                _this.protocol.server.createStream(repoMethod)
                    .then(function () {
                    var streamUserObject;
                    if (existingStream) {
                        streamUserObject = existingStream;
                        existingStream.updateRepoMethod(repoMethod);
                    }
                    else {
                        streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);
                    }
                    repoMethod.stream = streamUserObject;
                    resolve(streamUserObject);
                })
                    .catch(function (err) {
                    if (repoMethod.repoId) {
                        _this.serverRepository.remove(repoMethod.repoId);
                    }
                    reject(err);
                });
            });
            return promisify(promise, successCallback, errorCallback);
        };
        Server.prototype.register = function (methodDefinition, callback) {
            var _this = this;
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter$1$1(_this, void 0, void 0, function () {
                var result, resultValue, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 4, , 5]);
                            result = callback(context.args, context.instance);
                            if (!(result && typeof result.then === "function")) return [3, 2];
                            return [4, result];
                        case 1:
                            resultValue = _a.sent();
                            resultCallback(undefined, resultValue);
                            return [3, 3];
                        case 2:
                            resultCallback(undefined, result);
                            _a.label = 3;
                        case 3: return [3, 5];
                        case 4:
                            e_1 = _a.sent();
                            if (!e_1) {
                                e_1 = "";
                            }
                            resultCallback(e_1, e_1);
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            }); };
            wrappedCallbackFunction.userCallback = callback;
            return this.registerCore(methodDefinition, wrappedCallbackFunction);
        };
        Server.prototype.registerAsync = function (methodDefinition, callback) {
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallback = function (context, resultCallback) {
                try {
                    var resultCalled_1 = false;
                    var success = function (result) {
                        if (!resultCalled_1) {
                            resultCallback(undefined, result);
                        }
                        resultCalled_1 = true;
                    };
                    var error = function (e) {
                        if (!resultCalled_1) {
                            if (!e) {
                                e = "";
                            }
                            resultCallback(e, e);
                        }
                        resultCalled_1 = true;
                    };
                    var methodResult = callback(context.args, context.instance, success, error);
                    if (methodResult && typeof methodResult.then === "function") {
                        methodResult
                            .then(success)
                            .catch(error);
                    }
                }
                catch (e) {
                    resultCallback(e, undefined);
                }
            };
            wrappedCallback.userCallbackAsync = callback;
            return this.registerCore(methodDefinition, wrappedCallback);
        };
        Server.prototype.unregister = function (methodFilter, forStream) {
            if (forStream === void 0) { forStream = false; }
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodDefinition, methodToBeRemoved;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (methodFilter === undefined) {
                                return [2, Promise.reject("Please, provide either a unique string for a name or an object containing a \u201Cname\u201D property.")];
                            }
                            if (!(typeof methodFilter === "function")) return [3, 2];
                            return [4, this.unregisterWithPredicate(methodFilter, forStream)];
                        case 1:
                            _a.sent();
                            return [2];
                        case 2:
                            if (typeof methodFilter === "string") {
                                methodDefinition = { name: methodFilter };
                            }
                            else {
                                methodDefinition = methodFilter;
                            }
                            if (methodDefinition.name === undefined) {
                                return [2, Promise.reject("Method name is required. Cannot find a method if the method name is undefined!")];
                            }
                            methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {
                                return serverMethod.definition.name === methodDefinition.name
                                    && (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodToBeRemoved) {
                                return [2, Promise.reject("Method with a name \"" + methodDefinition.name + "\" does not exist or is not registered by your application!")];
                            }
                            return [4, this.removeMethodsOrStreams([methodToBeRemoved])];
                        case 3:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodsOrStreamsToRemove;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            methodsOrStreamsToRemove = this.serverRepository.getList()
                                .filter(function (sm) { return filterPredicate(sm.definition); })
                                .filter(function (serverMethod) {
                                return (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {
                                return [2, Promise.reject("Could not find a " + (forStream ? "stream" : "method") + " matching the specified condition!")];
                            }
                            return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {
            var _this = this;
            var methodUnregPromises = [];
            methodsToRemove.forEach(function (method) {
                var promise = _this.protocol.server.unregister(method)
                    .then(function () {
                    if (method.repoId) {
                        _this.serverRepository.remove(method.repoId);
                    }
                });
                methodUnregPromises.push(promise);
                _this.addAsCurrentlyUnregistering(method.definition.name, promise);
            });
            return Promise.all(methodUnregPromises);
        };
        Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var timeout;
                var _this = this;
                return __generator(this, function (_a) {
                    timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });
                    this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {
                        delete _this.currentlyUnregistering[methodName];
                    });
                    return [2];
                });
            });
        };
        Server.prototype.registerCore = function (method, theFunction) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (typeof method === "string") {
                                methodDefinition = { name: "" + method };
                            }
                            else {
                                methodDefinition = __assign$1({}, method);
                            }
                            if (!methodDefinition.name) {
                                return [2, Promise.reject("Please, provide a (unique) string value for the \u201Cname\u201D property in the \u201CmethodDefinition\u201D object: " + JSON.stringify(method))];
                            }
                            unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];
                            if (!unregisterInProgress) return [3, 2];
                            return [4, unregisterInProgress];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            nameAlreadyExists = this.serverRepository.getList()
                                .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });
                            if (nameAlreadyExists) {
                                return [2, Promise.reject("A method with the name \"" + methodDefinition.name + "\" already exists! Please, provide a unique name for the method.")];
                            }
                            if (methodDefinition.supportsStreaming) {
                                return [2, Promise.reject("When you create methods with \u201Cglue.interop.register()\u201D or \u201Cglue.interop.registerAsync()\u201D the property \u201CsupportsStreaming\u201D cannot be \u201Ctrue\u201D. If you want \u201C" + methodDefinition.name + "\u201D to be a stream, please use the \u201Cglue.interop.createStream()\u201D method.")];
                            }
                            repoMethod = this.serverRepository.add({
                                definition: methodDefinition,
                                theFunction: theFunction,
                                protocolState: {},
                            });
                            return [2, this.protocol.server.register(repoMethod)
                                    .catch(function (err) {
                                    if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {
                                        _this.serverRepository.remove(repoMethod.repoId);
                                    }
                                    throw err;
                                })];
                    }
                });
            });
        };
        Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {
            var _this = this;
            if (!methodToExecute || !methodToExecute.theFunction) {
                return;
            }
            methodToExecute.theFunction(invocationArgs, function (err, result) {
                if (err !== undefined && err !== null) {
                    if (err.message && typeof err.message === "string") {
                        err = err.message;
                    }
                    else if (typeof err !== "string") {
                        try {
                            err = JSON.stringify(err);
                        }
                        catch (unStrException) {
                            err = "un-stringifyable error in onMethodInvoked! Top level prop names: " + Object.keys(err);
                        }
                    }
                }
                if (!result) {
                    result = {};
                }
                else if (typeof result !== "object" || Array.isArray(result)) {
                    result = { _value: result };
                }
                _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);
            });
        };
        return Server;
    }());

    var InstanceWrapper = (function () {
        function InstanceWrapper(API, instance, connection) {
            var _this = this;
            this.wrapped = {};
            this.wrapped.getMethods = function () {
                return API.methodsForInstance(this);
            };
            this.wrapped.getStreams = function () {
                return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });
            };
            if (instance) {
                this.refreshWrappedObject(instance);
            }
            if (connection) {
                connection.loggedIn(function () {
                    _this.refresh(connection);
                });
                this.refresh(connection);
            }
        }
        InstanceWrapper.prototype.unwrap = function () {
            return this.wrapped;
        };
        InstanceWrapper.prototype.refresh = function (connection) {
            if (!connection) {
                return;
            }
            var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;
            var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });
            this.refreshWrappedObject(instance);
        };
        InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {
            var _this = this;
            var _a, _b, _c, _d;
            Object.keys(resolvedIdentity).forEach(function (key) {
                _this.wrapped[key] = resolvedIdentity[key];
            });
            this.wrapped.user = resolvedIdentity.user;
            this.wrapped.instance = resolvedIdentity.instance;
            this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid$1();
            this.wrapped.applicationName = resolvedIdentity.applicationName;
            this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);
            this.wrapped.machine = resolvedIdentity.machine;
            this.wrapped.environment = resolvedIdentity.environment;
            this.wrapped.region = resolvedIdentity.region;
            this.wrapped.windowId = resolvedIdentity.windowId;
            this.wrapped.isLocal = (_d = resolvedIdentity.isLocal) !== null && _d !== void 0 ? _d : true;
            this.wrapped.api = resolvedIdentity.api;
            this.wrapped.service = resolvedIdentity.service;
            this.wrapped.peerId = resolvedIdentity.peerId;
        };
        return InstanceWrapper;
    }());

    var hideMethodSystemFlags = function (method) {
        return __assign$1(__assign$1({}, method), { flags: method.flags.metadata || {} });
    };
    var ClientRepository = (function () {
        function ClientRepository(logger, API) {
            this.logger = logger;
            this.API = API;
            this.servers = {};
            this.methodsCount = {};
            this.callbacks = lib$2();
            var peerId = this.API.instance.peerId;
            this.myServer = {
                id: peerId,
                methods: {},
                instance: this.API.instance,
                wrapper: this.API.unwrappedInstance,
            };
            this.servers[peerId] = this.myServer;
        }
        ClientRepository.prototype.addServer = function (info, serverId) {
            this.logger.debug("adding server " + serverId);
            var current = this.servers[serverId];
            if (current) {
                return current.id;
            }
            var wrapper = new InstanceWrapper(this.API, info);
            var serverEntry = {
                id: serverId,
                methods: {},
                instance: wrapper.unwrap(),
                wrapper: wrapper,
            };
            this.servers[serverId] = serverEntry;
            this.callbacks.execute("onServerAdded", serverEntry.instance);
            return serverId;
        };
        ClientRepository.prototype.removeServerById = function (id, reason) {
            var _this = this;
            var server = this.servers[id];
            if (!server) {
                this.logger.warn("not aware of server " + id + ", my state " + JSON.stringify(Object.keys(this.servers)));
                return;
            }
            else {
                this.logger.debug("removing server " + id);
            }
            Object.keys(server.methods).forEach(function (methodId) {
                _this.removeServerMethod(id, methodId);
            });
            delete this.servers[id];
            this.callbacks.execute("onServerRemoved", server.instance, reason);
        };
        ClientRepository.prototype.addServerMethod = function (serverId, method) {
            var _a;
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            if (server.methods[method.id]) {
                return;
            }
            var identifier = this.createMethodIdentifier(method);
            var that = this;
            var methodDefinition = {
                identifier: identifier,
                gatewayId: method.id,
                name: method.name,
                displayName: method.display_name,
                description: method.description,
                version: method.version,
                objectTypes: method.object_types || [],
                accepts: method.input_signature,
                returns: method.result_signature,
                supportsStreaming: typeof method.flags !== "undefined" ? method.flags.streaming : false,
                flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},
                getServers: function () {
                    return that.getServersByMethod(identifier);
                }
            };
            methodDefinition.object_types = methodDefinition.objectTypes;
            methodDefinition.display_name = methodDefinition.displayName;
            methodDefinition.version = methodDefinition.version;
            server.methods[method.id] = methodDefinition;
            var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);
            if (!this.methodsCount[identifier]) {
                this.methodsCount[identifier] = 0;
                this.callbacks.execute("onMethodAdded", clientMethodDefinition);
            }
            this.methodsCount[identifier] = this.methodsCount[identifier] + 1;
            this.callbacks.execute("onServerMethodAdded", server.instance, clientMethodDefinition);
            return methodDefinition;
        };
        ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            var method = server.methods[methodId];
            delete server.methods[methodId];
            var clientMethodDefinition = hideMethodSystemFlags(method);
            this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;
            if (this.methodsCount[method.identifier] === 0) {
                this.callbacks.execute("onMethodRemoved", clientMethodDefinition);
            }
            this.callbacks.execute("onServerMethodRemoved", server.instance, clientMethodDefinition);
        };
        ClientRepository.prototype.getMethods = function () {
            return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);
        };
        ClientRepository.prototype.getServers = function () {
            return Object.values(this.servers).map(this.hideServerMethodSystemFlags);
        };
        ClientRepository.prototype.onServerAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerAdded", callback);
            var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);
        };
        ClientRepository.prototype.onMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodAdded", callback);
            var methodsToReplay = this.getMethods();
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);
        };
        ClientRepository.prototype.onServerMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodAdded", callback);
            var unsubCalled = false;
            var servers = this.getServers();
            setTimeout(function () {
                servers.forEach(function (server) {
                    var methods = server.methods;
                    Object.keys(methods).forEach(function (methodId) {
                        if (!unsubCalled) {
                            callback(server.instance, methods[methodId]);
                        }
                    });
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.onMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.getServerById = function (id) {
            return this.hideServerMethodSystemFlags(this.servers[id]);
        };
        ClientRepository.prototype.reset = function () {
            var _a;
            var _this = this;
            Object.keys(this.servers).forEach(function (key) {
                _this.removeServerById(key, "reset");
            });
            this.servers = (_a = {},
                _a[this.myServer.id] = this.myServer,
                _a);
            this.methodsCount = {};
        };
        ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {
            var _a, _b;
            var accepts = (_a = methodInfo.input_signature) !== null && _a !== void 0 ? _a : "";
            var returns = (_b = methodInfo.result_signature) !== null && _b !== void 0 ? _b : "";
            return (methodInfo.name + accepts + returns).toLowerCase();
        };
        ClientRepository.prototype.getServersByMethod = function (identifier) {
            var allServers = [];
            Object.values(this.servers).forEach(function (server) {
                Object.values(server.methods).forEach(function (method) {
                    if (method.identifier === identifier) {
                        allServers.push(server.instance);
                    }
                });
            });
            return allServers;
        };
        ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {
            var unsubCalled = false;
            setTimeout(function () {
                collectionToReplay.forEach(function (item) {
                    if (!unsubCalled) {
                        callback(item);
                    }
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {
            var clientMethods = {};
            Object.entries(server.methods).forEach(function (_a) {
                var name = _a[0], method = _a[1];
                clientMethods[name] = hideMethodSystemFlags(method);
            });
            return __assign$1(__assign$1({}, server), { methods: clientMethods });
        };
        ClientRepository.prototype.extractMethodsFromServers = function (servers) {
            var methods = Object.values(servers).reduce(function (clientMethods, server) {
                return __spreadArrays(clientMethods, Object.values(server.methods));
            }, []);
            return methods;
        };
        return ClientRepository;
    }());

    var ServerRepository = (function () {
        function ServerRepository() {
            this.nextId = 0;
            this.methods = [];
        }
        ServerRepository.prototype.add = function (method) {
            method.repoId = String(this.nextId);
            this.nextId += 1;
            this.methods.push(method);
            return method;
        };
        ServerRepository.prototype.remove = function (repoId) {
            if (typeof repoId !== "string") {
                return new TypeError("Expecting a string");
            }
            this.methods = this.methods.filter(function (m) {
                return m.repoId !== repoId;
            });
        };
        ServerRepository.prototype.getById = function (id) {
            if (typeof id !== "string") {
                return undefined;
            }
            return this.methods.find(function (m) {
                return m.repoId === id;
            });
        };
        ServerRepository.prototype.getList = function () {
            return this.methods.map(function (m) { return m; });
        };
        ServerRepository.prototype.length = function () {
            return this.methods.length;
        };
        ServerRepository.prototype.reset = function () {
            this.methods = [];
        };
        return ServerRepository;
    }());

    var SUBSCRIPTION_REQUEST = "onSubscriptionRequest";
    var SUBSCRIPTION_ADDED = "onSubscriptionAdded";
    var SUBSCRIPTION_REMOVED = "onSubscriptionRemoved";
    var ServerStreaming$1 = (function () {
        function ServerStreaming(session, repository, serverRepository) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.serverRepository = serverRepository;
            this.ERR_URI_SUBSCRIPTION_FAILED = "com.tick42.agm.errors.subscription.failure";
            this.callbacks = lib$2();
            this.nextStreamId = 0;
            session.on("add-interest", function (msg) {
                _this.handleAddInterest(msg);
            });
            session.on("remove-interest", function (msg) {
                _this.handleRemoveInterest(msg);
            });
        }
        ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {
            if (typeof branch !== "string") {
                branch = "";
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                throw new TypeError("The streaming method is missing its subscriptions.");
            }
            if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                throw new TypeError("The streaming method is missing its branches.");
            }
            var streamId = this.getStreamId(streamingMethod, branch);
            var key = requestContext.msg.subscription_id;
            var subscription = {
                id: key,
                arguments: requestContext.arguments,
                instance: requestContext.instance,
                branchKey: branch,
                streamId: streamId,
                subscribeMsg: requestContext.msg,
            };
            streamingMethod.protocolState.subscriptionsMap[key] = subscription;
            this.session.sendFireAndForget({
                type: "accepted",
                subscription_id: key,
                stream_id: streamId,
            });
            this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {
            if (typeof reason !== "string") {
                reason = "";
            }
            this.sendSubscriptionFailed("Subscription rejected by user. " + reason, requestContext.msg.subscription_id);
        };
        ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {
            var _this = this;
            if (typeof streamingMethod !== "object" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                return;
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            if (typeof branches === "string") {
                branches = [branches];
            }
            else if (!Array.isArray(branches) || branches.length <= 0) {
                branches = [];
            }
            var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap
                .filter(function (br) {
                if (!branches || branches.length === 0) {
                    return true;
                }
                return branches.indexOf(br.key) >= 0;
            }).map(function (br) {
                return br.streamId;
            });
            streamIdList.forEach(function (streamId) {
                var publishMessage = {
                    type: "publish",
                    stream_id: streamId,
                    data: data,
                };
                _this.session.sendFireAndForget(publishMessage);
            });
        };
        ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            var postMessage = {
                type: "post",
                subscription_id: subscription.id,
                data: data,
            };
            this.session.sendFireAndForget(postMessage);
        };
        ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {
            if (streamingMethod.protocolState.subscriptionsMap) {
                delete streamingMethod.protocolState.subscriptionsMap[subscription.id];
            }
            var dropSubscriptionMessage = {
                type: "drop-subscription",
                subscription_id: subscription.id,
                reason: "Server dropping a single subscription",
            };
            this.session.sendFireAndForget(dropSubscriptionMessage);
            var subscriber = subscription.instance;
            this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {
            var _this = this;
            if (typeof streamingMethod !== "object" || typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var subscriptionsToClose = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey === "string") {
                subscriptionsToClose = subscriptionsToClose.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            subscriptionsToClose.forEach(function (subscription) {
                delete subscriptionsMap[subscription.id];
                var drop = {
                    type: "drop-subscription",
                    subscription_id: subscription.id,
                    reason: "Server dropping all subscriptions on stream_id: " + subscription.streamId,
                };
                _this.session.sendFireAndForget(drop);
            });
        };
        ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            var subscriptions = [];
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey !== "string") {
                subscriptions = allSubscriptions;
            }
            else {
                subscriptions = allSubscriptions.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            return subscriptions;
        };
        ServerStreaming.prototype.getBranchList = function (streamingMethod) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            var result = [];
            allSubscriptions.forEach(function (sub) {
                var branch = "";
                if (typeof sub === "object" && typeof sub.branchKey === "string") {
                    branch = sub.branchKey;
                }
                if (result.indexOf(branch) === -1) {
                    result.push(branch);
                }
            });
            return result;
        };
        ServerStreaming.prototype.onSubAdded = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);
        };
        ServerStreaming.prototype.onSubRequest = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);
        };
        ServerStreaming.prototype.onSubRemoved = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);
        };
        ServerStreaming.prototype.handleRemoveInterest = function (msg) {
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (typeof msg.subscription_id !== "string" ||
                typeof streamingMethod !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== "object") {
                return;
            }
            var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);
        };
        ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {
            this.callbacks.add(eventName, handlerFunc);
        };
        ServerStreaming.prototype.getNextStreamId = function () {
            return this.nextStreamId++ + "";
        };
        ServerStreaming.prototype.handleAddInterest = function (msg) {
            var caller = this.repository.getServerById(msg.caller_id);
            var instance = caller.instance;
            var requestContext = {
                msg: msg,
                arguments: msg.arguments_kv || {},
                instance: instance,
            };
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (streamingMethod === undefined) {
                var errorMsg = "No method with id " + msg.method_id + " on this server.";
                this.sendSubscriptionFailed(errorMsg, msg.subscription_id);
                return;
            }
            if (streamingMethod.protocolState.subscriptionsMap &&
                streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {
                this.sendSubscriptionFailed("A subscription with id " + msg.subscription_id + " already exists.", msg.subscription_id);
                return;
            }
            this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);
        };
        ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {
            var errorMessage = {
                type: "error",
                reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,
                reason: reason,
                request_id: subscriptionId,
            };
            this.session.sendFireAndForget(errorMessage);
        };
        ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {
            if (typeof branchKey !== "string") {
                branchKey = "";
            }
            if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {
                throw new Error("streaming " + streamingMethod.definition.name + " method without protocol state");
            }
            var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {
                return branch.key === branchKey;
            })[0];
            var streamId = (needleBranch ? needleBranch.streamId : undefined);
            if (typeof streamId !== "string" || streamId === "") {
                streamId = this.getNextStreamId();
                streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });
            }
            return streamId;
        };
        return ServerStreaming;
    }());

    var ServerProtocol = (function () {
        function ServerProtocol(session, clientRepository, serverRepository, logger) {
            var _this = this;
            this.session = session;
            this.clientRepository = clientRepository;
            this.serverRepository = serverRepository;
            this.logger = logger;
            this.callbacks = lib$2();
            this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);
            this.session.on("invoke", function (msg) { return _this.handleInvokeMessage(msg); });
        }
        ServerProtocol.prototype.createStream = function (repoMethod) {
            repoMethod.protocolState.subscriptionsMap = {};
            repoMethod.protocolState.branchKeyToStreamIdMap = [];
            return this.register(repoMethod, true);
        };
        ServerProtocol.prototype.register = function (repoMethod, isStreaming) {
            var _this = this;
            var _a;
            var methodDef = repoMethod.definition;
            var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });
            var registerMsg = {
                type: "register",
                methods: [{
                        id: repoMethod.repoId,
                        name: methodDef.name,
                        display_name: methodDef.displayName,
                        description: methodDef.description,
                        version: methodDef.version,
                        flags: flags,
                        object_types: methodDef.objectTypes || methodDef.object_types,
                        input_signature: methodDef.accepts,
                        result_signature: methodDef.returns,
                        restrictions: undefined,
                    }],
            };
            return this.session.send(registerMsg, { methodId: repoMethod.repoId })
                .then(function () {
                _this.logger.debug("registered method " + repoMethod.definition.name + " with id " + repoMethod.repoId);
            })
                .catch(function (msg) {
                _this.logger.warn("failed to register method " + repoMethod.definition.name + " with id " + repoMethod.repoId + " - " + JSON.stringify(msg));
                throw msg;
            });
        };
        ServerProtocol.prototype.onInvoked = function (callback) {
            this.callbacks.add("onInvoked", callback);
        };
        ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {
            var msg;
            if (err || err === "") {
                msg = {
                    type: "error",
                    request_id: invocationId,
                    reason_uri: "agm.errors.client_error",
                    reason: err,
                    context: result,
                    peer_id: undefined,
                };
            }
            else {
                msg = {
                    type: "yield",
                    invocation_id: invocationId,
                    peer_id: this.session.peerId,
                    result: result,
                    request_id: undefined,
                };
            }
            this.session.sendFireAndForget(msg);
        };
        ServerProtocol.prototype.unregister = function (method) {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var msg;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            msg = {
                                type: "unregister",
                                methods: [method.repoId],
                            };
                            return [4, this.session.send(msg)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        ServerProtocol.prototype.getBranchList = function (method) {
            return this.streaming.getBranchList(method);
        };
        ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {
            return this.streaming.getSubscriptionList(method, branchKey);
        };
        ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {
            this.streaming.closeMultipleSubscriptions(method, branchKey);
        };
        ServerProtocol.prototype.pushData = function (method, data, branches) {
            this.streaming.pushData(method, data, branches);
        };
        ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {
            this.streaming.pushDataToSingle(method, subscription, data);
        };
        ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {
            this.streaming.closeSingleSubscription(method, subscription);
        };
        ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {
            this.streaming.acceptRequestOnBranch(requestContext, method, branch);
        };
        ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {
            this.streaming.rejectRequest(requestContext, method, reason);
        };
        ServerProtocol.prototype.onSubRequest = function (callback) {
            this.streaming.onSubRequest(callback);
        };
        ServerProtocol.prototype.onSubAdded = function (callback) {
            this.streaming.onSubAdded(callback);
        };
        ServerProtocol.prototype.onSubRemoved = function (callback) {
            this.streaming.onSubRemoved(callback);
        };
        ServerProtocol.prototype.handleInvokeMessage = function (msg) {
            var invocationId = msg.invocation_id;
            var callerId = msg.caller_id;
            var methodId = msg.method_id;
            var args = msg.arguments_kv;
            var methodList = this.serverRepository.getList();
            var method = methodList.filter(function (m) {
                return m.repoId === methodId;
            })[0];
            if (method === undefined) {
                return;
            }
            var client = this.clientRepository.getServerById(callerId).instance;
            var invocationArgs = { args: args, instance: client };
            this.callbacks.execute("onInvoked", method, invocationId, invocationArgs);
        };
        return ServerProtocol;
    }());

    var UserSubscription = (function () {
        function UserSubscription(repository, subscriptionData) {
            this.repository = repository;
            this.subscriptionData = subscriptionData;
        }
        Object.defineProperty(UserSubscription.prototype, "requestArguments", {
            get: function () {
                return this.subscriptionData.params.arguments || {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "servers", {
            get: function () {
                var _this = this;
                return this.subscriptionData.trackedServers
                    .filter(function (pair) { return pair.subscriptionId; })
                    .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "serverInstance", {
            get: function () {
                return this.servers[0];
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "stream", {
            get: function () {
                return this.subscriptionData.method;
            },
            enumerable: true,
            configurable: true
        });
        UserSubscription.prototype.onData = function (dataCallback) {
            if (typeof dataCallback !== "function") {
                throw new TypeError("The data callback must be a function.");
            }
            this.subscriptionData.handlers.onData.push(dataCallback);
            if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {
                this.subscriptionData.queued.data.forEach(function (dataItem) {
                    dataCallback(dataItem);
                });
            }
        };
        UserSubscription.prototype.onClosed = function (closedCallback) {
            if (typeof closedCallback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onClosed.push(closedCallback);
        };
        UserSubscription.prototype.onFailed = function (callback) {
        };
        UserSubscription.prototype.onConnected = function (callback) {
            if (typeof callback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onConnected.push(callback);
        };
        UserSubscription.prototype.close = function () {
            this.subscriptionData.close();
        };
        UserSubscription.prototype.setNewSubscription = function (newSub) {
            this.subscriptionData = newSub;
        };
        return UserSubscription;
    }());

    var TimedCache = (function () {
        function TimedCache(config) {
            this.config = config;
            this.cache = [];
            this.timeoutIds = [];
        }
        TimedCache.prototype.add = function (element) {
            var _this = this;
            var id = shortid$1();
            this.cache.push({ id: id, element: element });
            var timeoutId = setTimeout(function () {
                var elementIdx = _this.cache.findIndex(function (entry) { return entry.id === id; });
                if (elementIdx < 0) {
                    return;
                }
                _this.cache.splice(elementIdx, 1);
            }, this.config.ELEMENT_TTL_MS);
            this.timeoutIds.push(timeoutId);
        };
        TimedCache.prototype.flush = function () {
            var elements = this.cache.map(function (entry) { return entry.element; });
            this.timeoutIds.forEach(function (id) { return clearInterval(id); });
            this.cache = [];
            this.timeoutIds = [];
            return elements;
        };
        return TimedCache;
    }());

    var STATUS_AWAITING_ACCEPT = "awaitingAccept";
    var STATUS_SUBSCRIBED = "subscribed";
    var ERR_MSG_SUB_FAILED = "Subscription failed.";
    var ERR_MSG_SUB_REJECTED = "Subscription rejected.";
    var ON_CLOSE_MSG_SERVER_INIT = "ServerInitiated";
    var ON_CLOSE_MSG_CLIENT_INIT = "ClientInitiated";
    var ClientStreaming = (function () {
        function ClientStreaming(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            this.subscriptionsList = {};
            this.timedCache = new TimedCache({ ELEMENT_TTL_MS: 10000 });
            this.subscriptionIdToLocalKeyMap = {};
            this.nextSubLocalKey = 0;
            this.handleErrorSubscribing = function (errorResponse) {
                var tag = errorResponse._tag;
                var subLocalKey = tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                    return server.serverId !== tag.serverId;
                });
                if (pendingSub.trackedServers.length <= 0) {
                    clearTimeout(pendingSub.timeoutId);
                    if (pendingSub.status === STATUS_AWAITING_ACCEPT) {
                        var reason = (typeof errorResponse.reason === "string" && errorResponse.reason !== "") ?
                            ' Publisher said "' + errorResponse.reason + '".' :
                            " No reason given.";
                        var callArgs = typeof pendingSub.params.arguments === "object" ?
                            JSON.stringify(pendingSub.params.arguments) :
                            "{}";
                        pendingSub.error({
                            message: ERR_MSG_SUB_REJECTED + reason + " Called with:" + callArgs,
                            called_with: pendingSub.params.arguments,
                            method: pendingSub.method,
                        });
                    }
                    else if (pendingSub.status === STATUS_SUBSCRIBED) {
                        _this.callOnClosedHandlers(pendingSub);
                    }
                    delete _this.subscriptionsList[subLocalKey];
                }
            };
            this.handleSubscribed = function (msg) {
                var subLocalKey = msg._tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                var serverId = msg._tag.serverId;
                var acceptingServer = pendingSub.trackedServers
                    .filter(function (server) {
                    return server.serverId === serverId;
                })[0];
                if (typeof acceptingServer !== "object") {
                    return;
                }
                acceptingServer.subscriptionId = msg.subscription_id;
                _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;
                var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);
                pendingSub.status = STATUS_SUBSCRIBED;
                if (isFirstResponse) {
                    var reconnect = false;
                    var sub = pendingSub.subscription;
                    if (sub) {
                        sub.setNewSubscription(pendingSub);
                        pendingSub.success(sub);
                        reconnect = true;
                    }
                    else {
                        sub = new UserSubscription(_this.repository, pendingSub);
                        pendingSub.subscription = sub;
                        pendingSub.success(sub);
                    }
                    for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {
                        var handler = _a[_i];
                        try {
                            handler(sub.serverInstance, reconnect);
                        }
                        catch (e) {
                        }
                    }
                }
            };
            this.handleEventData = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var trackedServersFound = subscription.trackedServers.filter(function (server) {
                    return server.subscriptionId === msg.subscription_id;
                });
                if (trackedServersFound.length !== 1) {
                    return;
                }
                var isPrivateData = msg.oob;
                var sendingServerId = trackedServersFound[0].serverId;
                var receivedStreamData = function () {
                    return {
                        data: msg.data,
                        server: _this.repository.getServerById(sendingServerId).instance,
                        requestArguments: subscription.params.arguments,
                        message: undefined,
                        private: isPrivateData,
                    };
                };
                var onDataHandlers = subscription.handlers.onData;
                var queuedData = subscription.queued.data;
                if (onDataHandlers.length > 0) {
                    onDataHandlers.forEach(function (callback) {
                        if (typeof callback === "function") {
                            callback(receivedStreamData());
                        }
                    });
                }
                else {
                    queuedData.push(receivedStreamData());
                }
            };
            this.handleSubscriptionCancelled = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var expectedNewLength = subscription.trackedServers.length - 1;
                subscription.trackedServers = subscription.trackedServers.filter(function (server) {
                    if (server.subscriptionId === msg.subscription_id) {
                        subscription.queued.closers.push(server.serverId);
                        return false;
                    }
                    else {
                        return true;
                    }
                });
                if (subscription.trackedServers.length !== expectedNewLength) {
                    return;
                }
                if (subscription.trackedServers.length <= 0) {
                    _this.timedCache.add(subscription);
                    clearTimeout(subscription.timeoutId);
                    _this.callOnClosedHandlers(subscription);
                    delete _this.subscriptionsList[subLocalKey];
                }
                delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
            };
            session.on("subscribed", this.handleSubscribed);
            session.on("event", this.handleEventData);
            session.on("subscription-cancelled", this.handleSubscriptionCancelled);
        }
        ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {
            var _this = this;
            if (targetServers.length === 0) {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED + " No available servers matched the target params.",
                });
                return;
            }
            var subLocalKey = this.getNextSubscriptionLocalKey();
            var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);
            if (typeof pendingSub !== "object") {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED + " Unable to register the user callbacks.",
                });
                return;
            }
            targetServers.forEach(function (target) {
                var serverId = target.server.id;
                var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });
                if (!method) {
                    _this.logger.error("can not find method " + streamingMethod.name + " for target " + target.server.id);
                    return;
                }
                pendingSub.trackedServers.push({
                    serverId: serverId,
                    subscriptionId: undefined,
                });
                var msg = {
                    type: "subscribe",
                    server_id: serverId,
                    method_id: method.gatewayId,
                    arguments_kv: params.arguments,
                };
                _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })
                    .then(function (m) { return _this.handleSubscribed(m); })
                    .catch(function (err) { return _this.handleErrorSubscribing(err); });
            });
        };
        ClientStreaming.prototype.drainSubscriptions = function () {
            var existing = Object.values(this.subscriptionsList);
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            return existing;
        };
        ClientStreaming.prototype.drainSubscriptionsCache = function () {
            return this.timedCache.flush();
        };
        ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {
            var current = this.nextSubLocalKey;
            this.nextSubLocalKey += 1;
            return current;
        };
        ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {
            var _this = this;
            var subsInfo = {
                localKey: subLocalKey,
                status: STATUS_AWAITING_ACCEPT,
                method: method,
                params: params,
                success: success,
                error: error,
                trackedServers: [],
                handlers: {
                    onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],
                    onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],
                    onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],
                },
                queued: {
                    data: [],
                    closers: [],
                },
                timeoutId: undefined,
                close: function () { return _this.closeSubscription(subLocalKey); },
                subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription
            };
            if (!existingSub) {
                if (params.onData) {
                    subsInfo.handlers.onData.push(params.onData);
                }
                if (params.onClosed) {
                    subsInfo.handlers.onClosed.push(params.onClosed);
                }
                if (params.onConnected) {
                    subsInfo.handlers.onConnected.push(params.onConnected);
                }
            }
            this.subscriptionsList[subLocalKey] = subsInfo;
            subsInfo.timeoutId = setTimeout(function () {
                if (_this.subscriptionsList[subLocalKey] === undefined) {
                    return;
                }
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {
                    error({
                        method: method,
                        called_with: params.arguments,
                        message: ERR_MSG_SUB_FAILED + " Subscription attempt timed out after " + timeout + " ms.",
                    });
                    delete _this.subscriptionsList[subLocalKey];
                }
                else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {
                    pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                        return (typeof server.subscriptionId !== "undefined");
                    });
                    delete pendingSub.timeoutId;
                    if (pendingSub.trackedServers.length <= 0) {
                        _this.callOnClosedHandlers(pendingSub);
                        delete _this.subscriptionsList[subLocalKey];
                    }
                }
            }, timeout);
            return subsInfo;
        };
        ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {
            var closersCount = subscription.queued.closers.length;
            var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;
            var closingServer;
            if (closingServerId !== undefined && typeof closingServerId === "string") {
                closingServer = this.repository.getServerById(closingServerId).instance;
            }
            subscription.handlers.onClosed.forEach(function (callback) {
                if (typeof callback !== "function") {
                    return;
                }
                callback({
                    message: reason || ON_CLOSE_MSG_SERVER_INIT,
                    requestArguments: subscription.params.arguments || {},
                    server: closingServer,
                    stream: subscription.method,
                });
            });
        };
        ClientStreaming.prototype.closeSubscription = function (subLocalKey) {
            var _this = this;
            var subscription = this.subscriptionsList[subLocalKey];
            if (typeof subscription !== "object") {
                return;
            }
            subscription.trackedServers.forEach(function (server) {
                if (typeof server.subscriptionId === "undefined") {
                    return;
                }
                subscription.queued.closers.push(server.serverId);
                _this.session.sendFireAndForget({
                    type: "unsubscribe",
                    subscription_id: server.subscriptionId,
                    reason_uri: "",
                    reason: ON_CLOSE_MSG_CLIENT_INIT,
                });
                delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];
            });
            subscription.trackedServers = [];
            this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);
            delete this.subscriptionsList[subLocalKey];
        };
        return ClientStreaming;
    }());

    var ClientProtocol = (function () {
        function ClientProtocol(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            session.on("peer-added", function (msg) { return _this.handlePeerAdded(msg); });
            session.on("peer-removed", function (msg) { return _this.handlePeerRemoved(msg); });
            session.on("methods-added", function (msg) { return _this.handleMethodsAddedMessage(msg); });
            session.on("methods-removed", function (msg) { return _this.handleMethodsRemovedMessage(msg); });
            this.streaming = new ClientStreaming(session, repository, logger);
        }
        ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {
            this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);
        };
        ClientProtocol.prototype.invoke = function (id, method, args, target) {
            var _this = this;
            var serverId = target.id;
            var methodId = method.gatewayId;
            var msg = {
                type: "call",
                server_id: serverId,
                method_id: methodId,
                arguments_kv: args,
            };
            return this.session.send(msg, { invocationId: id, serverId: serverId })
                .then(function (m) { return _this.handleResultMessage(m); })
                .catch(function (err) { return _this.handleInvocationError(err); });
        };
        ClientProtocol.prototype.drainSubscriptions = function () {
            return this.streaming.drainSubscriptions();
        };
        ClientProtocol.prototype.drainSubscriptionsCache = function () {
            return this.streaming.drainSubscriptionsCache();
        };
        ClientProtocol.prototype.handlePeerAdded = function (msg) {
            var newPeerId = msg.new_peer_id;
            var remoteId = msg.identity;
            var isLocal = msg.meta ? msg.meta.local : true;
            var pid = Number(remoteId.process);
            var serverInfo = {
                machine: remoteId.machine,
                pid: isNaN(pid) ? remoteId.process : pid,
                instance: remoteId.instance,
                application: remoteId.application,
                applicationName: remoteId.applicationName,
                environment: remoteId.environment,
                region: remoteId.region,
                user: remoteId.user,
                windowId: remoteId.windowId,
                peerId: newPeerId,
                api: remoteId.api,
                isLocal: isLocal
            };
            this.repository.addServer(serverInfo, newPeerId);
        };
        ClientProtocol.prototype.handlePeerRemoved = function (msg) {
            var removedPeerId = msg.removed_id;
            var reason = msg.reason;
            this.repository.removeServerById(removedPeerId, reason);
        };
        ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methods = msg.methods;
            methods.forEach(function (method) {
                _this.repository.addServerMethod(serverId, method);
            });
        };
        ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methodIdList = msg.methods;
            var server = this.repository.getServerById(serverId);
            var serverMethodKeys = Object.keys(server.methods);
            serverMethodKeys.forEach(function (methodKey) {
                var method = server.methods[methodKey];
                if (methodIdList.indexOf(method.gatewayId) > -1) {
                    _this.repository.removeServerMethod(serverId, methodKey);
                }
            });
        };
        ClientProtocol.prototype.handleResultMessage = function (msg) {
            var invocationId = msg._tag.invocationId;
            var result = msg.result;
            var serverId = msg._tag.serverId;
            var server = this.repository.getServerById(serverId);
            return {
                invocationId: invocationId,
                result: result,
                instance: server.instance,
                status: InvokeStatus.Success,
                message: ""
            };
        };
        ClientProtocol.prototype.handleInvocationError = function (msg) {
            this.logger.debug("handle invocation error " + JSON.stringify(msg));
            if ("_tag" in msg) {
                var invocationId = msg._tag.invocationId;
                var serverId = msg._tag.serverId;
                var server = this.repository.getServerById(serverId);
                var message = msg.reason;
                var context_1 = msg.context;
                return {
                    invocationId: invocationId,
                    result: context_1,
                    instance: server.instance,
                    status: InvokeStatus.Error,
                    message: message
                };
            }
            else {
                return {
                    invocationId: "",
                    message: msg.message,
                    status: InvokeStatus.Error,
                    error: msg
                };
            }
        };
        return ClientProtocol;
    }());

    function gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {
        var logger = libConfig.logger.subLogger("gw3-protocol");
        var resolveReadyPromise;
        var readyPromise = new Promise(function (resolve) {
            resolveReadyPromise = resolve;
        });
        var session = connection.domain("agm", ["subscribed"]);
        var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger("server"));
        var client = new ClientProtocol(session, clientRepository, logger.subLogger("client"));
        function handleReconnect() {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var reconnectionPromises, existingSubscriptions, _loop_1, _i, existingSubscriptions_1, sub, registeredMethods, _loop_2, _a, registeredMethods_1, method;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            logger.info("reconnected - will replay registered methods and subscriptions");
                            client.drainSubscriptionsCache().forEach(function (sub) {
                                var methodInfo = sub.method;
                                var params = Object.assign({}, sub.params);
                                logger.info("trying to soft-re-subscribe to method " + methodInfo.name + ", with params: " + JSON.stringify(params));
                                interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info("soft-subscribing to method " + methodInfo.name + " DONE"); }).catch(function (error) { return logger.warn("subscribing to method " + methodInfo.name + " failed: " + JSON.stringify(error) + "}"); });
                            });
                            reconnectionPromises = [];
                            existingSubscriptions = client.drainSubscriptions();
                            _loop_1 = function (sub) {
                                var methodInfo = sub.method;
                                var params = Object.assign({}, sub.params);
                                logger.info("trying to re-subscribe to method " + methodInfo.name + ", with params: " + JSON.stringify(params));
                                reconnectionPromises.push(interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info("subscribing to method " + methodInfo.name + " DONE"); }));
                            };
                            for (_i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {
                                sub = existingSubscriptions_1[_i];
                                _loop_1(sub);
                            }
                            registeredMethods = serverRepository.getList();
                            serverRepository.reset();
                            _loop_2 = function (method) {
                                var def = method.definition;
                                logger.info("re-publishing method " + def.name);
                                if (method.stream) {
                                    reconnectionPromises.push(interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                else if (method.theFunction && method.theFunction.userCallback) {
                                    reconnectionPromises.push(interop.register(def, method.theFunction.userCallback).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                else if (method.theFunction && method.theFunction.userCallbackAsync) {
                                    reconnectionPromises.push(interop.registerAsync(def, method.theFunction.userCallbackAsync).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                logger.info("re-publishing method " + def.name + " DONE");
                            };
                            for (_a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {
                                method = registeredMethods_1[_a];
                                _loop_2(method);
                            }
                            return [4, Promise.all(reconnectionPromises)];
                        case 1:
                            _b.sent();
                            logger.info("Interop is re-announced");
                            return [2];
                    }
                });
            });
        }
        function handleInitialJoin() {
            if (resolveReadyPromise) {
                resolveReadyPromise({
                    client: client,
                    server: server,
                });
                resolveReadyPromise = undefined;
            }
        }
        session.onJoined(function (reconnect) {
            clientRepository.addServer(instance, connection.peerId);
            if (reconnect) {
                handleReconnect().then(function () { return connection.setLibReAnnounced({ name: "interop" }); }).catch(function (error) { return logger.warn("Error while re-announcing interop: " + JSON.stringify(error)); });
            }
            else {
                handleInitialJoin();
            }
        });
        session.onLeft(function () {
            clientRepository.reset();
        });
        session.join();
        return readyPromise;
    }

    var Interop = (function () {
        function Interop(configuration) {
            var _this = this;
            if (typeof configuration === "undefined") {
                throw new Error("configuration is required");
            }
            if (typeof configuration.connection === "undefined") {
                throw new Error("configuration.connections is required");
            }
            var connection = configuration.connection;
            if (typeof configuration.methodResponseTimeout !== "number") {
                configuration.methodResponseTimeout = 30 * 1000;
            }
            if (typeof configuration.waitTimeoutMs !== "number") {
                configuration.waitTimeoutMs = 30 * 1000;
            }
            this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);
            this.instance = this.unwrappedInstance.unwrap();
            this.clientRepository = new ClientRepository(configuration.logger.subLogger("cRep"), this);
            this.serverRepository = new ServerRepository();
            var protocolPromise;
            if (connection.protocolVersion === 3) {
                protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);
            }
            else {
                throw new Error("protocol " + connection.protocolVersion + " not supported");
            }
            this.readyPromise = protocolPromise.then(function (protocol) {
                _this.protocol = protocol;
                _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);
                _this.server = new Server(_this.protocol, _this.serverRepository);
                return _this;
            });
        }
        Interop.prototype.ready = function () {
            return this.readyPromise;
        };
        Interop.prototype.serverRemoved = function (callback) {
            return this.client.serverRemoved(callback);
        };
        Interop.prototype.serverAdded = function (callback) {
            return this.client.serverAdded(callback);
        };
        Interop.prototype.serverMethodRemoved = function (callback) {
            return this.client.serverMethodRemoved(callback);
        };
        Interop.prototype.serverMethodAdded = function (callback) {
            return this.client.serverMethodAdded(callback);
        };
        Interop.prototype.methodRemoved = function (callback) {
            return this.client.methodRemoved(callback);
        };
        Interop.prototype.methodAdded = function (callback) {
            return this.client.methodAdded(callback);
        };
        Interop.prototype.methodsForInstance = function (instance) {
            return this.client.methodsForInstance(instance);
        };
        Interop.prototype.methods = function (methodFilter) {
            return this.client.methods(methodFilter);
        };
        Interop.prototype.servers = function (methodFilter) {
            return this.client.servers(methodFilter);
        };
        Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {
            return this.client.subscribe(method, options, successCallback, errorCallback);
        };
        Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {
            return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);
        };
        Interop.prototype.unregister = function (methodFilter) {
            return this.server.unregister(methodFilter);
        };
        Interop.prototype.registerAsync = function (methodDefinition, callback) {
            return this.server.registerAsync(methodDefinition, callback);
        };
        Interop.prototype.register = function (methodDefinition, callback) {
            return this.server.register(methodDefinition, callback);
        };
        Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);
        };
        Interop.prototype.waitForMethod = function (name) {
            var pw = new PromiseWrapper();
            var unsubscribe = this.client.methodAdded(function (m) {
                if (m.name === name) {
                    unsubscribe();
                    pw.resolve(m);
                }
            });
            return pw.promise;
        };
        return Interop;
    }());

    var successMessages = ["subscribed", "success"];
    var MessageBus = (function () {
        function MessageBus(connection, logger) {
            var _this = this;
            this.publish = function (topic, data, options) {
                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                var args = _this.removeEmptyValues({
                    type: "publish",
                    topic: topic,
                    data: data,
                    peer_id: _this.peerId,
                    routing_key: routingKey,
                    target_identity: target
                });
                _this.session.send(args);
            };
            this.subscribe = function (topic, callback, options) {
                return new Promise(function (resolve, reject) {
                    var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                    var args = _this.removeEmptyValues({
                        type: "subscribe",
                        topic: topic,
                        peer_id: _this.peerId,
                        routing_key: routingKey,
                        source: target
                    });
                    _this.session.send(args)
                        .then(function (response) {
                        var subscription_id = response.subscription_id;
                        _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });
                        resolve({
                            unsubscribe: function () {
                                _this.session.send({ type: "unsubscribe", subscription_id: subscription_id, peer_id: _this.peerId });
                                _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });
                                return Promise.resolve();
                            }
                        });
                    })
                        .catch(function (error) { return reject(error); });
                });
            };
            this.watchOnEvent = function () {
                _this.session.on("event", function (args) {
                    var data = args.data, subscription_id = args.subscription_id;
                    var source = args["publisher-identity"];
                    var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });
                    if (subscription) {
                        if (!subscription.source) {
                            subscription.callback(data, subscription.topic, source);
                        }
                        else {
                            if (_this.keysMatch(subscription.source, source)) {
                                subscription.callback(data, subscription.topic, source);
                            }
                        }
                    }
                });
            };
            this.connection = connection;
            this.logger = logger;
            this.peerId = connection.peerId;
            this.subscriptions = [];
            this.session = connection.domain("bus", successMessages);
            this.readyPromise = this.session.join();
            this.readyPromise.then(function () {
                _this.watchOnEvent();
            });
        }
        MessageBus.prototype.ready = function () {
            return this.readyPromise;
        };
        MessageBus.prototype.removeEmptyValues = function (obj) {
            var cleaned = {};
            Object.keys(obj).forEach(function (key) {
                if (obj[key] !== undefined && obj[key] !== null) {
                    cleaned[key] = obj[key];
                }
            });
            return cleaned;
        };
        MessageBus.prototype.keysMatch = function (obj1, obj2) {
            var keysObj1 = Object.keys(obj1);
            var allMatch = true;
            keysObj1.forEach(function (key) {
                if (obj1[key] !== obj2[key]) {
                    allMatch = false;
                }
            });
            return allMatch;
        };
        return MessageBus;
    }());

    var GlueCore = function (userConfig, ext) {
        var gdVersion = Utils.getGDMajorVersion();
        var glue42gd;
        var preloadPromise = Promise.resolve();
        if (gdVersion) {
            if (gdVersion < 3) {
                throw new Error("GD v2 is not supported. Use v4 of the API to run in that context.");
            }
            else if (gdVersion >= 3) {
                glue42gd = window.glue42gd;
                preloadPromise = window.gdPreloadPromise || preloadPromise;
            }
        }
        var glueInitTimer = timer("glue");
        userConfig = userConfig || {};
        ext = ext || {};
        var internalConfig = prepareConfig(userConfig, ext, glue42gd);
        var _connection;
        var _interop;
        var _logger;
        var _metrics;
        var _contexts;
        var _bus;
        var _allowTrace;
        var libs = {};
        function registerLib(name, inner, t) {
            _allowTrace = _logger.canPublish("trace");
            if (_allowTrace) {
                _logger.trace("registering " + name + " module");
            }
            var done = function () {
                inner.initTime = t.stop();
                inner.initEndTime = t.endTime;
                inner.marks = t.marks;
                if (_allowTrace) {
                    _logger.trace(name + " is ready - " + (t.endTime - t.startTime));
                }
            };
            inner.initStartTime = t.startTime;
            if (inner.ready) {
                inner.ready().then(function () {
                    done();
                });
            }
            else {
                done();
            }
            if (!Array.isArray(name)) {
                name = [name];
            }
            name.forEach(function (n) {
                libs[n] = inner;
                GlueCore[n] = inner;
            });
        }
        function setupConnection() {
            var initTimer = timer("connection");
            _connection = new Connection(internalConfig.connection, _logger.subLogger("connection"));
            var authPromise = Promise.resolve(internalConfig.auth);
            if (internalConfig.connection && !internalConfig.auth) {
                if (glue42gd) {
                    authPromise = glue42gd.getGWToken()
                        .then(function (token) {
                        return {
                            gatewayToken: token
                        };
                    });
                }
                else if (typeof window !== "undefined" && (window === null || window === void 0 ? void 0 : window.glue42electron)) {
                    if (typeof window.glue42electron.gwToken === "string") {
                        authPromise = Promise.resolve({
                            gatewayToken: window.glue42electron.gwToken
                        });
                    }
                }
                else {
                    authPromise = Promise.reject("You need to provide auth information");
                }
            }
            return authPromise
                .then(function (authConfig) {
                initTimer.mark("auth-promise-resolved");
                var authRequest;
                if (Object.prototype.toString.call(authConfig) === "[object Object]") {
                    authRequest = authConfig;
                }
                else {
                    throw new Error("Invalid auth object - " + JSON.stringify(authConfig));
                }
                return _connection.login(authRequest);
            })
                .then(function () {
                registerLib("connection", _connection, initTimer);
                return internalConfig;
            })
                .catch(function (e) {
                if (_connection) {
                    _connection.logout();
                }
                throw e;
            });
        }
        function setupLogger() {
            var _a;
            var initTimer = timer("logger");
            _logger = new Logger("" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);
            _logger.consoleLevel(internalConfig.logger.console);
            _logger.publishLevel(internalConfig.logger.publish);
            if (_logger.canPublish("debug")) {
                _logger.debug("initializing glue...");
            }
            registerLib("logger", _logger, initTimer);
            return Promise.resolve(undefined);
        }
        function setupMetrics() {
            var _a, _b, _c, _d, _e;
            var initTimer = timer("metrics");
            var config = internalConfig.metrics;
            var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;
            var identity = internalConfig.connection.identity;
            var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };
            var disableAutoAppSystem = (_a = (typeof config !== "boolean" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;
            _metrics = metrics({
                connection: config ? _connection : undefined,
                logger: _logger.subLogger("metrics"),
                canUpdateMetric: canUpdateMetric,
                system: "Glue42",
                service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,
                instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid$1(),
                disableAutoAppSystem: disableAutoAppSystem,
                pagePerformanceMetrics: typeof config !== "boolean" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined
            });
            registerLib("metrics", _metrics, initTimer);
            return Promise.resolve();
        }
        function setupInterop() {
            var initTimer = timer("interop");
            var agmConfig = {
                connection: _connection,
                logger: _logger.subLogger("interop"),
            };
            _interop = new Interop(agmConfig);
            Logger.Interop = _interop;
            registerLib(["interop", "agm"], _interop, initTimer);
            return Promise.resolve();
        }
        function setupContexts() {
            var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);
            var needsContexts = internalConfig.contexts || hasActivities;
            if (needsContexts) {
                var initTimer = timer("contexts");
                _contexts = new ContextsModule({
                    connection: _connection,
                    logger: _logger.subLogger("contexts"),
                    trackAllContexts: typeof internalConfig.contexts === "object" ? internalConfig.contexts.trackAllContexts : false,
                    reAnnounceKnownContexts: typeof internalConfig.contexts === "object" ? internalConfig.contexts.reAnnounceKnownContexts : false
                });
                registerLib("contexts", _contexts, initTimer);
                return _contexts;
            }
            else {
                var replayer = _connection.replayer;
                if (replayer) {
                    replayer.drain(ContextMessageReplaySpec.name);
                }
            }
        }
        function setupBus() {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var initTimer;
                return __generator(this, function (_a) {
                    if (!internalConfig.bus) {
                        return [2, Promise.resolve()];
                    }
                    initTimer = timer("bus");
                    _bus = new MessageBus(_connection, _logger.subLogger("bus"));
                    registerLib("bus", _bus, initTimer);
                    return [2, Promise.resolve()];
                });
            });
        }
        function setupExternalLibs(externalLibs) {
            try {
                externalLibs.forEach(function (lib) {
                    setupExternalLib(lib.name, lib.create);
                });
                return Promise.resolve();
            }
            catch (e) {
                return Promise.reject(e);
            }
        }
        function setupExternalLib(name, createCallback) {
            var initTimer = timer(name);
            var lib = createCallback(libs);
            if (lib) {
                registerLib(name, lib, initTimer);
            }
        }
        function waitForLibs() {
            var libsReadyPromises = Object.keys(libs).map(function (key) {
                var lib = libs[key];
                return lib.ready ?
                    lib.ready() : Promise.resolve();
            });
            return Promise.all(libsReadyPromises);
        }
        function constructGlueObject() {
            var feedbackFunc = function (feedbackInfo) {
                if (!_interop) {
                    return;
                }
                _interop.invoke("T42.ACS.Feedback", feedbackInfo, "best");
            };
            var info = {
                coreVersion: version$2,
                version: internalConfig.version
            };
            glueInitTimer.stop();
            var glue = {
                feedback: feedbackFunc,
                info: info,
                logger: _logger,
                interop: _interop,
                agm: _interop,
                connection: _connection,
                metrics: _metrics,
                contexts: _contexts,
                bus: _bus,
                version: internalConfig.version,
                userConfig: userConfig,
                done: function () {
                    _logger === null || _logger === void 0 ? void 0 : _logger.info("done called by user...");
                    return _connection.logout();
                }
            };
            glue.performance = {
                get glueVer() {
                    return internalConfig.version;
                },
                get glueConfig() {
                    return JSON.stringify(userConfig);
                },
                get browser() {
                    return window.performance.timing.toJSON();
                },
                get memory() {
                    return window.performance.memory;
                },
                get initTimes() {
                    var all = getAllTimers();
                    return Object.keys(all).map(function (key) {
                        var t = all[key];
                        return {
                            name: key,
                            duration: t.endTime - t.startTime,
                            marks: t.marks,
                            startTime: t.startTime,
                            endTime: t.endTime
                        };
                    });
                }
            };
            Object.keys(libs).forEach(function (key) {
                var lib = libs[key];
                glue[key] = lib;
            });
            glue.config = {};
            Object.keys(internalConfig).forEach(function (k) {
                glue.config[k] = internalConfig[k];
            });
            if (ext && ext.extOptions) {
                Object.keys(ext.extOptions).forEach(function (k) {
                    glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];
                });
            }
            if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {
                ext.enrichGlue(glue);
            }
            if (glue42gd && glue42gd.updatePerfData) {
                glue42gd.updatePerfData(glue.performance);
            }
            if (glue.agm) {
                var deprecatedDecorator = function (fn, wrong, proper) {
                    return function () {
                        glue.logger.warn("glue.js - 'glue.agm." + wrong + "' method is deprecated, use 'glue.interop." + proper + "' instead.");
                        return fn.apply(glue.agm, arguments);
                    };
                };
                var agmAny = glue.agm;
                agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, "method_added", "methodAdded");
                agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, "method_removed", "methodRemoved");
                agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, "server_added", "serverAdded");
                agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, "server_method_aded", "serverMethodAdded");
                agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, "server_method_removed", "serverMethodRemoved");
            }
            return glue;
        }
        function registerInstanceIfNeeded() {
            return __awaiter$1$1(this, void 0, void 0, function () {
                var RegisterInstanceMethodName, isMethodAvailable, error_1, typedError;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            RegisterInstanceMethodName = "T42.ACS.RegisterInstance";
                            if (!(Utils.isNode() && typeof process.env._GD_STARTING_CONTEXT_ === "undefined" && typeof (userConfig === null || userConfig === void 0 ? void 0 : userConfig.application) !== "undefined")) return [3, 4];
                            isMethodAvailable = _interop.methods({ name: RegisterInstanceMethodName }).length > 0;
                            if (!isMethodAvailable) return [3, 4];
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4, _interop.invoke(RegisterInstanceMethodName, { appName: userConfig === null || userConfig === void 0 ? void 0 : userConfig.application, pid: process.pid })];
                        case 2:
                            _a.sent();
                            return [3, 4];
                        case 3:
                            error_1 = _a.sent();
                            typedError = error_1;
                            _logger.error("Cannot register as an instance: " + JSON.stringify(typedError.message));
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        }
        return preloadPromise
            .then(setupLogger)
            .then(setupConnection)
            .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })
            .then(function () { return _interop.readyPromise; })
            .then(function () { return registerInstanceIfNeeded(); })
            .then(function () {
            return setupExternalLibs(internalConfig.libs || []);
        })
            .then(waitForLibs)
            .then(constructGlueObject)
            .catch(function (err) {
            return Promise.reject({
                err: err,
                libs: libs
            });
        });
    };
    if (typeof window !== "undefined") {
        window.GlueCore = GlueCore;
    }
    GlueCore.version = version$2;
    GlueCore.default = GlueCore;

    const glueWebFactory = createFactoryFunction(GlueCore);
    if (typeof window !== "undefined") {
        const windowAny = window;
        windowAny.GlueWeb = glueWebFactory;
        delete windowAny.GlueCore;
    }
    if (!window.glue42gd && !window.glue42core) {
        window.glue42core = { webStarted: false };
    }
    glueWebFactory.version = version$1;

    const Glue42CoreMessageTypes$1 = {
        connectionRequest: { name: "connectionRequest" },
        connectionAccepted: { name: "connectionAccepted" },
        platformPing: { name: "platformPing" },
        platformReady: { name: "platformReady" },
        platformUnload: { name: "platformUnload" },
        clientUnload: { name: "clientUnload" },
        parentPing: { name: "parentPing" },
        parentReady: { name: "parentReady" },
        gatewayDisconnect: { name: "gatewayDisconnect" },
        gatewayInternalConnect: { name: "gatewayInternalConnect" },
        transportSwitchRequest: { name: "transportSwitchRequest" },
        transportSwitchResponse: { name: "transportSwitchResponse" },
        getCurrentTransport: { name: "getCurrentTransport" },
        getCurrentTransportResponse: { name: "getCurrentTransportResponse" },
        checkPreferredLogic: { name: "checkPreferredLogic" },
        checkPreferredConnection: { name: "checkPreferredConnection" },
        checkPreferredLogicResponse: { name: "checkPreferredLogicResponse" },
        checkPreferredConnectionResponse: { name: "checkPreferredConnectionResponse" }
    };
    const GlueWebPlatformControlName$1 = "T42.Web.Platform.Control";
    const GlueWebPlatformStreamName$1 = "T42.Web.Platform.Stream";
    const GlueClientControlName$1 = "T42.Web.Client.Control";
    const GlueWebPlatformWorkspacesStreamName = "T42.Web.Platform.WSP.Stream";
    const GlueWorkspaceFrameClientControlName = "T42.Workspaces.Control";
    const GlueWorkspacesEventsReceiverName = "T42.Workspaces.Events";
    const GlueWebIntentsPrefix = "Tick42.FDC3.Intents.";
    const ChannelContextPrefix = "___channel___";
    const dbName = "glue42core";
    const serviceWorkerBroadcastChannelName = "glue42-core-worker";
    const dbVersion = 2;
    const webPlatformTransportName$1 = "web-platform";
    const defaultNoAppWindowComponentAppName = "no-app-window";

    const defaultPlatformConfig = {
        windows: {
            windowResponseTimeoutMs: 10000,
            defaultWindowOpenBounds: {
                top: 0,
                left: 0,
                width: 800,
                height: 600
            }
        },
        applications: {
            local: []
        },
        layouts: {
            mode: "idb",
            local: []
        },
        channels: {
            definitions: []
        },
        plugins: {
            definitions: []
        },
        gateway: {
            logging: {
                level: "info"
            }
        },
        connection: {},
        glue: {},
        environment: {},
        workspacesFrameCache: true
    };
    const defaultFetchTimeoutMs = 3000;
    const defaultOpenerTimeoutMs = 1000;
    const defaultPreferredDiscoveryIntervalMS = 15000;
    const defaultClientPortRequestTimeoutMS = 15000;
    const defaultClientPreferredLogicTestTimeoutMS = 5000;

    const checkIsOpenerGlue = () => {
        if (!window.opener) {
            return Promise.resolve(false);
        }
        return new Promise((resolve) => {
            const pingListener = (event) => {
                var _a;
                const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || data.type !== Glue42CoreMessageTypes$1.platformReady.name) {
                    return;
                }
                window.removeEventListener("message", pingListener);
                resolve(true);
            };
            window.addEventListener("message", pingListener);
            const message = {
                glue42core: {
                    type: Glue42CoreMessageTypes$1.platformPing.name
                }
            };
            window.opener.postMessage(message, "*");
            setTimeout(() => resolve(false), defaultOpenerTimeoutMs);
        });
    };
    const checkIfPlacedInWorkspace = () => {
        const hasWspSuffix = window.name.indexOf("#wsp") !== -1;
        return hasWspSuffix;
    };

    const fallbackToEnterprise = (config) => __awaiter(void 0, void 0, void 0, function* () {
        var _a, _b, _c, _d;
        const glue = (config === null || config === void 0 ? void 0 : config.glueFactory) ?
            yield (config === null || config === void 0 ? void 0 : config.glueFactory(config === null || config === void 0 ? void 0 : config.glue)) :
            yield glueWebFactory(config === null || config === void 0 ? void 0 : config.glue);
        if ((_b = (_a = config === null || config === void 0 ? void 0 : config.applications) === null || _a === void 0 ? void 0 : _a.local) === null || _b === void 0 ? void 0 : _b.length) {
            yield glue.appManager.inMemory.import(config.applications.local, "merge");
        }
        if ((_d = (_c = config === null || config === void 0 ? void 0 : config.layouts) === null || _c === void 0 ? void 0 : _c.local) === null || _d === void 0 ? void 0 : _d.length) {
            yield glue.layouts.import(config.layouts.local, "merge");
        }
        return { glue };
    });

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function createCommonjsModule$2(fn, basedir, module) {
    	return module = {
    		path: basedir,
    		exports: {},
    		require: function (path, base) {
    			return commonjsRequire$1(path, (base === undefined || base === null) ? module.path : base);
    		}
    	}, fn(module, module.exports), module.exports;
    }

    function getAugmentedNamespace(n) {
    	if (n.__esModule) return n;
    	var a = Object.defineProperty({}, '__esModule', {value: true});
    	Object.keys(n).forEach(function (k) {
    		var d = Object.getOwnPropertyDescriptor(n, k);
    		Object.defineProperty(a, k, d.get ? d : {
    			enumerable: true,
    			get: function () {
    				return n[k];
    			}
    		});
    	});
    	return a;
    }

    function commonjsRequire$1 () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    (function(){
    var g,bb=this||self;function cb(a){var b=typeof a;return "object"!=b?b:a?Array.isArray(a)?"array":b:"null"}function db(a){var b=cb(a);return "array"==b||"object"==b&&"number"==typeof a.length}function fb(a){return Object.prototype.hasOwnProperty.call(a,ib)&&a[ib]||(a[ib]=++jb)}var ib="closure_uid_"+(1E9*Math.random()>>>0),jb=0;function kb(a,b,c){return a.call.apply(a.bind,arguments)}
    function lb(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function nb(a,b,c){nb=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?kb:lb;return nb.apply(null,arguments)}
    function rb(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function sb(a,b){a=a.split(".");var c=bb;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}:c[d]=b;}
    function tb(a,b){function c(){}c.prototype=b.prototype;a.$h=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Td=function(d,e,f){for(var k=Array(arguments.length-2),l=2;l<arguments.length;l++)k[l-2]=arguments[l];return b.prototype[e].apply(d,k)};}function yb(a,b){return new wb(a,b)}function Hb(a){return 0<a?0x7fffffffffffffff<=a?Ib:new wb(a,a/4294967296):0>a?-0x7fffffffffffffff>=a?Db:Cb(new wb(-a,-a/4294967296)):Gb}function Cb(a){var b=~a.ja+1|0;return yb(b,~a.ea+!b|0)}function xb(a){return 4294967296*a.ea+(a.ja>>>0)}
    function zb(a,b){if(Bb(b))throw Error("division by zero");if(0>a.ea){if(aa(a,Db)){if(aa(b,Eb)||aa(b,Fb))return Db;if(aa(b,Db))return Eb;var c=1;if(0==c)c=a;else {var d=a.ea;c=32>c?yb(a.ja>>>c|d<<32-c,d>>c):yb(d>>c-32,0<=d?0:-1);}c=zb(c,b).shiftLeft(1);if(aa(c,Gb))return 0>b.ea?Eb:Fb;d=b.multiply(c);a=a.add(Cb(d));return c.add(zb(a,b))}return 0>b.ea?zb(Cb(a),Cb(b)):Cb(zb(Cb(a),b))}if(Bb(a))return Gb;if(0>b.ea)return aa(b,Db)?Gb:Cb(zb(a,Cb(b)));for(d=Gb;0<=a.compare(b);){c=Math.max(1,Math.floor(xb(a)/
    xb(b)));var e=Math.ceil(Math.log(c)/Math.LN2);e=48>=e?1:Math.pow(2,e-48);for(var f=Hb(c),k=f.multiply(b);0>k.ea||0<k.compare(a);)c-=e,f=Hb(c),k=f.multiply(b);Bb(f)&&(f=Eb);d=d.add(f);a=a.add(Cb(k));}return d}function Bb(a){return 0==a.ja&&0==a.ea}function aa(a,b){return a.ja==b.ja&&a.ea==b.ea}
    class wb{constructor(a,b){this.ja=a|0;this.ea=b|0;}isSafeInteger(){var a=this.ea>>21;return 0==a||-1==a&&!(0==this.ja&&-2097152==this.ea)}toString(a){a=a||10;if(2>a||36<a)throw Error("radix out of range: "+a);if(this.isSafeInteger()){var b=xb(this);return 10==a?""+b:b.toString(a)}b=14-(a>>2);var c=Math.pow(a,b),d=yb(c,c/4294967296);c=zb(this,d);var e=Math,f=e.abs;d=c.multiply(d);d=this.add(Cb(d));e=f.call(e,xb(d));f=10==a?""+e:e.toString(a);f.length<b&&(f="0000000000000".substr(f.length-b)+f);e=xb(c);
    return (10==a?e:e.toString(a))+f}compare(a){return this.ea==a.ea?this.ja==a.ja?0:this.ja>>>0>a.ja>>>0?1:-1:this.ea>a.ea?1:-1}add(a){var b=this.ea>>>16,c=this.ea&65535,d=this.ja>>>16,e=a.ea>>>16,f=a.ea&65535,k=a.ja>>>16;a=(this.ja&65535)+(a.ja&65535);k=(a>>>16)+(d+k);d=k>>>16;d+=c+f;b=(d>>>16)+(b+e)&65535;return yb((k&65535)<<16|a&65535,b<<16|d&65535)}multiply(a){if(Bb(this))return this;if(Bb(a))return a;var b=this.ea>>>16,c=this.ea&65535,d=this.ja>>>16,e=this.ja&65535,f=a.ea>>>16,k=a.ea&65535,l=a.ja>>>
    16;a=a.ja&65535;var m=e*a;var r=(m>>>16)+d*a;var t=r>>>16;r=(r&65535)+e*l;t+=r>>>16;t+=c*a;var v=t>>>16;t=(t&65535)+d*l;v+=t>>>16;t=(t&65535)+e*k;v=v+(t>>>16)+(b*a+c*l+d*k+e*f)&65535;return yb((r&65535)<<16|m&65535,v<<16|t&65535)}and(a){return yb(this.ja&a.ja,this.ea&a.ea)}or(a){return yb(this.ja|a.ja,this.ea|a.ea)}xor(a){return yb(this.ja^a.ja,this.ea^a.ea)}shiftLeft(a){a&=63;if(0==a)return this;var b=this.ja;return 32>a?yb(b<<a,this.ea<<a|b>>>32-a):yb(0,b<<a-32)}}
    const Gb=yb(0,0),Eb=yb(1,0),Fb=yb(-1,-1),Ib=yb(4294967295,2147483647),Db=yb(0,2147483648);function cc(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c}function dc(a){return /^[\s\xa0]*$/.test(a)}function ca(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b}function da(a,b,c){return null!==a&&b in a?a[b]:c}function ea(a){return Array.prototype.concat.apply([],arguments)}function fa(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return []}function ha(a,b,c,d){return Array.prototype.splice.apply(a,ja(arguments,1))}function ja(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}function ka(a,b){a.sort(b||la);}
    function ma(a,b){const c=Array(a.length);for(let e=0;e<a.length;e++)c[e]={index:e,value:a[e]};const d=b||la;ka(c,function(e,f){return d(e.value,f.value)||e.index-f.index});for(b=0;b<a.length;b++)a[b]=c[b].value;}function la(a,b){return a>b?1:a<b?-1:0}function na(a){const b=[];for(let c=0;c<a;c++)b[c]=0;return b}var oa;a:{const a=bb.navigator;if(a){const b=a.userAgent;if(b){oa=b;break a}}oa="";}let pa=oa;function qa(a){return -1!=pa.indexOf(a)}function ra(){return qa("Firefox")||qa("FxiOS")}function sa(){return (qa("Chrome")||qa("CriOS"))&&!qa("Edge")}function vc(a){return 1==a.length&&" "<=a&&"~">=a||""<=a&&"�">=a}var wc=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};function ua(a,b){a=String(a);let c=a.indexOf(".");-1===c&&(c=a.length);const d="-"===a[0]?"-":"";d&&(a=a.substring(1));return d+wc("0",Math.max(0,b-c))+a}function yc(a,b){null!=a&&this.append.apply(this,arguments);}g=yc.prototype;g.Nc="";g.set=function(a){this.Nc=""+a;};g.append=function(a,b,c){this.Nc+=String(a);if(null!=b)for(let d=1;d<arguments.length;d++)this.Nc+=arguments[d];return this};g.clear=function(){this.Nc="";};g.getLength=function(){return this.Nc.length};g.toString=function(){return this.Nc};var zc={},Ac={},va,h={},Cc=null,Dc=null,Ec=!0,Fc=!0,Gc=null,Hc=null;function Ic(){return new n(null,5,[Jc,!0,Kc,Fc,Lc,!1,Mc,!1,Nc,Gc],null)}function Oc(){Ec=!1;Dc=function(){return console.log.apply(console,fa(arguments))};}function p(a){return null!=a&&!1!==a}function Pc(a){return null==a}function Qc(a){return a instanceof Array}function Rc(a){return "number"===typeof a}function Sc(a){return null==a?!0:!1===a?!0:!1}function Tc(a){return null!=a}function Uc(a){return "string"===cb(a)}
    function Vc(){return !0}function Wc(a,b){return a[cb(null==b?null:b)]?!0:a._?!0:!1}function Xc(a){return null==a?null:a.constructor}function Yc(a,b){var c=Xc(b);return Error(["No protocol method ",a," defined for type ",p(p(c)?c.Ia:c)?c.Da:cb(b),": ",b].join(""))}function Zc(a){var b=a.Da;return p(b)?b:q.m(a)}
    var $c="undefined"!==typeof Symbol&&"function"===cb(Symbol)?Symbol.iterator:"@@iterator",ad={"]":"_RBRACK_","'":"_SINGLEQUOTE_","\x3d":"_EQ_",'"':"_DOUBLEQUOTE_","!":"_BANG_","*":"_STAR_","%":"_PERCENT_","|":"_BAR_","~":"_TILDE_","/":"_SLASH_","\\":"_BSLASH_","-":"_","?":"_QMARK_","\x26":"_AMPERSAND_",":":"_COLON_","\x3c":"_LT_","{":"_LBRACE_","}":"_RBRACE_","[":"_LBRACK_","#":"_SHARP_","^":"_CARET_","+":"_PLUS_","@":"_CIRCA_","\x3e":"_GT_"},bd={_RBRACE_:"}",_COLON_:":",_BANG_:"!",_QMARK_:"?",_BSLASH_:"\\\\",
    _SLASH_:"/",_PERCENT_:"%",_PLUS_:"+",_SHARP_:"#",_LBRACE_:"{",_BAR_:"|",_LBRACK_:"[",_EQ_:"\x3d",_:"-",_TILDE_:"~",_RBRACK_:"]",_GT_:"\x3e",_SINGLEQUOTE_:"'",_CIRCA_:"@",_AMPERSAND_:"\x26",_DOUBLEQUOTE_:'\\"',_CARET_:"^",_LT_:"\x3c",_STAR_:"*"},cd=null;function dd(a){for(var b=a.length,c=Array(b),d=0;;)if(d<b)c[d]=a[d],d+=1;else break;return c}function ed(a){function b(d,e){d.push(e);return d}var c=[];return fd.hh?fd.hh(b,c,a):fd.call(null,b,c,a)}function gd(){}function hd(){}function id(){}
    function jd(a){if(null!=a&&null!=a.X)a=a.X(a);else {var b=jd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=jd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ICounted.-count",a);}return a}function kd(){}function ld(a){if(null!=a&&null!=a.pa)a=a.pa(a);else {var b=ld[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ld._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IEmptyableCollection.-empty",a);}return a}function md(){}
    function nd(a,b){if(null!=a&&null!=a.ga)a=a.ga(a,b);else {var c=nd[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=nd._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ICollection.-conj",a);}return a}function od(){}
    var xa=function(){function a(d,e,f){var k=pd[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=pd._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("IIndexed.-nth",d);}function b(d,e){var f=pd[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=pd._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("IIndexed.-nth",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),pd=function pd(a){switch(arguments.length){case 2:return pd.gh(arguments[0],arguments[1]);case 3:return pd.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};pd.gh=function(a,b){return null!=a&&null!=a.W?a.W(a,b):xa(a,b)};pd.hh=function(a,b,c){return null!=a&&null!=a.wa?a.wa(a,b,c):xa(a,b,c)};pd.F=3;function qd(){}
    function rd(a){if(null!=a&&null!=a.Fa)a=a.Fa(a);else {var b=rd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=rd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ISeq.-first",a);}return a}function sd(a){if(null!=a&&null!=a.Ha)a=a.Ha(a);else {var b=sd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=sd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ISeq.-rest",a);}return a}function td(){}
    function ud(a){if(null!=a&&null!=a.za)a=a.za(a);else {var b=ud[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ud._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("INext.-next",a);}return a}function vd(){}
    var ya=function(){function a(d,e,f){var k=wd[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=wd._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("ILookup.-lookup",d);}function b(d,e){var f=wd[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=wd._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("ILookup.-lookup",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),wd=function wd(a){switch(arguments.length){case 2:return wd.gh(arguments[0],arguments[1]);case 3:return wd.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};wd.gh=function(a,b){return null!=a&&null!=a.ia?a.ia(a,b):ya(a,b)};wd.hh=function(a,b,c){return null!=a&&null!=a.M?a.M(a,b,c):ya(a,b,c)};wd.F=3;function xd(){}
    function za(a,b){if(null!=a&&null!=a.La)a=a.La(a,b);else {var c=za[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=za._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IAssociative.-contains-key?",a);}return a}function yd(a,b,c){if(null!=a&&null!=a.fa)a=a.fa(a,b,c);else {var d=yd[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=yd._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IAssociative.-assoc",a);}return a}
    function zd(a,b){if(null!=a&&null!=a.Ac)a=a.Ac(a,b);else {var c=zd[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=zd._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IFind.-find",a);}return a}function Ad(){}function Bd(a,b){if(null!=a&&null!=a.Ka)a=a.Ka(a,b);else {var c=Bd[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=Bd._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IMap.-dissoc",a);}return a}
    function Cd(a){if(null!=a&&null!=a.Ce)a=a.key;else {var b=Cd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Cd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IMapEntry.-key",a);}return a}function Dd(a){if(null!=a&&null!=a.De)a=a.ai;else {var b=Dd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Dd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IMapEntry.-val",a);}return a}function Ed(){}
    function Fd(a,b){if(null!=a&&null!=a.rf)a=a.rf(a,b);else {var c=Fd[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=Fd._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ISet.-disjoin",a);}return a}function Gd(a){if(null!=a&&null!=a.Xb)a=a.Xb(a);else {var b=Gd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Gd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IStack.-peek",a);}return a}
    function Hd(a){if(null!=a&&null!=a.Yb)a=a.Yb(a);else {var b=Hd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Hd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IStack.-pop",a);}return a}function Id(){}function Jd(a,b,c){if(null!=a&&null!=a.Ib)a=a.Ib(a,b,c);else {var d=Jd[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=Jd._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IVector.-assoc-n",a);}return a}function Kd(){}
    function u(a){if(null!=a&&null!=a.zb)a=a.zb(a);else {var b=u[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=u._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IDeref.-deref",a);}return a}function Ld(){}function Md(a){if(null!=a&&null!=a.N)a=a.N(a);else {var b=Md[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Md._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IMeta.-meta",a);}return a}function Nd(){}
    function Od(a,b){if(null!=a&&null!=a.O)a=a.O(a,b);else {var c=Od[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=Od._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IWithMeta.-with-meta",a);}return a}function Pd(){}
    var Aa=function(){function a(d,e,f){var k=Qd[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=Qd._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("IReduce.-reduce",d);}function b(d,e){var f=Qd[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=Qd._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("IReduce.-reduce",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),Qd=function Qd(a){switch(arguments.length){case 2:return Qd.gh(arguments[0],arguments[1]);case 3:return Qd.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};Qd.gh=function(a,b){return null!=a&&null!=a.Ba?a.Ba(a,b):Aa(a,b)};Qd.hh=function(a,b,c){return null!=a&&null!=a.Ca?a.Ca(a,b,c):Aa(a,b,c)};Qd.F=3;function Rd(){}
    function Sd(a,b,c){if(null!=a&&null!=a.Aa)a=a.Aa(a,b,c);else {var d=Sd[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=Sd._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IKVReduce.-kv-reduce",a);}return a}function Td(a,b){if(null!=a&&null!=a.Y)a=a.Y(a,b);else {var c=Td[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=Td._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IEquiv.-equiv",a);}return a}
    function Ud(a){if(null!=a&&null!=a.Z)a=a.Z(a);else {var b=Ud[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Ud._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IHash.-hash",a);}return a}function Vd(){}function Wd(a){if(null!=a&&null!=a.bi)a=a.bi(a);else {var b=Wd[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=Wd._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ISeqable.-seq",a);}return a}function Xd(){}function Yd(){}function Zd(){}
    function $d(){}function ae(a){if(null!=a&&null!=a.Bc)a=a.Bc(a);else {var b=ae[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ae._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IReversible.-rseq",a);}return a}function be(a,b){if(null!=a&&null!=a.Pc)a=a.Pc(a,b);else {var c=be[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=be._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IWriter.-write",a);}return a}
    function ce(a){if(null!=a&&null!=a.qc)a=a.qc(a);else {var b=ce[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ce._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IWriter.-flush",a);}return a}function de(){}function ee(a,b,c){if(null!=a&&null!=a.S)a=a.S(a,b,c);else {var d=ee[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=ee._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IPrintWithWriter.-pr-writer",a);}return a}
    function fe(){}function ge(a){if(null!=a&&null!=a.Bd)a=a.Bd(a);else {var b=ge[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ge._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IPending.-realized?",a);}return a}function he(a,b,c){if(null!=a&&null!=a.Ge)a.Ge(a,b,c);else {var d=he[cb(null==a?null:a)];if(null!=d)d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=he._,null!=d)d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IWatchable.-notify-watches",a);}}
    function ie(a){if(null!=a&&null!=a.hd)a=a.hd(a);else {var b=ie[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ie._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IEditableCollection.-as-transient",a);}return a}function je(a,b){if(null!=a&&null!=a.kd)a=a.kd(a,b);else {var c=je[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=je._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ITransientCollection.-conj!",a);}return a}
    function ke(a){if(null!=a&&null!=a.Cd)a=a.Cd(a);else {var b=ke[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ke._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ITransientCollection.-persistent!",a);}return a}function le(a,b,c){if(null!=a&&null!=a.jd)a=a.jd(a,b,c);else {var d=le[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=le._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("ITransientAssociative.-assoc!",a);}return a}
    function me(a,b){if(null!=a&&null!=a.Fe)a=a.Fe(a,b);else {var c=me[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=me._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ITransientMap.-dissoc!",a);}return a}function ne(){}function oe(a,b){if(null!=a&&null!=a.Wb)a=a.Wb(a,b);else {var c=oe[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=oe._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IComparable.-compare",a);}return a}
    function pe(a){if(null!=a&&null!=a.ze)a=a.ze(a);else {var b=pe[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=pe._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IChunk.-drop-first",a);}return a}function qe(a){if(null!=a&&null!=a.$d)a=a.$d(a);else {var b=qe[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=qe._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IChunkedSeq.-chunked-first",a);}return a}
    function re(a){if(null!=a&&null!=a.gd)a=a.gd(a);else {var b=re[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=re._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IChunkedSeq.-chunked-rest",a);}return a}function se(a){if(null!=a&&null!=a.yd)a=a.yd(a);else {var b=se[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=se._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("INamed.-name",a);}return a}
    function te(a){if(null!=a&&null!=a.zd)a=a.zd(a);else {var b=te[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=te._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("INamed.-namespace",a);}return a}function ue(a,b){if(null!=a&&null!=a.mg)a=a.mg(a,b);else {var c=ue[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=ue._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IReset.-reset!",a);}return a}
    var Ba=function(){function a(f,k,l,m,r){var t=ve[cb(null==f?null:f)];if(null!=t)return t.K?t.K(f,k,l,m,r):t.call(null,f,k,l,m,r);t=ve._;if(null!=t)return t.K?t.K(f,k,l,m,r):t.call(null,f,k,l,m,r);throw Yc("ISwap.-swap!",f);}function b(f,k,l,m){var r=ve[cb(null==f?null:f)];if(null!=r)return r.A?r.A(f,k,l,m):r.call(null,f,k,l,m);r=ve._;if(null!=r)return r.A?r.A(f,k,l,m):r.call(null,f,k,l,m);throw Yc("ISwap.-swap!",f);}function c(f,k,l){var m=ve[cb(null==f?null:f)];if(null!=m)return m.hh?m.hh(f,k,l):
    m.call(null,f,k,l);m=ve._;if(null!=m)return m.hh?m.hh(f,k,l):m.call(null,f,k,l);throw Yc("ISwap.-swap!",f);}function d(f,k){var l=ve[cb(null==f?null:f)];if(null!=l)return l.gh?l.gh(f,k):l.call(null,f,k);l=ve._;if(null!=l)return l.gh?l.gh(f,k):l.call(null,f,k);throw Yc("ISwap.-swap!",f);}var e=null;e=function(f,k,l,m,r){switch(arguments.length){case 2:return d.call(this,f,k);case 3:return c.call(this,f,k,l);case 4:return b.call(this,f,k,l,m);case 5:return a.call(this,f,k,l,m,r)}throw Error("Invalid arity: "+
    arguments.length);};e.gh=d;e.hh=c;e.A=b;e.K=a;return e}(),ve=function ve(a){switch(arguments.length){case 2:return ve.gh(arguments[0],arguments[1]);case 3:return ve.hh(arguments[0],arguments[1],arguments[2]);case 4:return ve.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return ve.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    ve.gh=function(a,b){return null!=a&&null!=a.ng?a.ng(a,b):Ba(a,b)};ve.hh=function(a,b,c){return null!=a&&null!=a.og?a.og(a,b,c):Ba(a,b,c)};ve.A=function(a,b,c,d){return null!=a&&null!=a.pg?a.pg(a,b,c,d):Ba(a,b,c,d)};ve.K=function(a,b,c,d,e){return null!=a&&null!=a.qg?a.qg(a,b,c,d,e):Ba(a,b,c,d,e)};ve.F=5;
    function we(a,b){if(null!=a&&null!=a.Cc)a.Cc(a,b);else {var c=we[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=we._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IVolatile.-vreset!",a);}}function xe(){}function ye(a){if(null!=a&&null!=a.ua)a=a.ua(a);else {var b=ye[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=ye._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IIterable.-iterator",a);}return a}
    function ze(a){this.Fh=a;this.h=1073741824;this.I=0;}ze.prototype.Pc=function(a,b){return this.Fh.append(b)};ze.prototype.qc=function(){return null};function Ae(a){var b=new yc,c=new ze(b);a.S(null,c,Ic());c.qc(null);return q.m(b)}var Be="undefined"!==typeof Math&&"undefined"!==typeof Math.imul?function(a,b){return Math.imul(a,b)}:function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};function Ce(a){a=Be(a|0,-862048943);return Be(a<<15|a>>>-15,461845907)}
    function De(a,b){a=(a|0)^(b|0);return Be(a<<13|a>>>-13,5)+-430675100|0}function Ee(a,b){a=(a|0)^b;a=Be(a^a>>>16,-2048144789);a=Be(a^a>>>13,-1028477387);return a^a>>>16}var Fe={},Ge=0;function He(a){255<Ge&&(Fe={},Ge=0);if(null==a)return 0;var b=Fe[a];if("number"===typeof b)a=b;else {a:if(null!=a)if(b=a.length,0<b)for(var c=0,d=0;;)if(c<b)d=Be(31,d)+a.charCodeAt(c),c+=1;else {b=d;break a}else b=0;else b=0;Fe[a]=b;Ge+=1;a=b;}return a}
    function Ie(a){if(null!=a&&(a.h&4194304||h===a.Oh))return a.Z(null)^0;if("number"===typeof a){if(isFinite(a))return Math.floor(a)%2147483647;switch(a){case Infinity:return 2146435072;case -Infinity:return -1048576;default:return 2146959360}}else return !0===a?a=1231:!1===a?a=1237:"string"===typeof a?(a=He(a),a=0===a?a:Ee(De(0,Ce(a)),4)):a=a instanceof Date?a.valueOf()^0:null==a?0:Ud(a)^0,a}
    function Je(a){var b=a.name;a:{var c=1;for(var d=0;;)if(c<b.length)d=De(d,Ce(b.charCodeAt(c-1)|b.charCodeAt(c)<<16)),c+=2;else {c=d;break a}}b=Ee(1===(b.length&1)?c^Ce(b.charCodeAt(b.length-1)):c,Be(2,b.length));a=He(a.vb);return b^a+2654435769+(b<<6)+(b>>2)}function Ke(a,b){if(a.wc===b.wc)return 0;var c=Sc(a.vb);if(p(c?b.vb:c))return -1;if(p(a.vb)){if(Sc(b.vb))return 1;c=la(a.vb,b.vb);return 0===c?la(a.name,b.name):c}return la(a.name,b.name)}
    function w(a,b,c,d,e){this.vb=a;this.name=b;this.wc=c;this.ed=d;this.Kb=e;this.h=2154168321;this.I=4096;}g=w.prototype;g.toString=function(){return this.wc};g.Y=function(a,b){return b instanceof w?this.wc===b.wc:!1};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};
    g.m=function(a){return x.gh?x.gh(a,this):x.call(null,a,this)};g.gh=function(a,b){return x.hh?x.hh(a,this,b):x.call(null,a,this,b)};g.N=function(){return this.Kb};g.O=function(a,b){return new w(this.vb,this.name,this.wc,this.ed,b)};g.Z=function(){var a=this.ed;return null!=a?a:this.ed=a=Je(this)};g.yd=function(){return this.name};g.zd=function(){return this.vb};g.S=function(a,b){return be(b,this.wc)};
    var Le=function Le(a){switch(arguments.length){case 1:return Le.m(arguments[0]);case 2:return Le.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};Le.m=function(a){for(;;){if(a instanceof w)return a;if("string"===typeof a){var b=a.indexOf("/");return 1>b?Le.gh(null,a):Le.gh(a.substring(0,b),a.substring(b+1,a.length))}if(a instanceof Me)return a.bd;if(a instanceof z)a=a.da;else throw Error("no conversion to symbol");}};
    Le.gh=function(a,b){var c=null!=a?[q.m(a),"/",q.m(b)].join(""):b;return new w(a,b,c,null,null)};Le.F=2;function Me(a,b,c){this.ai=a;this.bd=b;this.Kb=c;this.h=6717441;this.I=0;}g=Me.prototype;g.toString=function(){return ["#'",q.m(this.bd)].join("")};g.zb=function(){return this.ai.o?this.ai.o():this.ai.call(null)};g.N=function(){return this.Kb};g.O=function(a,b){return new Me(this.ai,this.bd,b)};g.Y=function(a,b){return b instanceof Me?(a=this.bd,b=b.bd,A.gh?A.gh(a,b):A.call(null,a,b)):!1};g.Z=function(){return Je(this.bd)};
    g.mf=h;
    g.call=function(a){switch(arguments.length-1){case 0:return this.o();case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);case 3:return this.hh(arguments[1],arguments[2],arguments[3]);case 4:return this.A(arguments[1],arguments[2],arguments[3],arguments[4]);case 5:return this.K(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 6:return this.la(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);case 7:return this.ib(arguments[1],arguments[2],
    arguments[3],arguments[4],arguments[5],arguments[6],arguments[7]);case 8:return this.Ga(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8]);case 9:return this.Xa(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9]);case 10:return this.mb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10]);case 11:return this.cb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11]);case 12:return this.nb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12]);case 13:return this.eb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13]);
    case 14:return this.ob(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14]);case 15:return this.fb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15]);case 16:return this.pb(arguments[1],arguments[2],arguments[3],arguments[4],
    arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16]);case 17:return this.gb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17]);case 18:return this.qb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],
    arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18]);case 19:return this.hb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19]);case 20:return this.rb(arguments[1],arguments[2],
    arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],arguments[20]);case 21:return this.Sc(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],
    arguments[19],arguments[20],arguments[21]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.o=function(){var a=this.ai.o?this.ai.o():this.ai.call(null);return a.o?a.o():a.call(null)};g.m=function(a){var b=this.ai.o?this.ai.o():this.ai.call(null);return b.m?b.m(a):b.call(null,a)};g.gh=function(a,b){var c=this.ai.o?this.ai.o():this.ai.call(null);return c.gh?c.gh(a,b):c.call(null,a,b)};
    g.hh=function(a,b,c){var d=this.ai.o?this.ai.o():this.ai.call(null);return d.hh?d.hh(a,b,c):d.call(null,a,b,c)};g.A=function(a,b,c,d){var e=this.ai.o?this.ai.o():this.ai.call(null);return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d)};g.K=function(a,b,c,d,e){var f=this.ai.o?this.ai.o():this.ai.call(null);return f.K?f.K(a,b,c,d,e):f.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){var k=this.ai.o?this.ai.o():this.ai.call(null);return k.la?k.la(a,b,c,d,e,f):k.call(null,a,b,c,d,e,f)};
    g.ib=function(a,b,c,d,e,f,k){var l=this.ai.o?this.ai.o():this.ai.call(null);return l.ib?l.ib(a,b,c,d,e,f,k):l.call(null,a,b,c,d,e,f,k)};g.Ga=function(a,b,c,d,e,f,k,l){var m=this.ai.o?this.ai.o():this.ai.call(null);return m.Ga?m.Ga(a,b,c,d,e,f,k,l):m.call(null,a,b,c,d,e,f,k,l)};g.Xa=function(a,b,c,d,e,f,k,l,m){var r=this.ai.o?this.ai.o():this.ai.call(null);return r.Xa?r.Xa(a,b,c,d,e,f,k,l,m):r.call(null,a,b,c,d,e,f,k,l,m)};
    g.mb=function(a,b,c,d,e,f,k,l,m,r){var t=this.ai.o?this.ai.o():this.ai.call(null);return t.mb?t.mb(a,b,c,d,e,f,k,l,m,r):t.call(null,a,b,c,d,e,f,k,l,m,r)};g.cb=function(a,b,c,d,e,f,k,l,m,r,t){var v=this.ai.o?this.ai.o():this.ai.call(null);return v.cb?v.cb(a,b,c,d,e,f,k,l,m,r,t):v.call(null,a,b,c,d,e,f,k,l,m,r,t)};g.nb=function(a,b,c,d,e,f,k,l,m,r,t,v){var y=this.ai.o?this.ai.o():this.ai.call(null);return y.nb?y.nb(a,b,c,d,e,f,k,l,m,r,t,v):y.call(null,a,b,c,d,e,f,k,l,m,r,t,v)};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,t,v,y){var E=this.ai.o?this.ai.o():this.ai.call(null);return E.eb?E.eb(a,b,c,d,e,f,k,l,m,r,t,v,y):E.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y)};g.ob=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E){var H=this.ai.o?this.ai.o():this.ai.call(null);return H.ob?H.ob(a,b,c,d,e,f,k,l,m,r,t,v,y,E):H.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E)};
    g.fb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H){var T=this.ai.o?this.ai.o():this.ai.call(null);return T.fb?T.fb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H):T.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H)};g.pb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T){var Y=this.ai.o?this.ai.o():this.ai.call(null);return Y.pb?Y.pb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T):Y.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T)};
    g.gb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){var ia=this.ai.o?this.ai.o():this.ai.call(null);return ia.gb?ia.gb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y):ia.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y)};g.qb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia){var ba=this.ai.o?this.ai.o():this.ai.call(null);return ba.qb?ba.qb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia):ba.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia)};
    g.hb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba){var wa=this.ai.o?this.ai.o():this.ai.call(null);return wa.hb?wa.hb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba):wa.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba)};g.rb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa){var ta=this.ai.o?this.ai.o():this.ai.call(null);return ta.rb?ta.rb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):ta.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa)};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta){var ob=this.ai.o?this.ai.o():this.ai.call(null);return Ne.Be?Ne.Be(ob,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta):Ne.call(null,ob,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta)};function Oe(a){return null!=a?a.I&131072||h===a.Ph?!0:a.I?!1:Wc(xe,a):Wc(xe,a)}
    function B(a){if(null==a)return null;if(null!=a&&(a.h&8388608||h===a.qf))return a.bi(null);if(Qc(a)||"string"===typeof a)return 0===a.length?null:new Pe(a,0,null);if(null!=a&&null!=a[$c])return a=da(a,$c).call(a),Ca.m?Ca.m(a):Ca.call(null,a);if(Wc(Vd,a))return Wd(a);throw Error([q.m(a)," is not ISeqable"].join(""));}function C(a){if(null==a)return null;if(null!=a&&(a.h&64||h===a.D))return a.Fa(null);a=B(a);return null==a?null:rd(a)}
    function Qe(a){return null!=a?null!=a&&(a.h&64||h===a.D)?a.Ha(null):(a=B(a))?a.Ha(null):Re:Re}function D(a){return null==a?null:null!=a&&(a.h&128||h===a.Ad)?a.za(null):B(Qe(a))}var A=function A(a){switch(arguments.length){case 1:return A.m(arguments[0]);case 2:return A.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return A.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};A.m=function(){return !0};
    A.gh=function(a,b){return null==a?null==b:a===b||Td(a,b)};A.g=function(a,b,c){for(;;)if(A.gh(a,b))if(D(c))a=b,b=C(c),c=D(c);else return A.gh(b,C(c));else return !1};A.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};A.F=2;function Se(a){this.ha=a;}Se.prototype.next=function(){if(null!=this.ha){var a=C(this.ha);this.ha=D(this.ha);return {value:a,done:!1}}return {value:null,done:!0}};function Te(a){return new Se(B(a))}
    function Da(a,b){this.value=a;this.Se=b;this.Jc=null;this.h=8388672;this.I=0;}Da.prototype.bi=function(){return this};Da.prototype.Fa=function(){return this.value};Da.prototype.Ha=function(){null==this.Jc&&(this.Jc=Ca.m?Ca.m(this.Se):Ca.call(null,this.Se));return this.Jc};function Ca(a){var b=a.next();return p(b.done)?null:new Da(b.value,a)}function Ue(a,b){return Ee(De(0,Ce(a)),b)}function Ve(a){var b=0,c=1;for(a=B(a);;)if(null!=a)b+=1,c=Be(31,c)+Ie(C(a))|0,a=D(a);else return Ue(c,b)}
    var We=Ue(1,0);function Xe(a){var b=0,c=0;for(a=B(a);;)if(null!=a)b+=1,c=c+Ie(C(a))|0,a=D(a);else return Ue(c,b)}var Ye=Ue(0,0);id["null"]=!0;jd["null"]=function(){return 0};Date.prototype.Y=function(a,b){return b instanceof Date&&this.valueOf()===b.valueOf()};Date.prototype.Oc=h;Date.prototype.Wb=function(a,b){if(b instanceof Date)return la(this.valueOf(),b.valueOf());throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};Td.number=function(a,b){return a===b};gd["function"]=!0;
    Ld["function"]=!0;Md["function"]=function(){return null};Ud._=function(a){return fb(a)};function Ze(a){return a+1}function $e(a){this.ai=a;this.h=32768;this.I=0;}$e.prototype.zb=function(){return this.ai};function af(a){return new $e(a)}function bf(a){return a instanceof $e}function cf(a){return bf(a)?df.m?df.m(a):df.call(null,a):a}function df(a){return u(a)}
    function ef(a,b){var c=a.X(null);if(0===c)return b.o?b.o():b.call(null);for(var d=a.W(null,0),e=1;;)if(e<c){var f=a.W(null,e);d=b.gh?b.gh(d,f):b.call(null,d,f);if(bf(d))return u(d);e+=1;}else return d}function ff(a,b,c){var d=a.X(null),e=c;for(c=0;;)if(c<d){var f=a.W(null,c);e=b.gh?b.gh(e,f):b.call(null,e,f);if(bf(e))return u(e);c+=1;}else return e}
    function gf(a,b){var c=a.length;if(0===a.length)return b.o?b.o():b.call(null);for(var d=a[0],e=1;;)if(e<c){var f=a[e];d=b.gh?b.gh(d,f):b.call(null,d,f);if(bf(d))return u(d);e+=1;}else return d}function hf(a,b,c){var d=a.length,e=c;for(c=0;;)if(c<d){var f=a[c];e=b.gh?b.gh(e,f):b.call(null,e,f);if(bf(e))return u(e);c+=1;}else return e}function jf(a,b,c,d){for(var e=a.length;;)if(d<e){var f=a[d];c=b.gh?b.gh(c,f):b.call(null,c,f);if(bf(c))return u(c);d+=1;}else return c}
    function kf(a){return null!=a?a.h&2||h===a.bg?!0:a.h?!1:Wc(id,a):Wc(id,a)}function lf(a){return null!=a?a.h&16||h===a.pf?!0:a.h?!1:Wc(od,a):Wc(od,a)}function mf(a,b,c){var d=F.m?F.m(a):F.call(null,a);if(c>=d)return -1;!(0<c)&&0>c&&(c+=d,c=0>c?0:c);for(;;)if(c<d){if(A.gh(nf?nf(a,c):pf.call(null,a,c),b))return c;c+=1;}else return -1}
    function qf(a,b,c){var d=F.m?F.m(a):F.call(null,a);if(0===d)return -1;0<c?(--d,c=d<c?d:c):c=0>c?d+c:c;for(;;)if(0<=c){if(A.gh(nf?nf(a,c):pf.call(null,a,c),b))return c;--c;}else return -1}function rf(a,b){this.l=a;this.J=b;}rf.prototype.ra=function(){return this.J<this.l.length};rf.prototype.next=function(){var a=this.l[this.J];this.J+=1;return a};function Pe(a,b,c){this.l=a;this.J=b;this.H=c;this.h=166592766;this.I=139264;}g=Pe.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F.m?F.m(this):F.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.W=function(a,b){a=b+this.J;if(0<=a&&a<this.l.length)return this.l[a];throw Error("Index out of bounds");};g.wa=function(a,b,c){a=b+this.J;return 0<=a&&a<this.l.length?this.l[a]:c};
    g.ua=function(){return new rf(this.l,this.J)};g.N=function(){return this.H};g.za=function(){return this.J+1<this.l.length?new Pe(this.l,this.J+1,null):null};g.X=function(){var a=this.l.length-this.J;return 0>a?0:a};g.Bc=function(){var a=this.X(null);return 0<a?new sf(this,a-1,null):null};g.Z=function(){return Ve(this)};g.Y=function(a,b){return tf.gh?tf.gh(this,b):tf.call(null,this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return jf(this.l,b,this.l[this.J],this.J+1)};
    g.Ca=function(a,b,c){return jf(this.l,b,c,this.J)};g.Fa=function(){return this.l[this.J]};g.Ha=function(){return this.J+1<this.l.length?new Pe(this.l,this.J+1,null):Re};g.bi=function(){return this.J<this.l.length?this:null};g.O=function(a,b){return b===this.H?this:new Pe(this.l,this.J,b)};g.ga=function(a,b){return uf.gh?uf.gh(b,this):uf.call(null,b,this)};Pe.prototype[$c]=function(){return Te(this)};function G(a){return 0<a.length?new Pe(a,0,null):null}
    function sf(a,b,c){this.Zd=a;this.J=b;this.H=c;this.h=32374990;this.I=8192;}g=sf.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F.m?F.m(this):F.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 0<this.J?new sf(this.Zd,this.J-1,null):null};g.X=function(){return this.J+1};g.Z=function(){return Ve(this)};
    g.Y=function(a,b){return tf.gh?tf.gh(this,b):tf.call(null,this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf?vf(b,this):wf.call(null,b,this)};g.Ca=function(a,b,c){return xf?xf(b,c,this):wf.call(null,b,c,this)};g.Fa=function(){return pd(this.Zd,this.J)};g.Ha=function(){return 0<this.J?new sf(this.Zd,this.J-1,null):Re};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new sf(this.Zd,this.J,b)};g.ga=function(a,b){return uf.gh?uf.gh(b,this):uf.call(null,b,this)};
    sf.prototype[$c]=function(){return Te(this)};function yf(a){return C(D(a))}function zf(a){return C(D(a))}function Af(a){for(;;){var b=D(a);if(null!=b)a=b;else return C(a)}}Td._=function(a,b){return a===b};
    var Bf=function Bf(a){switch(arguments.length){case 0:return Bf.o();case 1:return Bf.m(arguments[0]);case 2:return Bf.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Bf.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};Bf.o=function(){return I};Bf.m=function(a){return a};Bf.gh=function(a,b){return null!=a?nd(a,b):new Cf(null,b,null,1,null)};
    Bf.g=function(a,b,c){for(;;)if(p(c))a=Bf.gh(a,b),b=C(c),c=D(c);else return Bf.gh(a,b)};Bf.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Bf.F=2;function Df(a){return null==a?null:null!=a&&(a.h&4||h===a.dg)?a.pa(null):(null!=a?a.h&4||h===a.dg||(a.h?0:Wc(kd,a)):Wc(kd,a))?ld(a):null}
    function F(a){if(null!=a)if(null!=a&&(a.h&2||h===a.bg))a=a.X(null);else if(Qc(a))a=a.length;else if("string"===typeof a)a=a.length;else if(null!=a&&(a.h&8388608||h===a.qf))a:{a=B(a);for(var b=0;;){if(kf(a)){a=b+jd(a);break a}a=D(a);b+=1;}}else a=jd(a);else a=0;return a}function Ef(a,b,c){for(;;){if(null==a)return c;if(0===b)return B(a)?C(a):c;if(lf(a))return pd(a,b,c);if(B(a))a=D(a),--b;else return c}}
    function pf(a){switch(arguments.length){case 2:return nf(arguments[0],arguments[1]);case 3:return J(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}
    function nf(a,b){if("number"!==typeof b)throw Error("Index argument to nth must be a number");if(null==a)return a;if(null!=a&&(a.h&16||h===a.pf))return a.W(null,b);if(Qc(a)){if(-1<b&&b<a.length)return a[b|0];throw Error("Index out of bounds");}if("string"===typeof a){if(-1<b&&b<a.length)return a.charAt(b|0);throw Error("Index out of bounds");}if(null!=a&&(a.h&64||h===a.D)||null!=a&&(a.h&16777216||h===a.Ee)){if(0>b)throw Error("Index out of bounds");a:for(;;){if(null==a)throw Error("Index out of bounds");
    if(0===b){if(B(a)){a=C(a);break a}throw Error("Index out of bounds");}if(lf(a)){a=pd(a,b);break a}if(B(a))a=D(a),--b;else throw Error("Index out of bounds");}return a}if(Wc(od,a))return pd(a,b);throw Error(["nth not supported on this type ",q.m(Zc(Xc(a)))].join(""));}
    function J(a,b,c){if("number"!==typeof b)throw Error("Index argument to nth must be a number.");if(null==a)return c;if(null!=a&&(a.h&16||h===a.pf))return a.wa(null,b,c);if(Qc(a))return -1<b&&b<a.length?a[b|0]:c;if("string"===typeof a)return -1<b&&b<a.length?a.charAt(b|0):c;if(null!=a&&(a.h&64||h===a.D)||null!=a&&(a.h&16777216||h===a.Ee))return 0>b?c:Ef(a,b,c);if(Wc(od,a))return pd(a,b,c);throw Error(["nth not supported on this type ",q.m(Zc(Xc(a)))].join(""));}
    var x=function x(a){switch(arguments.length){case 2:return x.gh(arguments[0],arguments[1]);case 3:return x.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};x.gh=function(a,b){return null==a?null:null!=a&&(a.h&256||h===a.hg)?a.ia(null,b):Qc(a)?null!=b&&b<a.length?a[b|0]:null:"string"===typeof a?null!=b&&-1<b&&b<a.length?a.charAt(b|0):null:Wc(vd,a)?wd(a,b):null};
    x.hh=function(a,b,c){return null!=a?null!=a&&(a.h&256||h===a.hg)?a.M(null,b,c):Qc(a)?null!=b&&-1<b&&b<a.length?a[b|0]:c:"string"===typeof a?null!=b&&-1<b&&b<a.length?a.charAt(b|0):c:Wc(vd,a)?wd(a,b,c):c:c};x.F=3;var K=function K(a){switch(arguments.length){case 3:return K.hh(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return K.g(arguments[0],arguments[1],arguments[2],new Pe(c.slice(3),0,null))}};
    K.hh=function(a,b,c){return null!=a&&(a.h&512||h===a.ag)?a.fa(null,b,c):null!=a?yd(a,b,c):Ff([b,c])};K.g=function(a,b,c,d){for(;;)if(a=K.hh(a,b,c),p(d))b=C(d),c=yf(d),d=D(D(d));else return a};K.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};K.F=3;
    var Gf=function Gf(a){switch(arguments.length){case 1:return Gf.m(arguments[0]);case 2:return Gf.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Gf.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};Gf.m=function(a){return a};Gf.gh=function(a,b){return null==a?null:Bd(a,b)};Gf.g=function(a,b,c){for(;;){if(null==a)return null;a=Gf.gh(a,b);if(p(c))b=C(c),c=D(c);else return a}};
    Gf.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Gf.F=2;function Hf(a){var b="function"===typeof a;return b?b:null!=a?h===a.mf?!0:a.Ke?!1:Wc(gd,a):Wc(gd,a)}function If(a,b){this.P=a;this.H=b;this.h=393217;this.I=0;}g=If.prototype;g.N=function(){return this.H};g.O=function(a,b){return new If(this.P,b)};g.mf=h;
    g.call=function(a){switch(arguments.length-1){case 0:return this.o();case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);case 3:return this.hh(arguments[1],arguments[2],arguments[3]);case 4:return this.A(arguments[1],arguments[2],arguments[3],arguments[4]);case 5:return this.K(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 6:return this.la(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);case 7:return this.ib(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7]);case 8:return this.Ga(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8]);case 9:return this.Xa(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9]);case 10:return this.mb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10]);
    case 11:return this.cb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11]);case 12:return this.nb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12]);case 13:return this.eb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],
    arguments[11],arguments[12],arguments[13]);case 14:return this.ob(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14]);case 15:return this.fb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15]);case 16:return this.pb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16]);case 17:return this.gb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17]);case 18:return this.qb(arguments[1],arguments[2],
    arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18]);case 19:return this.hb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19]);case 20:return this.rb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],arguments[20]);case 21:return this.Sc(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],
    arguments[18],arguments[19],arguments[20],arguments[21]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.o=function(){return this.P.o?this.P.o():this.P.call(null)};g.m=function(a){return this.P.m?this.P.m(a):this.P.call(null,a)};g.gh=function(a,b){return this.P.gh?this.P.gh(a,b):this.P.call(null,a,b)};g.hh=function(a,b,c){return this.P.hh?this.P.hh(a,b,c):this.P.call(null,a,b,c)};
    g.A=function(a,b,c,d){return this.P.A?this.P.A(a,b,c,d):this.P.call(null,a,b,c,d)};g.K=function(a,b,c,d,e){return this.P.K?this.P.K(a,b,c,d,e):this.P.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){return this.P.la?this.P.la(a,b,c,d,e,f):this.P.call(null,a,b,c,d,e,f)};g.ib=function(a,b,c,d,e,f,k){return this.P.ib?this.P.ib(a,b,c,d,e,f,k):this.P.call(null,a,b,c,d,e,f,k)};g.Ga=function(a,b,c,d,e,f,k,l){return this.P.Ga?this.P.Ga(a,b,c,d,e,f,k,l):this.P.call(null,a,b,c,d,e,f,k,l)};
    g.Xa=function(a,b,c,d,e,f,k,l,m){return this.P.Xa?this.P.Xa(a,b,c,d,e,f,k,l,m):this.P.call(null,a,b,c,d,e,f,k,l,m)};g.mb=function(a,b,c,d,e,f,k,l,m,r){return this.P.mb?this.P.mb(a,b,c,d,e,f,k,l,m,r):this.P.call(null,a,b,c,d,e,f,k,l,m,r)};g.cb=function(a,b,c,d,e,f,k,l,m,r,t){return this.P.cb?this.P.cb(a,b,c,d,e,f,k,l,m,r,t):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t)};g.nb=function(a,b,c,d,e,f,k,l,m,r,t,v){return this.P.nb?this.P.nb(a,b,c,d,e,f,k,l,m,r,t,v):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v)};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,t,v,y){return this.P.eb?this.P.eb(a,b,c,d,e,f,k,l,m,r,t,v,y):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y)};g.ob=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E){return this.P.ob?this.P.ob(a,b,c,d,e,f,k,l,m,r,t,v,y,E):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E)};g.fb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H){return this.P.fb?this.P.fb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H)};
    g.pb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T){return this.P.pb?this.P.pb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T)};g.gb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){return this.P.gb?this.P.gb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y)};g.qb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia){return this.P.qb?this.P.qb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia)};
    g.hb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba){return this.P.hb?this.P.hb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba)};g.rb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa){return this.P.rb?this.P.rb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):this.P.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa)};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta){return Ne.Be?Ne.Be(this.P,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta):Ne.call(null,this.P,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta)};function Jf(a,b){return "function"===typeof a?new If(a,b):null==a?null:Od(a,b)}function Kf(a){var b=null!=a;return (b?null!=a?a.h&131072||h===a.xd||(a.h?0:Wc(Ld,a)):Wc(Ld,a):b)?Md(a):null}function Lf(a){return null==a?null:Gd(a)}function Mf(a){return null==a?null:Hd(a)}
    var Nf=function Nf(a){switch(arguments.length){case 1:return Nf.m(arguments[0]);case 2:return Nf.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Nf.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};Nf.m=function(a){return a};Nf.gh=function(a,b){return null==a?null:Fd(a,b)};Nf.g=function(a,b,c){for(;;){if(null==a)return null;a=Nf.gh(a,b);if(p(c))b=C(c),c=D(c);else return a}};
    Nf.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Nf.F=2;function Of(a){return null==a||Sc(B(a))}function Pf(a){return null==a?!1:null!=a?a.h&8||h===a.Lh?!0:a.h?!1:Wc(md,a):Wc(md,a)}function Qf(a){return null==a?!1:null!=a?a.h&4096||h===a.Wh?!0:a.h?!1:Wc(Ed,a):Wc(Ed,a)}function Rf(a){return null!=a?a.h&512||h===a.ag?!0:a.h?!1:Wc(xd,a):Wc(xd,a)}function Sf(a){return null!=a?a.h&16777216||h===a.Ee?!0:a.h?!1:Wc(Xd,a):Wc(Xd,a)}
    function M(a){return null==a?!1:null!=a?a.h&1024||h===a.Sh?!0:a.h?!1:Wc(Ad,a):Wc(Ad,a)}function Tf(a){return null!=a?a.h&67108864||h===a.kg?!0:a.h?!1:Wc(Zd,a):Wc(Zd,a)}function Uf(a){return null!=a?a.h&16384||h===a.Xh?!0:a.h?!1:Wc(Id,a):Wc(Id,a)}function Vf(a){return null!=a?a.I&512||h===a.Kh?!0:!1:!1}function Wf(a,b,c,d,e){for(;0!==e;)c[d]=a[b],d+=1,--e,b+=1;}var Xf={};function Yf(a){return !0===a||!1===a}function Zf(a){return null==a?!1:null!=a?a.h&64||h===a.D?!0:a.h?!1:Wc(qd,a):Wc(qd,a)}
    function $f(a){return null==a?!1:!1===a?!1:!0}function ag(a){return "number"===typeof a&&!isNaN(a)&&Infinity!==a&&parseFloat(a)===parseInt(a,10)}function bg(a){return ag(a)||a instanceof wb}function N(a,b){return null!=a&&(a.h&512||h===a.ag)?a.La(null,b):Wc(xd,a)?za(a,b):x.hh(a,b,Xf)===Xf?!1:!0}
    function cg(a,b){if(a===b)return 0;if(null==a)return -1;if(null==b)return 1;if("number"===typeof a){if("number"===typeof b)return la(a,b);throw Error(["Cannot compare ",q.m(a)," to ",q.m(b)].join(""));}if(null!=a?a.I&2048||h===a.Oc||(a.I?0:Wc(ne,a)):Wc(ne,a))return oe(a,b);if("string"!==typeof a&&!Qc(a)&&!0!==a&&!1!==a||Xc(a)!==Xc(b))throw Error(["Cannot compare ",q.m(a)," to ",q.m(b)].join(""));return la(a,b)}
    function dg(a,b){var c=F(a),d=F(b);if(c<d)a=-1;else if(c>d)a=1;else if(0===c)a=0;else a:for(d=0;;){var e=cg(nf(a,d),nf(b,d));if(0===e&&d+1<c)d+=1;else {a=e;break a}}return a}function eg(a){return A.gh(a,cg)?cg:function(b,c){var d=a.gh?a.gh(b,c):a.call(null,b,c);return "number"===typeof d?d:p(d)?-1:p(a.gh?a.gh(c,b):a.call(null,c,b))?1:0}}function fg(a){var b=ca(bd);if(B(b)){var c=gg.m?gg.m(b):gg.call(null,b);ma(c,eg(a));return Jf(B(c),Kf(b))}return Re}
    function wf(a){switch(arguments.length){case 2:return vf(arguments[0],arguments[1]);case 3:return xf(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function vf(a,b){var c=B(b);return c?(b=C(c),c=D(c),fd.hh?fd.hh(a,b,c):fd.call(null,a,b,c)):a.o?a.o():a.call(null)}function xf(a,b,c){for(c=B(c);;)if(c){var d=C(c);b=a.gh?a.gh(b,d):a.call(null,b,d);if(bf(b))return u(b);c=D(c);}else return b}
    function hg(a,b){a=ye(a);if(p(a.ra()))for(var c=a.next();;)if(a.ra()){var d=a.next();c=b.gh?b.gh(c,d):b.call(null,c,d);if(bf(c))return u(c)}else return c;else return b.o?b.o():b.call(null)}function ig(a,b,c){for(a=ye(a);;)if(a.ra()){var d=a.next();c=b.gh?b.gh(c,d):b.call(null,c,d);if(bf(c))return u(c)}else return c}
    var fd=function fd(a){switch(arguments.length){case 2:return fd.gh(arguments[0],arguments[1]);case 3:return fd.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};fd.gh=function(a,b){return null!=b&&(b.h&524288||h===b.lg)?b.Ba(null,a):Qc(b)?gf(b,a):"string"===typeof b?gf(b,a):Wc(Pd,b)?Qd(b,a):Oe(b)?hg(b,a):vf(a,b)};
    fd.hh=function(a,b,c){return null!=c&&(c.h&524288||h===c.lg)?c.Ca(null,a,b):Qc(c)?hf(c,a,b):"string"===typeof c?hf(c,a,b):Wc(Pd,c)?Qd(c,a,b):Oe(c)?ig(c,a,b):xf(a,b,c)};fd.F=3;function jg(a,b,c){return null!=c?Sd(c,a,b):b}function kg(a){return a}
    function lg(a,b){return function(){function c(k,l){return a.gh?a.gh(k,l):a.call(null,k,l)}function d(k){return b.m?b.m(k):b.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=e;f.m=d;f.gh=c;return f}()}function mg(a,b,c){return ng(a,b,b.o?b.o():b.call(null),c)}
    function ng(a,b,c,d){a=a.m?a.m(b):a.call(null,b);c=fd.hh(a,c,d);return a.m?a.m(c):a.call(null,c)}var og=function og(a){switch(arguments.length){case 0:return og.o();case 1:return og.m(arguments[0]);case 2:return og.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return og.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};og.o=function(){return 0};og.m=function(a){return a};og.gh=function(a,b){return a+b};
    og.g=function(a,b,c){return fd.hh(og,a+b,c)};og.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};og.F=2;var pg=function pg(a){switch(arguments.length){case 1:return pg.m(arguments[0]);case 2:return pg.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pg.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};pg.m=function(){return !0};pg.gh=function(a,b){return a>b};
    pg.g=function(a,b,c){for(;;)if(a>b)if(D(c))a=b,b=C(c),c=D(c);else return b>C(c);else return !1};pg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};pg.F=2;function qg(a){if("number"===typeof a)return String.fromCharCode(a);if("string"===typeof a&&1===a.length)return a;throw Error("Argument to char must be a character or number");}function rg(a){return 0<=a?Math.floor(a):Math.ceil(a)}function sg(a,b){return rg((a-a%b)/b)}function tg(a,b){return a-b*sg(a,b)}
    function ug(a){a-=a>>1&1431655765;a=(a&858993459)+(a>>2&858993459);return 16843009*(a+(a>>4)&252645135)>>24}function vg(a){switch(arguments.length){case 1:return !0;case 2:return Td(arguments[0],arguments[1]);default:for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(c=arguments[0],d=arguments[1],b=new Pe(b.slice(2),0,null);;)if(c===d)if(D(b))c=d,d=C(b),b=D(b);else {c=d===C(b);break a}else {c=!1;break a}return c}}function wg(a,b){return Td(a,b)}
    function xg(a){return 0<a}var q=function q(a){switch(arguments.length){case 0:return q.o();case 1:return q.m(arguments[0]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return q.g(arguments[0],new Pe(c.slice(1),0,null))}};q.o=function(){return ""};q.m=function(a){return null==a?"":[a].join("")};q.g=function(a,b){for(a=new yc(q.m(a));;)if(p(b))a=a.append(q.m(C(b))),b=D(b);else return a.toString()};q.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    q.F=1;function yg(a){switch(arguments.length){case 2:return arguments[0].substring(arguments[1]);case 3:return arguments[0].substring(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function zg(a,b){return a.substring(b)}function Ag(a,b,c){return a.substring(b,c)}
    function tf(a,b){if(Sf(b))if(kf(a)&&kf(b)&&F(a)!==F(b))a=!1;else a:for(a=B(a),b=B(b);;){if(null==a){a=null==b;break a}if(null!=b&&A.gh(C(a),C(b)))a=D(a),b=D(b);else {a=!1;break a}}else a=null;return $f(a)}function Cf(a,b,c,d,e){this.H=a;this.first=b;this.ab=c;this.count=d;this.B=e;this.h=65937646;this.I=8192;}g=Cf.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,this.count)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 1===this.count?null:this.ab};g.X=function(){return this.count};g.Xb=function(){return this.first};g.Yb=function(){return this.Ha(null)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Od(Re,this.H)};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return this.first};g.Ha=function(){return 1===this.count?Re:this.ab};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new Cf(b,this.first,this.ab,this.count,this.B)};g.ga=function(a,b){return new Cf(this.H,b,this,this.count+1,null)};
    function Bg(a){return null!=a?a.h&33554432||h===a.Rh?!0:a.h?!1:Wc(Yd,a):Wc(Yd,a)}Cf.prototype[$c]=function(){return Te(this)};function Cg(a){this.H=a;this.h=65937614;this.I=8192;}g=Cg.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null};g.X=function(){return 0};g.Xb=function(){return null};g.Yb=function(){throw Error("Can't pop empty list");};g.Z=function(){return We};
    g.Y=function(a,b){return Bg(b)||Sf(b)?null==B(b):!1};g.pa=function(){return this};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return null};g.Ha=function(){return Re};g.bi=function(){return null};g.O=function(a,b){return b===this.H?this:new Cg(b)};g.ga=function(a,b){return new Cf(this.H,b,null,1,null)};var Re=new Cg(null);Cg.prototype[$c]=function(){return Te(this)};
    function Dg(a){return (null!=a?a.h&134217728||h===a.Vh||(a.h?0:Wc($d,a)):Wc($d,a))?(a=ae(a))?a:Re:fd.hh(Bf,Re,a)}var O=function O(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return O.g(0<c.length?new Pe(c.slice(0),0,null):null)};O.g=function(a){if(a instanceof Pe&&0===a.J)var b=a.l;else a:for(b=[];;)if(null!=a)b.push(rd(a)),a=ud(a);else break a;a=b.length;for(var c=Re;;)if(0<a){var d=a-1;c=nd(c,b[a-1]);a=d;}else return c};O.F=0;O.G=function(a){return this.g(B(a))};
    function Eg(a,b,c,d){this.H=a;this.first=b;this.ab=c;this.B=d;this.h=65929452;this.I=8192;}g=Eg.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null==this.ab?null:B(this.ab)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};
    g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return this.first};g.Ha=function(){return null==this.ab?Re:this.ab};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new Eg(b,this.first,this.ab,this.B)};g.ga=function(a,b){return new Eg(null,b,this,null)};Eg.prototype[$c]=function(){return Te(this)};
    function uf(a,b){return null==b?new Cf(null,a,null,1,null):null!=b&&(b.h&64||h===b.D)?new Eg(null,a,b,null):new Eg(null,a,B(b),null)}function Fg(a,b){if(a.da===b.da)return 0;var c=Sc(a.vb);if(p(c?b.vb:c))return -1;if(p(a.vb)){if(Sc(b.vb))return 1;c=la(a.vb,b.vb);return 0===c?la(a.name,b.name):c}return la(a.name,b.name)}function z(a,b,c,d){this.vb=a;this.name=b;this.da=c;this.ed=d;this.h=2153775105;this.I=4096;}g=z.prototype;g.toString=function(){return [":",q.m(this.da)].join("")};
    g.Y=function(a,b){return b instanceof z?this.da===b.da:!1};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return x.gh(a,this)};g.gh=function(a,b){return x.hh(a,this,b)};g.Z=function(){var a=this.ed;return null!=a?a:this.ed=a=Je(this)+2654435769|0};
    g.yd=function(){return this.name};g.zd=function(){return this.vb};g.S=function(a,b){return be(b,[":",q.m(this.da)].join(""))};function Gg(a){return a instanceof z}function P(a,b){return a===b?!0:a instanceof z&&b instanceof z?a.da===b.da:!1}function Hg(a){if(null!=a&&(a.I&4096||h===a.jg))return a.zd(null);throw Error(["Doesn't support namespace: ",q.m(a)].join(""));}function Ig(a){return a instanceof z||a instanceof w}
    var Jg=function Jg(a){switch(arguments.length){case 1:return Jg.m(arguments[0]);case 2:return Jg.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};Jg.m=function(a){if(a instanceof z)return a;if(a instanceof w)return new z(Hg(a),Kg.m?Kg.m(a):Kg.call(null,a),a.wc,null);if(A.gh("/",a))return new z(null,a,a,null);if("string"===typeof a){var b=a.split("/");return 2===b.length?new z(b[0],b[1],a,null):new z(null,b[0],a,null)}return null};
    Jg.gh=function(a,b){a=a instanceof z?Kg.m?Kg.m(a):Kg.call(null,a):a instanceof w?Kg.m?Kg.m(a):Kg.call(null,a):a;b=b instanceof z?Kg.m?Kg.m(b):Kg.call(null,b):b instanceof w?Kg.m?Kg.m(b):Kg.call(null,b):b;return new z(a,b,[p(a)?[q.m(a),"/"].join(""):null,q.m(b)].join(""),null)};Jg.F=2;function Lg(a,b,c,d){this.H=a;this.od=b;this.ha=c;this.B=d;this.h=32374988;this.I=1;}g=Lg.prototype;g.toString=function(){return Ae(this)};
    function Mg(a){null!=a.od&&(a.ha=a.od.o?a.od.o():a.od.call(null),a.od=null);return a.ha}g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){this.bi(null);return null==this.ha?null:D(this.ha)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};
    g.pa=function(){return Od(Re,this.H)};g.Bd=function(){return Sc(this.od)};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){this.bi(null);return null==this.ha?null:C(this.ha)};g.Ha=function(){this.bi(null);return null!=this.ha?Qe(this.ha):Re};g.bi=function(){Mg(this);if(null==this.ha)return null;for(var a=this.ha;;)if(a instanceof Lg)a=Mg(a);else return this.ha=a,B(this.ha)};
    g.O=function(a,b){var c=this;return b===this.H?c:new Lg(b,function(){return c.bi(null)},null,this.B)};g.ga=function(a,b){return uf(b,this)};Lg.prototype[$c]=function(){return Te(this)};function Ng(a){this.ca=a;this.end=0;this.h=2;this.I=0;}Ng.prototype.add=function(a){this.ca[this.end]=a;return this.end+=1};Ng.prototype.Bb=function(){var a=new Og(this.ca,0,this.end);this.ca=null;return a};Ng.prototype.X=function(){return this.end};function Pg(a){return new Ng(Array(a))}
    function Og(a,b,c){this.l=a;this.$a=b;this.end=c;this.h=524306;this.I=0;}g=Og.prototype;g.X=function(){return this.end-this.$a};g.W=function(a,b){return this.l[this.$a+b]};g.wa=function(a,b,c){return 0<=b&&b<this.end-this.$a?this.l[this.$a+b]:c};g.ze=function(){if(this.$a===this.end)throw Error("-drop-first of empty chunk");return new Og(this.l,this.$a+1,this.end)};g.Ba=function(a,b){return jf(this.l,b,this.l[this.$a],this.$a+1)};g.Ca=function(a,b,c){return jf(this.l,b,c,this.$a)};
    function Qg(a,b,c,d){this.Bb=a;this.lc=b;this.H=c;this.B=d;this.h=31850732;this.I=1536;}g=Qg.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return 1<jd(this.Bb)?new Qg(pe(this.Bb),this.lc,null,null):null==this.lc?null:Wd(this.lc)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Fa=function(){return pd(this.Bb,0)};g.Ha=function(){return 1<jd(this.Bb)?new Qg(pe(this.Bb),this.lc,null,null):null==this.lc?Re:this.lc};g.bi=function(){return this};g.$d=function(){return this.Bb};g.gd=function(){return null==this.lc?Re:this.lc};g.O=function(a,b){return b===this.H?this:new Qg(this.Bb,this.lc,b,this.B)};g.ga=function(a,b){return uf(b,this)};g.Ae=function(){return null==this.lc?null:this.lc};Qg.prototype[$c]=function(){return Te(this)};
    function Rg(a,b){return 0===jd(a)?b:new Qg(a,b,null,null)}function Sg(a,b){a.add(b);}function Tg(a){return a.Bb()}function gg(a){var b=[];for(a=B(a);;)if(null!=a)b.push(C(a)),a=D(a);else return b}function Ug(a,b){if(kf(b))return F(b);var c=0;for(b=B(b);;)if(null!=b&&c<a)c+=1,b=D(b);else return c}
    var Vg=function Vg(a){if(null==a)return null;var c=D(a);return null==c?B(C(a)):uf(C(a),Vg.m?Vg.m(c):Vg.call(null,c))},Wg=function Wg(a){switch(arguments.length){case 0:return Wg.o();case 1:return Wg.m(arguments[0]);case 2:return Wg.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Wg.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};Wg.o=function(){return new Lg(null,function(){return null},null,null)};
    Wg.m=function(a){return new Lg(null,function(){return a},null,null)};Wg.gh=function(a,b){return new Lg(null,function(){var c=B(a);return c?Vf(c)?Rg(qe(c),Wg.gh(re(c),b)):uf(C(c),Wg.gh(Qe(c),b)):b},null,null)};Wg.g=function(a,b,c){return function k(e,f){return new Lg(null,function(){var l=B(e);return l?Vf(l)?Rg(qe(l),k(re(l),f)):uf(C(l),k(Qe(l),f)):p(f)?k(C(f),D(f)):null},null,null)}(Wg.gh(a,b),c)};Wg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Wg.F=2;
    var Xg=function Xg(a){switch(arguments.length){case 0:return Xg.o();case 1:return Xg.m(arguments[0]);case 2:return Xg.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Xg.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};Xg.o=function(){return ie(I)};Xg.m=function(a){return a};Xg.gh=function(a,b){return je(a,b)};Xg.g=function(a,b,c){for(;;)if(a=je(a,b),p(c))b=C(c),c=D(c);else return a};
    Xg.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};Xg.F=2;function Yg(a,b,c){return le(a,b,c)}
    function Zg(a,b,c){var d=B(c);if(0===b)return a.o?a.o():a.call(null);c=rd(d);var e=sd(d);if(1===b)return a.m?a.m(c):a.call(null,c);d=rd(e);var f=sd(e);if(2===b)return a.gh?a.gh(c,d):a.call(null,c,d);e=rd(f);var k=sd(f);if(3===b)return a.hh?a.hh(c,d,e):a.call(null,c,d,e);f=rd(k);var l=sd(k);if(4===b)return a.A?a.A(c,d,e,f):a.call(null,c,d,e,f);k=rd(l);var m=sd(l);if(5===b)return a.K?a.K(c,d,e,f,k):a.call(null,c,d,e,f,k);l=rd(m);var r=sd(m);if(6===b)return a.la?a.la(c,d,e,f,k,l):a.call(null,c,d,e,f,
    k,l);m=rd(r);var t=sd(r);if(7===b)return a.ib?a.ib(c,d,e,f,k,l,m):a.call(null,c,d,e,f,k,l,m);r=rd(t);var v=sd(t);if(8===b)return a.Ga?a.Ga(c,d,e,f,k,l,m,r):a.call(null,c,d,e,f,k,l,m,r);t=rd(v);var y=sd(v);if(9===b)return a.Xa?a.Xa(c,d,e,f,k,l,m,r,t):a.call(null,c,d,e,f,k,l,m,r,t);v=rd(y);var E=sd(y);if(10===b)return a.mb?a.mb(c,d,e,f,k,l,m,r,t,v):a.call(null,c,d,e,f,k,l,m,r,t,v);y=rd(E);var H=sd(E);if(11===b)return a.cb?a.cb(c,d,e,f,k,l,m,r,t,v,y):a.call(null,c,d,e,f,k,l,m,r,t,v,y);E=rd(H);var T=
    sd(H);if(12===b)return a.nb?a.nb(c,d,e,f,k,l,m,r,t,v,y,E):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E);H=rd(T);var Y=sd(T);if(13===b)return a.eb?a.eb(c,d,e,f,k,l,m,r,t,v,y,E,H):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H);T=rd(Y);var ia=sd(Y);if(14===b)return a.ob?a.ob(c,d,e,f,k,l,m,r,t,v,y,E,H,T):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T);Y=rd(ia);var ba=sd(ia);if(15===b)return a.fb?a.fb(c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y);ia=rd(ba);var wa=sd(ba);if(16===b)return a.pb?a.pb(c,
    d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia);ba=rd(wa);var ta=sd(wa);if(17===b)return a.gb?a.gb(c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba);wa=rd(ta);var ob=sd(ta);if(18===b)return a.qb?a.qb(c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa);ta=rd(ob);ob=sd(ob);if(19===b)return a.hb?a.hb(c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta);
    var qb=rd(ob);sd(ob);if(20===b)return a.rb?a.rb(c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta,qb):a.call(null,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta,qb);throw Error("Only up to 20 arguments supported on functions");}function $g(a){return null!=a&&(a.h&128||h===a.Ad)?a.za(null):B(Qe(a))}function ah(a,b,c){return null==c?a.m?a.m(b):a.call(a,b):bh(a,b,rd(c),$g(c))}function bh(a,b,c,d){return null==d?a.gh?a.gh(b,c):a.call(a,b,c):ch(a,b,c,rd(d),$g(d))}
    function ch(a,b,c,d,e){return null==e?a.hh?a.hh(b,c,d):a.call(a,b,c,d):dh(a,b,c,d,rd(e),$g(e))}
    function dh(a,b,c,d,e,f){if(null==f)return a.A?a.A(b,c,d,e):a.call(a,b,c,d,e);var k=rd(f),l=D(f);if(null==l)return a.K?a.K(b,c,d,e,k):a.call(a,b,c,d,e,k);f=rd(l);var m=D(l);if(null==m)return a.la?a.la(b,c,d,e,k,f):a.call(a,b,c,d,e,k,f);l=rd(m);var r=D(m);if(null==r)return a.ib?a.ib(b,c,d,e,k,f,l):a.call(a,b,c,d,e,k,f,l);m=rd(r);var t=D(r);if(null==t)return a.Ga?a.Ga(b,c,d,e,k,f,l,m):a.call(a,b,c,d,e,k,f,l,m);r=rd(t);var v=D(t);if(null==v)return a.Xa?a.Xa(b,c,d,e,k,f,l,m,r):a.call(a,b,c,d,e,k,f,l,
    m,r);t=rd(v);var y=D(v);if(null==y)return a.mb?a.mb(b,c,d,e,k,f,l,m,r,t):a.call(a,b,c,d,e,k,f,l,m,r,t);v=rd(y);var E=D(y);if(null==E)return a.cb?a.cb(b,c,d,e,k,f,l,m,r,t,v):a.call(a,b,c,d,e,k,f,l,m,r,t,v);y=rd(E);var H=D(E);if(null==H)return a.nb?a.nb(b,c,d,e,k,f,l,m,r,t,v,y):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y);E=rd(H);var T=D(H);if(null==T)return a.eb?a.eb(b,c,d,e,k,f,l,m,r,t,v,y,E):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E);H=rd(T);var Y=D(T);if(null==Y)return a.ob?a.ob(b,c,d,e,k,f,l,m,r,t,v,y,E,H):a.call(a,
    b,c,d,e,k,f,l,m,r,t,v,y,E,H);T=rd(Y);var ia=D(Y);if(null==ia)return a.fb?a.fb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E,H,T);Y=rd(ia);var ba=D(ia);if(null==ba)return a.pb?a.pb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y);ia=rd(ba);var wa=D(ba);if(null==wa)return a.gb?a.gb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia);ba=rd(wa);var ta=D(wa);if(null==ta)return a.qb?a.qb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba):a.call(a,
    b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba);wa=rd(ta);var ob=D(ta);if(null==ob)return a.hb?a.hb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa);ta=rd(ob);ob=D(ob);if(null==ob)return a.rb?a.rb(b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta):a.call(a,b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta);b=[b,c,d,e,k,f,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta];for(c=ob;;)if(c)b.push(rd(c)),c=D(c);else break;return a.apply(a,b)}
    function Ne(a){switch(arguments.length){case 2:return eh(arguments[0],arguments[1]);case 3:return fh(arguments[0],arguments[1],arguments[2]);case 4:return gh(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return hh(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return ih(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],new Pe(b.slice(5),0,null))}}
    function eh(a,b){if(a.G){var c=a.F,d=Ug(c+1,b);return d<=c?Zg(a,d,b):a.G(b)}b=B(b);return null==b?a.o?a.o():a.call(a):ah(a,rd(b),$g(b))}function fh(a,b,c){if(a.G){b=uf(b,c);var d=a.F;c=Ug(d,c)+1;return c<=d?Zg(a,c,b):a.G(b)}return ah(a,b,B(c))}function gh(a,b,c,d){return a.G?(b=uf(b,uf(c,d)),c=a.F,d=2+Ug(c-1,d),d<=c?Zg(a,d,b):a.G(b)):bh(a,b,c,B(d))}function hh(a,b,c,d,e){return a.G?(b=uf(b,uf(c,uf(d,e))),c=a.F,e=3+Ug(c-2,e),e<=c?Zg(a,e,b):a.G(b)):ch(a,b,c,d,B(e))}
    function ih(a,b,c,d,e,f){return a.G?(f=Vg(f),b=uf(b,uf(c,uf(d,uf(e,f)))),c=a.F,f=4+Ug(c-3,f),f<=c?Zg(a,f,b):a.G(b)):dh(a,b,c,d,e,Vg(f))}function Ea(a){return null!=a&&(a.h&64||h===a.D)?eh(pk,a):a}var jh=function jh(a){switch(arguments.length){case 1:return jh.m(arguments[0]);case 2:return jh.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return jh.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};jh.m=function(){return !1};
    jh.gh=function(a,b){return !A.gh(a,b)};jh.g=function(a,b,c){return Sc(gh(A,a,b,c))};jh.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};jh.F=2;function kh(a){return B(a)?a:null}
    function lh(){if("undefined"===typeof zc||"undefined"===typeof Ac||"undefined"===typeof va)va=function(a){this.si=a;this.h=393216;this.I=0;},va.prototype.O=function(a,b){return new va(b)},va.prototype.N=function(){return this.si},va.prototype.ra=function(){return !1},va.prototype.next=function(){return Error("No such element")},va.prototype.remove=function(){return Error("Unsupported operation")},va.Ia=!0,va.Da="cljs.core/t_cljs$core6490",va.Ja=function(a){return be(a,"cljs.core/t_cljs$core6490")};
    return new va(S)}function nh(a){this.ha=a;this.J=0;}nh.prototype.ra=function(){return this.J<this.ha.length};nh.prototype.next=function(){var a=this.ha.charAt(this.J);this.J+=1;return a};nh.prototype.remove=function(){return Error("Unsupported operation")};function oh(a){this.l=a;this.J=0;}oh.prototype.ra=function(){return this.J<this.l.length};oh.prototype.next=function(){var a=this.l[this.J];this.J+=1;return a};oh.prototype.remove=function(){return Error("Unsupported operation")};var ph={},qh={};
    function rh(a){this.vd=ph;this.Hb=a;}rh.prototype.ra=function(){this.vd===ph?(this.vd=qh,this.Hb=B(this.Hb)):this.vd===this.Hb&&(this.Hb=D(this.vd));return null!=this.Hb};rh.prototype.next=function(){if(this.ra())return this.vd=this.Hb,C(this.Hb);throw Error("No such element");};rh.prototype.remove=function(){return Error("Unsupported operation")};
    function sh(a){if(Oe(a))return ye(a);if(null==a)return lh();if("string"===typeof a)return new nh(a);if(Qc(a))return new oh(a);var b=null==a;b||(b=(b=null!=a?a.h&8388608||h===a.qf?!0:a.h?!1:Wc(Vd,a):Wc(Vd,a))?b:Qc(a)||"string"===typeof a);if(b)return new rh(a);throw Error(["Cannot create iterator from ",q.m(a)].join(""));}function th(a){this.te=a;}th.prototype.add=function(a){this.te.push(a);return this};th.prototype.remove=function(){return this.te.shift()};th.prototype.Nd=function(){return 0===this.te.length};
    th.prototype.toString=function(){return ["Many: ",q.m(this.te)].join("")};var uh={};function vh(a){this.ai=a;}vh.prototype.add=function(a){return this.ai===uh?(this.ai=a,this):new th([this.ai,a])};vh.prototype.remove=function(){if(this.ai===uh)throw Error("Removing object from empty buffer");var a=this.ai;this.ai=uh;return a};vh.prototype.Nd=function(){return this.ai===uh};vh.prototype.toString=function(){return ["Single: ",q.m(this.ai)].join("")};function wh(){}wh.prototype.add=function(a){return new vh(a)};
    wh.prototype.remove=function(){throw Error("Removing object from empty buffer");};wh.prototype.Nd=function(){return !0};wh.prototype.toString=function(){return "Empty"};var xh=new wh,yh=function yh(a){return new Lg(null,function(){if(a.ra())for(var c=[],d=0;;){var e=a.ra();if(p(p(e)?32>d:e))c[d]=a.next(),d+=1;else return Rg(new Og(c,0,d),yh.m?yh.m(a):yh.call(null,a))}else return null},null,null)};function zh(a){this.buffer=xh;this.Hb=uh;this.Ne=!1;this.pc=null;this.Ze=a;this.oh=!1;}
    zh.prototype.step=function(){if(this.Hb!==uh)return !0;for(;;)if(this.Hb===uh)if(this.buffer.Nd()){if(this.Ne)return !1;if(this.Ze.ra()){if(this.oh)var a=eh(this.pc,uf(null,this.Ze.next()));else a=this.Ze.next(),a=this.pc.gh?this.pc.gh(null,a):this.pc.call(null,null,a);bf(a)&&(this.pc.m?this.pc.m(null):this.pc.call(null,null),this.Ne=!0);}else this.pc.m?this.pc.m(null):this.pc.call(null,null),this.Ne=!0;}else this.Hb=this.buffer.remove();else return !0};zh.prototype.ra=function(){return this.step()};
    zh.prototype.next=function(){if(this.ra()){var a=this.Hb;this.Hb=uh;return a}throw Error("No such element");};zh.prototype.remove=function(){return Error("Unsupported operation")};zh.prototype[$c]=function(){return Te(this)};
    function Ah(a,b){var c=new zh(b);c.pc=function(){var d=function(){function e(k,l){c.buffer=c.buffer.add(l);return k}var f=null;f=function(k,l){switch(arguments.length){case 0:return null;case 1:return k;case 2:return e.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=function(){return null};f.m=function(k){return k};f.gh=e;return f}();return a.m?a.m(d):a.call(null,d)}();return c}function Bh(a){return Zf(a)?a:(a=B(a))?a:Re}
    function Ch(a,b){for(;;){if(null==B(b))return !0;var c=C(b);c=a.m?a.m(c):a.call(null,c);if(p(c))b=D(b);else return !1}}function Dh(a,b){for(;;)if(b=B(b)){var c=C(b);c=a.m?a.m(c):a.call(null,c);if(p(c))return c;b=D(b);}else return null}function Eh(a){if(ag(a))return 0===(a&1);throw Error(["Argument must be an integer: ",q.m(a)].join(""));}
    function Fh(a){return function(){function b(k,l){return Sc(a.gh?a.gh(k,l):a.call(null,k,l))}function c(k){return Sc(a.m?a.m(k):a.call(null,k))}function d(){return Sc(a.o?a.o():a.call(null))}var e=null,f=function(){function k(m,r,t){var v=null;if(2<arguments.length){v=0;for(var y=Array(arguments.length-2);v<y.length;)y[v]=arguments[v+2],++v;v=new Pe(y,0,null);}return l.call(this,m,r,v)}function l(m,r,t){return Sc(gh(a,m,r,t))}k.F=2;k.G=function(m){var r=C(m);m=D(m);var t=C(m);m=Qe(m);return l(r,t,m)};
    k.g=l;return k}();e=function(k,l,m){switch(arguments.length){case 0:return d.call(this);case 1:return c.call(this,k);case 2:return b.call(this,k,l);default:var r=null;if(2<arguments.length){r=0;for(var t=Array(arguments.length-2);r<t.length;)t[r]=arguments[r+2],++r;r=new Pe(t,0,null);}return f.g(k,l,r)}};e.F=2;e.G=f.G;e.o=d;e.m=c;e.gh=b;e.g=f.g;return e}()}
    function Gh(a){return function(){function b(c){if(0<arguments.length)for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;return a}b.F=0;b.G=function(c){B(c);return a};b.g=function(){return a};return b}()}
    var Hh=function Hh(a){switch(arguments.length){case 0:return Hh.o();case 1:return Hh.m(arguments[0]);case 2:return Hh.gh(arguments[0],arguments[1]);case 3:return Hh.hh(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Hh.g(arguments[0],arguments[1],arguments[2],new Pe(c.slice(3),0,null))}};Hh.o=function(){return kg};Hh.m=function(a){return a};
    Hh.gh=function(a,b){return function(){function c(m,r,t){m=b.hh?b.hh(m,r,t):b.call(null,m,r,t);return a.m?a.m(m):a.call(null,m)}function d(m,r){m=b.gh?b.gh(m,r):b.call(null,m,r);return a.m?a.m(m):a.call(null,m)}function e(m){m=b.m?b.m(m):b.call(null,m);return a.m?a.m(m):a.call(null,m)}function f(){var m=b.o?b.o():b.call(null);return a.m?a.m(m):a.call(null,m)}var k=null,l=function(){function m(t,v,y,E){var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+
    3],++H;H=new Pe(T,0,null);}return r.call(this,t,v,y,H)}function r(t,v,y,E){t=hh(b,t,v,y,E);return a.m?a.m(t):a.call(null,t)}m.F=3;m.G=function(t){var v=C(t);t=D(t);var y=C(t);t=D(t);var E=C(t);t=Qe(t);return r(v,y,E,t)};m.g=r;return m}();k=function(m,r,t,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,m,r,t);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=
    arguments[y+3],++y;y=new Pe(E,0,null);}return l.g(m,r,t,y)}};k.F=3;k.G=l.G;k.o=f;k.m=e;k.gh=d;k.hh=c;k.g=l.g;return k}()};
    Hh.hh=function(a,b,c){return function(){function d(r,t,v){r=c.hh?c.hh(r,t,v):c.call(null,r,t,v);r=b.m?b.m(r):b.call(null,r);return a.m?a.m(r):a.call(null,r)}function e(r,t){r=c.gh?c.gh(r,t):c.call(null,r,t);r=b.m?b.m(r):b.call(null,r);return a.m?a.m(r):a.call(null,r)}function f(r){r=c.m?c.m(r):c.call(null,r);r=b.m?b.m(r):b.call(null,r);return a.m?a.m(r):a.call(null,r)}function k(){var r=c.o?c.o():c.call(null);r=b.m?b.m(r):b.call(null,r);return a.m?a.m(r):a.call(null,r)}var l=null,m=function(){function r(v,
    y,E,H){var T=null;if(3<arguments.length){T=0;for(var Y=Array(arguments.length-3);T<Y.length;)Y[T]=arguments[T+3],++T;T=new Pe(Y,0,null);}return t.call(this,v,y,E,T)}function t(v,y,E,H){v=hh(c,v,y,E,H);v=b.m?b.m(v):b.call(null,v);return a.m?a.m(v):a.call(null,v)}r.F=3;r.G=function(v){var y=C(v);v=D(v);var E=C(v);v=D(v);var H=C(v);v=Qe(v);return t(y,E,H,v)};r.g=t;return r}();l=function(r,t,v,y){switch(arguments.length){case 0:return k.call(this);case 1:return f.call(this,r);case 2:return e.call(this,
    r,t);case 3:return d.call(this,r,t,v);default:var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Pe(H,0,null);}return m.g(r,t,v,E)}};l.F=3;l.G=m.G;l.o=k;l.m=f;l.gh=e;l.hh=d;l.g=m.g;return l}()};
    Hh.g=function(a,b,c,d){var e=Dg(uf(a,uf(b,uf(c,d))));return function(){function f(l){var m=null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Pe(r,0,null);}return k.call(this,m)}function k(l){l=eh(C(e),l);for(var m=D(e);;)if(m){var r=C(m);l=r.m?r.m(l):r.call(null,l);m=D(m);}else return l}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()};Hh.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};
    Hh.F=3;
    function Ih(a,b){return function(){function c(m,r,t){return a.A?a.A(b,m,r,t):a.call(null,b,m,r,t)}function d(m,r){return a.hh?a.hh(b,m,r):a.call(null,b,m,r)}function e(m){return a.gh?a.gh(b,m):a.call(null,b,m)}function f(){return a.m?a.m(b):a.call(null,b)}var k=null,l=function(){function m(t,v,y,E){var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Pe(T,0,null);}return r.call(this,t,v,y,H)}function r(t,v,y,E){return ih(a,b,t,v,y,G([E]))}
    m.F=3;m.G=function(t){var v=C(t);t=D(t);var y=C(t);t=D(t);var E=C(t);t=Qe(t);return r(v,y,E,t)};m.g=r;return m}();k=function(m,r,t,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,m,r,t);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=arguments[y+3],++y;y=new Pe(E,0,null);}return l.g(m,r,t,y)}};k.F=3;k.G=l.G;k.o=
    f;k.m=e;k.gh=d;k.hh=c;k.g=l.g;return k}()}
    function Jh(a,b,c){return function(){function d(r,t,v){return a.K?a.K(b,c,r,t,v):a.call(null,b,c,r,t,v)}function e(r,t){return a.A?a.A(b,c,r,t):a.call(null,b,c,r,t)}function f(r){return a.hh?a.hh(b,c,r):a.call(null,b,c,r)}function k(){return a.gh?a.gh(b,c):a.call(null,b,c)}var l=null,m=function(){function r(v,y,E,H){var T=null;if(3<arguments.length){T=0;for(var Y=Array(arguments.length-3);T<Y.length;)Y[T]=arguments[T+3],++T;T=new Pe(Y,0,null);}return t.call(this,v,y,E,T)}function t(v,y,E,H){return ih(a,
    b,c,v,y,G([E,H]))}r.F=3;r.G=function(v){var y=C(v);v=D(v);var E=C(v);v=D(v);var H=C(v);v=Qe(v);return t(y,E,H,v)};r.g=t;return r}();l=function(r,t,v,y){switch(arguments.length){case 0:return k.call(this);case 1:return f.call(this,r);case 2:return e.call(this,r,t);case 3:return d.call(this,r,t,v);default:var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Pe(H,0,null);}return m.g(r,t,v,E)}};l.F=3;l.G=m.G;l.o=k;l.m=f;l.gh=e;l.hh=d;l.g=m.g;return l}()}
    function Kh(a,b,c,d){return function(){function e(t,v,y){return a.la?a.la(b,c,d,t,v,y):a.call(null,b,c,d,t,v,y)}function f(t,v){return a.K?a.K(b,c,d,t,v):a.call(null,b,c,d,t,v)}function k(t){return a.A?a.A(b,c,d,t):a.call(null,b,c,d,t)}function l(){return a.hh?a.hh(b,c,d):a.call(null,b,c,d)}var m=null,r=function(){function t(y,E,H,T){var Y=null;if(3<arguments.length){Y=0;for(var ia=Array(arguments.length-3);Y<ia.length;)ia[Y]=arguments[Y+3],++Y;Y=new Pe(ia,0,null);}return v.call(this,y,E,H,Y)}function v(y,
    E,H,T){return ih(a,b,c,d,y,G([E,H,T]))}t.F=3;t.G=function(y){var E=C(y);y=D(y);var H=C(y);y=D(y);var T=C(y);y=Qe(y);return v(E,H,T,y)};t.g=v;return t}();m=function(t,v,y,E){switch(arguments.length){case 0:return l.call(this);case 1:return k.call(this,t);case 2:return f.call(this,t,v);case 3:return e.call(this,t,v,y);default:var H=null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Pe(T,0,null);}return r.g(t,v,y,H)}};m.F=3;m.G=r.G;m.o=l;m.m=k;m.gh=f;m.hh=e;m.g=r.g;return m}()}
    function Lh(a,b){return function(){function c(l,m,r){l=null==l?b:l;return a.hh?a.hh(l,m,r):a.call(null,l,m,r)}function d(l,m){l=null==l?b:l;return a.gh?a.gh(l,m):a.call(null,l,m)}function e(l){l=null==l?b:l;return a.m?a.m(l):a.call(null,l)}var f=null,k=function(){function l(r,t,v,y){var E=null;if(3<arguments.length){E=0;for(var H=Array(arguments.length-3);E<H.length;)H[E]=arguments[E+3],++E;E=new Pe(H,0,null);}return m.call(this,r,t,v,E)}function m(r,t,v,y){return hh(a,null==r?b:r,t,v,y)}l.F=3;l.G=
    function(r){var t=C(r);r=D(r);var v=C(r);r=D(r);var y=C(r);r=Qe(r);return m(t,v,y,r)};l.g=m;return l}();f=function(l,m,r,t){switch(arguments.length){case 1:return e.call(this,l);case 2:return d.call(this,l,m);case 3:return c.call(this,l,m,r);default:var v=null;if(3<arguments.length){v=0;for(var y=Array(arguments.length-3);v<y.length;)y[v]=arguments[v+3],++v;v=new Pe(y,0,null);}return k.g(l,m,r,v)}};f.F=3;f.G=k.G;f.m=e;f.gh=d;f.hh=c;f.g=k.g;return f}()}
    function Mh(a){this.state=a;this.bf=this.Tf=this.H=null;this.I=16386;this.h=6455296;}g=Mh.prototype;g.Y=function(a,b){return this===b};g.zb=function(){return this.state};g.N=function(){return this.H};
    g.Ge=function(a,b,c){a=B(this.bf);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f),l=J(k,0,null);k=J(k,1,null);k.A?k.A(l,this,b,c):k.call(null,l,this,b,c);f+=1;}else if(a=B(a))Vf(a)?(d=qe(a),a=re(a),l=d,e=F(d),d=l):(d=C(a),l=J(d,0,null),k=J(d,1,null),k.A?k.A(l,this,b,c):k.call(null,l,this,b,c),a=D(a),d=null,e=0),f=0;else return null};g.Z=function(){return fb(this)};function Nh(a){return new Mh(a)}
    function Oh(a,b){if(a instanceof Mh){var c=a.Tf;if(null!=c&&!p(c.m?c.m(b):c.call(null,b)))throw Error("Validator rejected reference state");c=a.state;a.state=b;null!=a.bf&&a.Ge(null,c,b);return b}return ue(a,b)}function Ph(a,b){var c=a.Tf;if(null!=c&&!p(c.m?c.m(b):c.call(null,b)))throw Error("Validator rejected reference state");c=a.state;a.state=b;null!=a.bf&&he(a,c,b);return new Q(null,2,5,R,[c,b],null)}
    var Qh=function Qh(a){switch(arguments.length){case 2:return Qh.gh(arguments[0],arguments[1]);case 3:return Qh.hh(arguments[0],arguments[1],arguments[2]);case 4:return Qh.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Qh.g(arguments[0],arguments[1],arguments[2],arguments[3],new Pe(c.slice(4),0,null))}};
    Qh.gh=function(a,b){if(a instanceof Mh){var c=a.state;b=b.m?b.m(c):b.call(null,c);a=Oh(a,b);}else a=ve(a,b);return a};Qh.hh=function(a,b,c){if(a instanceof Mh){var d=a.state;b=b.gh?b.gh(d,c):b.call(null,d,c);a=Oh(a,b);}else a=ve(a,b,c);return a};Qh.A=function(a,b,c,d){if(a instanceof Mh){var e=a.state;b=b.hh?b.hh(e,c,d):b.call(null,e,c,d);a=Oh(a,b);}else a=ve(a,b,c,d);return a};Qh.g=function(a,b,c,d,e){return a instanceof Mh?Oh(a,hh(b,a.state,c,d,e)):ve(a,b,c,d,e)};
    Qh.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};Qh.F=4;function Rh(a,b){var c=a.state;b=b.m?b.m(c):b.call(null,c);return Ph(a,b)}function Sh(a,b){var c=a.state;b=Gf.gh?Gf.gh(c,b):Gf.call(null,c,b);return Ph(a,b)}function Th(a){this.state=a;this.h=32768;this.I=0;}Th.prototype.Cc=function(a,b){return this.state=b};Th.prototype.zb=function(){return this.state};function Uh(a,b){we(a,b);}
    var Vh=function Vh(a){switch(arguments.length){case 1:return Vh.m(arguments[0]);case 2:return Vh.gh(arguments[0],arguments[1]);case 3:return Vh.hh(arguments[0],arguments[1],arguments[2]);case 4:return Vh.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Vh.g(arguments[0],arguments[1],arguments[2],arguments[3],new Pe(c.slice(4),0,null))}};
    Vh.m=function(a){return function(b){return function(){function c(l,m){m=a.m?a.m(m):a.call(null,m);return b.gh?b.gh(l,m):b.call(null,l,m)}function d(l){return b.m?b.m(l):b.call(null,l)}function e(){return b.o?b.o():b.call(null)}var f=null,k=function(){function l(r,t,v){var y=null;if(2<arguments.length){y=0;for(var E=Array(arguments.length-2);y<E.length;)E[y]=arguments[y+2],++y;y=new Pe(E,0,null);}return m.call(this,r,t,y)}function m(r,t,v){t=fh(a,t,v);return b.gh?b.gh(r,t):b.call(null,r,t)}l.F=2;l.G=
    function(r){var t=C(r);r=D(r);var v=C(r);r=Qe(r);return m(t,v,r)};l.g=m;return l}();f=function(l,m,r){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,l);case 2:return c.call(this,l,m);default:var t=null;if(2<arguments.length){t=0;for(var v=Array(arguments.length-2);t<v.length;)v[t]=arguments[t+2],++t;t=new Pe(v,0,null);}return k.g(l,m,t)}};f.F=2;f.G=k.G;f.o=e;f.m=d;f.gh=c;f.g=k.g;return f}()}};
    Vh.gh=function(a,b){return new Lg(null,function(){var c=B(b);if(c){if(Vf(c)){for(var d=qe(c),e=F(d),f=Pg(e),k=0;;)if(k<e)Sg(f,function(){var l=pd(d,k);return a.m?a.m(l):a.call(null,l)}()),k+=1;else break;return Rg(Tg(f),Vh.gh(a,re(c)))}return uf(function(){var l=C(c);return a.m?a.m(l):a.call(null,l)}(),Vh.gh(a,Qe(c)))}return null},null,null)};
    Vh.hh=function(a,b,c){return new Lg(null,function(){var d=B(b),e=B(c);if(d&&e){var f=C(d);var k=C(e);f=a.gh?a.gh(f,k):a.call(null,f,k);d=uf(f,Vh.hh(a,Qe(d),Qe(e)));}else d=null;return d},null,null)};Vh.A=function(a,b,c,d){return new Lg(null,function(){var e=B(b),f=B(c),k=B(d);if(e&&f&&k){var l=C(e);var m=C(f),r=C(k);l=a.hh?a.hh(l,m,r):a.call(null,l,m,r);e=uf(l,Vh.A(a,Qe(e),Qe(f),Qe(k)));}else e=null;return e},null,null)};
    Vh.g=function(a,b,c,d,e){return Vh.gh(function(f){return eh(a,f)},function l(k){return new Lg(null,function(){var m=Vh.gh(B,k);return Ch(kg,m)?uf(Vh.gh(C,m),l(Vh.gh(Qe,m))):null},null,null)}(Bf.g(e,d,G([c,b]))))};Vh.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};Vh.F=4;
    var Wh=function Wh(a){switch(arguments.length){case 1:return Wh.m(arguments[0]);case 2:return Wh.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    Wh.m=function(a){return function(b){var c=new Th(a);return function(){function d(l,m){var r=u(c),t=c.Cc(null,c.zb(null)-1);l=0<r?b.gh?b.gh(l,m):b.call(null,l,m):l;return 0<t?l:bf(l)?l:af(l)}function e(l){return b.m?b.m(l):b.call(null,l)}function f(){return b.o?b.o():b.call(null)}var k=null;k=function(l,m){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,l);case 2:return d.call(this,l,m)}throw Error("Invalid arity: "+arguments.length);};k.o=f;k.m=e;k.gh=d;return k}()}};
    Wh.gh=function(a,b){return new Lg(null,function(){if(0<a){var c=B(b);return c?uf(C(c),Wh.gh(a-1,Qe(c))):null}return null},null,null)};Wh.F=2;function Xh(a,b){return new Lg(null,function(){a:for(var c=a,d=b;;)if(d=B(d),0<c&&d)--c,d=Qe(d);else break a;return d},null,null)}function Yh(a,b){return Vh.hh(function(c){return c},b,Xh(a,b))}function Zh(a,b,c,d){this.H=a;this.count=b;this.ai=c;this.next=d;this.B=null;this.h=32374988;this.I=1;}g=Zh.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,this.count)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){return null==this.next?1<this.count?this.next=new Zh(null,this.count-1,this.ai,null):-1===this.count?this:null:this.next};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Bd=function(){return !1};g.Ba=function(a,b){if(-1===this.count)for(var c=b.gh?b.gh(this.ai,this.ai):b.call(null,this.ai,this.ai);;){if(bf(c))return u(c);c=b.gh?b.gh(c,this.ai):b.call(null,c,this.ai);}else for(a=1,c=this.ai;;)if(a<this.count){c=b.gh?b.gh(c,this.ai):b.call(null,c,this.ai);if(bf(c))return u(c);a+=1;}else return c};
    g.Ca=function(a,b,c){if(-1===this.count)for(c=b.gh?b.gh(c,this.ai):b.call(null,c,this.ai);;){if(bf(c))return u(c);c=b.gh?b.gh(c,this.ai):b.call(null,c,this.ai);}else for(a=0;;)if(a<this.count){c=b.gh?b.gh(c,this.ai):b.call(null,c,this.ai);if(bf(c))return u(c);a+=1;}else return c};g.Fa=function(){return this.ai};g.Ha=function(){return null==this.next?1<this.count?this.next=new Zh(null,this.count-1,this.ai,null):-1===this.count?this:Re:this.next};g.bi=function(){return this};
    g.O=function(a,b){return b===this.H?this:new Zh(b,this.count,this.ai,this.next)};g.ga=function(a,b){return uf(b,this)};function AO(a){return new Zh(null,-1,a,null)}function $h(a,b){return 0<a?new Zh(null,a,b,null):Re}
    var ai=function ai(a){switch(arguments.length){case 0:return ai.o();case 1:return ai.m(arguments[0]);case 2:return ai.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ai.g(arguments[0],arguments[1],new Pe(c.slice(2),0,null))}};ai.o=function(){return Re};ai.m=function(a){return new Lg(null,function(){return a},null,null)};
    ai.gh=function(a,b){return new Lg(null,function(){var c=B(a),d=B(b);return c&&d?uf(C(c),uf(C(d),ai.gh(Qe(c),Qe(d)))):null},null,null)};ai.g=function(a,b,c){return new Lg(null,function(){var d=Vh.gh(B,Bf.g(c,b,G([a])));return Ch(kg,d)?Wg.gh(Vh.gh(C,d),eh(ai,Vh.gh(Qe,d))):null},null,null)};ai.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};ai.F=2;
    function bi(){return function(a){var b=new Th(!1);return function(){function c(k,l){if(p(u(b)))return k=a.gh?a.gh(k," "):a.call(null,k," "),bf(k)?k:a.gh?a.gh(k,l):a.call(null,k,l);we(b,!0);return a.gh?a.gh(k,l):a.call(null,k,l)}function d(k){return a.m?a.m(k):a.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);
    };f.o=e;f.m=d;f.gh=c;return f}()}}function di(a,b){return eh(Wg,fh(Vh,a,b))}var ei=function ei(a){switch(arguments.length){case 1:return ei.m(arguments[0]);case 2:return ei.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    ei.m=function(a){return function(b){return function(){function c(k,l){return p(a.m?a.m(l):a.call(null,l))?b.gh?b.gh(k,l):b.call(null,k,l):k}function d(k){return b.m?b.m(k):b.call(null,k)}function e(){return b.o?b.o():b.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+arguments.length);};f.o=e;f.m=d;f.gh=c;return f}()}};
    ei.gh=function(a,b){return new Lg(null,function(){var c=B(b);if(c){if(Vf(c)){for(var d=qe(c),e=F(d),f=Pg(e),k=0;;)if(k<e){var l=pd(d,k);l=a.m?a.m(l):a.call(null,l);p(l)&&(l=pd(d,k),f.add(l));k+=1;}else break;return Rg(Tg(f),ei.gh(a,re(c)))}d=C(c);c=Qe(c);return p(a.m?a.m(d):a.call(null,d))?uf(d,ei.gh(a,c)):ei.gh(a,c)}return null},null,null)};ei.F=2;
    var fi=function fi(a){switch(arguments.length){case 1:return fi.m(arguments[0]);case 2:return fi.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};fi.m=function(a){return ei.m(Fh(a))};fi.gh=function(a,b){return ei.gh(Fh(a),b)};fi.F=2;function gi(a){return function d(c){return new Lg(null,function(){return uf(c,p(Sf.m?Sf.m(c):Sf.call(null,c))?di(d,G([B.m?B.m(c):B.call(null,c)])):null)},null,null)}(a)}
    function hi(a){return ei.gh(function(b){return !Sf(b)},Qe(gi(a)))}var ii=function ii(a){switch(arguments.length){case 0:return ii.o();case 1:return ii.m(arguments[0]);case 2:return ii.gh(arguments[0],arguments[1]);case 3:return ii.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};ii.o=function(){return I};ii.m=function(a){return a};
    ii.gh=function(a,b){return null!=a?null!=a&&(a.I&4||h===a.cg)?Od(ke(fd.hh(je,ie(a),b)),Kf(a)):fd.hh(nd,a,b):fd.hh(Bf,a,b)};ii.hh=function(a,b,c){return null!=a&&(a.I&4||h===a.cg)?Od(ke(ng(b,Xg,ie(a),c)),Kf(a)):ng(b,Bf,a,c)};ii.F=3;
    var ji=function ji(a){switch(arguments.length){case 2:return ji.gh(arguments[0],arguments[1]);case 3:return ji.hh(arguments[0],arguments[1],arguments[2]);case 4:return ji.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ji.g(arguments[0],arguments[1],arguments[2],arguments[3],new Pe(c.slice(4),0,null))}};
    ji.gh=function(a,b){return ke(fd.hh(function(c,d){return Xg.gh(c,a.m?a.m(d):a.call(null,d))},ie(I),b))};ji.hh=function(a,b,c){return ii.gh(I,Vh.hh(a,b,c))};ji.A=function(a,b,c,d){return ii.gh(I,Vh.A(a,b,c,d))};ji.g=function(a,b,c,d,e){return ii.gh(I,ih(Vh,a,b,c,d,G([e])))};ji.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);e=D(e);return this.g(b,a,c,d,e)};ji.F=4;function ki(a,b){return ke(fd.hh(function(c,d){return p(a.m?a.m(d):a.call(null,d))?Xg.gh(c,d):c},ie(I),b))}
    var li=function li(a){switch(arguments.length){case 2:return li.gh(arguments[0],arguments[1]);case 3:return li.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};li.gh=function(a,b){return fd.hh(x,a,b)};li.hh=function(a,b,c){var d=Xf;for(b=B(b);;)if(null!=b){a=x.hh(a,C(b),d);if(d===a)return c;b=D(b);}else return a};li.F=3;
    var mi=function mi(a,b,c){var e=B(b);b=C(e);var f=D(e);if(f){e=K.hh;var k=x.gh(a,b);c=mi.hh?mi.hh(k,f,c):mi.call(null,k,f,c);a=e.call(K,a,b,c);}else a=K.hh(a,b,c);return a},ni=function ni(a){switch(arguments.length){case 3:return ni.hh(arguments[0],arguments[1],arguments[2]);case 4:return ni.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return ni.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return ni.la(arguments[0],arguments[1],arguments[2],arguments[3],
    arguments[4],arguments[5]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return ni.g(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],new Pe(c.slice(6),0,null))}};ni.hh=function(a,b,c){var d=B(b);b=C(d);if(d=D(d))a=K.hh(a,b,ni.hh(x.gh(a,b),d,c));else {d=K.hh;var e=x.gh(a,b);c=c.m?c.m(e):c.call(null,e);a=d.call(K,a,b,c);}return a};
    ni.A=function(a,b,c,d){var e=B(b);b=C(e);if(e=D(e))a=K.hh(a,b,ni.A(x.gh(a,b),e,c,d));else {e=K.hh;var f=x.gh(a,b);c=c.gh?c.gh(f,d):c.call(null,f,d);a=e.call(K,a,b,c);}return a};ni.K=function(a,b,c,d,e){var f=B(b);b=C(f);if(f=D(f))a=K.hh(a,b,ni.K(x.gh(a,b),f,c,d,e));else {f=K.hh;var k=x.gh(a,b);c=c.hh?c.hh(k,d,e):c.call(null,k,d,e);a=f.call(K,a,b,c);}return a};
    ni.la=function(a,b,c,d,e,f){var k=B(b);b=C(k);if(k=D(k))a=K.hh(a,b,ni.la(x.gh(a,b),k,c,d,e,f));else {k=K.hh;var l=x.gh(a,b);c=c.A?c.A(l,d,e,f):c.call(null,l,d,e,f);a=k.call(K,a,b,c);}return a};ni.g=function(a,b,c,d,e,f,k){var l=B(b);b=C(l);return (l=D(l))?K.hh(a,b,ih(ni,x.gh(a,b),l,c,d,G([e,f,k]))):K.hh(a,b,ih(c,x.gh(a,b),d,e,f,G([k])))};ni.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);var e=D(d);d=C(e);var f=D(e);e=C(f);var k=D(f);f=C(k);k=D(k);return this.g(b,a,c,d,e,f,k)};ni.F=6;
    function oi(a,b,c){var d=K.hh,e=x.gh(a,b);c=c.m?c.m(e):c.call(null,e);return d.call(K,a,b,c)}function pi(a,b,c,d){var e=K.hh,f=x.gh(a,b);c=c.gh?c.gh(f,d):c.call(null,f,d);return e.call(K,a,b,c)}function qi(a,b){this.va=a;this.l=b;}function ri(a){return new qi(a,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])}function si(a){return new qi(a.va,dd(a.l))}
    function ti(a){a=a.C;return 32>a?0:a-1>>>5<<5}function ui(a,b,c){for(;;){if(0===b)return c;var d=ri(a);d.l[0]=c;c=d;b-=5;}}var vi=function vi(a,b,c,d){var f=si(c),k=a.C-1>>>b&31;5===b?f.l[k]=d:(c=c.l[k],null!=c?(b-=5,a=vi.A?vi.A(a,b,c,d):vi.call(null,a,b,c,d)):a=ui(null,b-5,d),f.l[k]=a);return f};function wi(a,b){throw Error(["No item ",q.m(a)," in vector of length ",q.m(b)].join(""));}
    function xi(a,b){if(b>=ti(a))return a.ta;var c=a.root;for(a=a.shift;;)if(0<a){var d=a-5;c=c.l[b>>>a&31];a=d;}else return c.l}function yi(a,b){return 0<=b&&b<a.C?xi(a,b):wi(b,a.C)}
    var zi=function zi(a,b,c,d,e){var k=si(c);if(0===b)k.l[d&31]=e;else {var l=d>>>b&31;b-=5;c=c.l[l];a=zi.K?zi.K(a,b,c,d,e):zi.call(null,a,b,c,d,e);k.l[l]=a;}return k},Ai=function Ai(a,b,c){var e=a.C-2>>>b&31;if(5<b){b-=5;var f=c.l[e];a=Ai.hh?Ai.hh(a,b,f):Ai.call(null,a,b,f);if(null==a&&0===e)return null;c=si(c);c.l[e]=a;return c}if(0===e)return null;c=si(c);c.l[e]=null;return c};function Bi(a,b,c,d,e,f){this.J=a;this.Td=b;this.l=c;this.ka=d;this.start=e;this.end=f;}
    Bi.prototype.ra=function(){return this.J<this.end};Bi.prototype.next=function(){32===this.J-this.Td&&(this.l=xi(this.ka,this.J),this.Td+=32);var a=this.l[this.J&31];this.J+=1;return a};function Ci(a,b,c){return new Bi(b,b-b%32,b<F(a)?xi(a,b):null,a,b,c)}function Di(a,b,c,d){return c<d?Ei(a,b,nf(a,c),c+1,d):b.o?b.o():b.call(null)}function Ei(a,b,c,d,e){var f=c;c=d;for(d=xi(a,d);;)if(c<e){var k=c&31;d=0===k?xi(a,c):d;k=d[k];f=b.gh?b.gh(f,k):b.call(null,f,k);if(bf(f))return u(f);c+=1;}else return f}
    function Q(a,b,c,d,e,f){this.H=a;this.C=b;this.shift=c;this.root=d;this.ta=e;this.B=f;this.h=167666463;this.I=139268;}g=Q.prototype;g.Ac=function(a,b){return 0<=b&&b<this.C?new Fi(b,xi(this,b)[b&31]):null};g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return "number"===typeof b?this.wa(null,b,c):c};
    g.Aa=function(a,b,c){a=0;for(var d=c;;)if(a<this.C){var e=xi(this,a);c=e.length;a:for(var f=0;;)if(f<c){var k=f+a,l=e[f];d=b.hh?b.hh(d,k,l):b.call(null,d,k,l);if(bf(d)){e=d;break a}f+=1;}else {e=d;break a}if(bf(e))return u(e);a+=c;d=e;}else return d};g.ye=h;g.W=function(a,b){return yi(this,b)[b&31]};g.wa=function(a,b,c){return 0<=b&&b<this.C?xi(this,b)[b&31]:c};
    g.Ib=function(a,b,c){if(0<=b&&b<this.C)return ti(this)<=b?(a=dd(this.ta),a[b&31]=c,new Q(this.H,this.C,this.shift,this.root,a,null)):new Q(this.H,this.C,this.shift,zi(this,this.shift,this.root,b,c),this.ta,null);if(b===this.C)return this.ga(null,c);throw Error(["Index ",q.m(b)," out of bounds  [0,",q.m(this.C),"]"].join(""));};g.ua=function(){return Ci(this,0,this.C)};g.N=function(){return this.H};g.X=function(){return this.C};g.Xb=function(){return 0<this.C?this.W(null,this.C-1):null};
    g.Yb=function(){if(0===this.C)throw Error("Can't pop empty vector");if(1===this.C)return Od(I,this.H);if(1<this.C-ti(this))return new Q(this.H,this.C-1,this.shift,this.root,this.ta.slice(0,-1),null);var a=xi(this,this.C-2),b=Ai(this,this.shift,this.root);b=null==b?R:b;var c=this.C-1;return 5<this.shift&&null==b.l[1]?new Q(this.H,c,this.shift-5,b.l[0],a,null):new Q(this.H,c,this.shift,b,a,null)};g.Bc=function(){return 0<this.C?new sf(this,this.C-1,null):null};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){if(b instanceof Q)if(this.C===F(b))for(a=this.ua(null),b=b.ua(null);;)if(a.ra()){var c=a.next(),d=b.next();if(!A.gh(c,d))return !1}else return !0;else return !1;else return tf(this,b)};g.hd=function(){return new Gi(this.C,this.shift,Hi.m?Hi.m(this.root):Hi.call(null,this.root),Ii.m?Ii.m(this.ta):Ii.call(null,this.ta))};g.pa=function(){return Od(I,this.H)};g.Ba=function(a,b){return Di(this,b,0,this.C)};
    g.Ca=function(a,b,c){a=0;for(var d=c;;)if(a<this.C){var e=xi(this,a);c=e.length;a:for(var f=0;;)if(f<c){var k=e[f];d=b.gh?b.gh(d,k):b.call(null,d,k);if(bf(d)){e=d;break a}f+=1;}else {e=d;break a}if(bf(e))return u(e);a+=c;d=e;}else return d};g.fa=function(a,b,c){if("number"===typeof b)return this.Ib(null,b,c);throw Error("Vector's key for assoc must be a number.");};g.La=function(a,b){return ag(b)?0<=b&&b<this.C:!1};
    g.bi=function(){if(0===this.C)return null;if(32>=this.C)return new Pe(this.ta,0,null);a:{var a=this.root;for(var b=this.shift;;)if(0<b)b-=5,a=a.l[0];else {a=a.l;break a}}return Ji?Ji(this,a,0,0):Ki.call(null,this,a,0,0)};g.O=function(a,b){return b===this.H?this:new Q(b,this.C,this.shift,this.root,this.ta,this.B)};
    g.ga=function(a,b){if(32>this.C-ti(this)){a=this.ta.length;for(var c=Array(a+1),d=0;;)if(d<a)c[d]=this.ta[d],d+=1;else break;c[a]=b;return new Q(this.H,this.C+1,this.shift,this.root,c,null)}a=(c=this.C>>>5>1<<this.shift)?this.shift+5:this.shift;c?(c=ri(null),c.l[0]=this.root,d=ui(null,this.shift,new qi(null,this.ta)),c.l[1]=d):c=vi(this,this.shift,this.root,new qi(null,this.ta));return new Q(this.H,this.C+1,a,c,[b],null)};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){if("number"===typeof a)return this.W(null,a);throw Error("Key must be integer");};
    var R=new qi(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]),I=new Q(null,0,5,R,[],We);function Li(a,b){var c=a.length;a=b?a:dd(a);if(32>c)return new Q(null,c,5,R,a,null);b=32;for(var d=(new Q(null,32,5,R,a.slice(0,32),null)).hd(null);;)if(b<c){var e=b+1;d=Xg.gh(d,a[b]);b=e;}else return ke(d)}Q.prototype[$c]=function(){return Te(this)};
    function Mi(a){return p(Ni.m?Ni.m(a):Ni.call(null,a))?new Q(null,2,5,R,[Oi.m?Oi.m(a):Oi.call(null,a),Pi.m?Pi.m(a):Pi.call(null,a)],null):Uf(a)?Jf(a,null):Qc(a)?Li(a,!0):ke(fd.hh(je,ie(I),a))}var Qi=function Qi(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Qi.g(0<c.length?new Pe(c.slice(0),0,null):null)};Qi.g=function(a){return a instanceof Pe&&0===a.J?Li(a.l,!Qc(a.l)):Mi(a)};Qi.F=0;Qi.G=function(a){return this.g(B(a))};
    function Ri(a,b,c,d,e){this.Gb=a;this.node=b;this.J=c;this.$a=d;this.H=e;this.B=null;this.h=32375020;this.I=1536;}g=Ri.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){if(this.$a+1<this.node.length){var a=this.Gb;var b=this.node,c=this.J,d=this.$a+1;a=Ji?Ji(a,b,c,d):Ki.call(null,a,b,c,d);return null==a?null:a}return this.Ae()};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return Di(this.Gb,b,this.J+this.$a,F(this.Gb))};g.Ca=function(a,b,c){return Ei(this.Gb,b,c,this.J+this.$a,F(this.Gb))};g.Fa=function(){return this.node[this.$a]};g.Ha=function(){if(this.$a+1<this.node.length){var a=this.Gb;var b=this.node,c=this.J,d=this.$a+1;a=Ji?Ji(a,b,c,d):Ki.call(null,a,b,c,d);return null==a?Re:a}return this.gd(null)};g.bi=function(){return this};
    g.$d=function(){var a=this.node;return new Og(a,this.$a,a.length)};g.gd=function(){var a=this.J+this.node.length;if(a<jd(this.Gb)){var b=this.Gb,c=xi(this.Gb,a);return Ji?Ji(b,c,a,0):Ki.call(null,b,c,a,0)}return Re};g.O=function(a,b){return b===this.H?this:Si?Si(this.Gb,this.node,this.J,this.$a,b):Ki.call(null,this.Gb,this.node,this.J,this.$a,b)};g.ga=function(a,b){return uf(b,this)};
    g.Ae=function(){var a=this.J+this.node.length;if(a<jd(this.Gb)){var b=this.Gb,c=xi(this.Gb,a);return Ji?Ji(b,c,a,0):Ki.call(null,b,c,a,0)}return null};Ri.prototype[$c]=function(){return Te(this)};
    function Ki(a){switch(arguments.length){case 3:var b=arguments[0],c=arguments[1],d=arguments[2];return new Ri(b,yi(b,c),c,d,null);case 4:return Ji(arguments[0],arguments[1],arguments[2],arguments[3]);case 5:return Si(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function Ji(a,b,c,d){return new Ri(a,b,c,d,null)}function Si(a,b,c,d,e){return new Ri(a,b,c,d,e)}
    function Ti(a,b,c,d,e){this.H=a;this.ka=b;this.start=c;this.end=d;this.B=e;this.h=167666463;this.I=139264;}g=Ti.prototype;g.Ac=function(a,b){if(0>b)return null;a=this.start+b;return a<this.end?new Fi(b,wd(this.ka,a)):null};g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return "number"===typeof b?this.wa(null,b,c):c};
    g.Aa=function(a,b,c){a=this.start;for(var d=0;;)if(a<this.end){var e=d,f=pd(this.ka,a);c=b.hh?b.hh(c,e,f):b.call(null,c,e,f);if(bf(c))return u(c);d+=1;a+=1;}else return c};g.W=function(a,b){return 0>b||this.end<=this.start+b?wi(b,this.end-this.start):pd(this.ka,this.start+b)};g.wa=function(a,b,c){return 0>b||this.end<=this.start+b?c:pd(this.ka,this.start+b,c)};
    g.Ib=function(a,b,c){a=this.start+b;if(0>b||this.end+1<=a)throw Error(["Index ",q.m(b)," out of bounds [0,",q.m(this.X(null)),"]"].join(""));b=this.H;c=K.hh(this.ka,a,c);var d=this.start,e=this.end;a+=1;a=e>a?e:a;return Ui.K?Ui.K(b,c,d,a,null):Ui.call(null,b,c,d,a,null)};g.ua=function(){return null!=this.ka&&h===this.ka.ye?Ci(this.ka,this.start,this.end):new rh(this)};g.N=function(){return this.H};g.X=function(){return this.end-this.start};
    g.Xb=function(){return this.start===this.end?null:pd(this.ka,this.end-1)};g.Yb=function(){if(this.start===this.end)throw Error("Can't pop empty vector");var a=this.H,b=this.ka,c=this.start,d=this.end-1;return Ui.K?Ui.K(a,b,c,d,null):Ui.call(null,a,b,c,d,null)};g.Bc=function(){return this.start!==this.end?new sf(this,this.end-this.start-1,null):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Od(I,this.H)};
    g.Ba=function(a,b){return null!=this.ka&&h===this.ka.ye?Di(this.ka,b,this.start,this.end):ef(this,b)};g.Ca=function(a,b,c){return null!=this.ka&&h===this.ka.ye?Ei(this.ka,b,c,this.start,this.end):ff(this,b,c)};g.fa=function(a,b,c){if("number"===typeof b)return this.Ib(null,b,c);throw Error("Subvec's key for assoc must be a number.");};g.La=function(a,b){return ag(b)?0<=b&&b<this.end-this.start:!1};
    g.bi=function(){var a=this;return function d(c){return c===a.end?null:uf(pd(a.ka,c),new Lg(null,function(){return d(c+1)},null,null))}(a.start)};g.O=function(a,b){return b===this.H?this:Ui.K?Ui.K(b,this.ka,this.start,this.end,this.B):Ui.call(null,b,this.ka,this.start,this.end,this.B)};g.ga=function(a,b){a=this.H;b=Jd(this.ka,this.end,b);var c=this.start,d=this.end+1;return Ui.K?Ui.K(a,b,c,d,null):Ui.call(null,a,b,c,d,null)};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.W(null,a)};g.gh=function(a,b){return this.wa(null,a,b)};Ti.prototype[$c]=function(){return Te(this)};
    function Ui(a,b,c,d,e){for(;;)if(b instanceof Ti)c=b.start+c,d=b.start+d,b=b.ka;else {if(!Uf(b))throw Error("v must satisfy IVector");if(0>c||d<c||d>F(b))throw Error("Index out of bounds");return new Ti(a,b,c,d,e)}}function Vi(a,b,c){return Ui(null,a,b|0,c|0,null)}function Wi(a,b){return a===b.va?b:new qi(a,dd(b.l))}function Hi(a){return new qi({},dd(a.l))}
    function Ii(a){var b=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];Wf(a,0,b,0,a.length);return b}var Xi=function Xi(a,b,c,d){c=Wi(a.root.va,c);var f=a.C-1>>>b&31;if(5===b)a=d;else {var k=c.l[f];null!=k?(b-=5,a=Xi.A?Xi.A(a,b,k,d):Xi.call(null,a,b,k,d)):a=ui(a.root.va,b-5,d);}c.l[f]=a;return c};function Gi(a,b,c,d){this.C=a;this.shift=b;this.root=c;this.ta=d;this.I=88;this.h=275;}g=Gi.prototype;
    g.kd=function(a,b){if(this.root.va){if(32>this.C-ti(this))this.ta[this.C&31]=b;else {a=new qi(this.root.va,this.ta);var c=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];c[0]=b;this.ta=c;this.C>>>5>1<<this.shift?(b=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],c=this.shift+
    5,b[0]=this.root,b[1]=ui(this.root.va,this.shift,a),this.root=new qi(this.root.va,b),this.shift=c):this.root=Xi(this,this.shift,this.root,a);}this.C+=1;return this}throw Error("conj! after persistent!");};g.Cd=function(){if(this.root.va){this.root.va=null;var a=this.C-ti(this),b=Array(a);Wf(this.ta,0,b,0,a);return new Q(null,this.C,this.shift,this.root,b,null)}throw Error("persistent! called twice");};
    g.jd=function(a,b,c){if("number"===typeof b)return Yi(this,b,c);throw Error("TransientVector's key for assoc! must be a number.");};
    function Yi(a,b,c){if(a.root.va){if(0<=b&&b<a.C){if(ti(a)<=b)a.ta[b&31]=c;else {var d=function l(f,k){k=Wi(a.root.va,k);if(0===f)k.l[b&31]=c;else {var m=b>>>f&31;f=l(f-5,k.l[m]);k.l[m]=f;}return k}(a.shift,a.root);a.root=d;}return a}if(b===a.C)return a.kd(null,c);throw Error(["Index ",q.m(b)," out of bounds for TransientVector of length",q.m(a.C)].join(""));}throw Error("assoc! after persistent!");}g.X=function(){if(this.root.va)return this.C;throw Error("count after persistent!");};
    g.W=function(a,b){if(this.root.va)return yi(this,b)[b&31];throw Error("nth after persistent!");};g.wa=function(a,b,c){return 0<=b&&b<this.C?this.W(null,b):c};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){if(this.root.va)return "number"===typeof b?this.wa(null,b,c):c;throw Error("lookup after persistent!");};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};function Zi(a,b){this.pd=a;this.Rd=b;}
    Zi.prototype.ra=function(){var a=null!=this.pd&&B(this.pd);return a?a:(a=null!=this.Rd)?this.Rd.ra():a};Zi.prototype.next=function(){if(null!=this.pd){var a=C(this.pd);this.pd=D(this.pd);return a}if(null!=this.Rd&&this.Rd.ra())return this.Rd.next();throw Error("No such element");};Zi.prototype.remove=function(){return Error("Unsupported operation")};function $i(a,b,c,d){this.H=a;this.Ab=b;this.Fb=c;this.B=d;this.h=31850700;this.I=0;}g=$i.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=D(this.Ab);return a?new $i(this.H,a,this.Fb,null):null!=this.Fb?new $i(this.H,this.Fb,null,null):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Od(Re,this.H)};g.Fa=function(){return C(this.Ab)};g.Ha=function(){var a=D(this.Ab);return a?new $i(this.H,a,this.Fb,null):null==this.Fb?this.pa(null):new $i(this.H,this.Fb,null,null)};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new $i(b,this.Ab,this.Fb,this.B)};g.ga=function(a,b){return uf(b,this)};$i.prototype[$c]=function(){return Te(this)};
    function aj(a,b,c,d,e){this.H=a;this.count=b;this.Ab=c;this.Fb=d;this.B=e;this.I=139264;this.h=31858766;}g=aj.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,this.count.m?this.count.m(this):this.count.call(null,this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.ua=function(){return new Zi(this.Ab,ye(this.Fb))};g.N=function(){return this.H};g.X=function(){return this.count};g.Xb=function(){return C(this.Ab)};
    g.Yb=function(){if(p(this.Ab)){var a=D(this.Ab);return a?new aj(this.H,this.count-1,a,this.Fb,null):new aj(this.H,this.count-1,B(this.Fb),I,null)}return this};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Od(bj,this.H)};g.Fa=function(){return C(this.Ab)};g.Ha=function(){return Qe(B(this))};g.bi=function(){var a=B(this.Fb),b=this.Ab;return p(p(b)?b:a)?new $i(null,this.Ab,B(a),null):null};
    g.O=function(a,b){return b===this.H?this:new aj(b,this.count,this.Ab,this.Fb,this.B)};g.ga=function(a,b){p(this.Ab)?(a=this.Fb,b=new aj(this.H,this.count+1,this.Ab,Bf.gh(p(a)?a:I,b),null)):b=new aj(this.H,this.count+1,Bf.gh(this.Ab,b),I,null);return b};var bj=new aj(null,0,null,I,We);aj.prototype[$c]=function(){return Te(this)};function cj(){this.h=2097152;this.I=0;}cj.prototype.Y=function(){return !1};var dj=new cj;
    function ej(a,b){return $f(M(b)&&!Tf(b)?F(a)===F(b)?(null!=a?a.h&1048576||h===a.Qh||(a.h?0:Wc(Rd,a)):Wc(Rd,a))?jg(function(c,d,e){return A.gh(x.hh(b,d,dj),e)?!0:af(!1)},!0,a):Ch(function(c){return A.gh(x.hh(b,C(c),dj),yf(c))},a):null:null)}function fj(a,b,c,d){this.J=0;this.zh=a;this.jf=b;this.Vc=c;this.vf=d;}fj.prototype.ra=function(){var a=this.J<this.jf;return a?a:this.vf.ra()};fj.prototype.next=function(){if(this.J<this.jf){var a=nf(this.Vc,this.J);this.J+=1;return new Fi(a,wd(this.zh,a))}return this.vf.next()};
    fj.prototype.remove=function(){return Error("Unsupported operation")};function gj(a){this.ha=a;}gj.prototype.next=function(){if(null!=this.ha){var a=C(this.ha),b=J(a,0,null);a=J(a,1,null);this.ha=D(this.ha);return {value:[b,a],done:!1}}return {value:null,done:!0}};function hj(a){this.ha=a;}hj.prototype.next=function(){if(null!=this.ha){var a=C(this.ha);this.ha=D(this.ha);return {value:[a,a],done:!1}}return {value:null,done:!0}};
    function ij(a,b){if(b instanceof z)a:{var c=a.length;b=b.da;for(var d=0;;){if(c<=d){a=-1;break a}if(a[d]instanceof z&&b===a[d].da){a=d;break a}d+=2;}}else if("string"===typeof b||"number"===typeof b)a:for(c=a.length,d=0;;){if(c<=d){a=-1;break a}if(b===a[d]){a=d;break a}d+=2;}else if(b instanceof w)a:for(c=a.length,b=b.wc,d=0;;){if(c<=d){a=-1;break a}if(a[d]instanceof w&&b===a[d].wc){a=d;break a}d+=2;}else if(null==b)a:for(b=a.length,c=0;;){if(b<=c){a=-1;break a}if(null==a[c]){a=c;break a}c+=2;}else a:for(c=
    a.length,d=0;;){if(c<=d){a=-1;break a}if(A.gh(b,a[d])){a=d;break a}d+=2;}return a}function Fi(a,b){this.key=a;this.ai=b;this.B=null;this.h=166619935;this.I=0;}g=Fi.prototype;g.Ac=function(a,b){switch(b){case 0:return new Fi(0,this.key);case 1:return new Fi(1,this.ai);default:return null}};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.ai;throw Error("Index out of bounds");};
    g.wa=function(a,b,c){return 0===b?this.key:1===b?this.ai:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.ai],null)).Ib(null,b,c)};g.N=function(){return null};g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.ai};g.Xb=function(){return this.ai};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};g.Bc=function(){return new Pe([this.ai,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ef(this,b)};g.Ca=function(a,b,c){return ff(this,b,c)};g.fa=function(a,b,c){return K.hh(new Q(null,2,5,R,[this.key,this.ai],null),b,c)};g.La=function(a,b){return 0===b||1===b};g.bi=function(){return new Pe([this.key,this.ai],0,null)};g.O=function(a,b){return Jf(new Q(null,2,5,R,[this.key,this.ai],null),b)};g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.ai,b],null)};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.W(null,a)};g.gh=function(a,b){return this.wa(null,a,b)};function Ni(a){return null!=a?a.h&2048||h===a.Th?!0:!1:!1}function jj(a,b,c){this.l=a;this.J=b;this.Kb=c;this.h=32374990;this.I=0;}g=jj.prototype;
    g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){return this.J<this.l.length-2?new jj(this.l,this.J+2,null):null};g.X=function(){return (this.l.length-this.J)/2};g.Z=function(){return Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return new Fi(this.l[this.J],this.l[this.J+1])};g.Ha=function(){return this.J<this.l.length-2?new jj(this.l,this.J+2,null):Re};g.bi=function(){return this};g.O=function(a,b){return b===this.Kb?this:new jj(this.l,this.J,b)};g.ga=function(a,b){return uf(b,this)};jj.prototype[$c]=function(){return Te(this)};
    function kj(a,b){this.l=a;this.J=0;this.C=b;}kj.prototype.ra=function(){return this.J<this.C};kj.prototype.next=function(){var a=new Fi(this.l[this.J],this.l[this.J+1]);this.J+=2;return a};function n(a,b,c,d){this.H=a;this.C=b;this.l=c;this.B=d;this.h=16647951;this.I=139268;}g=n.prototype;g.Ac=function(a,b){a=ij(this.l,b);return -1===a?null:new Fi(this.l[a],this.l[a+1])};g.toString=function(){return Ae(this)};g.keys=function(){return Te(lj.m?lj.m(this):lj.call(null,this))};g.entries=function(){return new gj(B(B(this)))};
    g.values=function(){return Te(mj.m?mj.m(this):mj.call(null,this))};g.has=function(a){return N(this,a)};g.get=function(a,b){return this.M(null,a,b)};g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.gh?a.gh(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Vf(b)?(c=qe(b),b=re(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.gh?a.gh(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){a=ij(this.l,b);return -1===a?c:this.l[a+1]};g.Aa=function(a,b,c){a=this.l.length;for(var d=0;;)if(d<a){var e=this.l[d],f=this.l[d+1];c=b.hh?b.hh(c,e,f):b.call(null,c,e,f);if(bf(c))return u(c);d+=2;}else return c};g.ua=function(){return new kj(this.l,2*this.C)};g.N=function(){return this.H};g.X=function(){return this.C};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Xe(this)};
    g.Y=function(a,b){if(M(b)&&!Tf(b))if(a=this.l.length,this.C===b.X(null))for(var c=0;;)if(c<a){var d=b.M(null,this.l[c],Xf);if(d!==Xf)if(A.gh(this.l[c+1],d))c+=2;else return !1;else return !1}else return !0;else return !1;else return !1};g.hd=function(){return new nj(this.l.length,dd(this.l))};g.pa=function(){return Od(S,this.H)};g.Ba=function(a,b){return hg(this,b)};g.Ca=function(a,b,c){return ig(this,b,c)};
    g.Ka=function(a,b){if(0<=ij(this.l,b)){a=this.l.length;var c=a-2;if(0===c)return this.pa(null);c=Array(c);for(var d=0,e=0;;){if(d>=a)return new n(this.H,this.C-1,c,null);A.gh(b,this.l[d])?d+=2:(c[e]=this.l[d],c[e+1]=this.l[d+1],e+=2,d+=2);}}else return this};
    g.fa=function(a,b,c){a=ij(this.l,b);if(-1===a){if(this.C<oj){a=this.l;for(var d=a.length,e=Array(d+2),f=0;;)if(f<d)e[f]=a[f],f+=1;else break;e[d]=b;e[d+1]=c;return new n(this.H,this.C+1,e,null)}return Od(yd(ii.gh(pj,this),b,c),this.H)}if(c===this.l[a+1])return this;b=dd(this.l);b[a+1]=c;return new n(this.H,this.C,b,null)};g.La=function(a,b){return -1!==ij(this.l,b)};g.bi=function(){var a=this.l;return 0<=a.length-2?new jj(a,0,null):null};
    g.O=function(a,b){return b===this.H?this:new n(b,this.C,this.l,this.B)};g.ga=function(a,b){if(Uf(b))return this.fa(null,pd(b,0),pd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Uf(c))a=yd(a,pd(c,0),pd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};var S=new n(null,0,[],Ye),oj=8;function qj(a){return new n(null,a.length/2,a,null)}
    function Ff(a){for(var b=[],c=0;;)if(c<a.length){var d=a[c],e=a[c+1],f=ij(b,d);-1===f?(f=b,f.push(d),f.push(e)):b[f+1]=e;c+=2;}else break;return new n(null,b.length/2,b,null)}n.prototype[$c]=function(){return Te(this)};function nj(a,b){this.Uc={};this.jc=a;this.l=b;this.h=259;this.I=56;}g=nj.prototype;g.X=function(){if(this.Uc)return sg(this.jc,2);throw Error("count after persistent!");};g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){if(this.Uc)return a=ij(this.l,b),-1===a?c:this.l[a+1];throw Error("lookup after persistent!");};g.kd=function(a,b){if(this.Uc){if(Ni(b))return this.jd(null,Oi.m?Oi.m(b):Oi.call(null,b),Pi.m?Pi.m(b):Pi.call(null,b));if(Uf(b))return this.jd(null,b.m?b.m(0):b.call(null,0),b.m?b.m(1):b.call(null,1));a=B(b);for(b=this;;){var c=C(a);if(p(c))a=D(a),b=le(b,Oi.m?Oi.m(c):Oi.call(null,c),Pi.m?Pi.m(c):Pi.call(null,c));else return b}}else throw Error("conj! after persistent!");};
    g.Cd=function(){if(this.Uc)return this.Uc=!1,new n(null,sg(this.jc,2),this.l,null);throw Error("persistent! called twice");};g.jd=function(a,b,c){if(this.Uc){a=ij(this.l,b);if(-1===a)return this.jc+2<=2*oj?(this.jc+=2,this.l.push(b),this.l.push(c),this):Yg(rj.gh?rj.gh(this.jc,this.l):rj.call(null,this.jc,this.l),b,c);c!==this.l[a+1]&&(this.l[a+1]=c);return this}throw Error("assoc! after persistent!");};
    g.Fe=function(a,b){if(this.Uc)return a=ij(this.l,b),0<=a&&(this.l[a]=this.l[this.jc-2],this.l[a+1]=this.l[this.jc-1],a=this.l,a.pop(),a.pop(),this.jc-=2),this;throw Error("dissoc! after persistent!");};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};
    g.m=function(a){return this.M(null,a,null)};g.gh=function(a,b){return this.M(null,a,b)};function rj(a,b){for(var c=ie(pj),d=0;;)if(d<a)c=le(c,b[d],b[d+1]),d+=2;else return c}function sj(){this.ai=!1;}function tj(a,b){return a===b?!0:P(a,b)?!0:A.gh(a,b)}function uj(a,b,c){a=dd(a);a[b]=c;return a}function vj(a,b){var c=Array(a.length-2);Wf(a,0,c,0,2*b);Wf(a,2*(b+1),c,2*b,c.length-2*b);return c}function wj(a,b,c,d){a=a.Gc(b);a.l[c]=d;return a}
    function xj(a,b,c){for(var d=a.length,e=0,f=c;;)if(e<d){c=a[e];if(null!=c){var k=a[e+1];c=b.hh?b.hh(f,c,k):b.call(null,f,c,k);}else c=a[e+1],c=null!=c?c.ad(b,f):f;if(bf(c))return c;e+=2;f=c;}else return f}function yj(a){this.l=a;this.J=0;this.mc=this.Pd=null;}yj.prototype.advance=function(){for(var a=this.l.length;;)if(this.J<a){var b=this.l[this.J],c=this.l[this.J+1];null!=b?b=this.Pd=new Fi(b,c):null!=c?(b=ye(c),b=b.ra()?this.mc=b:!1):b=!1;this.J+=2;if(b)return !0}else return !1};
    yj.prototype.ra=function(){var a=null!=this.Pd;return a?a:(a=null!=this.mc)?a:this.advance()};yj.prototype.next=function(){if(null!=this.Pd){var a=this.Pd;this.Pd=null;return a}if(null!=this.mc)return a=this.mc.next(),this.mc.ra()||(this.mc=null),a;if(this.advance())return this.next();throw Error("No such element");};yj.prototype.remove=function(){return Error("Unsupported operation")};function zj(a,b,c){this.va=a;this.oa=b;this.l=c;this.I=131072;this.h=0;}g=zj.prototype;
    g.Gc=function(a){if(a===this.va)return this;var b=ug(this.oa),c=Array(0>b?4:2*(b+1));Wf(this.l,0,c,0,2*b);return new zj(a,this.oa,c)};g.Md=function(a,b,c,d,e){var f=1<<(c>>>b&31);if(0===(this.oa&f))return this;var k=ug(this.oa&f-1),l=this.l[2*k],m=this.l[2*k+1];return null==l?(b=m.Md(a,b+5,c,d,e),b===m?this:null!=b?wj(this,a,2*k+1,b):this.oa===f?null:Aj(this,a,f,k)):tj(d,l)?(e.ai=!0,Aj(this,a,f,k)):this};
    function Aj(a,b,c,d){if(a.oa===c)return null;a=a.Gc(b);b=a.l;var e=b.length;a.oa^=c;Wf(b,2*(d+1),b,2*d,e-2*(d+1));b[e-2]=null;b[e-1]=null;return a}g.Kd=function(){return Bj?Bj(this.l):Cj.call(null,this.l)};g.ad=function(a,b){return xj(this.l,a,b)};g.$c=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.oa&e))return d;var f=ug(this.oa&e-1);e=this.l[2*f];f=this.l[2*f+1];return null==e?f.$c(a+5,b,c,d):tj(c,e)?f:d};
    g.ic=function(a,b,c,d,e,f){var k=1<<(c>>>b&31),l=ug(this.oa&k-1);if(0===(this.oa&k)){var m=ug(this.oa);if(2*m<this.l.length){a=this.Gc(a);b=a.l;f.ai=!0;c=2*(m-l);f=2*l+(c-1);for(m=2*(l+1)+(c-1);0!==c;)b[m]=b[f],--m,--c,--f;b[2*l]=d;b[2*l+1]=e;a.oa|=k;return a}if(16<=m){l=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];l[c>>>b&31]=Dj.ic(a,b+5,c,d,e,f);for(e=d=0;;)if(32>d)0===(this.oa>>>
    d&1)?d+=1:(l[d]=null!=this.l[e]?Dj.ic(a,b+5,Ie(this.l[e]),this.l[e],this.l[e+1],f):this.l[e+1],e+=2,d+=1);else break;return new Ej(a,m+1,l)}b=Array(2*(m+4));Wf(this.l,0,b,0,2*l);b[2*l]=d;b[2*l+1]=e;Wf(this.l,2*l,b,2*(l+1),2*(m-l));f.ai=!0;a=this.Gc(a);a.l=b;a.oa|=k;return a}m=this.l[2*l];k=this.l[2*l+1];if(null==m)return m=k.ic(a,b+5,c,d,e,f),m===k?this:wj(this,a,2*l+1,m);if(tj(d,m))return e===k?this:wj(this,a,2*l+1,e);f.ai=!0;f=b+5;d=Fj?Fj(a,f,m,k,c,d,e):Gj.call(null,a,f,m,k,c,d,e);e=2*l;l=2*l+1;
    a=this.Gc(a);a.l[e]=null;a.l[l]=d;return a};
    g.hc=function(a,b,c,d,e){var f=1<<(b>>>a&31),k=ug(this.oa&f-1);if(0===(this.oa&f)){var l=ug(this.oa);if(16<=l){k=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];k[b>>>a&31]=Dj.hc(a+5,b,c,d,e);for(d=c=0;;)if(32>c)0===(this.oa>>>c&1)?c+=1:(k[c]=null!=this.l[d]?Dj.hc(a+5,Ie(this.l[d]),this.l[d],this.l[d+1],e):this.l[d+1],d+=2,c+=1);else break;return new Ej(null,l+1,k)}a=Array(2*(l+1));Wf(this.l,
    0,a,0,2*k);a[2*k]=c;a[2*k+1]=d;Wf(this.l,2*k,a,2*(k+1),2*(l-k));e.ai=!0;return new zj(null,this.oa|f,a)}var m=this.l[2*k];f=this.l[2*k+1];if(null==m)return l=f.hc(a+5,b,c,d,e),l===f?this:new zj(null,this.oa,uj(this.l,2*k+1,l));if(tj(c,m))return d===f?this:new zj(null,this.oa,uj(this.l,2*k+1,d));e.ai=!0;e=this.oa;l=this.l;a+=5;a=Hj?Hj(a,m,f,b,c,d):Gj.call(null,a,m,f,b,c,d);c=2*k;k=2*k+1;d=dd(l);d[c]=null;d[k]=a;return new zj(null,e,d)};
    g.Jd=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.oa&e))return d;var f=ug(this.oa&e-1);e=this.l[2*f];f=this.l[2*f+1];return null==e?f.Jd(a+5,b,c,d):tj(c,e)?new Fi(e,f):d};g.Ld=function(a,b,c){var d=1<<(b>>>a&31);if(0===(this.oa&d))return this;var e=ug(this.oa&d-1),f=this.l[2*e],k=this.l[2*e+1];return null==f?(a=k.Ld(a+5,b,c),a===k?this:null!=a?new zj(null,this.oa,uj(this.l,2*e+1,a)):this.oa===d?null:new zj(null,this.oa^d,vj(this.l,e))):tj(c,f)?new zj(null,this.oa^d,vj(this.l,e)):this};
    g.ua=function(){return new yj(this.l)};var Dj=new zj(null,0,[]);function Ij(a,b,c){var d=a.l,e=d.length;a=Array(2*(a.C-1));for(var f=0,k=1,l=0;;)if(f<e)f!==c&&null!=d[f]?(a[k]=d[f],k+=2,l|=1<<f,f+=1):f+=1;else return new zj(b,l,a)}function Jj(a){this.l=a;this.J=0;this.mc=null;}Jj.prototype.ra=function(){for(var a=this.l.length;;){if(null!=this.mc&&this.mc.ra())return !0;if(this.J<a){var b=this.l[this.J];this.J+=1;null!=b&&(this.mc=ye(b));}else return !1}};
    Jj.prototype.next=function(){if(this.ra())return this.mc.next();throw Error("No such element");};Jj.prototype.remove=function(){return Error("Unsupported operation")};function Ej(a,b,c){this.va=a;this.C=b;this.l=c;this.I=131072;this.h=0;}g=Ej.prototype;g.Gc=function(a){return a===this.va?this:new Ej(a,this.C,dd(this.l))};
    g.Md=function(a,b,c,d,e){var f=c>>>b&31,k=this.l[f];if(null==k)return this;b=k.Md(a,b+5,c,d,e);if(b===k)return this;if(null==b){if(8>=this.C)return Ij(this,a,f);a=wj(this,a,f,b);--a.C;return a}return wj(this,a,f,b)};g.Kd=function(){return Kj?Kj(this.l):Lj.call(null,this.l)};g.ad=function(a,b){for(var c=this.l.length,d=0;;)if(d<c){var e=this.l[d];if(null!=e){b=e.ad(a,b);if(bf(b))return b;d+=1;}else d+=1;}else return b};g.$c=function(a,b,c,d){var e=this.l[b>>>a&31];return null!=e?e.$c(a+5,b,c,d):d};
    g.ic=function(a,b,c,d,e,f){var k=c>>>b&31,l=this.l[k];if(null==l)return a=wj(this,a,k,Dj.ic(a,b+5,c,d,e,f)),a.C+=1,a;b=l.ic(a,b+5,c,d,e,f);return b===l?this:wj(this,a,k,b)};g.hc=function(a,b,c,d,e){var f=b>>>a&31,k=this.l[f];if(null==k)return new Ej(null,this.C+1,uj(this.l,f,Dj.hc(a+5,b,c,d,e)));a=k.hc(a+5,b,c,d,e);return a===k?this:new Ej(null,this.C,uj(this.l,f,a))};g.Jd=function(a,b,c,d){var e=this.l[b>>>a&31];return null!=e?e.Jd(a+5,b,c,d):d};
    g.Ld=function(a,b,c){var d=b>>>a&31,e=this.l[d];return null!=e?(a=e.Ld(a+5,b,c),a===e?this:null==a?8>=this.C?Ij(this,null,d):new Ej(null,this.C-1,uj(this.l,d,a)):new Ej(null,this.C,uj(this.l,d,a))):this};g.ua=function(){return new Jj(this.l)};function Mj(a,b,c){b*=2;for(var d=0;;)if(d<b){if(tj(c,a[d]))return d;d+=2;}else return -1}function Nj(a,b,c,d){this.va=a;this.Ec=b;this.C=c;this.l=d;this.I=131072;this.h=0;}g=Nj.prototype;
    g.Gc=function(a){if(a===this.va)return this;var b=Array(2*(this.C+1));Wf(this.l,0,b,0,2*this.C);return new Nj(a,this.Ec,this.C,b)};g.Md=function(a,b,c,d,e){b=Mj(this.l,this.C,d);if(-1===b)return this;e.ai=!0;if(1===this.C)return null;a=this.Gc(a);e=a.l;e[b]=e[2*this.C-2];e[b+1]=e[2*this.C-1];e[2*this.C-1]=null;e[2*this.C-2]=null;--a.C;return a};g.Kd=function(){return Bj?Bj(this.l):Cj.call(null,this.l)};g.ad=function(a,b){return xj(this.l,a,b)};
    g.$c=function(a,b,c,d){a=Mj(this.l,this.C,c);return 0>a?d:tj(c,this.l[a])?this.l[a+1]:d};
    g.ic=function(a,b,c,d,e,f){if(c===this.Ec){b=Mj(this.l,this.C,d);if(-1===b){if(this.l.length>2*this.C)return b=2*this.C,c=2*this.C+1,a=this.Gc(a),a.l[b]=d,a.l[c]=e,f.ai=!0,a.C+=1,a;c=this.l.length;b=Array(c+2);Wf(this.l,0,b,0,c);b[c]=d;b[c+1]=e;f.ai=!0;d=this.C+1;a===this.va?(this.l=b,this.C=d,a=this):a=new Nj(this.va,this.Ec,d,b);return a}return this.l[b+1]===e?this:wj(this,a,b+1,e)}return (new zj(a,1<<(this.Ec>>>b&31),[null,this,null,null])).ic(a,b,c,d,e,f)};
    g.hc=function(a,b,c,d,e){return b===this.Ec?(a=Mj(this.l,this.C,c),-1===a?(a=2*this.C,b=Array(a+2),Wf(this.l,0,b,0,a),b[a]=c,b[a+1]=d,e.ai=!0,new Nj(null,this.Ec,this.C+1,b)):A.gh(this.l[a+1],d)?this:new Nj(null,this.Ec,this.C,uj(this.l,a+1,d))):(new zj(null,1<<(this.Ec>>>a&31),[null,this])).hc(a,b,c,d,e)};g.Jd=function(a,b,c,d){a=Mj(this.l,this.C,c);return 0>a?d:tj(c,this.l[a])?new Fi(this.l[a],this.l[a+1]):d};
    g.Ld=function(a,b,c){a=Mj(this.l,this.C,c);return -1===a?this:1===this.C?null:new Nj(null,this.Ec,this.C-1,vj(this.l,sg(a,2)))};g.ua=function(){return new yj(this.l)};function Gj(a){switch(arguments.length){case 6:return Hj(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 7:return Fj(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}
    function Hj(a,b,c,d,e,f){var k=Ie(b);if(k===d)return new Nj(null,k,2,[b,c,e,f]);var l=new sj;return Dj.hc(a,k,b,c,l).hc(a,d,e,f,l)}function Fj(a,b,c,d,e,f,k){var l=Ie(c);if(l===e)return new Nj(null,l,2,[c,d,f,k]);var m=new sj;return Dj.ic(a,b,l,c,d,m).ic(a,b,e,f,k,m)}function Oj(a,b,c,d,e){this.H=a;this.sa=b;this.J=c;this.ha=d;this.B=e;this.h=32374988;this.I=0;}g=Oj.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){if(null==this.ha){var a=this.sa,b=this.J+2;return Pj?Pj(a,b,null):Cj.call(null,a,b,null)}a=this.sa;b=this.J;var c=D(this.ha);return Pj?Pj(a,b,c):Cj.call(null,a,b,c)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return null==this.ha?new Fi(this.sa[this.J],this.sa[this.J+1]):C(this.ha)};
    g.Ha=function(){var a=this,b=null==a.ha?function(){var c=a.sa,d=a.J+2;return Pj?Pj(c,d,null):Cj.call(null,c,d,null)}():function(){var c=a.sa,d=a.J,e=D(a.ha);return Pj?Pj(c,d,e):Cj.call(null,c,d,e)}();return null!=b?b:Re};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new Oj(b,this.sa,this.J,this.ha,this.B)};g.ga=function(a,b){return uf(b,this)};Oj.prototype[$c]=function(){return Te(this)};
    function Cj(a){switch(arguments.length){case 1:return Bj(arguments[0]);case 3:return Pj(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function Bj(a){return Pj(a,0,null)}function Pj(a,b,c){if(null==c)for(c=a.length;;)if(b<c){if(null!=a[b])return new Oj(null,a,b,null,null);var d=a[b+1];if(p(d)&&(d=d.Kd(),p(d)))return new Oj(null,a,b+2,d,null);b+=2;}else return null;else return new Oj(null,a,b,c,null)}
    function Qj(a,b,c,d,e){this.H=a;this.sa=b;this.J=c;this.ha=d;this.B=e;this.h=32374988;this.I=0;}g=Qj.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=this.sa,b=this.J,c=D(this.ha);return Rj?Rj(a,b,c):Lj.call(null,a,b,c)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return C(this.ha)};g.Ha=function(){var a=this.sa;var b=this.J,c=D(this.ha);a=Rj?Rj(a,b,c):Lj.call(null,a,b,c);return null!=a?a:Re};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new Qj(b,this.sa,this.J,this.ha,this.B)};g.ga=function(a,b){return uf(b,this)};Qj.prototype[$c]=function(){return Te(this)};
    function Lj(a){switch(arguments.length){case 1:return Kj(arguments[0]);case 3:return Rj(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function Kj(a){return Rj(a,0,null)}function Rj(a,b,c){if(null==c)for(c=a.length;;)if(b<c){var d=a[b];if(p(d)&&(d=d.Kd(),p(d)))return new Qj(null,a,b+1,d,null);b+=1;}else return null;else return new Qj(null,a,b,c,null)}function Sj(a,b){this.Za=a;this.Pf=b;this.Ye=!1;}
    Sj.prototype.ra=function(){return !this.Ye||this.Pf.ra()};Sj.prototype.next=function(){if(this.Ye)return this.Pf.next();this.Ye=!0;return new Fi(null,this.Za)};Sj.prototype.remove=function(){return Error("Unsupported operation")};function Tj(a,b,c,d,e,f){this.H=a;this.C=b;this.root=c;this.Ya=d;this.Za=e;this.B=f;this.h=16123663;this.I=139268;}g=Tj.prototype;g.Ac=function(a,b){return null==b?this.Ya?new Fi(null,this.Za):null:null==this.root?null:this.root.Jd(0,Ie(b),b,null)};g.toString=function(){return Ae(this)};
    g.keys=function(){return Te(lj.m?lj.m(this):lj.call(null,this))};g.entries=function(){return new gj(B(B(this)))};g.values=function(){return Te(mj.m?mj.m(this):mj.call(null,this))};g.has=function(a){return N(this,a)};g.get=function(a,b){return this.M(null,a,b)};
    g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.gh?a.gh(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Vf(b)?(c=qe(b),b=re(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.gh?a.gh(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return null==b?this.Ya?this.Za:c:null==this.root?c:this.root.$c(0,Ie(b),b,c)};
    g.Aa=function(a,b,c){a=this.Ya?b.hh?b.hh(c,null,this.Za):b.call(null,c,null,this.Za):c;return bf(a)?u(a):null!=this.root?cf(this.root.ad(b,a)):a};g.ua=function(){var a=this.root?ye(this.root):lh();return this.Ya?new Sj(this.Za,a):a};g.N=function(){return this.H};g.X=function(){return this.C};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Xe(this)};g.Y=function(a,b){return ej(this,b)};g.hd=function(){return new Uj(this.root,this.C,this.Ya,this.Za)};g.pa=function(){return Od(pj,this.H)};
    g.Ka=function(a,b){if(null==b)return this.Ya?new Tj(this.H,this.C-1,this.root,!1,null,null):this;if(null==this.root)return this;a=this.root.Ld(0,Ie(b),b);return a===this.root?this:new Tj(this.H,this.C-1,a,this.Ya,this.Za,null)};g.fa=function(a,b,c){if(null==b)return this.Ya&&c===this.Za?this:new Tj(this.H,this.Ya?this.C:this.C+1,this.root,!0,c,null);a=new sj;b=(null==this.root?Dj:this.root).hc(0,Ie(b),b,c,a);return b===this.root?this:new Tj(this.H,a.ai?this.C+1:this.C,b,this.Ya,this.Za,null)};
    g.La=function(a,b){return null==b?this.Ya:null==this.root?!1:this.root.$c(0,Ie(b),b,Xf)!==Xf};g.bi=function(){if(0<this.C){var a=null!=this.root?this.root.Kd():null;return this.Ya?uf(new Fi(null,this.Za),a):a}return null};g.O=function(a,b){return b===this.H?this:new Tj(b,this.C,this.root,this.Ya,this.Za,this.B)};
    g.ga=function(a,b){if(Uf(b))return this.fa(null,pd(b,0),pd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Uf(c))a=yd(a,pd(c,0),pd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};
    g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};var pj=new Tj(null,0,null,!1,null,Ye);function Vj(a){for(var b=a.length,c=0,d=ie(pj);;)if(c<b){var e=c+2;d=le(d,a[c],a[c+1]);c=e;}else return ke(d)}function Wj(a,b){for(var c=a.length,d=0,e=ie(pj);;)if(d<c){if(b.length<=d)throw Error(["No value supplied for key: ",q.m(a[d])].join(""));var f=d+1;e=le(e,a[d],b[d]);d=f;}else return ke(e)}Tj.prototype[$c]=function(){return Te(this)};
    function Uj(a,b,c,d){this.va={};this.root=a;this.count=b;this.Ya=c;this.Za=d;this.h=259;this.I=56;}function Xj(a,b,c){if(a.va){if(null==b)a.Za!==c&&(a.Za=c),a.Ya||(a.count+=1,a.Ya=!0);else {var d=new sj;b=(null==a.root?Dj:a.root).ic(a.va,0,Ie(b),b,c,d);b!==a.root&&(a.root=b);d.ai&&(a.count+=1);}return a}throw Error("assoc! after persistent!");}g=Uj.prototype;g.X=function(){if(this.va)return this.count;throw Error("count after persistent!");};
    g.ia=function(a,b){return null==b?this.Ya?this.Za:null:null==this.root?null:this.root.$c(0,Ie(b),b)};g.M=function(a,b,c){return null==b?this.Ya?this.Za:c:null==this.root?c:this.root.$c(0,Ie(b),b,c)};
    g.kd=function(a,b){a:if(this.va)if(Ni(b))a=Xj(this,Oi.m?Oi.m(b):Oi.call(null,b),Pi.m?Pi.m(b):Pi.call(null,b));else if(Uf(b))a=Xj(this,b.m?b.m(0):b.call(null,0),b.m?b.m(1):b.call(null,1));else for(a=B(b),b=this;;){var c=C(a);if(p(c))a=D(a),b=Xj(b,Oi.m?Oi.m(c):Oi.call(null,c),Pi.m?Pi.m(c):Pi.call(null,c));else {a=b;break a}}else throw Error("conj! after persistent");return a};
    g.Cd=function(){if(this.va){this.va=null;var a=new Tj(null,this.count,this.root,this.Ya,this.Za,null);}else throw Error("persistent! called twice");return a};g.jd=function(a,b,c){return Xj(this,b,c)};g.Fe=function(a,b){if(this.va)null==b?this.Ya&&(this.Ya=!1,this.Za=null,--this.count):null!=this.root&&(a=new sj,b=this.root.Md(this.va,0,Ie(b),b,a),b!==this.root&&(this.root=b),a.ai&&--this.count);else throw Error("dissoc! after persistent!");return this};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};function Yj(a,b,c){for(var d=b;;)if(null!=a)b=c?a.left:a.right,d=Bf.gh(d,a),a=b;else return d}
    function Zj(a,b,c,d,e){this.H=a;this.stack=b;this.Rc=c;this.C=d;this.B=e;this.h=32374990;this.I=0;}g=Zj.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.H};g.za=function(){var a=C(this.stack);a=Yj(this.Rc?a.right:a.left,D(this.stack),this.Rc);return null==a?null:new Zj(null,a,this.Rc,this.C-1,null)};g.X=function(){return 0>this.C?F(D(this))+1:this.C};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return Lf(this.stack)};g.Ha=function(){var a=C(this.stack);a=Yj(this.Rc?a.right:a.left,D(this.stack),this.Rc);return null!=a?new Zj(null,a,this.Rc,this.C-1,null):Re};g.bi=function(){return this};g.O=function(a,b){return b===this.H?this:new Zj(b,this.stack,this.Rc,this.C,this.B)};
    g.ga=function(a,b){return uf(b,this)};Zj.prototype[$c]=function(){return Te(this)};function ak(a,b,c){return new Zj(null,Yj(a,null,b),b,c,null)}function bk(a,b,c,d){return c instanceof ck?c.left instanceof ck?new ck(c.key,c.ai,c.left.xc(),new dk(a,b,c.right,d)):c.right instanceof ck?new ck(c.right.key,c.right.ai,new dk(c.key,c.ai,c.left,c.right.left),new dk(a,b,c.right.right,d)):new dk(a,b,c,d):new dk(a,b,c,d)}
    function ek(a,b,c,d){return d instanceof ck?d.right instanceof ck?new ck(d.key,d.ai,new dk(a,b,c,d.left),d.right.xc()):d.left instanceof ck?new ck(d.left.key,d.left.ai,new dk(a,b,c,d.left.left),new dk(d.key,d.ai,d.left.right,d.right)):new dk(a,b,c,d):new dk(a,b,c,d)}
    function fk(a,b,c,d){if(c instanceof ck)return new ck(a,b,c.xc(),d);if(d instanceof dk)return ek(a,b,c,d.Qd());if(d instanceof ck&&d.left instanceof dk)return new ck(d.left.key,d.left.ai,new dk(a,b,c,d.left.left),ek(d.key,d.ai,d.left.right,d.right.Qd()));throw Error("red-black tree invariant violation");}
    function gk(a,b,c,d){if(d instanceof ck)return new ck(a,b,c,d.xc());if(c instanceof dk)return bk(a,b,c.Qd(),d);if(c instanceof ck&&c.right instanceof dk)return new ck(c.right.key,c.right.ai,bk(c.key,c.ai,c.left.Qd(),c.right.left),new dk(a,b,c.right.right,d));throw Error("red-black tree invariant violation");}
    var hk=function hk(a,b,c){var e=null!=a.left?function(){var l=a.left;return hk.hh?hk.hh(l,b,c):hk.call(null,l,b,c)}():c;if(bf(e))return e;var f=function(){var l=a.key,m=a.ai;return b.hh?b.hh(e,l,m):b.call(null,e,l,m)}();if(bf(f))return f;if(null!=a.right){var k=a.right;return hk.hh?hk.hh(k,b,f):hk.call(null,k,b,f)}return f};function dk(a,b,c,d){this.key=a;this.ai=b;this.left=c;this.right=d;this.B=null;this.h=166619935;this.I=0;}g=dk.prototype;
    g.Ac=function(a,b){switch(b){case 0:return new Fi(0,this.key);case 1:return new Fi(1,this.ai);default:return null}};g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();g.ef=function(a){return a.hf(this)};g.Qd=function(){return new ck(this.key,this.ai,this.left,this.right)};g.xc=function(){return this};g.df=function(a){return a.gf(this)};g.replace=function(a,b,c,d){return new dk(a,b,c,d)};
    g.gf=function(a){return new dk(a.key,a.ai,this,a.right)};g.hf=function(a){return new dk(a.key,a.ai,a.left,this)};g.ad=function(a,b){return hk(this,a,b)};g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.ai;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0===b?this.key:1===b?this.ai:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.ai],null)).Ib(null,b,c)};g.N=function(){return null};
    g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.ai};g.Xb=function(){return this.ai};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};g.Bc=function(){return new Pe([this.ai,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ef(this,b)};g.Ca=function(a,b,c){return ff(this,b,c)};
    g.fa=function(a,b,c){return K.hh(new Q(null,2,5,R,[this.key,this.ai],null),b,c)};g.La=function(a,b){return 0===b||1===b};g.bi=function(){return new Pe([this.key,this.ai],0,null)};g.O=function(a,b){return Od(new Q(null,2,5,R,[this.key,this.ai],null),b)};g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.ai,b],null)};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.W(null,a)};g.gh=function(a,b){return this.wa(null,a,b)};dk.prototype[$c]=function(){return Te(this)};
    function ck(a,b,c,d){this.key=a;this.ai=b;this.left=c;this.right=d;this.B=null;this.h=166619935;this.I=0;}g=ck.prototype;g.Ac=function(a,b){switch(b){case 0:return new Fi(0,this.key);case 1:return new Fi(1,this.ai);default:return null}};
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();g.ef=function(a){return new ck(this.key,this.ai,this.left,a)};g.Qd=function(){throw Error("red-black tree invariant violation");};g.xc=function(){return new dk(this.key,this.ai,this.left,this.right)};
    g.df=function(a){return new ck(this.key,this.ai,a,this.right)};g.replace=function(a,b,c,d){return new ck(a,b,c,d)};g.gf=function(a){return this.left instanceof ck?new ck(this.key,this.ai,this.left.xc(),new dk(a.key,a.ai,this.right,a.right)):this.right instanceof ck?new ck(this.right.key,this.right.ai,new dk(this.key,this.ai,this.left,this.right.left),new dk(a.key,a.ai,this.right.right,a.right)):new dk(a.key,a.ai,this,a.right)};
    g.hf=function(a){return this.right instanceof ck?new ck(this.key,this.ai,new dk(a.key,a.ai,a.left,this.left),this.right.xc()):this.left instanceof ck?new ck(this.left.key,this.left.ai,new dk(a.key,a.ai,a.left,this.left.left),new dk(this.key,this.ai,this.left.right,this.right)):new dk(a.key,a.ai,a.left,this)};g.ad=function(a,b){return hk(this,a,b)};g.ia=function(a,b){return this.wa(null,b,null)};g.M=function(a,b,c){return this.wa(null,b,c)};
    g.W=function(a,b){if(0===b)return this.key;if(1===b)return this.ai;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0===b?this.key:1===b?this.ai:c};g.Ib=function(a,b,c){return (new Q(null,2,5,R,[this.key,this.ai],null)).Ib(null,b,c)};g.N=function(){return null};g.X=function(){return 2};g.Ce=function(){return this.key};g.De=function(){return this.ai};g.Xb=function(){return this.ai};g.Yb=function(){return new Q(null,1,5,R,[this.key],null)};
    g.Bc=function(){return new Pe([this.ai,this.key],0,null)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return null};g.Ba=function(a,b){return ef(this,b)};g.Ca=function(a,b,c){return ff(this,b,c)};g.fa=function(a,b,c){return K.hh(new Q(null,2,5,R,[this.key,this.ai],null),b,c)};g.La=function(a,b){return 0===b||1===b};g.bi=function(){return new Pe([this.key,this.ai],0,null)};
    g.O=function(a,b){return Od(new Q(null,2,5,R,[this.key,this.ai],null),b)};g.ga=function(a,b){return new Q(null,3,5,R,[this.key,this.ai,b],null)};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.W(null,a)};
    g.gh=function(a,b){return this.wa(null,a,b)};ck.prototype[$c]=function(){return Te(this)};
    var ik=function ik(a,b,c,d,e){if(null==b)return new ck(c,d,null,null);var k=function(){var l=b.key;return a.gh?a.gh(c,l):a.call(null,c,l)}();if(0===k)return e[0]=b,null;if(0>k)return k=function(){var l=b.left;return ik.K?ik.K(a,l,c,d,e):ik.call(null,a,l,c,d,e)}(),null!=k?b.df(k):null;k=function(){var l=b.right;return ik.K?ik.K(a,l,c,d,e):ik.call(null,a,l,c,d,e)}();return null!=k?b.ef(k):null},jk=function jk(a,b){if(null==a)return b;if(null==b)return a;if(a instanceof ck){if(b instanceof ck){var d=
    function(){var e=a.right,f=b.left;return jk.gh?jk.gh(e,f):jk.call(null,e,f)}();return d instanceof ck?new ck(d.key,d.ai,new ck(a.key,a.ai,a.left,d.left),new ck(b.key,b.ai,d.right,b.right)):new ck(a.key,a.ai,a.left,new ck(b.key,b.ai,d,b.right))}return new ck(a.key,a.ai,a.left,function(){var e=a.right;return jk.gh?jk.gh(e,b):jk.call(null,e,b)}())}if(b instanceof ck)return new ck(b.key,b.ai,function(){var e=b.left;return jk.gh?jk.gh(a,e):jk.call(null,a,e)}(),b.right);d=function(){var e=a.right,f=b.left;
    return jk.gh?jk.gh(e,f):jk.call(null,e,f)}();return d instanceof ck?new ck(d.key,d.ai,new dk(a.key,a.ai,a.left,d.left),new dk(b.key,b.ai,d.right,b.right)):fk(a.key,a.ai,a.left,new dk(b.key,b.ai,d,b.right))},kk=function kk(a,b,c,d){if(null!=b){var f=function(){var k=b.key;return a.gh?a.gh(c,k):a.call(null,c,k)}();if(0===f)return d[0]=b,jk(b.left,b.right);if(0>f)return f=function(){var k=b.left;return kk.A?kk.A(a,k,c,d):kk.call(null,a,k,c,d)}(),null!=f||null!=d[0]?b.left instanceof dk?fk(b.key,b.ai,
    f,b.right):new ck(b.key,b.ai,f,b.right):null;f=function(){var k=b.right;return kk.A?kk.A(a,k,c,d):kk.call(null,a,k,c,d)}();return null!=f||null!=d[0]?b.right instanceof dk?gk(b.key,b.ai,b.left,f):new ck(b.key,b.ai,b.left,f):null}return null},lk=function lk(a,b,c,d){var f=b.key,k=a.gh?a.gh(c,f):a.call(null,c,f);return 0===k?b.replace(f,d,b.left,b.right):0>k?b.replace(f,b.ai,function(){var l=b.left;return lk.A?lk.A(a,l,c,d):lk.call(null,a,l,c,d)}(),b.right):b.replace(f,b.ai,b.left,function(){var l=
    b.right;return lk.A?lk.A(a,l,c,d):lk.call(null,a,l,c,d)}())};function mk(a,b,c,d,e){this.Ob=a;this.Mc=b;this.C=c;this.H=d;this.B=e;this.h=418776847;this.I=8192;}g=mk.prototype;g.Ac=function(a,b){return nk(this,b)};
    g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.gh?a.gh(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Vf(b)?(c=qe(b),b=re(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.gh?a.gh(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};g.get=function(a,b){return this.M(null,a,b)};g.entries=function(){return new gj(B(B(this)))};g.toString=function(){return Ae(this)};g.keys=function(){return Te(lj.m?lj.m(this):lj.call(null,this))};
    g.values=function(){return Te(mj.m?mj.m(this):mj.call(null,this))};function nk(a,b){for(var c=a.Mc;;)if(null!=c){var d=c.key;d=a.Ob.gh?a.Ob.gh(b,d):a.Ob.call(null,b,d);if(0===d)return c;c=0>d?c.left:c.right;}else return null}g.has=function(a){return N(this,a)};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){a=nk(this,b);return null!=a?a.ai:c};g.Aa=function(a,b,c){return null!=this.Mc?cf(hk(this.Mc,b,c)):c};g.N=function(){return this.H};g.X=function(){return this.C};
    g.Bc=function(){return 0<this.C?ak(this.Mc,!1,this.C):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Xe(this)};g.Y=function(a,b){return ej(this,b)};g.pa=function(){return new mk(this.Ob,null,0,this.H,0)};g.Ka=function(a,b){a=[null];b=kk(this.Ob,this.Mc,b,a);return null==b?null==nf(a,0)?this:new mk(this.Ob,null,0,this.H,null):new mk(this.Ob,b.xc(),this.C-1,this.H,null)};
    g.fa=function(a,b,c){a=[null];var d=ik(this.Ob,this.Mc,b,c,a);return null==d?(a=nf(a,0),A.gh(c,a.ai)?this:new mk(this.Ob,lk(this.Ob,this.Mc,b,c),this.C,this.H,null)):new mk(this.Ob,d.xc(),this.C+1,this.H,null)};g.La=function(a,b){return null!=nk(this,b)};g.bi=function(){return 0<this.C?ak(this.Mc,!0,this.C):null};g.O=function(a,b){return b===this.H?this:new mk(this.Ob,this.Mc,this.C,b,this.B)};
    g.ga=function(a,b){if(Uf(b))return this.fa(null,pd(b,0),pd(b,1));a=this;for(b=B(b);;){if(null==b)return a;var c=C(b);if(Uf(c))a=yd(a,pd(c,0),pd(c,1)),b=D(b);else throw Error("conj on a map takes map entries or seqables of map entries");}};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};
    g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};var ok=new mk(cg,null,0,null,Ye);mk.prototype[$c]=function(){return Te(this)};var pk=function pk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pk.g(0<c.length?new Pe(c.slice(0),0,null):null)};pk.g=function(a){a=B(a);for(var b=ie(pj);;)if(a){var c=D(a);if(null==c)throw Error(["No value supplied for key: ",q.m(C(a))].join(""));var d=D(c);b=Yg(b,C(a),C(c));a=d;}else return ke(b)};
    pk.F=0;pk.G=function(a){return this.g(B(a))};var qk=function qk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return qk.g(0<c.length?new Pe(c.slice(0),0,null):null)};qk.g=function(a){a=a instanceof Pe&&0===a.J?a.l:ed(a);return Ff(a)};qk.F=0;qk.G=function(a){return this.g(B(a))};
    function rk(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(b=B(0<b.length?new Pe(b.slice(0),0,null):null),d=ok;;)if(b)c=D(D(b)),d=K.hh(d,C(b),yf(b)),b=c;else break a;return d}function sk(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;a:for(c=arguments[0],b=B(1<b.length?new Pe(b.slice(1),0,null):null),d=new mk(eg(c),null,0,null,0);;)if(b)c=D(D(b)),d=K.hh(d,C(b),yf(b)),b=c;else break a;return d}
    function tk(a,b){this.na=a;this.Kb=b;this.h=32374988;this.I=0;}g=tk.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Wc(td,this.na)):Wc(td,this.na))?this.na.za(null):D(this.na);return null==a?null:new tk(a,null)};g.Z=function(){return Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return this.na.Fa(null).key};g.Ha=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Wc(td,this.na)):Wc(td,this.na))?this.na.za(null):D(this.na);return null!=a?new tk(a,null):Re};g.bi=function(){return this};g.O=function(a,b){return b===this.Kb?this:new tk(this.na,b)};g.ga=function(a,b){return uf(b,this)};
    tk.prototype[$c]=function(){return Te(this)};function lj(a){return (a=B(a))?new tk(a,null):null}function Oi(a){return Cd(a)}function uk(a,b){this.na=a;this.Kb=b;this.h=32374988;this.I=0;}g=uk.prototype;g.toString=function(){return Ae(this)};g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.N=function(){return this.Kb};g.za=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Wc(td,this.na)):Wc(td,this.na))?this.na.za(null):D(this.na);return null==a?null:new uk(a,null)};g.Z=function(){return Ve(this)};
    g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};g.Ca=function(a,b,c){return xf(b,c,this)};g.Fa=function(){return this.na.Fa(null).ai};g.Ha=function(){var a=(null!=this.na?this.na.h&128||h===this.na.Ad||(this.na.h?0:Wc(td,this.na)):Wc(td,this.na))?this.na.za(null):D(this.na);return null!=a?new uk(a,null):Re};g.bi=function(){return this};g.O=function(a,b){return b===this.Kb?this:new uk(this.na,b)};g.ga=function(a,b){return uf(b,this)};
    uk.prototype[$c]=function(){return Te(this)};function mj(a){return (a=B(a))?new uk(a,null):null}function Pi(a){return Dd(a)}var vk=function vk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return vk.g(0<c.length?new Pe(c.slice(0),0,null):null)};vk.g=function(a){return p(Dh(kg,a))?fd.gh(function(b,c){return Bf.gh(p(b)?b:S,c)},a):null};vk.F=0;vk.G=function(a){return this.g(B(a))};
    var wk=function wk(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return wk.g(arguments[0],1<c.length?new Pe(c.slice(1),0,null):null)};wk.g=function(a,b){if(p(Dh(kg,b))){var c=function(d,e){var f=Cd(e),k=Dd(e);if(N(d,f)){e=K.hh;var l=x.gh(d,f);k=a.gh?a.gh(l,k):a.call(null,l,k);d=e.call(K,d,f,k);}else d=K.hh(d,f,k);return d};return fd.gh(function(d,e){return fd.hh(c,p(d)?d:S,B(e))},b)}return null};wk.F=1;wk.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    function xk(a,b){var c=S;for(b=B(b);;)if(b){var d=C(b),e=x.hh(a,d,yk);c=jh.gh(e,yk)?K.hh(c,d,e):c;b=D(b);}else return Od(c,Kf(a))}function zk(a){this.Se=a;}zk.prototype.ra=function(){return this.Se.ra()};zk.prototype.next=function(){if(this.Se.ra())return this.Se.next().key;throw Error("No such element");};zk.prototype.remove=function(){return Error("Unsupported operation")};function Ak(a,b,c){this.H=a;this.Hc=b;this.B=c;this.h=15077647;this.I=139268;}g=Ak.prototype;g.toString=function(){return Ae(this)};
    g.keys=function(){return Te(B(this))};g.entries=function(){return new hj(B(B(this)))};g.values=function(){return Te(B(this))};g.has=function(a){return N(this,a)};g.forEach=function(a){for(var b=B(this),c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e),k=J(f,0,null);f=J(f,1,null);a.gh?a.gh(f,k):a.call(null,f,k);e+=1;}else if(b=B(b))Vf(b)?(c=qe(b),b=re(b),k=c,d=F(c),c=k):(c=C(b),k=J(c,0,null),f=J(c,1,null),a.gh?a.gh(f,k):a.call(null,f,k),b=D(b),c=null,d=0),e=0;else return null};
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){a=zd(this.Hc,b);return p(a)?Cd(a):c};g.ua=function(){return new zk(ye(this.Hc))};g.N=function(){return this.H};g.X=function(){return jd(this.Hc)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Xe(this)};g.Y=function(a,b){if(a=Qf(b))if(a=F(this)===F(b))try{return jg(function(c,d){return (c=N(b,d))?c:af(!1)},!0,this.Hc)}catch(c){if(c instanceof Error)return !1;throw c;}else return a;else return a};g.hd=function(){return new Bk(ie(this.Hc))};
    g.pa=function(){return Od(Ck,this.H)};g.rf=function(a,b){return new Ak(this.H,Bd(this.Hc,b),null)};g.bi=function(){return lj(this.Hc)};g.O=function(a,b){return b===this.H?this:new Ak(b,this.Hc,this.B)};g.ga=function(a,b){return new Ak(this.H,K.hh(this.Hc,b,null),null)};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};
    g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return this.ia(null,a)};g.gh=function(a,b){return this.M(null,a,b)};var Ck=new Ak(null,S,Ye);function Dk(a){for(var b=a.length,c=ie(Ck),d=0;;)if(d<b)je(c,a[d]),d+=1;else break;return ke(c)}Ak.prototype[$c]=function(){return Te(this)};function Bk(a){this.cd=a;this.I=136;this.h=259;}g=Bk.prototype;g.kd=function(a,b){this.cd=le(this.cd,b,null);return this};g.Cd=function(){return new Ak(null,ke(this.cd),null)};
    g.X=function(){return F(this.cd)};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){return wd(this.cd,b,Xf)===Xf?c:b};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return wd(this.cd,a,Xf)===Xf?null:a};
    g.gh=function(a,b){return wd(this.cd,a,Xf)===Xf?b:a};function Ek(a){if(Qf(a))return Jf(a,null);a=B(a);if(null==a)return Ck;if(a instanceof Pe&&0===a.J)return Dk(a.l);for(var b=ie(Ck);;)if(null!=a){var c=D(a);b=je(b,rd(a));a=c;}else return ke(b)}function Fk(a){return function e(c,d){return new Lg(null,function(){var f;a:{var k=c;for(f=d;;){var l=k;k=J(l,0,null);if(l=B(l))if(N(f,k))k=Qe(l);else {f=uf(k,e(Qe(l),Bf.gh(f,k)));break a}else {f=null;break a}}}return f},null,null)}(a,Ck)}
    function Gk(a){for(var b=I;;)if(D(a))b=Bf.gh(b,C(a)),a=D(a);else return B(b)}function Kg(a){if(null!=a&&(a.I&4096||h===a.jg))return a.yd(null);if("string"===typeof a)return a;throw Error(["Doesn't support name: ",q.m(a)].join(""));}function Hk(a,b){var c=ie(S);a=B(a);for(b=B(b);;)if(a&&b)c=Yg(c,C(a),C(b)),a=D(a),b=D(b);else return ke(c)}
    var Ik=function Ik(a){switch(arguments.length){case 2:return Ik.gh(arguments[0],arguments[1]);case 3:return Ik.hh(arguments[0],arguments[1],arguments[2]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Ik.g(arguments[0],arguments[1],arguments[2],new Pe(c.slice(3),0,null))}};Ik.gh=function(a,b){return b};Ik.hh=function(a,b,c){return (a.m?a.m(b):a.call(null,b))>(a.m?a.m(c):a.call(null,c))?b:c};
    Ik.g=function(a,b,c,d){return fd.hh(function(e,f){return Ik.hh(a,e,f)},Ik.hh(a,b,c),d)};Ik.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};Ik.F=3;function Jk(){this.l=[];}Jk.prototype.add=function(a){return this.l.push(a)};Jk.prototype.size=function(){return this.l.length};Jk.prototype.clear=function(){return this.l=[]};Jk.prototype.Nd=function(){return 0===this.l.length};
    function Kk(){return function(a){var b=new Jk;return function(){function c(k,l){b.add(l);return 2===b.size()?(l=Mi(b.l),b.clear(),a.gh?a.gh(k,l):a.call(null,k,l)):k}function d(k){if(!p(b.Nd())){var l=Mi(b.l);b.clear();k=cf(a.gh?a.gh(k,l):a.call(null,k,l));}return a.m?a.m(k):a.call(null,k)}function e(){return a.o?a.o():a.call(null)}var f=null;f=function(k,l){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,k);case 2:return c.call(this,k,l)}throw Error("Invalid arity: "+
    arguments.length);};f.o=e;f.m=d;f.gh=c;return f}()}}function Lk(a,b){return new Lg(null,function(){var c=B(b);if(c){var d=C(c);d=a.m?a.m(d):a.call(null,d);c=p(d)?uf(C(c),Lk(a,Qe(c))):null;}else c=null;return c},null,null)}function Fa(a,b,c){this.start=a;this.step=b;this.count=c;this.h=82;this.I=0;}g=Fa.prototype;g.X=function(){return this.count};g.Fa=function(){return this.start};g.W=function(a,b){return this.start+b*this.step};g.wa=function(a,b,c){return 0<=b&&b<this.count?this.start+b*this.step:c};
    g.ze=function(){if(1>=this.count)throw Error("-drop-first of empty chunk");return new Fa(this.start+this.step,this.step,this.count-1)};function Nk(a,b,c){this.J=a;this.end=b;this.step=c;}Nk.prototype.ra=function(){return 0<this.step?this.J<this.end:this.J>this.end};Nk.prototype.next=function(){var a=this.J;this.J+=this.step;return a};function Ga(a,b,c,d,e,f,k){this.H=a;this.start=b;this.end=c;this.step=d;this.Bb=e;this.Yd=f;this.B=k;this.h=32375006;this.I=140800;}g=Ga.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.Nb=function(){if(null==this.Bb){var a=this.X(null);32<a?(this.Yd=new Ga(null,this.start+32*this.step,this.end,this.step,null,null,null),this.Bb=new Fa(this.start,this.step,32)):this.Bb=new Fa(this.start,this.step,a);}};
    g.W=function(a,b){if(0<=b&&b<this.X(null))return this.start+b*this.step;if(0<=b&&this.start>this.end&&0===this.step)return this.start;throw Error("Index out of bounds");};g.wa=function(a,b,c){return 0<=b&&b<this.X(null)?this.start+b*this.step:0<=b&&this.start>this.end&&0===this.step?this.start:c};g.ua=function(){return new Nk(this.start,this.end,this.step)};g.N=function(){return this.H};
    g.za=function(){return 0<this.step?this.start+this.step<this.end?new Ga(null,this.start+this.step,this.end,this.step,null,null,null):null:this.start+this.step>this.end?new Ga(null,this.start+this.step,this.end,this.step,null,null,null):null};g.X=function(){return Math.ceil((this.end-this.start)/this.step)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return ef(this,b)};
    g.Ca=function(a,b,c){for(a=this.start;;)if(0<this.step?a<this.end:a>this.end){c=b.gh?b.gh(c,a):b.call(null,c,a);if(bf(c))return u(c);a+=this.step;}else return c};g.Fa=function(){return this.start};g.Ha=function(){var a=this.za(null);return null==a?Re:a};g.bi=function(){return this};g.$d=function(){this.Nb();return this.Bb};g.gd=function(){this.Nb();return null==this.Yd?Re:this.Yd};g.O=function(a,b){return b===this.H?this:new Ga(b,this.start,this.end,this.step,this.Bb,this.Yd,this.B)};
    g.ga=function(a,b){return uf(b,this)};g.Ae=function(){return B(this.gd(null))};Ga.prototype[$c]=function(){return Te(this)};function Ok(a,b,c,d,e,f,k){this.H=a;this.start=b;this.end=c;this.step=d;this.Bb=e;this.Yd=f;this.B=k;this.I=140800;this.h=32374988;}g=Ok.prototype;g.toString=function(){return Ae(this)};
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();
    g.Nb=function(){if(null==this.Bb){var a=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];a:{var b=0;for(var c=this.start;;)if(32>b){if(a[b]=c,b+=1,c+=this.step,!(0<this.step?c<this.end:c>this.end)){b=this.Bb=new Og(a,0,b);break a}}else {b=c;break a}}null==this.Bb&&(this.Bb=new Og(a,0,32),(0<this.step?b<this.end:b>this.end)&&(this.Yd=new Ok(null,b,this.end,this.step,null,null,null)));}};
    g.ua=function(){return new Nk(this.start,this.end,this.step)};g.N=function(){return this.H};g.za=function(){return 0<this.step?this.start+this.step<this.end?new Ok(null,this.start+this.step,this.end,this.step,null,null,null):null:this.start+this.step>this.end?new Ok(null,this.start+this.step,this.end,this.step,null,null,null):null};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=Ve(this)};g.Y=function(a,b){return tf(this,b)};g.pa=function(){return Re};g.Ba=function(a,b){return vf(b,this)};
    g.Ca=function(a,b,c){for(a=this.start;;)if(0<this.step?a<this.end:a>this.end){c=b.gh?b.gh(c,a):b.call(null,c,a);if(bf(c))return u(c);a+=this.step;}else return c};g.Fa=function(){return this.start};g.Ha=function(){var a=this.za(null);return null==a?Re:a};g.bi=function(){return this};g.$d=function(){this.Nb();return this.Bb};g.gd=function(){this.Nb();return null==this.Yd?Re:this.Yd};g.O=function(a,b){return b===this.H?this:new Ok(b,this.start,this.end,this.step,this.Bb,this.Yd,this.B)};
    g.ga=function(a,b){return uf(b,this)};g.Ae=function(){return B(this.gd(null))};Ok.prototype[$c]=function(){return Te(this)};function Ha(a){return 1>=a?Re:ag(1)&&ag(a)&&ag(1)?new Ga(null,1,a,1,null,null,null):new Ok(null,1,a,1,null,null,null)}function Rk(a,b){return new Lg(null,function(){var c=B(b);return c?uf(C(c),Rk(a,Xh(a,c))):null},null,null)}function Sk(a){return ke(fd.hh(function(b,c){return Yg(b,c,x.hh(b,c,0)+1)},ie(S),a))}
    function Tk(a,b){return function(){function c(m,r,t){return new Q(null,2,5,R,[a.hh?a.hh(m,r,t):a.call(null,m,r,t),b.hh?b.hh(m,r,t):b.call(null,m,r,t)],null)}function d(m,r){return new Q(null,2,5,R,[a.gh?a.gh(m,r):a.call(null,m,r),b.gh?b.gh(m,r):b.call(null,m,r)],null)}function e(m){return new Q(null,2,5,R,[a.m?a.m(m):a.call(null,m),b.m?b.m(m):b.call(null,m)],null)}function f(){return new Q(null,2,5,R,[a.o?a.o():a.call(null),b.o?b.o():b.call(null)],null)}var k=null,l=function(){function m(t,v,y,E){var H=
    null;if(3<arguments.length){H=0;for(var T=Array(arguments.length-3);H<T.length;)T[H]=arguments[H+3],++H;H=new Pe(T,0,null);}return r.call(this,t,v,y,H)}function r(t,v,y,E){return new Q(null,2,5,R,[hh(a,t,v,y,E),hh(b,t,v,y,E)],null)}m.F=3;m.G=function(t){var v=C(t);t=D(t);var y=C(t);t=D(t);var E=C(t);t=Qe(t);return r(v,y,E,t)};m.g=r;return m}();k=function(m,r,t,v){switch(arguments.length){case 0:return f.call(this);case 1:return e.call(this,m);case 2:return d.call(this,m,r);case 3:return c.call(this,
    m,r,t);default:var y=null;if(3<arguments.length){y=0;for(var E=Array(arguments.length-3);y<E.length;)E[y]=arguments[y+3],++y;y=new Pe(E,0,null);}return l.g(m,r,t,y)}};k.F=3;k.G=l.G;k.o=f;k.m=e;k.gh=d;k.hh=c;k.g=l.g;return k}()}function Uk(a){a:for(var b=a;;)if(b=B(b))b=D(b);else break a;return a}
    function Vk(a,b){if("string"===typeof b)return a=a.exec(b),null!=a&&A.gh(a[0],b)?1===a.length?a[0]:Mi(a):null;throw new TypeError("re-matches must match against a string.");}function Wk(a,b){if("string"===typeof b)return a=a.exec(b),null==a?null:1===a.length?a[0]:Mi(a);throw new TypeError("re-find must match against a string.");}
    var Xk=function Xk(a,b){var d=a.exec(b);if(null==d)return null;var e=d[0],f=1===d.length?e:Mi(d);return uf(f,new Lg(null,function(){var k=e.length;k=d.index+(1>k?1:k);return k<=b.length?(k=b.substring(k),Xk.gh?Xk.gh(a,k):Xk.call(null,a,k)):null},null,null))};function Yk(a){if(a instanceof RegExp)return a;var b=Wk(/^\(\?([idmsux]*)\)/,a),c=J(b,0,null);b=J(b,1,null);return new RegExp(a.substring(null==c?0:c.length),p(b)?b:"")}
    function Zk(a,b,c,d,e,f,k){var l=Hc;Hc=null==Hc?null:Hc-1;try{if(null!=Hc&&0>Hc)return be(a,"#");be(a,c);if(0===Nc.m(f))B(k)&&be(a,function(){var E=$k.m(f);return p(E)?E:"..."}());else {if(B(k)){var m=C(k);b.hh?b.hh(m,a,f):b.call(null,m,a,f);}for(var r=D(k),t=Nc.m(f)-1;;)if(!r||null!=t&&0===t){B(r)&&0===t&&(be(a,d),be(a,function(){var E=$k.m(f);return p(E)?E:"..."}()));break}else {be(a,d);var v=C(r);c=a;k=f;b.hh?b.hh(v,c,k):b.call(null,v,c,k);var y=D(r);c=t-1;r=y;t=c;}}return be(a,e)}finally{Hc=l;}}
    function al(a,b){b=B(b);for(var c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e);be(a,f);e+=1;}else if(b=B(b))c=b,Vf(c)?(b=qe(c),d=re(c),c=b,f=F(b),b=d,d=f):(f=C(c),be(a,f),b=D(c),c=null,d=0),e=0;else return null}function bl(a){if(null==Dc)throw Error("No *print-fn* fn set for evaluation environment");Dc.call(null,a);return null}var cl={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
    function dl(a){return ['"',q.m(a.replace(RegExp('[\\\\"\b\f\n\r\t]',"g"),function(b){return cl[b]})),'"'].join("")}function el(a,b){return (a=$f(x.gh(a,Lc)))?(a=null!=b?b.h&131072||h===b.xd?!0:!1:!1)?null!=Kf(b):a:a}
    function fl(a,b,c){if(null==a)return be(b,"nil");if(el(c,a)){be(b,"^");var d=Kf(a);gl.hh?gl.hh(d,b,c):gl.call(null,d,b,c);be(b," ");}if(a.Ia)return a.Ja(b);if(null!=a?a.h&2147483648||h===a.ma||(a.h?0:Wc(de,a)):Wc(de,a))return ee(a,b,c);if(!0===a||!1===a)return be(b,q.m(a));if("number"===typeof a)return be(b,isNaN(a)?"##NaN":a===Number.POSITIVE_INFINITY?"##Inf":a===Number.NEGATIVE_INFINITY?"##-Inf":q.m(a));if(null!=a&&a.constructor===Object)return be(b,"#js "),d=Vh.gh(function(f){return new Fi(null!=
    Vk(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/,f)?Jg.m(f):f,a[f])},ca(a)),hl.A?hl.A(d,gl,b,c):hl.call(null,d,gl,b,c);if(Qc(a))return Zk(b,gl,"#js ["," ","]",c,a);if("string"===typeof a)return p(Kc.m(c))?be(b,dl(a)):be(b,a);if("function"===typeof a){var e=a.name;c=p(function(){var f=null==e;return f?f:dc(e)}())?"Function":e;return al(b,G(["#object[",c,p(!1)?[' "',q.m(a),'"'].join(""):"","]"]))}if(a instanceof Date)return c=function(f,k){for(f=q.m(f);;)if(f.length<k)f=["0",f].join("");else return f},al(b,
    G(['#inst "',c(a.getUTCFullYear(),4),"-",c(a.getUTCMonth()+1,2),"-",c(a.getUTCDate(),2),"T",c(a.getUTCHours(),2),":",c(a.getUTCMinutes(),2),":",c(a.getUTCSeconds(),2),".",c(a.getUTCMilliseconds(),3),"-",'00:00"']));if(a instanceof RegExp)return al(b,G(['#"',a.source,'"']));if("symbol"===cb(a)||"undefined"!==typeof Symbol&&a instanceof Symbol)return al(b,G(["#object[",a.toString(),"]"]));if(p(function(){var f=null==a?null:a.constructor;return null==f?null:f.Da}()))return al(b,G(["#object[",a.constructor.Da.replace(RegExp("/",
    "g"),"."),"]"]));e=function(){var f=null==a?null:a.constructor;return null==f?null:f.name}();c=p(function(){var f=null==e;return f?f:dc(e)}())?"Object":e;return null==a.constructor?al(b,G(["#object[",c,"]"])):al(b,G(["#object[",c," ",q.m(a),"]"]))}function gl(a,b,c){var d=il.m(c);return p(d)?(c=K.hh(c,jl,fl),d.hh?d.hh(a,b,c):d.call(null,a,b,c)):fl(a,b,c)}
    function ll(a,b){if(Of(a))b="";else {var c=q,d=c.m,e=new yc,f=new ze(e);gl(C(a),f,b);a=B(D(a));for(var k=null,l=0,m=0;;)if(m<l){var r=k.W(null,m);be(f," ");gl(r,f,b);m+=1;}else if(a=B(a))k=a,Vf(k)?(a=qe(k),l=re(k),k=a,r=F(a),a=l,l=r):(r=C(k),be(f," "),gl(r,f,b),a=D(k),k=null,l=0),m=0;else break;f.qc(null);b=d.call(c,e);}return b}function ml(a,b){return bl(ll(a,b))}
    var nl=function nl(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return nl.g(0<c.length?new Pe(c.slice(0),0,null):null)};nl.g=function(a){return ll(a,Ic())};nl.F=0;nl.G=function(a){return this.g(B(a))};
    var ol=function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){return ml(c,K.hh(Ic(),Kc,!1))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),pl=function pl(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pl.g(0<c.length?new Pe(c.slice(0),0,null):null)};pl.g=function(a){return ll(a,K.hh(Ic(),Kc,!1))};pl.F=0;
    pl.G=function(a){return this.g(B(a))};function ql(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;rl(0<b.length?new Pe(b.slice(0),0,null):null);}function rl(a){ml(a,K.hh(Ic(),Kc,!1));p(Ec)?(a=Ic(),bl("\n"),a=(x.gh(a,Jc),null)):a=null;return a}function sl(a){return a instanceof w?Le.gh(null,Kg(a)):Jg.gh(null,Kg(a))}
    function tl(a){if(p(!1)){var b=B(a),c=B(b),d=C(c);D(c);J(d,0,null);J(d,1,null);c=Df(a);for(a=null;;){d=a;b=B(b);a=C(b);var e=D(b),f=a;a=J(f,0,null);b=J(f,1,null);if(p(f))if(a instanceof z||a instanceof w)if(p(d))if(A.gh(d,Hg(a)))c=K.hh(c,sl(a),b),a=d,b=e;else return null;else if(d=Hg(a),p(d))c=K.hh(c,sl(a),b),a=d,b=e;else return null;else return null;else return new Q(null,2,5,R,[d,c],null)}}else return null}
    function ul(a,b,c,d,e){return Zk(d,function(f,k,l){var m=Cd(f);c.hh?c.hh(m,k,l):c.call(null,m,k,l);be(k," ");f=Dd(f);return c.hh?c.hh(f,k,l):c.call(null,f,k,l)},[q.m(a),"{"].join(""),", ","}",e,B(b))}function hl(a,b,c,d){var e=M(a)?tl(a):null,f=J(e,0,null);e=J(e,1,null);return p(f)?ul(["#:",q.m(f)].join(""),e,b,c,d):ul(null,a,b,c,d)}Th.prototype.ma=h;Th.prototype.S=function(a,b,c){be(b,"#object[cljs.core.Volatile ");gl(new n(null,1,[vl,this.state],null),b,c);return be(b,"]")};Me.prototype.ma=h;
    Me.prototype.S=function(a,b,c){be(b,"#'");return gl(this.bd,b,c)};Pe.prototype.ma=h;Pe.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Lg.prototype.ma=h;Lg.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Fi.prototype.ma=h;Fi.prototype.S=function(a,b,c){return Zk(b,gl,"["," ","]",c,this)};Zj.prototype.ma=h;Zj.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Oj.prototype.ma=h;Oj.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};
    dk.prototype.ma=h;dk.prototype.S=function(a,b,c){return Zk(b,gl,"["," ","]",c,this)};jj.prototype.ma=h;jj.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Da.prototype.ma=h;Da.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Ri.prototype.ma=h;Ri.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Eg.prototype.ma=h;Eg.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};sf.prototype.ma=h;
    sf.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Ga.prototype.ma=h;Ga.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Tj.prototype.ma=h;Tj.prototype.S=function(a,b,c){return hl(this,gl,b,c)};Qj.prototype.ma=h;Qj.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Ti.prototype.ma=h;Ti.prototype.S=function(a,b,c){return Zk(b,gl,"["," ","]",c,this)};mk.prototype.ma=h;mk.prototype.S=function(a,b,c){return hl(this,gl,b,c)};Ak.prototype.ma=h;
    Ak.prototype.S=function(a,b,c){return Zk(b,gl,"#{"," ","}",c,this)};Qg.prototype.ma=h;Qg.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Mh.prototype.ma=h;Mh.prototype.S=function(a,b,c){be(b,"#object[cljs.core.Atom ");gl(new n(null,1,[vl,this.state],null),b,c);return be(b,"]")};uk.prototype.ma=h;uk.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};ck.prototype.ma=h;ck.prototype.S=function(a,b,c){return Zk(b,gl,"["," ","]",c,this)};Zh.prototype.ma=h;
    Zh.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Q.prototype.ma=h;Q.prototype.S=function(a,b,c){return Zk(b,gl,"["," ","]",c,this)};$i.prototype.ma=h;$i.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Cg.prototype.ma=h;Cg.prototype.S=function(a,b){return be(b,"()")};aj.prototype.ma=h;aj.prototype.S=function(a,b,c){return Zk(b,gl,"#queue ["," ","]",c,B(this))};n.prototype.ma=h;n.prototype.S=function(a,b,c){return hl(this,gl,b,c)};Ok.prototype.ma=h;
    Ok.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};zh.prototype.ma=h;zh.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};tk.prototype.ma=h;tk.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Cf.prototype.ma=h;Cf.prototype.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};w.prototype.Oc=h;w.prototype.Wb=function(a,b){if(b instanceof w)return Ke(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};z.prototype.Oc=h;
    z.prototype.Wb=function(a,b){if(b instanceof z)return Fg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};Ti.prototype.Oc=h;Ti.prototype.Wb=function(a,b){if(Uf(b))return dg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};Q.prototype.Oc=h;Q.prototype.Wb=function(a,b){if(Uf(b))return dg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};Fi.prototype.Oc=h;
    Fi.prototype.Wb=function(a,b){if(Uf(b))return dg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};dk.prototype.Oc=h;dk.prototype.Wb=function(a,b){if(Uf(b))return dg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};ck.prototype.Oc=h;ck.prototype.Wb=function(a,b){if(Uf(b))return dg(this,b);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};function wl(a){this.f=a;this.value=null;this.h=2147516416;this.I=1;}
    wl.prototype.zb=function(){p(this.f)&&(this.value=this.f.o?this.f.o():this.f.call(null),this.f=null);return this.value};wl.prototype.Bd=function(){return Sc(this.f)};wl.prototype.S=function(a,b,c){be(b,"#object[cljs.core.Delay ");gl(new n(null,2,[xl,null==this.f?yl:zl,vl,this.value],null),b,c);return be(b,"]")};function Al(a){return a instanceof wl?u(a):a}function Bl(a,b){this.ue=a;this.be=b;this.h=2173173760;this.I=131072;}g=Bl.prototype;
    g.indexOf=function(){var a=null;a=function(b,c){switch(arguments.length){case 1:return mf(this,b,0);case 2:return mf(this,b,c)}throw Error("Invalid arity: "+arguments.length);};a.m=function(b){return mf(this,b,0)};a.gh=function(b,c){return mf(this,b,c)};return a}();
    g.lastIndexOf=function(){function a(c){return qf(this,c,F(this))}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return qf(this,c,d)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return qf(this,c,d)};return b}();g.ua=function(){var a=sh(this.be);return Ah(this.ue,a)};g.bi=function(){var a=sh(this.be);a=Ah(this.ue,a);a=yh(a);return B(p(a)?a:Re)};g.Ba=function(a,b){return mg(this.ue,lg(b,kg),this.be)};
    g.Ca=function(a,b,c){return ng(this.ue,lg(b,kg),c,this.be)};g.S=function(a,b,c){return Zk(b,gl,"("," ",")",c,this)};Bl.prototype[$c]=function(){return Te(this)};function Cl(a){return new Bl(eh(Hh,Gk(a)),Af(a))}function Dl(){}function El(a){if(null!=a&&null!=a.gg)a=a.gg(a);else {var b=El[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=El._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IEncodeJS.-clj-\x3ejs",a);}return a}
    function Fl(a,b){return (null!=a?h===a.fg||(a.Ke?0:Wc(Dl,a)):Wc(Dl,a))?El(a):"string"===typeof a||"number"===typeof a||a instanceof z||a instanceof w?b.m?b.m(a):b.call(null,a):nl.g(G([a]))}var Gl=function Gl(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return Gl.g(arguments[0],1<c.length?new Pe(c.slice(1),0,null):null)};
    Gl.g=function(a,b){b=Ea(b);var c=x.hh(b,Hl,Kg),d=function k(f){if(null==f)return null;if(null!=f?h===f.fg||(f.Ke?0:Wc(Dl,f)):Wc(Dl,f))return El(f);if(f instanceof z)return c.m?c.m(f):c.call(null,f);if(f instanceof w)return q.m(f);if(M(f)){var l={};f=B(f);for(var m=null,r=0,t=0;;)if(t<r){var v=m.W(null,t),y=J(v,0,null);v=J(v,1,null);y=Fl(y,d);v=k(v);l[y]=v;t+=1;}else if(f=B(f))Vf(f)?(r=qe(f),f=re(f),m=r,r=F(r)):(r=C(f),m=J(r,0,null),r=J(r,1,null),m=Fl(m,d),r=k(r),l[m]=r,f=D(f),m=null,r=0),t=0;else break;
    return l}if(Pf(f)){l=[];f=B(Vh.gh(k,f));m=null;for(t=r=0;;)if(t<r)y=m.W(null,t),l.push(y),t+=1;else if(f=B(f))m=f,Vf(m)?(f=qe(m),t=re(m),m=f,r=F(f),f=t):(f=C(m),l.push(f),f=D(m),m=null,r=0),t=0;else break;return l}return f};return d(a)};Gl.F=1;Gl.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};function Il(){}
    function Jl(a,b){if(null!=a&&null!=a.eg)a=a.eg(a,b);else {var c=Jl[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=Jl._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IEncodeClojure.-js-\x3eclj",a);}return a}function uZ(a){return Ll(a,G([Ml,!1]))}
    function Ll(a,b){var c=Ea(b);c=x.gh(c,Ml);var d=p(c)?Jg:q;return function k(f){return (null!=f?h===f.Mh||(f.Ke?0:Wc(Il,f)):Wc(Il,f))?Jl(f,eh(qk,b)):Zf(f)?Uk(Vh.gh(k,f)):Ni(f)?new Fi(k(Cd(f)),k(Dd(f))):Pf(f)?ii.hh(Df(f),Vh.m(k),f):Qc(f)?ke(fd.hh(function(l,m){return Xg.gh(l,k(m))},ie(I),f)):Xc(f)===Object?ke(fd.hh(function(l,m){return Yg(l,d.m?d.m(m):d.call(null,m),k(da(f,m)))},ie(S),ca(f))):f}(a)}
    function Ia(a){var b=Nh(S);return function(){function c(e){var f=null;if(0<arguments.length){f=0;for(var k=Array(arguments.length-0);f<k.length;)k[f]=arguments[f+0],++f;f=new Pe(k,0,null);}return d.call(this,f)}function d(e){var f=x.hh(u(b),e,Xf);return f===Xf?(f=eh(a,e),Qh.A(b,K,e,f),f):f}c.F=0;c.G=function(e){e=B(e);return d(e)};c.g=d;return c}()}function Nl(a,b){return ke(fd.hh(function(c,d){var e=a.m?a.m(d):a.call(null,d);return Yg(c,e,Bf.gh(x.hh(c,e,I),d))},ie(S),b))}var Ol=null;
    function Pl(){null==Ol&&(Ol=Nh(new n(null,3,[Ql,S,Rl,S,Sl,S],null)));return Ol}function Tl(a,b,c){var d=A.gh(b,c);if(d)return d;d=Sl.m(a);d=d.m?d.m(b):d.call(null,b);if(!(d=N(d,c))&&(d=Uf(c)))if(d=Uf(b))if(d=F(c)===F(b)){d=!0;for(var e=0;;)if(d&&e!==F(c))d=Tl(a,b.m?b.m(e):b.call(null,e),c.m?c.m(e):c.call(null,e)),e+=1;else return d}else return d;else return d;else return d}function Ul(a){var b=u(Pl());return kh(x.gh(Ql.m(b),a))}
    function Vl(a,b,c,d){Qh.gh(a,function(){return u(b)});Qh.gh(c,function(){return u(d)});}
    var Wl=function Wl(a,b,c){var e=function(){var f=u(c);return f.m?f.m(a):f.call(null,a)}();e=p(p(e)?e.m?e.m(b):e.call(null,b):e)?!0:null;if(p(e))return e;e=function(){for(var f=Ul(b);;)if(0<F(f)){var k=C(f);Wl.hh?Wl.hh(a,k,c):Wl.call(null,a,k,c);f=Qe(f);}else return null}();if(p(e))return e;e=function(){for(var f=Ul(a);;)if(0<F(f)){var k=C(f);Wl.hh?Wl.hh(k,b,c):Wl.call(null,k,b,c);f=Qe(f);}else return null}();return p(e)?e:!1};function Xl(a,b,c,d){c=Wl(a,b,c);return p(c)?c:Tl(d,a,b)}
    var Yl=function Yl(a,b,c,d,e,f,k,l){var r=fd.hh(function(v,y){var E=J(y,0,null);J(y,1,null);if(Tl(u(c),b,E)){v=null==v||Xl(E,C(v),e,u(c))?y:v;if(!Xl(C(v),E,e,u(c)))throw Error(["Multiple methods in multimethod '",q.m(a),"' match dispatch value: ",q.m(b)," -\x3e ",q.m(E)," and ",q.m(C(v)),", and neither is preferred"].join(""));return v}return v},null,u(d)),t=function(){var v;if(v=null==r)v=u(d),v=v.m?v.m(l):v.call(null,l);return p(v)?new Q(null,2,5,R,[l,v],null):r}();if(p(t)){if(A.gh(u(k),u(c)))return Qh.A(f,
    K,b,yf(t)),yf(t);Vl(f,d,k,c);return Yl.Ga?Yl.Ga(a,b,c,d,e,f,k,l):Yl.call(null,a,b,c,d,e,f,k,l)}return null};function Zl(a,b,c){if(null!=a&&null!=a.v)a.v(a,b,c);else {var d=Zl[cb(null==a?null:a)];if(null!=d)d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=Zl._,null!=d)d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IMultiFn.-add-method",a);}}
    function $l(a,b){if(null!=a&&null!=a.Ea)a=a.Ea(a,b);else {var c=$l[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=$l._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IMultiFn.-get-method",a);}return a}function am(a){if(null!=a&&null!=a.ig)a=a.R;else {var b=am[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=am._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IMultiFn.-dispatch-fn",a);}return a}
    function bm(a,b){throw Error(["No method in multimethod '",q.m(a),"' for dispatch value: ",q.m(b)].join(""));}function cm(a,b,c,d,e,f,k){var l=dm;this.name=a;this.R=b;this.vg=l;this.fe=c;this.ke=d;this.xh=e;this.je=f;this.Ud=k;this.h=4194305;this.I=4352;}g=cm.prototype;
    g.call=function(a){switch(arguments.length-1){case 0:return this.o();case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);case 3:return this.hh(arguments[1],arguments[2],arguments[3]);case 4:return this.A(arguments[1],arguments[2],arguments[3],arguments[4]);case 5:return this.K(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 6:return this.la(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6]);case 7:return this.ib(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7]);case 8:return this.Ga(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8]);case 9:return this.Xa(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9]);case 10:return this.mb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10]);
    case 11:return this.cb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11]);case 12:return this.nb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12]);case 13:return this.eb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],
    arguments[11],arguments[12],arguments[13]);case 14:return this.ob(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14]);case 15:return this.fb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15]);case 16:return this.pb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16]);case 17:return this.gb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17]);case 18:return this.qb(arguments[1],arguments[2],
    arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18]);case 19:return this.hb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19]);case 20:return this.rb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],arguments[20]);case 21:return this.Sc(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],
    arguments[18],arguments[19],arguments[20],arguments[21]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.o=function(){var a=this.R.o?this.R.o():this.R.call(null),b=this.Ea(null,a);p(b)||bm(this.name,a);return b.o?b.o():b.call(null)};g.m=function(a){var b=this.R.m?this.R.m(a):this.R.call(null,a),c=this.Ea(null,b);p(c)||bm(this.name,b);return c.m?c.m(a):c.call(null,a)};
    g.gh=function(a,b){var c=this.R.gh?this.R.gh(a,b):this.R.call(null,a,b),d=this.Ea(null,c);p(d)||bm(this.name,c);return d.gh?d.gh(a,b):d.call(null,a,b)};g.hh=function(a,b,c){var d=this.R.hh?this.R.hh(a,b,c):this.R.call(null,a,b,c),e=this.Ea(null,d);p(e)||bm(this.name,d);return e.hh?e.hh(a,b,c):e.call(null,a,b,c)};g.A=function(a,b,c,d){var e=this.R.A?this.R.A(a,b,c,d):this.R.call(null,a,b,c,d),f=this.Ea(null,e);p(f)||bm(this.name,e);return f.A?f.A(a,b,c,d):f.call(null,a,b,c,d)};
    g.K=function(a,b,c,d,e){var f=this.R.K?this.R.K(a,b,c,d,e):this.R.call(null,a,b,c,d,e),k=this.Ea(null,f);p(k)||bm(this.name,f);return k.K?k.K(a,b,c,d,e):k.call(null,a,b,c,d,e)};g.la=function(a,b,c,d,e,f){var k=this.R.la?this.R.la(a,b,c,d,e,f):this.R.call(null,a,b,c,d,e,f),l=this.Ea(null,k);p(l)||bm(this.name,k);return l.la?l.la(a,b,c,d,e,f):l.call(null,a,b,c,d,e,f)};
    g.ib=function(a,b,c,d,e,f,k){var l=this.R.ib?this.R.ib(a,b,c,d,e,f,k):this.R.call(null,a,b,c,d,e,f,k),m=this.Ea(null,l);p(m)||bm(this.name,l);return m.ib?m.ib(a,b,c,d,e,f,k):m.call(null,a,b,c,d,e,f,k)};g.Ga=function(a,b,c,d,e,f,k,l){var m=this.R.Ga?this.R.Ga(a,b,c,d,e,f,k,l):this.R.call(null,a,b,c,d,e,f,k,l),r=this.Ea(null,m);p(r)||bm(this.name,m);return r.Ga?r.Ga(a,b,c,d,e,f,k,l):r.call(null,a,b,c,d,e,f,k,l)};
    g.Xa=function(a,b,c,d,e,f,k,l,m){var r=this.R.Xa?this.R.Xa(a,b,c,d,e,f,k,l,m):this.R.call(null,a,b,c,d,e,f,k,l,m),t=this.Ea(null,r);p(t)||bm(this.name,r);return t.Xa?t.Xa(a,b,c,d,e,f,k,l,m):t.call(null,a,b,c,d,e,f,k,l,m)};g.mb=function(a,b,c,d,e,f,k,l,m,r){var t=this.R.mb?this.R.mb(a,b,c,d,e,f,k,l,m,r):this.R.call(null,a,b,c,d,e,f,k,l,m,r),v=this.Ea(null,t);p(v)||bm(this.name,t);return v.mb?v.mb(a,b,c,d,e,f,k,l,m,r):v.call(null,a,b,c,d,e,f,k,l,m,r)};
    g.cb=function(a,b,c,d,e,f,k,l,m,r,t){var v=this.R.cb?this.R.cb(a,b,c,d,e,f,k,l,m,r,t):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t),y=this.Ea(null,v);p(y)||bm(this.name,v);return y.cb?y.cb(a,b,c,d,e,f,k,l,m,r,t):y.call(null,a,b,c,d,e,f,k,l,m,r,t)};g.nb=function(a,b,c,d,e,f,k,l,m,r,t,v){var y=this.R.nb?this.R.nb(a,b,c,d,e,f,k,l,m,r,t,v):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v),E=this.Ea(null,y);p(E)||bm(this.name,y);return E.nb?E.nb(a,b,c,d,e,f,k,l,m,r,t,v):E.call(null,a,b,c,d,e,f,k,l,m,r,t,v)};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,t,v,y){var E=this.R.eb?this.R.eb(a,b,c,d,e,f,k,l,m,r,t,v,y):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y),H=this.Ea(null,E);p(H)||bm(this.name,E);return H.eb?H.eb(a,b,c,d,e,f,k,l,m,r,t,v,y):H.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y)};
    g.ob=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E){var H=this.R.ob?this.R.ob(a,b,c,d,e,f,k,l,m,r,t,v,y,E):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E),T=this.Ea(null,H);p(T)||bm(this.name,H);return T.ob?T.ob(a,b,c,d,e,f,k,l,m,r,t,v,y,E):T.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E)};
    g.fb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H){var T=this.R.fb?this.R.fb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H),Y=this.Ea(null,T);p(Y)||bm(this.name,T);return Y.fb?Y.fb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H):Y.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H)};
    g.pb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T){var Y=this.R.pb?this.R.pb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T),ia=this.Ea(null,Y);p(ia)||bm(this.name,Y);return ia.pb?ia.pb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T):ia.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T)};
    g.gb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){var ia=this.R.gb?this.R.gb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y),ba=this.Ea(null,ia);p(ba)||bm(this.name,ia);return ba.gb?ba.gb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y):ba.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y)};
    g.qb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia){var ba=this.R.qb?this.R.qb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia),wa=this.Ea(null,ba);p(wa)||bm(this.name,ba);return wa.qb?wa.qb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia):wa.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia)};
    g.hb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba){var wa=this.R.hb?this.R.hb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba),ta=this.Ea(null,wa);p(ta)||bm(this.name,wa);return ta.hb?ta.hb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba):ta.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba)};
    g.rb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa){var ta=this.R.rb?this.R.rb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):this.R.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa),ob=this.Ea(null,ta);p(ob)||bm(this.name,ta);return ob.rb?ob.rb(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa):ob.call(null,a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa)};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta){var ob=ih(this.R,a,b,c,d,G([e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta])),qb=this.Ea(null,ob);p(qb)||bm(this.name,ob);return ih(qb,a,b,c,d,G([e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta]))};g.ig=function(){return this.R};g.v=function(a,b,c){Qh.A(this.ke,K,b,c);Vl(this.je,this.ke,this.Ud,this.fe);return this};
    g.Ea=function(a,b){A.gh(u(this.Ud),u(this.fe))||Vl(this.je,this.ke,this.Ud,this.fe);a=u(this.je);a=a.m?a.m(b):a.call(null,b);return p(a)?a:Yl(this.name,b,this.fe,this.ke,this.xh,this.je,this.Ud,this.vg)};g.yd=function(){return se(this.name)};g.zd=function(){return te(this.name)};g.Z=function(){return fb(this)};function em(a){this.dd=a;this.B=null;this.h=2153775104;this.I=2048;}g=em.prototype;g.toString=function(){return this.dd};g.Y=function(a,b){return b instanceof em&&this.dd===b.dd};
    g.S=function(a,b){return be(b,['#uuid "',q.m(this.dd),'"'].join(""))};g.Z=function(){null==this.B&&(this.B=Ie(this.dd));return this.B};g.Wb=function(a,b){if(b instanceof em)return la(this.dd,b.dd);throw Error(["Cannot compare ",q.m(this)," to ",q.m(b)].join(""));};
    function fm(){function a(){return Math.floor(16*Math.random()).toString(16)}var b=(8|3&Math.floor(16*Math.random())).toString(16);return new em([q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),"-",q.m(a()),q.m(a()),q.m(a()),q.m(a()),"-4",q.m(a()),q.m(a()),q.m(a()),"-",q.m(b),q.m(a()),q.m(a()),q.m(a()),"-",q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a()),q.m(a())].join("").toLowerCase())}
    function gm(a,b,c){var d=Error(a);this.message=a;this.data=b;this.lf=c;this.name=d.name;this.description=d.description;this.number=d.number;this.fileName=d.fileName;this.lineNumber=d.lineNumber;this.columnNumber=d.columnNumber;this.stack=d.stack;return this}gm.prototype.__proto__=Error.prototype;gm.prototype.ma=h;
    gm.prototype.S=function(a,b,c){be(b,"#error {:message ");gl(this.message,b,c);p(this.data)&&(be(b,", :data "),gl(this.data,b,c));p(this.lf)&&(be(b,", :cause "),gl(this.lf,b,c));return be(b,"}")};gm.prototype.toString=function(){return Ae(this)};function hm(a,b){return im(a,b,null)}function im(a,b,c){return new gm(a,b,c)}function jm(a){return a instanceof gm?a.data:null}function km(a){return a instanceof Error?a.message:null}
    function lm(a){return N(new Ak(null,new n(null,24,[mm,"null",nm,"null",om,"null",pm,"null",qm,"null",rm,"null",sm,"null",tm,"null",um,"null",vm,"null",wm,"null",xm,"null",ym,"null",zm,"null",Am,"null",Bm,"null",Cm,"null",Dm,"null",Em,"null",Fm,"null",Gm,"null",Hm,"null",Im,"null",Jm,"null"],null),null),a)}function Km(a,b){this.tag=a;this.form=b;this.h=2153775360;this.I=0;}g=Km.prototype;g.toString=function(){return Ae(this)};
    g.Y=function(a,b){return b instanceof Km&&A.gh(this.tag,b.tag)&&A.gh(this.form,b.form)};g.Z=function(){return 31*Ie(this.tag)+Ie(this.form)};g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "tag":return this.tag;case "form":return this.form;default:return c}};g.S=function(a,b,c){be(b,["#",q.m(this.tag)," "].join(""));return gl(this.form,b,c)};
    var Lm="arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" "),Mm=null;
    function Nm(a){null==Mm&&(Mm=fd.hh(function(b,c){b[c]=!0;return b},{},Lm));return Mm.hasOwnProperty(a)}function Om(){p(cd)||(cd=function(){for(var a=fg(function(e,f){return f.length-e.length}),b="";;)if(B(a)){var c=D(a),d=[function(){var e=b;return ""!==b?[e,"|"].join(""):e}(),q.m(C(a))].join("");a=c;b=d;}else return [b,"|\\$"].join("")}());return cd}
    function Pm(a){var b=q.m(a);if("_DOT__DOT_"===b)var c="..";else a:{c=new RegExp(Om(),"g");b=p(cc(b,"$"))?b.substring(0,b.length-1):b;for(var d="",e=0;;){var f=c.exec(b);if(p(f))f=J(f,0,null),d=[d,q.m(b.substring(e,c.lastIndex-f.length)),q.m("$"===f?"/":da(bd,f))].join(""),e=c.lastIndex;else {c=[d,q.m(b.substring(e,b.length))].join("");break a}}}a=a instanceof w?Le:q;return a.m?a.m(c):a.call(null,c)}function Qm(a){this.name=a;this.h=6291456;this.I=0;}Qm.prototype.toString=function(){return q.m(this.name)};
    Qm.prototype.Y=function(a,b){return b instanceof Qm?A.gh(this.name,b.name):!1};Qm.prototype.Z=function(){return Ie(this.name)};var Rm=null;"undefined"!==typeof console&&Oc();Oc();var Sm=new z("gateway.common.spec.messages","type","gateway.common.spec.messages/type",2118883938),Ja=new z("gateway.common.context.spec.requests","type","gateway.common.context.spec.requests/type",372560587),Tm=new z("gateway.domains.agm.spec.requests","snapshot","gateway.domains.agm.spec.requests/snapshot",476154767),Vm=new z(null,"metrics","metrics",394093469),Wm=new w(null,"not-native","not-native",-236392494,null),Xm=new z("gateway.domains.global.spec.messages","creator_id","gateway.domains.global.spec.messages/creator_id",
    2015161290),Ym=new z(null,"local?","local?",-1422786101),Zm=new z("gateway.state.spec.context","lifetime","gateway.state.spec.context/lifetime",-510268810),$m=new z(null,"level","level",1290497552),an=new z(null,"?err_","?err_",789480858),bn=new z(null,"line","line",212345235),dn=new z(null,"repeat","repeat",832692087),en=new z(null,"client-request","client-request",-1402967032),fn=new z("gateway.domains.agm.spec.requests","stream_id","gateway.domains.agm.spec.requests/stream_id",-1290121066),gn=
    new z(null,"ALPHA","ALPHA",-1463859144),hn=new z(null,"repository-factories","repository-factories",-545628132),qm=new w(null,"ns*","ns*",1840949383,null),jn=new z(null,"initiator","initiator",217480362),kn=new z(null,"left","left",-399115937),ln=new z("gateway.state.spec.common","activity-id","gateway.state.spec.common/activity-id",245315645),mn=new z(null,"context-added","context-added",-639543900),nn=new z(null,"signature-key","signature-key",-1652526996),on=new z(null,"start-block-t","start-block-t",
    -373430594),pn=new z("gateway.state.spec.common","type","gateway.state.spec.common/type",-877512429),rn=new z(null,"local-ip","local-ip",302001740),qn=new z(null,"per-line-prefix","per-line-prefix",846941813),sn=new z(null,"blacklist-ns","blacklist-ns",1200193567),tn=new z(null,"low","low",-1601362409),un=new z("gateway.state.spec.context","members","gateway.state.spec.context/members",1219498589),vn=new z(null,"string","string",-1989541586),wn=new z(null,"data","data",-232669377),xn=new z(null,"factor",
    "factor",-2103172748),zn=new z(null,"parsers","parsers",-804353827),An=new z("gateway.domains.agm.spec.unregister","unregister","gateway.domains.agm.spec.unregister/unregister",388278210),Bn=new z("gateway.state.spec.activity","id","gateway.state.spec.activity/id",1251756953),Cn=new z(null,"peers","peers",2005345354),Dn=new z("cljs.spec.alpha","amp","cljs.spec.alpha/amp",831147508),En=new z("gateway.state.spec.restrictions","string-restrictions","gateway.state.spec.restrictions/string-restrictions",
    -382592371),Fn=new z(null,"done-nl","done-nl",-381024340),Ka=new z("gateway.state.spec.context","timestamp","gateway.state.spec.context/timestamp",1704984480),Gn=new z(null,"private","private",-558947994),Hn=new z("cljs.spec.alpha","alt","cljs.spec.alpha/alt",523685437),xl=new z(null,"status","status",-1997798413),In=new z(null,"version","version",425292698),Jn=new z(null,"trace?","trace?",1730690679),Kn=new z(null,"last-access","last-access",1110221580),Mn=new z("gateway.common.spec.messages","peer-message",
    "gateway.common.spec.messages/peer-message",823378764),Nn=new z(null,"days","days",-1394072564),Pn=new z(null,"description","description",-1428560544),Qn=new z(null,"process-id","process-id",-2118975265),Rn=new z(null,"available_domains","available_domains",-981328192),Sn=new w("cljs.core","deref","cljs.core/deref",1901963335,null),Tn=new z(null,"parser2","parser2",1013754688),Un=new z("gateway.domains.agm.spec.messages","meta","gateway.domains.agm.spec.messages/meta",520804499),Vn=new z(null,"parser1",
    "parser1",-439601422),Wn=new z("cljs.spec.alpha","nil","cljs.spec.alpha/nil",1733813950),Xn=new z("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),Yn=new z(null,"interests","interests",1200294902),Zn=new z(null,"contexts","contexts",4351546),bo=new z("gateway.state.spec.bus","subscription-id","gateway.state.spec.bus/subscription-id",-1920104157),co=new z(null,"mandatory","mandatory",542802336),eo=new z(null,"end-column","end-column",1425389514),fo=new w("cljs.spec.alpha","multi-spec",
    "cljs.spec.alpha/multi-spec",175821274,null),go=new z(null,"resolved_identity","resolved_identity",-874947112),ho=new z(null,"interop","interop",-1183783726),io=new z(null,"end-of-string","end-of-string",1567354241),jo=new z(null,"delta","delta",108939957),ko=new z(null,"service?","service?",-2064761863),lo=new z(null,"base-args","base-args",-1268706822),mo=new z("gateway.common.context.spec.requests","updated","gateway.common.context.spec.requests/updated",-286888249),no=new w(null,"message-body",
    "message-body",-554118051,null),yk=new z("cljs.core","not-found","cljs.core/not-found",-1572889185),po=new z(null,"create-token","create-token",-1564000484),qo=new z(null,"vargs_","vargs_",552132148),ro=new z(null,"server","server",1499190120),so=new z(null,"grammar","grammar",1881328267),to=new z("gateway.state.spec.mthds","method","gateway.state.spec.mthds/method",1887447044),uo=new z(null,"def","def",-1043430536),vo=new z(null,"destination","destination",-253872483),yo=new w("cljs.core","string?",
    "cljs.core/string?",-2072921719,null),zo=new z(null,"auto-whitespace","auto-whitespace",741152317),Bo=new z(null,"right-margin","right-margin",-810413306),Co=new z("gateway.state.spec.state","activity-subscribers","gateway.state.spec.state/activity-subscribers",-776389065),Do=new z(null,"ref-counted","ref-counted",-1035328654),Eo=new z("gateway.state.spec.agm","subscriber","gateway.state.spec.agm/subscriber",2009954326),La=new z(null,"destroy_peer_id","destroy_peer_id",388079342),Fo=new z(null,"ready?",
    "ready?",-105765697),Go=new z("gateway.domains.global.spec.requests","write_permissions","gateway.domains.global.spec.requests/write_permissions",774911915),Ho=new z(null,"exponentchar","exponentchar",1986664222),Jo=new z(null,"start-time","start-time",814801386),Lo=new z("gateway.state.spec.restrictions","empty-restrictions","gateway.state.spec.restrictions/empty-restrictions",1011650447),No=new z(null,"directive","directive",793559132),Oo=new z(null,"secret","secret",618547054),Po=new z("cljs.spec.alpha",
    "name","cljs.spec.alpha/name",205233570),Qo=new z("gateway.state.spec.domain-registry","registered-domains","gateway.state.spec.domain-registry/registered-domains",511803772),Ro=new z("gateway.state.spec.mthds","version","gateway.state.spec.mthds/version",1762403198),So=new z("gateway.state.spec.agm","calls","gateway.state.spec.agm/calls",16611731),To=new z("gateway.domains.agm.spec.requests","remove-interest","gateway.domains.agm.spec.requests/remove-interest",-328528457),Uo=new z("gateway.domains.global.spec.requests",
    "context_id","gateway.domains.global.spec.requests/context_id",-1750912658),Vo=new z("gateway.state.spec.common","node","gateway.state.spec.common/node",-570411717),Wo=new z(null,"topic","topic",-1960480691),Xo=new w("gateway.auth.spec","response-type","gateway.auth.spec/response-type",724325508,null),Yo=new z(null,"context-id","context-id",1979873501),Zo=new z(null,"trailing-white-space","trailing-white-space",1496006996),$o=new z(null,"destroy-peer","destroy-peer",-1747489061),ap=new w(null,"address-type",
    "address-type",-1732576165,null),bp=new w(null,"keyword?","keyword?",1917797069,null),cp=new z(null,"arg-filter-fn","arg-filter-fn",1576945932),dp=new z("gateway.state.spec.state","signature-key","gateway.state.spec.state/signature-key",1283598087),ep=new z("instaparse.gll","end-index","instaparse.gll/end-index",-1851404441),fp=new z(null,"agm-domain","agm-domain",1137239322),gp=new z(null,"instance","instance",-2121349050),Ma=new z(null,"max-pending-requests","max-pending-requests",-1862384536),
    hp=new z(null,"right-params","right-params",-1790676237),ip=new z(null,"activity_types","activity_types",-1792673047),jp=new z("gateway.state.spec.mthds","flags","gateway.state.spec.mthds/flags",408816343),zm=new w(null,"let*","let*",1920721458,null),lp=new z(null,"option","option",65132272),mp=new z("gateway.state.spec.state","id","gateway.state.spec.state/id",2050905551),np=new z("gateway.domains.global.spec.requests","lifetime","gateway.domains.global.spec.requests/lifetime",-1145821948),pp=new z(null,
    "ns-blacklist","ns-blacklist",1957763142),op=new w(null,"when-first","when-first",821699168,null),qp=new z(null,"result_signature","result_signature",-1204398780),sp=new z(null,"input_signature","input_signature",158735218),tp=new z("gateway.state.spec.state","state","gateway.state.spec.state/state",-1032276972),yp=new z("gateway.state.spec.context","id","gateway.state.spec.context/id",1782620593),zp=new z(null,"allowed","allowed",1436019743),U=new z(null,"type","type",1174270348),Ap=new z(null,"types-added",
    "types-added",1274011029),Bp=new z(null,"none","none",1333468478),Cp=new z(null,"peer-id","peer-id",387144350),Dp=new w(null,"_","_",-1201019570,null),Ep=new w("cljs.core","seq","cljs.core/seq",-1649497689,null),Fp=new z(null,"reader-error","reader-error",1610253121),Gp=new w(null,"v","v",1661996586,null),Hp=new w(null,"m","m",-1021758608,null),Ip=new w(null,"k","k",-505765866,null),Jp=new z(null,"optional","optional",2053951509),Np=new w("cljs.core","keyword?","cljs.core/keyword?",713156450,null),
    Na=new z(null,"large-msg","large-msg",2140041016),Rp=new z("gateway.common.context.spec.requests","context-destroy","gateway.common.context.spec.requests/context-destroy",-2019226956),Oa=new z("gateway.state.spec.context","updates","gateway.state.spec.context/updates",-1191134395),Sp=new z("gateway.domains.global.spec.messages","updater_id","gateway.domains.global.spec.messages/updater_id",-1794190419),Tp=new z(null,"creator_id","creator_id",1398967087),Up=new z("gateway.common.spec.messages","request",
    "gateway.common.spec.messages/request",712202569),Vp=new w("cljs.core","keyword","cljs.core/keyword",-337316415,null),Wp=new z(null,"node","node",581201198),Xp=new z("gateway.domains.global.spec.requests","leave","gateway.domains.global.spec.requests/leave",101292368),Yp=new z(null,"token","token",-1211463215),Pa=new z(null,"deny","deny",1589338523),Zp=new z("instaparse","failure","instaparse/failure",1422918607),$p=new z("gateway.state.spec.agm","subscription","gateway.state.spec.agm/subscription",
    1556334291),bq=new z(null,"high","high",2027297808),cq=new z("gateway.auth.spec","remote_identity","gateway.auth.spec/remote_identity",-1701598746),dq=new z(null,"plus","plus",211540661),eq=new z("gateway.state.spec.domain-registry","domain","gateway.state.spec.domain-registry/domain",-1376202493),fq=new w("cljs.core","number?","cljs.core/number?",-811857295,null),hq=new w("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),iq=new z(null,"auth","auth",1389754926),jq=new z("gateway.domains.agm.spec.requests",
    "call","gateway.domains.agm.spec.requests/call",442214083),kq=new z(null,"arguments","arguments",-1182834456),mq=new z(null,"auto","auto",-566279492),lq=new z(null,"colinc","colinc",-584873385),nq=new z(null,"logical-block","logical-block",-581022564),oq=new z(null,"node-builder","node-builder",-1956562605),pq=new z("gateway.state.spec.common","endpoint","gateway.state.spec.common/endpoint",-2063041997),qq=new z("gateway.domains.global.spec.messages","reason","gateway.domains.global.spec.messages/reason",
    -1756219178),rq=new z(null,"your-version","your-version",-351781765),tq=new z(null,"col","col",-1959363084),uq=new z(null,"domain","domain",1847214937),vq=new z(null,"?ns-str","?ns-str",2012733966),wq=new z(null,"reset","reset",-800929946),xq=new z(null,"current","current",-1088038603),yq=new z(null,"writing","writing",-1486865108),zq=new z("gateway.state.spec.bus","topic-repattern","gateway.state.spec.bus/topic-repattern",736554526),Aq=new z("gateway.state.spec.common","peer-id","gateway.state.spec.common/peer-id",
    -1398853323),Bq=new z(null,"suppress-namespaces","suppress-namespaces",2130686956),Cq=new z("gateway.domains.agm.spec.requests","unsubscribe","gateway.domains.agm.spec.requests/unsubscribe",-1898794870),Dq=new z("gateway.domains.agm.spec.requests","server_id","gateway.domains.agm.spec.requests/server_id",172340651),Eq=new z(null,"parent","parent",-878878779),Fq=new z("gateway.state.spec.activity","visibility","gateway.state.spec.activity/visibility",-1264422156),Gq=new w("cljs.spec.alpha","conform",
    "cljs.spec.alpha/conform",763100824,null),Hq=new z(null,"bus-domain","bus-domain",1136396472),Iq=new w("cljs.core","map?","cljs.core/map?",-1390345523,null),mm=new w(null,"\x26","\x26",-2144855648,null),Jq=new z(null,"HTAB","HTAB",11392612),Kq=new z(null,"snapshot","snapshot",-1274785710),Lq=new z(null,"right-bracket","right-bracket",951856080),Mq=new z(null,"req-id","req-id",-471642231),Nq=new z("gateway.state.spec.activity","context-id","gateway.state.spec.activity/context-id",341891962),Oq=new z("gateway.state.spec.factory",
    "factory","gateway.state.spec.factory/factory",1055781172),Pq=new z(null,"req-in","req-in",960021885),Qa=new z(null,"iso8601","iso8601",609352650),Qq=new z(null,"current-id","current-id",210783650),Rq=new z(null,"ttl","ttl",-1115275118),Sq=new z("gateway.state.spec.activity","owner_type","gateway.state.spec.activity/owner_type",-1823895667),Tq=new z("gateway.state.spec.activity","initiator","gateway.state.spec.activity/initiator",735796495),dm=new z(null,"default","default",-1987822328),Uq=new z(null,
    "secs","secs",1532330091),Vq=new z("gateway.state.spec.agm","interest","gateway.state.spec.agm/interest",1248511583),Wq=new z(null,"initial_context","initial_context",-797433349),Xq=new w("clojure.core","deref","clojure.core/deref",188719157,null),Zq=new z(null,"system","system",-29381724),$q=new z(null,"partial","partial",241141745),ar=new z("gateway.domains.agm.spec.requests","publish","gateway.domains.agm.spec.requests/publish",-1020033829),br=new z("gateway.auth.spec","login","gateway.auth.spec/login",
    532129350),cr=new z("gateway.common.context.spec.requests","context-update","gateway.common.context.spec.requests/context-update",562123698),dr=new z("gateway.state.spec.agm","call","gateway.state.spec.agm/call",399063183),er=new z(null,"handler-ch","handler-ch",2044105199),fr=new z(null,"reader-exception","reader-exception",-1938323098),gr=new w("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),hr=new z("gateway.domains.agm.spec.requests","context","gateway.domains.agm.spec.requests/context",
    -1915055426),ir=new z(null,"req-un","req-un",1074571008),jr=new z(null,"forms","forms",2045992350),lr=new z(null,"cur","cur",1153190599),mr=new z("gateway.state.spec.mthds","result_signature","gateway.state.spec.mthds/result_signature",-1987803736),nr=new z("gateway.state.spec.activity","ready-members","gateway.state.spec.activity/ready-members",-939559218),or=new z(null,"filters","filters",974726919),Jm=new w(null,"def","def",597100991,null),pr=new z("gateway.domains.global.spec.requests","context-update",
    "gateway.domains.global.spec.requests/context-update",-1728804708),Ml=new z(null,"keywordize-keys","keywordize-keys",1310784252),qr=new z(null,"pos","pos",-864607220),rr=new z(null,"initiated","initiated",2096076574),sr=new z("cljs.spec.alpha","v","cljs.spec.alpha/v",552625740),tr=new z(null,"message","message",-406056002),ur=new z("gateway.state.spec.activity","types","gateway.state.spec.activity/types",-2083568052),vr=new z("cljs.spec.alpha","k","cljs.spec.alpha/k",-1602615178),wr=new z(null,"output-fn",
    "output-fn",1600951539),yr=new z(null,"total","total",1916810418),zr=new z(null,"domains","domains",1410387719),Ar=new z(null,"CR","CR",-1654295403),Br=new z("gateway.state.spec.common","source","gateway.state.spec.common/source",1883706108),Cr=new z(null,"typ","typ",-1304536900),Dr=new z(null,"form","form",-1624062471),V=new w(null,"%","%",-950237169,null),Er=new z(null,"pretty-writer","pretty-writer",-1222834267),Fr=new w(null,"..","..",-300507420,null),Gr=new z(null,"accepted","accepted",-1953464374),
    Hr=new z(null,"removed","removed",609626430),Ir=new w("gateway.common.spec.messages","message-body","gateway.common.spec.messages/message-body",-1647648637,null),Jr=new z(null,"pretty","pretty",-1916372486),Lr=new z(null,"peer-requested","peer-requested",1452118887),Mr=new z(null,"application","application",551185447),Nr=new z("cljs.spec.alpha","invalid","cljs.spec.alpha/invalid",-1220295119),Or=new z("cljs.spec.alpha","pcat","cljs.spec.alpha/pcat",26406623),Pr=new z("gateway.common.context.spec.requests",
    "read_permissions","gateway.common.context.spec.requests/read_permissions",-45173714),Qr=new z(null,"caller","caller",-1275362879),Rr=new z("gateway.state.spec.factory","id","gateway.state.spec.factory/id",-395012522),Sr=new z(null,"LWSP","LWSP",782998598),Tr=new z(null,"activity","activity",-1179221455),Ur=new z(null,"dec-val","dec-val",-1263870894),Vr=new z(null,"activity-types","activity-types",-397260556),Wr=new z("gateway.state.spec.activity","configuration","gateway.state.spec.activity/configuration",
    1853083827),Xr=new z(null,"arguments_kv","arguments_kv",739148125),Yr=new z(null,"callee","callee",-156445786),Zr=new z(null,"activity_id","activity_id",-240070853),$r=new z("gateway.state.spec.pending-requests","activity","gateway.state.spec.pending-requests/activity",1935677687),as=new w(null,"read-string*","read-string*",1046768315,null),cs=new z("gateway.state.spec.state","identities","gateway.state.spec.state/identities",-204237049),ds=new z(null,"join","join",-758861890),es=new w(null,"uuid",
    "uuid",-504564192,null),fs=new z(null,"participants","participants",673603367),gs=new z(null,"full-results","full-results",-1500225407),hs=new z(null,"own-ident","own-ident",1422237852),is=new z(null,"request_id","request_id",-208950594),js=new w(null,"queue","queue",-1198599890,null),ks=new z(null,"else","else",-1508377146),nm=new w(null,"case*","case*",-1938255072,null),ls=new z(null,"hide","hide",-596913169),ms=new w(null,"gateway.auth.spec","gateway.auth.spec",1721169563,null),ns=new z(null,"params",
    "params",710516235),os=new z(null,"restrictions","restrictions",1874752994),ps=new z("gateway.common.context.spec.requests","join","gateway.common.context.spec.requests/join",94453629),qs=new z("gateway.domains.global.spec.requests","context-destroy","gateway.domains.global.spec.requests/context-destroy",1322892186),rs=new z("gateway.common.spec.messages","broadcast","gateway.common.spec.messages/broadcast",-1460237246),Ra=new w(null,"p1__15355#","p1__15355#",-1738356083,null),ss=new w(null,"struct-map",
    "struct-map",-1387540878,null),ts=new z(null,"rest","rest",-1241696419),us=new z(null,"commachar","commachar",652859327),vs=new z(null,"activities","activities",1654844313),ws=new z("gateway.state.spec.common","channel","gateway.state.spec.common/channel",426185507),xs=new z(null,"error-level?","error-level?",778415885),ys=new z("gateway.domains.global.spec.requests","reset","gateway.domains.global.spec.requests/reset",-116815601),As=new z(null,"msg-cache","msg-cache",-733775070),Bs=new z("gateway.domains.agm.spec.requests",
    "post","gateway.domains.agm.spec.requests/post",-1221170496),vl=new z(null,"val","val",128701612),Cs=new w("cljs.core","zipmap","cljs.core/zipmap",-1902130674,null),Ds=new z(null,"buffer-size","buffer-size",1047120420),Es=new z("gateway.state.spec.agm","server","gateway.state.spec.agm/server",1918098797),Fs=new z(null,"local","local",-1497766724),Gs=new z(null,"login","login",55217519),Hs=new z(null,"add-peer-factories","add-peer-factories",-1612194889),Is=new z(null,"stream_id","stream_id",-871396659),
    Hm=new w(null,"catch","catch",-1616370245,null),Ks=new z("gateway.state.spec.pending-requests","gateway-requests","gateway.state.spec.pending-requests/gateway-requests",-1212651271),Ls=new z("cljs.spec.alpha","kvs-\x3emap","cljs.spec.alpha/kvs-\x3emap",579713455),Ms=new z("gateway.state.spec.pending-requests","id","gateway.state.spec.pending-requests/id",-199997554),Ns=new z(null,"kind","kind",-717265803),Os=new z(null,"Epsilon","Epsilon",133418452),Ps=new z("gateway.state.spec.mthds","methods","gateway.state.spec.mthds/methods",
    -868139122),Qs=new z(null,"endpoint","endpoint",447890044),Rs=new z("gateway.state.spec.bus","subscriptions","gateway.state.spec.bus/subscriptions",359149340),Ss=new z(null,"method","method",55703592),Ts=new z(null,"reloading","reloading",961158984),Ws=new z("gateway.auth.spec","user","gateway.auth.spec/user",803364081),Xs=new z(null,"write_permissions","write_permissions",-2075461534),Ys=new z(null,"years","years",-1298579689),Zs=new z("cljs.spec.alpha","accept","cljs.spec.alpha/accept",370988198),
    Sa=new z(null,"commands","commands",161008658),$s=new z("gateway.domains.agm.spec.register","methods","gateway.domains.agm.spec.register/methods",-209946928),at=new z(null,"services","services",970478783),bt=new z(null,"context-domain","context-domain",-563887528),ct=new z(null,"user","user",1532431356),dt=new z(null,"hostname_","hostname_",-2091647379),et=new w("cljs.core","vec","cljs.core/vec",307622519,null),ft=new w("cljs.core","concat","cljs.core/concat",-1133584918,null),gt=new z("gateway.state.spec.activity",
    "context_id","gateway.state.spec.activity/context_id",1100878008),ht=new z(null,"features","features",-1146962336),it=new z(null,"?msg-fmt","?msg-fmt",-852453891),jt=new z(null,"sections","sections",-886710106),kt=new z(null,"lines","lines",-700165781),tm=new w(null,"do","do",1686842252,null),lt=new z(null,"colon","colon",-965200945),mt=new z(null,"unregister","unregister",2105339971),nt=new z(null,"keys-pred","keys-pred",858984739),qt=new z(null,"max-age","max-age",-270129271),rt=new z(null,"minpad",
    "minpad",323570901),st=new z(null,"remove-interest","remove-interest",-1017752998),tt=new w(null,"gateway.domains.agm.subscriptions","gateway.domains.agm.subscriptions",-340272132,null),ut=new w("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),vt=new z(null,"hide-nt","hide-nt",-228813845),wt=new z("gateway.common.context.spec.messages","context_id","gateway.common.context.spec.messages/context_id",745790948),yt=new z(null,"skip-validation","skip-validation",-195677600),Ta=new z(null,
    "println","println",1920840330),zt=new z(null,"measurements","measurements",82224007),At=new z(null,"rulename","rulename",948914160),Bt=new z(null,"context_id","context_id",1618636315),Ct=new z(null,"regexp","regexp",-541372782),Dt=new z("gateway.state.spec.activity","helper_types","gateway.state.spec.activity/helper_types",-920321960),Et=new z(null,"unhide","unhide",-413983695),pm=new w(null,"try","try",-1273693247,null),Ft=new z(null,"location","location",1815599388),Gt=new w("cljs.tools.reader",
    "read-string*","cljs.tools.reader/read-string*",1492661621,null),Kt=new z(null,"composite","composite",-257118970),Lt=new z("gateway.common.spec.messages","peer_id","gateway.common.spec.messages/peer_id",-1253667286),Mt=new z("gateway.state.spec.state","user-name","gateway.state.spec.state/user-name",-1129365610),Nt=new z(null,"raw","raw",1604651272),Ot=new w(null,"let","let",358118826,null),Jc=new z(null,"flush-on-newline","flush-on-newline",-151457939),Pt=new z("gateway.state.spec.state","creation-request",
    "gateway.state.spec.state/creation-request",473028997),Qt=new z("gateway.domains.agm.spec.requests","add-interest","gateway.domains.agm.spec.requests/add-interest",1660124918),Rt=new z(null,"destroy-context","destroy-context",-1305625710),St=new z("gateway.domains.global.spec.requests","destination","gateway.domains.global.spec.requests/destination",165081940),Tt=new z(null,"pred-exprs","pred-exprs",1792271395),Ua=new z(null,"timestamp-opts","timestamp-opts",-1359534807),vm=new w(null,"if","if",1181717262,
    null),Vt=new z(null,"concatenation","concatenation",-951369614),Va=new z(null,"timestamp","timestamp",579478971),Wt=new z("gateway.state.spec.agm","invocation","gateway.state.spec.agm/invocation",-928333769),Xt=new z("gateway.state.spec.state","contexts","gateway.state.spec.state/contexts",-1321025323),Yt=new z(null,"leave","leave",1022579443),Zt=new z(null,"min-count","min-count",1594709013),$t=new z(null,"context-created","context-created",-436520594),au=new z(null,"messages","messages",345434482),
    bu=new z("gateway.common.context.spec.requests","context-unsubscribe","gateway.common.context.spec.requests/context-unsubscribe",46104946),Gm=new w(null,"quote","quote",1377916282,null),eu=new z("gateway.domains.global.spec.requests","context-subscribe","gateway.domains.global.spec.requests/context-subscribe",614257563),Wa=new z(null,"remove","remove",-131428414),fu=new z("gateway.domains.global.spec.requests","join","gateway.domains.global.spec.requests/join",-837980557),gu=new z(null,"hierarchy",
    "hierarchy",-1053470341),hu=new z(null,"left_id","left_id",730267975),iu=new z(null,"trace","trace",-1082747415),ju=new z("rl","reset","rl/reset",-800926172),ku=new w(null,"fn","fn",465265323,null),lu=new z(null,"context-compatibility-mode?","context-compatibility-mode?",564867301),mu=new z(null,"invocation_id","invocation_id",1947784937),nu=new z(null,"strable","strable",1877668047),ou=new z(null,"remote_identity","remote_identity",1864550587),pu=new z("gateway.state.spec.pending-requests","type",
    "gateway.state.spec.pending-requests/type",-1681171358),qu=new w("s","keys","s/keys",-1586011188,null),ru=new z(null,"identities","identities",-2100677764),su=new z("gateway.state.spec.activity","children","gateway.state.spec.activity/children",651398237),tu=new z(null,"symbol","symbol",-1038572696),uu=new z(null,"iss","iss",1130086696),wu=new z(null,"char-range","char-range",1443391389),xu=new z(null,"parsed-restrictions","parsed-restrictions",-1665101931),yu=new w(null,"lift-ns","lift-ns",602311926,
    null),zu=new z(null,"leave-activity","leave-activity",-484899731),Au=new z(null,"middleware","middleware",1462115504),Bu=new z("gateway.state.spec.pending-requests","gateway_token","gateway.state.spec.pending-requests/gateway_token",-1747123785),Cu=new z(null,"access_token","access_token",1591156073),Du=new z(null,"red","red",-969428204),Xa=new z(null,"value","value",305978217),Eu=new z("gateway.state.spec.state","no-user","gateway.state.spec.state/no-user",-565346809),Fu=new z(null,"enabled?","enabled?",
    -1376075057),Gu=new z(null,"rep","rep",-1226820564),xm=new w(null,"ns","ns",2082130287,null),Hu=new z(null,"req","req",-326448303),Iu=new z(null,"ret","ret",-468222814),Ju=new z(null,"subscribe","subscribe",416253756),Ku=new w(null,"partial","partial",1881673272,null),Lu=new z(null,"create-context","create-context",-1362772644),Mu=new z(null,"both","both",-393648840),Nu=new z(null,"result","result",1415092211),Pu=new z(null,"server_id","server_id",-518165566),Ya=new z(null,"keep","keep",-2133338530),
    Qu=new z(null,"vector","vector",1902966158),Ru=new z(null,"peer_name","peer_name",-245526270),Su=new z(null,"end","end",-268185958),Tu=new z(null,"buffer-blob","buffer-blob",-1830112173),Uu=new z("gateway.domains.agm.spec.requests","accepted","gateway.domains.agm.spec.requests/accepted",1383451047),Vu=new w("clojure.core","unquote","clojure.core/unquote",843087510,null),Wu=new z(null,"alt-or-ord","alt-or-ord",310249425),Xu=new z("gateway.state.spec.common","address","gateway.state.spec.common/address",
    394563279),Zu=new z(null,"create","create",-1301499256),$u=new z("gateway.state.spec.activity","user","gateway.state.spec.activity/user",-93065379),av=new z("gateway.domains.agm.spec.requests","result","gateway.domains.agm.spec.requests/result",1027857196),bv=new z(null,"flags","flags",1775418075),cv=new z(null,"eof","eof",-489063237),dv=new z("gateway.state.spec.mthds","description","gateway.state.spec.mthds/description",-129583756),ev=new w(null,"js","js",-886355190,null),fv=new z(null,"relative-to",
    "relative-to",-470100051),gv=new w(null,"doseq","doseq",221164135,null),iv=new z("gateway.domains.agm.spec.messages","new_peer_id","gateway.domains.agm.spec.messages/new_peer_id",-2026004018),jv=new z(null,"source_type","source_type",-144028049),kv=new z(null,"CHAR","CHAR",-1280338086),lv=new w("cljs.core","list?","cljs.core/list?",-684796618,null),mv=new z("gateway.common.spec.messages","outgoing-message","gateway.common.spec.messages/outgoing-message",1952031218),nv=new z(null,"joined_id","joined_id",
    35485948),ov=new z("gateway.common.spec.messages","response","gateway.common.spec.messages/response",69665082),pv=new z("gateway.domains.global.spec.messages","resolved_identity","gateway.domains.global.spec.messages/resolved_identity",-685850501),qv=new z(null,"parser","parser",-1543495310),rv=new w("cljs.spec.alpha","merge","cljs.spec.alpha/merge",1420080689,null),sv=new z("gateway.state.spec.activity","name","gateway.state.spec.activity/name",113237718),tv=new z("gateway.domains.agm.spec.messages",
    "reason","gateway.domains.agm.spec.messages/reason",-1483891292),uv=new z(null,"users","users",-713552705),vv=new z(null,"welcome","welcome",-578152123),wv=new z(null,"char-val","char-val",1408617933),xv=new z(null,"doc","doc",1913296891),yv=new z(null,"dump","dump",-356261477),zv=new z(null,"expr","expr",745722291),Av=new z("gateway.state.spec.activity","activity-peer","gateway.state.spec.activity/activity-peer",-1499406427),Bv=new z(null,"origin","origin",1037372088),Cv=new z(null,"remove-peer-factories",
    "remove-peer-factories",-316522514),Dv=new z(null,"lookahead","lookahead",-400102393),Ev=new z("gateway.state.spec.tokens","token-data","gateway.state.spec.tokens/token-data",-481150767),Gv=new z(null,"hash_","hash_",-827203612),Hv=new z("gateway.common.spec.requests","restrictions","gateway.common.spec.requests/restrictions",-1264539352),Iv=new z(null,"comment","comment",532206069),Jv=new z(null,"add-types","add-types",-711550002),Kv=new z(null,"?file","?file",1533429675),Lv=new z(null,"added","added",
    2057651688),Mv=new z(null,"segment","segment",-964921196),Ov=new z(null,"map","map",1371690461),Pv=new z(null,"display_name","display_name",-1494335013),Qv=new z(null,"rulename-left","rulename-left",-1824251564),Rv=new z(null,"remote-identity","remote-identity",1289489893),Sv=new z(null,"body","body",-2049205669),Tv=new z("instaparse.gll","start-index","instaparse.gll/start-index",404653620),Uv=new z(null,"cluster","cluster",535175621),Vv=new z(null,"uri","uri",-774711847),Wv=new z(null,"mode","mode",
    654403691),Xv=new z(null,"max","max",61366548),Yv=new z("gateway.state.spec.factory","configuration","gateway.state.spec.factory/configuration",154272470),Zv=new z("gateway.state.spec.state","peers","gateway.state.spec.state/peers",75810773),$v=new z(null,"token-ttl","token-ttl",-103977687),aw=new z(null,"register","register",1968522516),bw=new z(null,"count","count",2139924085),cw=new z(null,"clauses","clauses",1454841241),dw=new z(null,"miser-width","miser-width",-1310049437),ew=new w(null,"binding",
    "binding",-2114503176,null),fw=new z(null,"hide-tag-rule","hide-tag-rule",150267589),hw=new z(null,"call","call",-519999866),iw=new z("gateway.state.spec.state","ids","gateway.state.spec.state/ids",259664151),jw=new z(null,"peer_id","peer_id",1920005364),kw=new z(null,"next-stack","next-stack",-481930728),mw=new z(null,"available","available",-1470697127),nw=new z(null,"splice","splice",449588165),ow=new z(null,"dispatch","dispatch",1319337009),pw=new w(null,"inst","inst",-2008473268,null),qw=new z("gateway.domains.agm.spec.requests",
    "invoke","gateway.domains.agm.spec.requests/invoke",1837084336),Za=new w(null,"p1__15596#","p1__15596#",-1579626511,null),rw=new z("gateway.common.context.spec.messages","reason","gateway.common.context.spec.messages/reason",-795974116),sw=new z(null,"?meta","?meta",-793560773),tw=new z(null,"name","name",1843675177),uw=new z(null,"VCHAR","VCHAR",1962437706),vw=new z(null,"peer-created","peer-created",-1509421151),ww=new w(null,"loop","loop",1244978678,null),xw=new z(null,"appender","appender",1267426510),
    yw=new z("gateway.state.spec.pending-requests","gateway-request","gateway.state.spec.pending-requests/gateway-request",796467142),zw=new z(null,"parameter-from-args","parameter-from-args",-758446196),Bw=new w("cljs.core","pos?","cljs.core/pos?",-652182749,null),Cw=new z(null,"destroyed","destroyed",-427566535),Dw=new z(null,"properties","properties",685819552),Ew=new z(null,"hide-tag","hide-tag",1347642501),Fw=new z(null,"whitelist-ns","whitelist-ns",868974100),Gw=new z("gateway.state.spec.state",
    "node-id","gateway.state.spec.state/node-id",-982277841),Hw=new z(null,"ownership","ownership",892314581),Iw=new z(null,"CTL","CTL",-9995632),Jw=new z(null,"section","section",-300141526),Kw=new z(null,"bracket-info","bracket-info",-1600092774),Lw=new z(null,"subscribe-context","subscribe-context",1009129400),Mw=new w(null,"Inf","Inf",647172781,null),Nw=new z(null,"validation","validation",-2141396518),Ow=new w("cljs.core","map","cljs.core/map",-338988913,null),Mc=new z(null,"dup","dup",556298533),
    Pw=new z(null,"subscription-cancelled","subscription-cancelled",1868207049),Qw=new z("gateway.domains.global.spec.messages","available_domains","gateway.domains.global.spec.messages/available_domains",-1472037229),Rw=new z("cljs.spec.alpha","rep","cljs.spec.alpha/rep",1483217317),Sw=new z(null,"invocations","invocations",-1981777494),Tw=new z(null,"suffix","suffix",367373057),Uw=new z(null,"methods","methods",453930866),Vw=new w(null,"defn-","defn-",1097765044,null),Ww=new z(null,"required","required",
    1807647006),Xw=new z(null,"unsubscribe-context","unsubscribe-context",-1695207834),Yw=new z(null,"buffer","buffer",617295198),Zw=new z(null,"inherit","inherit",-1840815422),$w=new z(null,"factory_ids","factory_ids",1173653523),ax=new z(null,"msg_","msg_",-1925147E3),bx=new z(null,"peer_factory","peer_factory",1685625260),cx=new z(null,"opt-keys","opt-keys",1262688261),dx=new w(null,"when-not","when-not",-1223136340,null),ex=new w(null,"gateway.state.spec.common","gateway.state.spec.common",27478502,
    null),fx=new w(null,"reader","reader",1810192380,null),hx=new z("gateway.domain","operation-result","gateway.domain/operation-result",-1509018323),ix=new w(null,"opts","opts",1795607228,null),jx=new z(null,"post","post",269697687),kx=new z(null,"iat","iat",-353315170),lx=new z(null,"min","min",444991522),mx=new z(null,"types_override","types_override",391099757),nx=new w("cljs.core","sequence","cljs.core/sequence",1908459032,null),ox=new z("gateway.domains.global.spec.requests","added","gateway.domains.global.spec.requests/added",
    -1820753011),px=new z(null,"column","column",2078222095),qx=new z("gateway.common.spec.requests","join","gateway.common.spec.requests/join",-1713603460),rx=new z("gateway.common.context.spec.requests","delta","gateway.common.context.spec.requests/delta",-694068490),sx=new w(null,"drop-interest-rq","drop-interest-rq",-842860790,null),tx=new z(null,"up-arrow","up-arrow",1705310333),ux=new w("cljs.core","with-meta","cljs.core/with-meta",749126446,null),vx=new z(null,"logical-block-callback","logical-block-callback",
    1612691194),wx=new w("cljs.core","nil?","cljs.core/nil?",945071861,null),xx=new z("gateway.domains.agm.subscriptions","drop-interest","gateway.domains.agm.subscriptions/drop-interest",-1584375112),$a=new z(null,"spying?","spying?",1753444487),yx=new z(null,"weeks","weeks",1844596125),zx=new z("gateway.state.spec.context","owner","gateway.state.spec.context/owner",-1445790718),Ax=new z(null,"regex","regex",939488856),Bx=new z(null,"read-cond","read-cond",1056899244),Cx=new z(null,"mincol","mincol",
    1230695445),Dx=new z("promesa.core","default","promesa.core/default",1773193826),Fx=new z(null,"visibility","visibility",1338380893),Gx=new z(null,"deref","deref",-145586795),Hx=new z(null,"ids","ids",-998535796),Ix=new z("cljs.spec.alpha","unknown","cljs.spec.alpha/unknown",651034818),Jx=new z(null,"yield","yield",177875009),Kx=new z(null,"max-iterations","max-iterations",2021275563),Lx=new z(null,"output_","output_",-36797880),Mx=new z(null,"hex-char","hex-char",764443568),Ox=new z(null,"joined",
    "joined",-231861661),Px=new z(null,"inside-comment","inside-comment",1258069708),Qx=new z(null,"runtime-exception","runtime-exception",-1495664514),Rx=new z("gateway.state.spec.common","identity","gateway.state.spec.common/identity",-343306948),Tx=new z("gateway.domains.agm.spec.messages","oob","gateway.domains.agm.spec.messages/oob",-285361976),Ux=new z(null,"config","config",994861415),Vx=new z(null,"joined_name","joined_name",-1159730335),Wx=new z(null,"whitespace","whitespace",-1340035483),Xx=
    new z("gateway.state.spec.domain-registry","info","gateway.state.spec.domain-registry/info",754617108),Yx=new z(null,"activity-domain","activity-domain",1896268503),Zx=new z(null,"machine","machine",-1389886154),ym=new w(null,"deftype*","deftype*",962659890,null),$x=new z(null,"rep+","rep+",-281382396),ay=new z("gateway.auth.spec","message","gateway.auth.spec/message",212934373),cy=new z("gateway.state.spec.agm","interests","gateway.state.spec.agm/interests",1622331889),ey=new w(null,"NaN","NaN",
    666918153,null),fy=new z(null,"unsupported-operation","unsupported-operation",1890540953),gy=new z(null,"msecs","msecs",1711980553),hy=new z(null,"subscribed-context","subscribed-context",-451582146),iy=new z(null,"authenticator","authenticator",728866366),jy=new z(null,"reduction-type","reduction-type",-488293450),ky=new w(null,"defmacro","defmacro",2054157304,null),ly=new z("gateway.state.spec.agm","callee","gateway.state.spec.agm/callee",1100257697),my=new z(null,"subscriptions","subscriptions",
    1250949776),ny=new z("gateway.state.spec.agm","caller","gateway.state.spec.agm/caller",-1898628116),oy=new z("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),py=new z(null,"whitelist","whitelist",-979294437),qy=new w("cljs.core","hash-map","cljs.core/hash-map",303385767,null),ry=new z("gateway.state.spec.agm","invocation_id","gateway.state.spec.agm/invocation_id",-822050570),sy=new z("gateway.common.spec.messages","outgoing-messages","gateway.common.spec.messages/outgoing-messages",
    -924999491),ty=new z(null,"full-listeners","full-listeners",50621827),uy=new z(null,"owner?","owner?",-839891990),vy=new z("gateway.state.spec.state","peer","gateway.state.spec.state/peer",-2119577277),wy=new z(null,"nt","nt",-835425781),xy=new z(null,"ns","ns",441598760),zy=new z("gateway.domains.agm.spec.requests","invocation_id","gateway.domains.agm.spec.requests/invocation_id",-621605438),Ay=new z("gateway.state.spec.bus","routing-key","gateway.state.spec.bus/routing-key",554216520),By=new z(null,
    "receiver","receiver",1768630781),Cy=new z("gateway.state.spec.context","contexts","gateway.state.spec.context/contexts",-1052863269),Dy=new w(null,"cljs.core","cljs.core",770546058,null),Ey=new z("gateway.domains.global.spec.requests","read_permissions","gateway.domains.global.spec.requests/read_permissions",75711320),Fy=new z("gateway.state.spec.activity","parent","gateway.state.spec.activity/parent",-359694046),Gy=new z(null,"joined_type","joined_type",973647374),Hy=new z(null,"p2","p2",905500641),
    om=new w(null,"defrecord*","defrecord*",-1936366207,null),Iy=new z(null,"p1","p1",-936759954),Jy=new z(null,"type-tag","type-tag",-1873863267),Ky=new z(null,"ms","ms",-1152709733),Ly=new z(null,"middleware-fn","middleware-fn",-61585752),My=new z(null,"no-user","no-user",793713538),Ny=new z(null,"readers","readers",-2118263030),Oy=new z("gateway.state.spec.activity","owner","gateway.state.spec.activity/owner",-1983556102),Py=new z(null,"DIGIT","DIGIT",341251338),Qy=new w(null,"string?","string?",-1129175764,
    null),Ry=new z(null,"defined-as","defined-as",-474679152),Sy=new z(null,"comma","comma",1699024745),Ty=new z("gateway.state.spec.context","name","gateway.state.spec.context/name",-1494107954),Uy=new z("gateway.state.spec.pending-requests","client-request","gateway.state.spec.pending-requests/client-request",1663875818),Vy=new z(null,"lo","lo",-931799889),Wy=new z(null,"node-id","node-id",779482292),Yy=new z(null,"requestor_id","requestor_id",-1253857801),az=new z("gateway.domains.global.spec.requests",
    "hello","gateway.domains.global.spec.requests/hello",-398737422),bz=new z(null,"end-line","end-line",1837326455),cz=new z(null,"read_permissions","read_permissions",766082539),Bm=new w(null,"fn*","fn*",-752876845,null),dz=new z(null,"ks","ks",1900203942),ez=new z(null,"start-production","start-production",687546537),fz=new z(null,"allow","allow",-1857325745),gz=new z("gateway.domains.global.spec.messages","remote-identity","gateway.domains.global.spec.messages/remote-identity",1498525882),hz=new z(null,
    "source","source",-433931539),iz=new w("s","coll-of","s/coll-of",-1705285349,null),jz=new z(null,"memory","memory",-1449401430),W=new w("cljs.core","fn","cljs.core/fn",-1065745098,null),kz=new z(null,"circle","circle",1903212362),lz=new z(null,"registered-domains","registered-domains",-559729182),mz=new z(null,"success","success",1890645906),Rl=new z(null,"descendants","descendants",1824886031),nz=new z(null,"report","report",1394055010),oz=new z(null,"start","start",-355208981),pz=new z(null,"ns-whitelist",
    "ns-whitelist",-1717299774),qz=new z("gateway.domains.agm.spec.requests","yield","gateway.domains.agm.spec.requests/yield",1398099968),rz=new z(null,"repos","repos",647483789),sz=new z(null,"num-val","num-val",1497434478),tz=new z("gateway.domains.agm.spec.requests","flags","gateway.domains.agm.spec.requests/flags",989202486),uz=new z(null,"recur","recur",-437573268),vz=new z(null,"caller_id","caller_id",5404558),wz=new z("gateway.state.spec.bus","topic","gateway.state.spec.bus/topic",-1241703207),
    xz=new z(null,"alternation","alternation",-1162147630),yz=new z("gateway.common.context.spec.requests","lifetime","gateway.common.context.spec.requests/lifetime",-228133926),ab=new z(null,"deny-spec","deny-spec",-1074984268),zz=new z(null,"subscriber","subscriber",-2064338413),Az=new z(null,"length","length",588987862),Bz=new z(null,"appender-id","appender-id",-1917983538),Cz=new z(null,"subscribed","subscribed",1012088257),Dz=new w(null,"with-open","with-open",172119667,null),Ez=new z(null,"ps",
    "ps",292358046),Fz=new z(null,"not-delivered","not-delivered",1599158697),Gz=new w(null,"if-not","if-not",-265415609,null),Hz=new z(null,"blacklist","blacklist",1248093170),Iz=new z("gateway.common.commands","source-removed","gateway.common.commands/source-removed",701959101),Jz=new z("gateway.domains.agm.spec.requests","method_id","gateway.domains.agm.spec.requests/method_id",926663112),Kz=new z("gateway.domains.agm.spec.messages","reason_uri","gateway.domains.agm.spec.messages/reason_uri",577151711),
    Lz=new z("gateway.state.spec.tokens","impersonate-peer","gateway.state.spec.tokens/impersonate-peer",1018065912),Mz=new z(null,"default_context","default_context",-1148569539),Nz=new z(null,"state","state",-1988618099),Oz=new w("cljs.core","unquote","cljs.core/unquote",1013085760,null),Pz=new z("gateway.state.spec.domain-registry","uri","gateway.state.spec.domain-registry/uri",301088755),Qz=new z(null,"os","os",795021913),Rz=new z(null,"or","or",235744169),Tz=new z(null,"join-activity","join-activity",
    1683531460),Uz=new z(null,"lifetime","lifetime",-1568939561),Vz=new z("gateway.domains.agm.core","peer-methods","gateway.domains.agm.core/peer-methods",639951360),Wz=new w(null,"dotimes","dotimes",-818708397,null),Xz=new z(null,"raw-console?","raw-console?",-2061489061),Yz=new z(null,"conform-keys","conform-keys",-1800041814),rm=new w(null,"finally","finally",-1065347064,null),Zz=new w(null,"/","/",-1371932971,null),eb=new w(null,"p1__15354#","p1__15354#",1802079455,null),$z=new z(null,"buffering",
    "buffering",-876713613),aA=new z(null,"subscription_id","subscription_id",1241304848),bA=new z(null,"illegal-argument","illegal-argument",-1845493170),dA=new z(null,"opt-un","opt-un",883442496),eA=new z(null,"calls","calls",-433802344),fA=new z(null,"rule","rule",729973257),gA=new z(null,"nodes","nodes",-2099585805),hA=new z(null,"owner_id","owner_id",1001956033),iA=new z(null,"values","values",372645556),jA=new z(null,"owner","owner",-392611939),kA=new w(null,"locking","locking",1542862874,null),
    lA=new z(null,"look","look",-539441433),nA=new z(null,"opt-whitespace","opt-whitespace",1115207927),pA=new z(null,"negative-lookahead","negative-lookahead",874382387),rA=new z(null,"seq","seq",-1817803783),sA=new z(null,"ident","ident",-742346),tA=new z(null,"set","set",304602554),uA=new z(null,"epsilon","epsilon",-730158570),vA=new z("gateway.state.spec.activity","type","gateway.state.spec.activity/type",-462200009),wA=new z(null,"updated","updated",-1627192056),xA=new w(null,"some?","some?",234752293,
    null),yA=new z(null,"expecting","expecting",-57706705),AA=new z(null,"rule-separator","rule-separator",1539322213),BA=new z(null,"enlive","enlive",1679023921),CA=new z("gateway.state.spec.domain-registry","domain-uri","gateway.state.spec.domain-registry/domain-uri",636341057),ub=new z(null,"updates","updates",2013983452),DA=new z(null,"error","error",-978969032),EA=new z("gateway.state.spec.common","peer_id","gateway.state.spec.common/peer_id",1217199451),FA=new w(null,"set?","set?",1636014792,null),
    GA=new z(null,"base","base",185279322),IA=new z("gateway.state.spec.activity","participants","gateway.state.spec.activity/participants",-1995832242),JA=new z(null,"event","event",301435442),um=new w(null,"letfn*","letfn*",-110097810,null),LA=new z(null,"scavenger","scavenger",107984617),MA=new z("gateway.state.spec.agm","subscriptions","gateway.state.spec.agm/subscriptions",359122069),NA=new z(null,"prefix","prefix",-265908465),OA=new z(null,"methods-removed","methods-removed",-724408194),QA=new z(null,
    "start-pos","start-pos",668789086),RA=new z(null,"method-filter-fn","method-filter-fn",-283131748),SA=new w("gateway.state.spec.common","address-type","gateway.state.spec.common/address-type",-283204142,null),Hl=new z(null,"keyword-fn","keyword-fn",-64566675),TA=new z(null,"first","first",-644103046),VA=new w("cljs.core","partial","cljs.core/partial",1483172485,null),WA=new z(null,"bin-char","bin-char",-1662780697),XA=new z("gateway.common.spec.messages","local","gateway.common.spec.messages/local",
    1736687122),YA=new z(null,"ebnf","ebnf",31967825),ZA=new z(null,"new_peer_id","new_peer_id",1380469887),$A=new z(null,"?err","?err",549653299),bB=new z("gateway.auth.spec","access_token","gateway.auth.spec/access_token",-1170576318),cB=new z(null,"preserve","preserve",1276846509),dB=new z("gateway.domains.global.spec.requests","authentication","gateway.domains.global.spec.requests/authentication",2133771245),eB=new z(null,"repo-id","repo-id",-402847325),fB=new z("gateway.state.spec.mthds","no-methods",
    "gateway.state.spec.mthds/no-methods",658181793),Cm=new w(null,"recur","recur",1202958259,null),gB=new z("gateway.state.spec.activity","activity","gateway.state.spec.activity/activity",449324238),vb=new z("gateway.common.context.spec.requests","command","gateway.common.context.spec.requests/command",-1702281587),hB=new z("gateway.state.spec.tokens","lifetime","gateway.state.spec.tokens/lifetime",887565809),iB=new z("gateway.state.spec.context","read_permissions","gateway.state.spec.context/read_permissions",
    -559958390),jB=new z(null,"illegal-state","illegal-state",-1519851182),kB=new z("cljs.spec.alpha","op","cljs.spec.alpha/op",-1269055252),lB=new z("gateway.domains.agm.spec.requests","methods","gateway.domains.agm.spec.requests/methods",-366393681),mB=new z("gateway.state.spec.state","services","gateway.state.spec.state/services",-925305284),nB=new z("gateway.domains.global.spec.messages","reason_uri","gateway.domains.global.spec.messages/reason_uri",1393708653),oB=new z(null,"async?","async?",1523057758),
    pB=new z("gateway.state.spec.mthds","name","gateway.state.spec.mthds/name",393834509),qB=new z(null,"rulelist","rulelist",-1871218473),sB=new z(null,"no-stacktrace?","no-stacktrace?",1701072694),tB=new z("gateway.state.spec.domain-registry","version","gateway.state.spec.domain-registry/version",-650577592),uB=new z("gateway.common.context.spec.requests","restrictions","gateway.common.context.spec.requests/restrictions",-1766361),vB=new z(null,"hex-val","hex-val",1267737401),wB=new z(null,"create-peer",
    "create-peer",631977540),xB=new w(null,"gateway.common.spec.messages","gateway.common.spec.messages",-1797487288,null),yB=new z("gateway.state.spec.activity","activity-subscribers","gateway.state.spec.activity/activity-subscribers",-1579465715),zB=new z(null,"publisher-identity","publisher-identity",1716891391),AB=new w(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),BB=new z("gateway.state.spec.activity","ready?","gateway.state.spec.activity/ready?",-1768127396),CB=new z(null,"fail-index",
    "fail-index",248726923),DB=new z(null,"nbf","nbf",-1785694926),EB=new z("gateway.common.context.spec.requests","context-create","gateway.common.context.spec.requests/context-create",-947794767),FB=new z(null,"intra-block-nl","intra-block-nl",1808826875),GB=new z(null,"target_id","target_id",-124012080),HB=new z(null,"gen-max","gen-max",-793680445),Lc=new z(null,"meta","meta",1499536964),JB=new z(null,"drop-subscription","drop-subscription",-1853238873),KB=new z(null,"context-updated","context-updated",
    744419706),LB=new z(null,"right","right",-452581833),MB=new z("gateway.state.spec.activity","context","gateway.state.spec.activity/context",798551178),NB=new z(null,"err","err",-2089457205),OB=new w(null,"when","when",1064114221,null),PB=new z("gateway.domains.agm.spec.requests","arguments_kv","gateway.domains.agm.spec.requests/arguments_kv",-220182488),QB=new w("cljs.core","set?","cljs.core/set?",-1176684971,null),RB=new z(null,"context_snapshot","context_snapshot",-703318056),SB=new z(null,"logical-blocks",
    "logical-blocks",-1466339776),TB=new z(null,"authentication","authentication",1746273042),UB=new w("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),VB=new z(null,"fatal","fatal",1874419888),WB=new z(null,"gateway-requests","gateway-requests",2114123587),XB=new w("cljs.core","list","cljs.core/list",-1331406371,null),YB=new z("gateway.common.context.spec.requests","added","gateway.common.context.spec.requests/added",-1410443097),ZB=new z("gateway.common.spec.messages","reason","gateway.common.spec.messages/reason",
    1129095963),$B=new z(null,"rate-limit","rate-limit",1748082022),aC=new w("clojure.walk","keywordize-keys","clojure.walk/keywordize-keys",-1055520580,null),bC=new z(null,"created_id","created_id",-1653142250),cC=new z(null,"repetition","repetition",1938392115),eC=new z("gateway.domains.global.spec.messages","context_id","gateway.domains.global.spec.messages/context_id",-1799893258),fC=new z(null,"failure","failure",720415879),gC=new z("gateway.common.context.spec.requests","reset","gateway.common.context.spec.requests/reset",
    6157861),hC=new z(null,"alg","alg",-830920638),iC=new z("gateway.state.spec.activity","properties","gateway.state.spec.activity/properties",-914053381),jC=new z(null,"neq","neq",1883246164),kC=new w(null,"any?","any?",-318999933,null),lC=new z(null,"start-col","start-col",668080143),mC=new z("gateway.domains.agm.spec.messages","local","gateway.domains.agm.spec.messages/local",63355787),nC=new z(null,"neg","neg",1800032960),oC=new z(null,"into","into",-150836029),Dm=new w(null,"set!","set!",250714521,
    null),pC=new w(null,"response-type","response-type",146761069,null),qC=new z(null,"target_identity","target_identity",-786887198),rC=new z(null,"alt","alt",-3214426),sC=new z(null,"all","all",892129742),tC=new z(null,"string-ci","string-ci",374631805),uC=new z("gateway.domains.global.internal","authenticated","gateway.domains.global.internal/authenticated",-1621463770),vC=new z(null,"instant","instant",655498374),wC=new z(null,"stack","stack",-793405930),yC=new z(null,"hiccup","hiccup",1218876238),
    AC=new z(null,"ex-kind","ex-kind",1581199296),BC=new w("cljs.core","int?","cljs.core/int?",50730120,null),CC=new z(null,"histo","histo",-821552278),DC=new z("gateway.common.context.spec.requests","context-subscribe","gateway.common.context.spec.requests/context-subscribe",-318176635),EC=new z(null,"amp","amp",271690571),FC=new z("gateway.domains.agm.spec.requests","subscribe","gateway.domains.agm.spec.requests/subscribe",1050374291),GC=new z(null,"and","and",-971899817),IC=new z("cljs.spec.alpha",
    "cpred","cljs.spec.alpha/cpred",-693471218),KC=new z(null,"authentication-request","authentication-request",-2091151542),LC=new w(null,"-Inf","-Inf",-2123243689,null),Ab=new z(null,"any","any",1705907423),MC=new z("gateway.auth.spec","request","gateway.auth.spec/request",-1915554438),NC=new z(null,"max-connections-per-user","max-connections-per-user",-1995174555),OC=new z("gateway.common.spec.messages","incoming-message","gateway.common.spec.messages/incoming-message",-528171747),PC=new z(null,"padchar",
    "padchar",2018584530),QC=new z("gateway.state.spec.tokens","gw-request-id","gateway.state.spec.tokens/gw-request-id",146927020),RC=new z(null,"star","star",279424429),SC=new z(null,"children","children",-940561982),TC=new z("gateway.state.spec.context","version","gateway.state.spec.context/version",-664315203),Jb=new z(null,"cache?","cache?",-1601953949),Nc=new z(null,"print-length","print-length",1931866356),UC=new z(null,"nil","nil",99600501),Kb=new z(null,"allow-spec","allow-spec",448749872),VC=
    new z(null,"activity-joined","activity-joined",-1584889318),WC=new z(null,"exp","exp",-261706262),XC=new z("gateway.state.spec.state","options","gateway.state.spec.state/options",-722288524),YC=new w("cljs.core","empty?","cljs.core/empty?",1866613644,null),ZC=new z(null,"buffer-block","buffer-block",-10937307),aD=new z(null,"remaining","remaining",-138926777),bD=new z(null,"remaining-arg-count","remaining-arg-count",-1216589335),cD=new z(null,"impersonate-peer","impersonate-peer",-1409232482),dD=
    new z("gateway.common.spec.messages","new_peer_id","gateway.common.spec.messages/new_peer_id",326805829),eD=new z(null,"methods-added","methods-added",2044022595),fD=new w("cljs.spec.alpha","and","cljs.spec.alpha/and",-2060279705,null),gD=new z(null,"channel","channel",734187692),hD=new z("gateway.state.spec.agm","stream-id","gateway.state.spec.agm/stream-id",-1404324586),iD=new z(null,"bin-val","bin-val",1705209105),rZ=new z("gateway.state.spec.agm","stream","gateway.state.spec.agm/stream",1961075649),
    jD=new z(null,"identity","identity",1647396035),Lb=new z("gateway.common.context.spec.requests","commands","gateway.common.context.spec.requests/commands",1656863185),kD=new z(null,"remove-types","remove-types",-1777229898),mD=new z(null,"info","info",-317069002),nD=new z(null,"members","members",159001018),pD=new z(null,"commainterval","commainterval",-1980061083),qD=new z(null,"generation","generation",-2132542044),rD=new z(null,"separator","separator",-1628749125),uD=new z("gateway.state.spec.state",
    "users","gateway.state.spec.state/users",-2072351172),vD=new z(null,"streams","streams",1465783789),wD=new w(null,"defonce","defonce",-1681484013,null),yD=new z("gateway.state.spec.activity","activity-domain","gateway.state.spec.activity/activity-domain",292185460),zD=new z(null,"basic","basic",1043717368),AD=new z(null,"inactive_seconds","inactive_seconds",-1714688448),BD=new z(null,"buffer-level","buffer-level",928864731),CD=new z("gateway.domains.agm.spec.requests","data-message","gateway.domains.agm.spec.requests/data-message",
    -153411654),DD=new z(null,"dec-char","dec-char",-646625154),ED=new z("rl","all","rl/all",892118056),zl=new z(null,"pending","pending",-220036727),FD=new z("gateway.state.spec.mthds","input_signature","gateway.state.spec.mthds/input_signature",2082802494),GD=new z("gateway.state.spec.mthds","method-def","gateway.state.spec.mthds/method-def",858475302),Kc=new z(null,"readably","readably",1129599760),HD=new z(null,"aud","aud",357659490),ID=new z(null,"invoke","invoke",1145927159),JD=new z(null,"file",
    "file",-1269645878),KD=new z("gateway.state.spec.activity","default_context","gateway.state.spec.activity/default_context",1517722536),LD=new z("gateway.common.spec.messages","reason_uri","gateway.common.spec.messages/reason_uri",-14574488),MD=new w("clojure.core","unquote-splicing","clojure.core/unquote-splicing",-552003150,null),ND=new z(null,"fill","fill",883462889),OD=new z(null,"cause","cause",231901252),PD=new z("gateway.state.spec.common","string","gateway.state.spec.common/string",885967163),
    QD=new z("gateway.state.spec.activity","activity-type","gateway.state.spec.activity/activity-type",1221900323),RD=new z(null,"now","now",-1650525531),SD=new z(null,"months","months",-45571637),UD=new z(null,"radix","radix",857016463),VD=new z(null,"text","text",-1790561697),XD=new z(null,"distinct","distinct",-1788879121),YD=new z("gateway.common.context.spec.messages","updater_id","gateway.common.context.spec.messages/updater_id",-850230629),ZD=new z(null,"sequence","sequence",926807414),$D=new z("gateway.state.spec.tokens",
    "gateway-token","gateway.state.spec.tokens/gateway-token",1169641187),aE=new z(null,"block","block",664686210),bE=new z("gateway.auth.spec","type","gateway.auth.spec/type",552402611),cE=new z("gateway.common.context.spec.requests","write_permissions","gateway.common.context.spec.requests/write_permissions",-194247007),dE=new z("gateway.common.spec.messages","meta","gateway.common.spec.messages/meta",-2108831238),eE=new z("gateway.domains.agm.spec.unregister","methods","gateway.domains.agm.spec.unregister/methods",
    1593198071),Sl=new z(null,"ancestors","ancestors",-776045424),fE=new z(null,"listeners","listeners",394544445),gE=new z(null,"clients","clients",1436018090),hE=new w("cljs.core","array-map","cljs.core/array-map",-1519210683,null),iE=new z(null,"peer-removed","peer-removed",1752359546),jE=new z(null,"metrics-domain","metrics-domain",-1136423917),kE=new z("gateway.domains.global.spec.messages","type","gateway.domains.global.spec.messages/type",708595817),lE=new z(null,"min-remaining","min-remaining",
    962687677),mE=new z(null,"offset","offset",296498311),nE=new z(null,"define","define",-2006590705),oE=new z(null,"content","content",15833224),pE=new z(null,"activity_type","activity_type",-194821832),qE=new z(null,"reason_uri","reason_uri",1062203786),rE=new z("gateway.state.spec.activity","activities","gateway.state.spec.activity/activities",1132481734),sE=new w(null,"-\x3e","-\x3e",-2139605430,null),tE=new z("gateway.state.spec.mthds","display_name","gateway.state.spec.mthds/display_name",1469788607),
    uE=new z(null,"timeout","timeout",-318625318),vE=new z(null,"reload","reload",863702807),wE=new z(null,"arglists","arglists",1661989754),xE=new z("gateway.state.spec.agm","invocations","gateway.state.spec.agm/invocations",-1391969355),yE=new z(null,"updater_id","updater_id",-2125909548),zE=new z("gateway.domains.global.internal","authentication-request","gateway.domains.global.internal/authentication-request",502904463),Am=new w(null,"js*","js*",-1134233646,null),AE=new z(null,"end-pos","end-pos",
    -1643883926),BE=new z(null,"min-version","min-version",-1697197126),CE=new z(null,"pred-forms","pred-forms",172611832),EE=new z(null,"hours","hours",58380855),GE=new z("gateway.domains.global.spec.requests","updated","gateway.domains.global.spec.requests/updated",-1219870803),HE=new z(null,"context-destroyed","context-destroyed",-1281742589),JE=new z(null,"NUM","NUM",-218662260),KE=new z(null,"LF","LF",1177033158),LE=new z("gateway.common.spec.messages","domain","gateway.common.spec.messages/domain",
    755510455),ME=new w(null,"defn","defn",-126010802,null),NE=new w(null,"struct","struct",325972931,null),OE=new z("gateway.domains.global.internal","authentication-failed","gateway.domains.global.internal/authentication-failed",1518002013),QE=new z(null,"peer-added","peer-added",322139575),RE=new z(null,"gfn","gfn",791517474),TE=new z(null,"namespaced-map","namespaced-map",1235665380),WE=new z("gateway.state.spec.context","context","gateway.state.spec.context/context",-1884667246),XE=new z(null,"rulename-right",
    "rulename-right",1125609193),YE=new z(null,"mins","mins",467369676),X=new z(null,"tag","tag",-1290361223),ZE=new z(null,"types","types",590030639),$E=new z(null,"linear","linear",872268697),wm=new w(null,"new","new",-444906321,null),aF=new z("gateway.common.spec.messages","removed_id","gateway.common.spec.messages/removed_id",-1304577413),bF=new z(null,"number","number",1570378438),cF=new z("gateway.state.spec.pending-requests","owner?","gateway.state.spec.pending-requests/owner?",346289860),dF=new z(null,
    "continue","continue",-207346553),eF=new z("gateway.state.spec.agm","stream-peer-info","gateway.state.spec.agm/stream-peer-info",1892226854),fF=new z("gateway.state.spec.factory","factories","gateway.state.spec.factory/factories",-1725265010),gF=new z(null,"?line","?line",-631853385),hF=new z(null,"test","test",577538877),iF=new z(null,"owner-changed","owner-changed",-1569176886),jF=new w(null,"\x3d","\x3d",-1501502141,null),kF=new z(null,"topic-repattern","topic-repattern",1187945138),mF=new z(null,
    "cat","cat",-1457810207),il=new z(null,"alt-impl","alt-impl",670969595),nF=new z(null,"types-removed","types-removed",-1458332519),oF=new w(null,"pending-forms","pending-forms",-1225172071,null),pF=new z("gateway.common.context.spec.messages","reason_uri","gateway.common.context.spec.messages/reason_uri",-1687789209),qF=new z("gateway.state.spec.agm","agm-domain","gateway.state.spec.agm/agm-domain",686860067),rF=new z(null,"tags","tags",1771418977),sF=new z(null,"given","given",716253602),Mb=new z(null,
    "path","path",-188191168),tF=new w(null,"with-local-vars","with-local-vars",837642072,null),wF=new z("gateway.state.spec.domain-registry","description","gateway.state.spec.domain-registry/description",-350920838),xF=new z("gateway.domains.agm.spec.requests","caller_id","gateway.domains.agm.spec.requests/caller_id",-211861801),zF=new z("gateway.domains.global.spec.requests","context-create","gateway.domains.global.spec.requests/context-create",-1370416261),Nb=new z("gateway.common.context.spec.requests",
    "path","gateway.common.context.spec.requests/path",614939647),AF=new z("gateway.domains.global.spec.requests","removed","gateway.domains.global.spec.requests/removed",-1641157465),BF=new z(null,"activity-subscribers","activity-subscribers",12051372),Im=new w(null,"throw","throw",595905694,null),DF=new z("gateway.state.spec.common","request_id","gateway.state.spec.common/request_id",2099278405),EF=new w("s","map-of","s/map-of",-1464752791,null),FF=new z("gateway.domains.agm.spec.requests","data","gateway.domains.agm.spec.requests/data",
    688691322),GF=new z(null,"opt-specs","opt-specs",-384905450),HF=new w("s","or","s/or",1876282981,null),IF=new z("gateway.domain","leave","gateway.domain/leave",-1366936831),JF=new z(null,"rules","rules",1198912366),LF=new z(null,"character","character",380652989),MF=new z("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),NF=new z("gateway.domains.agm.spec.messages","removed_id","gateway.domains.agm.spec.messages/removed_id",-1904544764),sm=new w(null,"loop*","loop*",615029416,null),PF=new z(null,
    "publisher","publisher",-153364540),QF=new z("gateway.domains.global.spec.requests","delta","gateway.domains.global.spec.requests/delta",299143136),RF=new z(null,"last","last",1105735132),SF=new z(null,"initial-context","initial-context",-32910095),TF=new w("cljs.core","vector?","cljs.core/vector?",-1550392028,null),UF=new w("cljs.core","lift-ns","cljs.core/lift-ns",463499081,null),VF=new z(null,"factories","factories",1443149712),WF=new z(null,"k","k",-2146297393),XF=new z(null,"helper_types","helper_types",
    1747427755),YF=new z(null,"e","e",1381269198),ZF=new z(null,"f","f",-1597136552),$F=new z(null,"d","d",1972142424),aG=new z(null,"w","w",354169001),bG=new z(null,"p","p",151049309),cG=new z("gateway.state.spec.agm","request_id","gateway.state.spec.agm/request_id",-1401687879),dG=new z(null,"n","n",562130025),eG=new z(null,"func","func",-238706040),fG=new w("cljs.core","contains?","cljs.core/contains?",-976526835,null),gG=new z("gateway.common.spec.messages","message-type","gateway.common.spec.messages/message-type",
    929650450),hG=new z(null,"SP","SP",124290284),iG=new z(null,"indent-t","indent-t",528318969),jG=new z(null,"char","char",-641587586),kG=new z(null,"optimize","optimize",-1912349448),lG=new z("gateway.domains.agm.spec.requests","sequence","gateway.domains.agm.spec.requests/sequence",1051925549),mG=new z("gateway.state.spec.state","activity-types","gateway.state.spec.state/activity-types",1532142687),jl=new z(null,"fallback-impl","fallback-impl",-1501286995),oG=new w("cljs.core","apply","cljs.core/apply",
    1757277831,null),Ob=new z(null,"ns-filter","ns-filter",108598448),pG=new z("gateway.domains.agm.spec.register","register","gateway.domains.agm.spec.register/register",-572048018),qG=new z(null,"publish","publish",-1178026850),tG=new z(null,"ready-members","ready-members",757058983),uG=new z(null,"debug","debug",-1608172596),vG=new z(null,"dispose-peer","dispose-peer",68303444),wG=new z(null,"req-specs","req-specs",553962313),zG=new z(null,"allows-separator","allows-separator",-818967742),AG=new z("gateway.domains.agm.spec.messages",
    "source_type","gateway.domains.agm.spec.messages/source_type",276727970),BG=new z(null,"appenders","appenders",1245583998),CG=new w("clojure.core","list","clojure.core/list",-1119203325,null),DG=new z("gateway.domains.agm.spec.requests","subscription_id","gateway.domains.agm.spec.requests/subscription_id",1666574151),EG=new z(null,"group","group",582596132),FG=new z(null,"colon-up-arrow","colon-up-arrow",244853007),GG=new z("rl","peek","rl/peek",-291391771),HG=new z(null,"negative-listeners","negative-listeners",
    55241092),IG=new z(null,"gateway_token","gateway_token",1638490713),MG=new z(null,"enabled","enabled",1195909756),NG=new z("gateway.state.spec.mthds","id","gateway.state.spec.mthds/id",2078923376),OG=new z(null,"BIT","BIT",-1854474115),PG=new z(null,"request-id","request-id",-985684093),QG=new z(null,"WSP","WSP",-1046948716),RG=new w("cljs.spec.alpha","conformer","cljs.spec.alpha/conformer",2140085535,null),SG=new z("gateway.state.spec.bus","bus-domain","gateway.state.spec.bus/bus-domain",1755593660),
    TG=new z("gateway.state.spec.agm","method_id","gateway.state.spec.agm/method_id",1007252604),$k=new z(null,"more-marker","more-marker",-14717935),VG=new z("gateway.state.spec.state","current-id","gateway.state.spec.state/current-id",798109991),XG=new z(null,"creation-request","creation-request",1261647120),YG=new z("gateway.state.spec.pending-requests","gw-request-id","gateway.state.spec.pending-requests/gw-request-id",-996681140),ZG=new z(null,"nl-t","nl-t",-1608382114),Fm=new w(null,"var","var",
    870848730,null),$G=new z(null,"qualifier","qualifier",125841738),yl=new z(null,"ready","ready",1086465795),aH=new z(null,"unsubscribe","unsubscribe",632650147),bH=new z(null,"leeway","leeway",-355669977),cH=new w("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),dH=new z("cljs.spec.alpha","gfn","cljs.spec.alpha/gfn",-593120375),eH=new z(null,"non-matched","non-matched",-624651186),fH=new z(null,"add-interest","add-interest",-1148631141),gH=new z("gateway.state.spec.restrictions","restrictions",
    "gateway.state.spec.restrictions/restrictions",181113171),hH=new w(null,"cond","cond",1606708055,null),iH=new w("cljs.core","\x3d","cljs.core/\x3d",-1891498332,null),jH=new z("gateway.common.context.spec.messages","creator_id","gateway.common.context.spec.messages/creator_id",2137586424),kH=new z(null,"element","element",1974019749),lH=new z(null,"char-format","char-format",-1016499218),mH=new z(null,"match","match",1220059550),nH=new z(null,"owner_type","owner_type",846064882),pH=new z("gateway.auth.spec",
    "response","gateway.auth.spec/response",1690727657),oH=new z(null,"max-columns","max-columns",1742323262),qH=new z("gateway.domain","join","gateway.domain/join",1465372684),rH=new w(null,"when-let","when-let",-1383043480,null),sH=new z(null,"routing_key","routing_key",1236069137),tH=new z(null,"gw-request-id","gw-request-id",2114687330),uH=new z(null,"hello","hello",-245025397),Pb=new z("gateway.state.spec.context","creator","gateway.state.spec.context/creator",-11360985),wH=new z(null,"publishers",
    "publishers",1474752298),xH=new z(null,"index","index",-1531685915),yH=new z("gateway.state.spec.factory","peer_type","gateway.state.spec.factory/peer_type",-885367633),zH=new z(null,"peer-factories-added","peer-factories-added",-2010470480),AH=new z(null,"subscriber_id","subscriber_id",972810975),Em=new w(null,".",".",1975675962,null),BH=new z(null,"at","at",1476951349),CH=new z(null,"started?","started?",-1301062863),DH=new z(null,"peer_type","peer_type",371163309),FH=new z(null,"routing-key","routing-key",
    238118868),GH=new z("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),HH=new z(null,"CRLF","CRLF",11418756),IH=new z(null,"configuration","configuration",1431842520),JH=new z(null,"vargs","vargs",-966597273),KH=new z(null,"full","full",436801220),LH=new z(null,"output-format","output-format",-1826382676),MH=new z(null,"queue","queue",1455835879),NH=new z(null,"stacktrace-fonts","stacktrace-fonts",830799382),OH=new z(null,"warn","warn",-436710552),QH=new z("gateway.state.spec.mthds",
    "peer-methods","gateway.state.spec.mthds/peer-methods",-639609469),RH=new z("gateway.domains.agm.spec.requests","arguments","gateway.domains.agm.spec.requests/arguments",-1906298417),SH=new z(null,"selector","selector",762528866),TH=new z(null,"sqn","sqn",2076851999),UH=new z(null,"retained","retained",630238157),VH=new z(null,"created","created",-704993748),WH=new z(null,"miser","miser",-556060186),YH=new z(null,"options","options",99638489),ZH=new z(null,"context","context",-830191113),$H=new z(null,
    "paren","paren",-294107600),aI=new z(null,"gw-request","gw-request",1009584674),bI=new z(null,"colnum","colnum",2023796854),cI=new z(null,"standard","standard",-1769206695),Qb=new z("gateway.common.context.spec.requests","value","gateway.common.context.spec.requests/value",1114622378),eI=new w("cljs.core","some?","cljs.core/some?",-440439360,null),fI=new z(null,"provider","provider",-302056900),gI=new z(null,"DQUOTE","DQUOTE",-571169808),hI=new w("cljs.core","hash-set","cljs.core/hash-set",1130426749,
    null),iI=new z(null,"timestamp_","timestamp_",-954533417),jI=new z(null,"fn","fn",-1175266204),kI=new z(null,"args","args",1315556576),lI=new z("gateway.state.spec.activity","child","gateway.state.spec.activity/child",-942548506),mI=new z("gateway.state.spec.context","write_permissions","gateway.state.spec.context/write_permissions",1195182789),Rb=new z(null,"creator","creator",-1069241724),nI=new z(null,"environment","environment",-666037640),Ub=new z(null,"pattern","pattern",242135423),oI=new w("cljs.spec.alpha",
    "map-of","cljs.spec.alpha/map-of",153715093,null),pI=new z(null,"peer-factories-removed","peer-factories-removed",-1429529592),qI=new z(null,"eq","eq",-618539067),rI=new z(null,"str","str",1089608819),sI=new z(null,"console","console",1228072057),tI=new z(null,"hash","hash",-13781596),uI=new w("cljs.core","any?","cljs.core/any?",-2068111842,null),vI=new z(null,"rules-or-parser","rules-or-parser",-314380386),wI=new z("gateway.common.context.spec.requests","removed","gateway.common.context.spec.requests/removed",
    -732316803),xI=new z("gateway.state.spec.agm","subscription-id","gateway.state.spec.agm/subscription-id",-1920105558),yI=new z(null,"arg3","arg3",-1486822496),zI=new z(null,"min-level","min-level",1634684919),AI=new z(null,"arg1","arg1",951899358),BI=new z(null,"arg2","arg2",1729550917),CI=new z(null,"list","list",765357683),DI=new z("gateway.auth.spec","authentication","gateway.auth.spec/authentication",-2005184469),EI=new z("gateway.state.spec.context","data","gateway.state.spec.context/data",790358174),
    FI=new z(null,"method_id","method_id",1349548671),GI=new z(null,"key","key",-1516042587),HI=new z("gateway.state.spec.state","handler-ch","gateway.state.spec.state/handler-ch",-891933338),II=new z(null,"generator-fn","generator-fn",811851656),JI=new z(null,"req-keys","req-keys",514319221),KI=new z(null,"destroy","destroy",-843660405),LI=new z(null,"overflowchar","overflowchar",-1620088106),MI=new z(null,"splicing?","splicing?",-428596366),NI=new z(null,"oob","oob",707302005),Ql=new z(null,"parents",
    "parents",-2027538891),OI=new z(null,"js","js",1768080579),PI=new z(null,"peer","peer",1319662792),QI=new z("gateway.state.spec.bus","subscription","gateway.state.spec.bus/subscription",1556343370),RI=new z("gateway.common.spec.messages","body","gateway.common.spec.messages/body",-1028765771),SI=new w(null,"if-let","if-let",1803593690,null),UI=new z("gateway.state.spec.agm","streams","gateway.state.spec.agm/streams",-460960790),WI=new z(null,"ping","ping",-1670114784),VI=new w(null,"condp","condp",
    1054325175,null),XI=new z(null,"limits","limits",-2101003399),YI=new z(null,"member","member",-2012020816),ZI=new z("gateway.state.spec.factory","flags","gateway.state.spec.factory/flags",-1898127651),$I=new z(null,"subscription","subscription",1949009182),cJ=new z(null,"NOT","NOT",-1689245341),dJ=new z(null,"opt","opt",-794706369),eJ=new z(null,"reason","reason",-2070751759),fJ=new z(null,"service","service",-1963054559),gJ=new z(null,"sym","sym",-1444860305),hJ=new w("gateway.domains.agm.subscriptions",
    "drop-interest-rq","gateway.domains.agm.subscriptions/drop-interest-rq",1736302176,null),iJ=new z("gateway.domains.global.spec.requests","context-unsubscribe","gateway.domains.global.spec.requests/context-unsubscribe",-602451908),jJ=new z(null,"update-context","update-context",1410241659),kJ=new z(null,"id","id",-1388402092),lJ=new z("gateway.common.context.spec.requests","context_id","gateway.common.context.spec.requests/context_id",1348419676),mJ=new z(null,"stream","stream",1534941648),oJ=new z(null,
    "results","results",-1134170113),pJ=new z(null,"input-format","input-format",-422703481),qJ=new z("gateway.domains.agm.spec.requests","drop-subscription","gateway.domains.agm.spec.requests/drop-subscription",938907886),rJ=new z(null,"indent","indent",-148200125),sJ=new z(null,"hi","hi",-1821422114),tJ=new z(null,"HEXDIG","HEXDIG",-200221072),uJ=new z(null,"ord","ord",1142548323),vJ=new z(null,"OCTET","OCTET",-743420682),wJ=new w("cljs.spec.alpha","nilable","cljs.spec.alpha/nilable",1628308748,null),
    xJ=new z("gateway.common.spec.messages","receiver","gateway.common.spec.messages/receiver",679023931),yJ=new z(null,"removed_id","removed_id",1940625745),zJ=new z(null,"keyword","keyword",811389747),AJ=new z("gateway.state.spec.common","keyword","gateway.state.spec.common/keyword",-1409778786),BJ=new z(null,"else-params","else-params",-832171646),CJ=new z("gateway.state.spec.restrictions","parsed-restrictions","gateway.state.spec.restrictions/parsed-restrictions",1374812996),DJ=new z(null,"end-block-t",
    "end-block-t",1544648735),EJ=new z(null,"max-count","max-count",1539185305);var FJ={},Vb,HJ={};function IJ(a,b){var c=JK;if(null!=a&&null!=a.Je)a=a.Je(a,b,c);else {var d=IJ[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=IJ._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("WritePort.put!",a);}return a}function JJ(a){if(null!=a&&null!=a.Ed)a=a.Ed(a);else {var b=JJ[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=JJ._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Channel.close!",a);}return a}
    function KJ(a){if(null!=a&&null!=a.sf)a=!0;else {var b=KJ[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=KJ._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Handler.active?",a);}return a}function LJ(a){if(null!=a&&null!=a.tf)a=a.f;else {var b=LJ[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=LJ._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Handler.commit",a);}return a}
    function MJ(a,b){if(null!=a&&null!=a.ae)a=a.ae(a,b);else {var c=MJ[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=MJ._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Buffer.add!*",a);}return a}var NJ=function NJ(a){switch(arguments.length){case 1:return NJ.m(arguments[0]);case 2:return NJ.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};NJ.m=function(a){return a};NJ.gh=function(a,b){return MJ(a,b)};NJ.F=2;function OJ(a,b,c,d,e){for(var f=0;;)if(f<e)c[d+f]=a[b+f],f+=1;else break}function PJ(a){this.length=this.ta=this.head=0;this.l=a;}g=PJ.prototype;g.pop=function(){if(0===this.length)return null;var a=this.l[this.ta];this.l[this.ta]=null;this.ta=(this.ta+1)%this.l.length;--this.length;return a};g.unshift=function(a){this.l[this.head]=a;this.head=(this.head+1)%this.l.length;this.length+=1;return null};g.unbounded_unshift=function(a){this.length+1===this.l.length&&this.resize();return this.unshift(a)};
    g.resize=function(){var a=Array(2*this.l.length);return this.ta<this.head?(OJ(this.l,this.ta,a,0,this.length),this.ta=0,this.head=this.length,this.l=a):this.ta>this.head?(OJ(this.l,this.ta,a,0,this.l.length-this.ta),OJ(this.l,0,a,this.l.length-this.ta,this.head),this.ta=0,this.head=this.length,this.l=a):this.ta===this.head?(this.head=this.ta=0,this.l=a):null};g.cleanup=function(a){for(var b=this.length,c=0;;)if(c<b){var d=this.pop();(a.m?a.m(d):a.call(null,d))&&this.unshift(d);c+=1;}else return null};
    function QJ(a){return new PJ(Array(a))}function RJ(a,b){this.ca=a;this.n=b;this.h=2;this.I=0;}RJ.prototype.Dd=function(){return this.ca.length>=this.n};RJ.prototype.ae=function(a,b){this.ca.unbounded_unshift(b);return this};RJ.prototype.X=function(){return this.ca.length};function SJ(a,b){this.ca=a;this.n=b;this.h=2;this.I=0;}SJ.prototype.Dd=function(){return !1};SJ.prototype.ae=function(a,b){this.ca.length!==this.n&&this.ca.unshift(b);return this};SJ.prototype.X=function(){return this.ca.length};function Wb(){return qa("iPhone")&&!qa("iPod")&&!qa("iPad")}qa("Opera");var VJ=qa("Trident")||qa("MSIE");qa("Edge");var XJ=qa("Gecko")&&!(-1!=pa.toLowerCase().indexOf("webkit")&&!qa("Edge"))&&!(qa("Trident")||qa("MSIE"))&&!qa("Edge"),YJ=-1!=pa.toLowerCase().indexOf("webkit")&&!qa("Edge");YJ&&qa("Mobile");qa("Macintosh");qa("Windows");qa("Linux")||qa("CrOS");var Xb=bb.navigator||null;Xb&&(Xb.appVersion||"").indexOf("X11");qa("Android");Wb();qa("iPad");qa("iPod");Wb()||qa("iPad")||qa("iPod");pa.toLowerCase().indexOf("kaios");function Yb(){var a=document;var b="IFRAME";"application/xhtml+xml"===a.contentType&&(b=b.toLowerCase());return a.createElement(b)}var hK;
    function iK(){var a=bb.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!qa("Presto")&&(a=function(){var e=Yb();e.style.display="none";document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.close();var k="callImmediate"+Math.random(),l="file:"==f.location.protocol?"*":f.location.protocol+"//"+f.location.host;e=nb(function(m){if(("*"==l||m.origin==l)&&m.data==k)this.port1.onmessage();},this);f.addEventListener("message",e,
    !1);this.port1={};this.port2={postMessage:function(){f.postMessage(k,l);}};});if("undefined"!==typeof a&&!qa("Trident")&&!qa("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.Wd;c.Wd=null;e();}};return function(e){d.next={Wd:e};d=d.next;b.port2.postMessage(0);}}return function(e){bb.setTimeout(e,0);}}var jK=QJ(32),kK=!1,lK=!1;function mK(){kK=!0;lK=!1;for(var a=0;;){var b=jK.pop();if(null!=b&&(b.o?b.o():b.call(null),1024>a)){a+=1;continue}break}kK=!1;return 0<jK.length?nK.o?nK.o():nK.call(null):null}function nK(){if(lK&&kK)return null;lK=!0;"function"!==typeof bb.setImmediate||bb.Window&&bb.Window.prototype&&!qa("Edge")&&bb.Window.prototype.setImmediate==bb.setImmediate?(hK||(hK=iK()),hK(mK)):bb.setImmediate(mK);}function oK(a){jK.unbounded_unshift(a);nK();}var pK={},Zb;
    function rK(a){if("undefined"===typeof zc||"undefined"===typeof Ac||"undefined"===typeof FJ||"undefined"===typeof HJ||"undefined"===typeof pK||"undefined"===typeof Zb)Zb=function(b,c){this.ai=b;this.ui=c;this.h=425984;this.I=0;},Zb.prototype.O=function(b,c){return new Zb(this.ai,c)},Zb.prototype.N=function(){return this.ui},Zb.prototype.zb=function(){return this.ai},Zb.Ia=!0,Zb.Da="cljs.core.async.impl.channels/t_cljs$core$async$impl$channels9617",Zb.Ja=function(b){return be(b,"cljs.core.async.impl.channels/t_cljs$core$async$impl$channels9617")};return new Zb(a,
    S)}function sK(a,b){this.Id=a;this.ai=b;}function tK(a){return KJ(a.Id)}function uK(a,b,c,d){this.ud=a;this.ee=0;this.Kc=b;this.de=0;this.ca=c;this.closed=!1;this.Lb=d;}function vK(a){for(;;){var b=a.Kc.pop();if(null!=b){var c=b.Id;oK(function(d){return function(){return d.m?d.m(!0):d.call(null,!0)}}(c.f,c,b.ai));}break}a.Kc.cleanup(Gh(!1));a.Ed(null);}
    uK.prototype.Je=function(a,b,c){var d=this,e=this,f=d.closed;if(f)return rK(!1);if(p(function(){var v=d.ca;return p(v)?Sc(d.ca.Dd()):v}())){var k=bf(d.Lb.gh?d.Lb.gh(d.ca,b):d.Lb.call(null,d.ca,b));c=function(){for(var v=I;;)if(0<d.ud.length&&0<F(d.ca)){var y=d.ud.pop(),E=y.f,H=d.ca.ca.pop();v=Bf.gh(v,function(T,Y,ia){return function(){return Y.m?Y.m(ia):Y.call(null,ia)}}(v,E,H));}else return v}();k&&vK(e);if(B(c)){c=B(c);a=null;for(var l=0,m=0;;)if(m<l){var r=a.W(null,m);oK(r);m+=1;}else if(c=
    B(c))a=c,Vf(a)?(c=qe(a),m=re(a),a=c,l=F(c),c=m):(c=C(a),oK(c),c=D(a),a=null,l=0),m=0;else break}return rK(!0)}a=function(){for(;;){var v=d.ud.pop();if(p(v)){if(p(!0))return v}else return null}}();if(p(a)){var t=a.f;oK(function(){return t.m?t.m(b):t.call(null,b)});return rK(!0)}64<d.de?(d.de=0,d.Kc.cleanup(tK)):d.de+=1;p(c.Ie())&&d.Kc.unbounded_unshift(new sK(c,b));return null};
    function wK(a,b){if(null!=a.ca&&0<F(a.ca)){b=b.f;if(p(b)){var c=a.ca.ca.pop(),d=Sc(a.ca.Dd())&&0<a.Kc.length?function(){for(var H=I;;){var T=a.Kc.pop(),Y=T.ai;T=T.Id.f;H=p(T)?Bf.gh(H,T):H;Y=p(T)?bf(a.Lb.gh?a.Lb.gh(a.ca,Y):a.Lb.call(null,a.ca,Y)):null;if(!(Sc(Y)&&Sc(a.ca.Dd())&&0<a.Kc.length))return new Q(null,2,5,R,[Y,H],null)}}():null,e=J(d,0,null),f=J(d,1,null);p(e)&&vK(a);for(var k=B(f),l=null,m=0,r=0;;)if(r<m){var t=l.W(null,r);oK(function(H,T,Y,ia,ba){return function(){return ba.m?ba.m(!0):ba.call(null,
    !0)}}(k,l,m,r,t));r+=1;}else {var v=B(k);if(v){t=v;if(Vf(t))k=qe(t),r=re(t),l=k,m=F(k),k=r;else {var y=C(t);oK(function(H,T,Y,ia,ba){return function(){return ba.m?ba.m(!0):ba.call(null,!0)}}(k,l,m,r,y));k=D(t);l=null;m=0;}r=0;}else break}return rK(c)}return null}c=function(){for(;;){var H=a.Kc.pop();if(p(H)){if(KJ(H.Id))return H}else return null}}();if(p(c)){var E=LJ(c.Id);oK(function(){return E.m?E.m(!0):E.call(null,!0)});return rK(c.ai)}if(p(a.closed))return p(a.ca)&&
    (a.Lb.m?a.Lb.m(a.ca):a.Lb.call(null,a.ca)),p(p(!0)?b.f:!0)?(b=function(){var H=a.ca;return p(H)?0<F(a.ca):H}(),c=p(b)?a.ca.ca.pop():null,rK(c)):null;64<a.ee?(a.ee=0,a.ud.cleanup(KJ)):a.ee+=1;p(b.Ie())&&a.ud.unbounded_unshift(b);return null}
    uK.prototype.Ed=function(){var a=this;if(!a.closed)for(a.closed=!0,p(function(){var e=a.ca;return p(e)?0===a.Kc.length:e}())&&(a.Lb.m?a.Lb.m(a.ca):a.Lb.call(null,a.ca));;){var b=a.ud.pop();if(null!=b){var c=b.f,d=p(function(){var e=a.ca;return p(e)?0<F(a.ca):e}())?a.ca.ca.pop():null;oK(function(e,f){return function(){return e.m?e.m(f):e.call(null,f)}}(c,d));}else break}return null};function xK(a){console.log(a);return null}
    function yK(a,b){var c=p(null)?null:xK;b=c.m?c.m(b):c.call(null,b);return null==b?a:NJ.gh(a,b)}
    function zK(a){return new uK(QJ(32),QJ(32),a,function(){var b=p(null)?null.m?null.m(NJ):null.call(null,NJ):NJ;return function(){function c(f,k){try{return b.gh?b.gh(f,k):b.call(null,f,k)}catch(l){return yK(f,l)}}function d(f){try{return b.m?b.m(f):b.call(null,f)}catch(k){return yK(f,k)}}var e=null;e=function(f,k){switch(arguments.length){case 1:return d.call(this,f);case 2:return c.call(this,f,k)}throw Error("Invalid arity: "+arguments.length);};e.m=d;e.gh=c;return e}()}())}var AK={},$b;
    function CK(a){if("undefined"===typeof zc||"undefined"===typeof Ac||"undefined"===typeof FJ||"undefined"===typeof HJ||"undefined"===typeof AK||"undefined"===typeof $b)$b=function(b,c){this.f=b;this.ti=c;this.h=393216;this.I=0;},$b.prototype.O=function(b,c){return new $b(this.f,c)},$b.prototype.N=function(){return this.ti},$b.prototype.sf=function(){return !0},$b.prototype.Ie=function(){return !0},$b.prototype.tf=function(){return this.f},$b.Ia=!0,$b.Da="cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers9466",$b.Ja=
    function(b){return be(b,"cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers9466")};return new $b(a,S)}function DK(a){try{var b=a[0];return b.m?b.m(a):b.call(null,a)}catch(c){if(c instanceof Object)throw b=c,a[6].Ed(null),b;throw c;}}function EK(a,b){b=wK(b,CK(function(c){a[2]=c;a[1]=4;return DK(a)}));return p(b)?(a[2]=u(b),a[1]=4,uz):null}function FK(a,b){a=a[6];null!=b&&a.Je(null,b,CK(function(){return null}));a.Ed(null);return a}function IK(a){a=A.gh(a,0)?null:a;return zK("number"===typeof a?new RJ(QJ(a),a):a)}
    var JK=function(a){if("undefined"===typeof zc||"undefined"===typeof Ac||"undefined"===typeof FJ||"undefined"===typeof Vb)Vb=function(b,c,d){this.f=b;this.kf=c;this.yh=d;this.h=393216;this.I=0;},Vb.prototype.O=function(b,c){return new Vb(this.f,this.kf,c)},Vb.prototype.N=function(){return this.yh},Vb.prototype.sf=function(){return !0},Vb.prototype.Ie=function(){return this.kf},Vb.prototype.tf=function(){return this.f},Vb.Ia=!0,Vb.Da="cljs.core.async/t_cljs$core$async11628",Vb.Ja=function(b){return be(b,
    "cljs.core.async/t_cljs$core$async11628")};return new Vb(a,!0,S)}(function(){return null});function KK(a,b){a=IJ(a,b);return p(a)?u(a):!0}
    function LK(a,b){var c=I,d=IK(1);oK(function(){var e=function(){function k(l){var m=l[1];if(7===m)return l[2]=l[2],l[1]=3,uz;if(1===m)return m=c,l[7]=m,l[2]=null,l[1]=2,uz;if(4===m)return m=l[2],l[8]=m,l[1]=p(null==m)?5:6,uz;if(6===m){m=l[7];var r=l[8];m=a.gh?a.gh(m,r):a.call(null,m,r);r=bf(m);l[9]=m;l[1]=r?8:9;return uz}return 3===m?FK(l,l[2]):2===m?EK(l,b):9===m?(m=l[9],l[7]=m,l[2]=null,l[1]=2,uz):5===m?(m=l[7],l[2]=m,l[1]=7,uz):10===m?(l[2]=l[2],l[1]=7,uz):8===m?(m=l[9],m=u(m),l[2]=m,l[1]=10,uz):
    null}return function(){function l(t){for(;;){a:try{for(;;){var v=k(t);if(!P(v,uz)){var y=v;break a}}}catch(E){y=E;t[2]=y;if(B(t[4]))t[1]=C(t[4]);else throw y;y=uz;}if(!P(y,uz))return y}}function m(){var t=[null,null,null,null,null,null,null,null,null,null];t[0]=r;t[1]=1;return t}var r=null;r=function(t){switch(arguments.length){case 0:return m.call(this);case 1:return l.call(this,t)}throw Error("Invalid arity: "+arguments.length);};r.o=m;r.m=l;return r}()}(),f=function(){var k=e();k[6]=d;return k}();
    return DK(f)});return d}var MK={};function NK(){return (new Date).getTime()}var OK=function OK(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return OK.g(arguments[0],arguments[1],2<c.length?new Pe(c.slice(2),0,null):null)};OK.g=function(a,b,c){c=J(c,0,null);if(M(a)&&(b=B(b))){var d=B(b);b=C(d);d=D(d);return B(d)?(d=OK.g(x.gh(a,b),d,G([c])),0===F(d)&&Sc(Ya.m(c))?Gf.gh(a,b):K.hh(a,b,d)):Gf.gh(a,b)}return a};OK.F=2;OK.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};
    function PK(a,b,c){return hh(ni,a,b,Lh(Bf,Ck),c)}function QK(a,b,c){return ni.A(a,b,ii,c)}var RK=function RK(a,b,c){if(p(b)){var e=B(b);b=C(e);e=D(e);if(Sc(B(e)))c=Nf.gh(x.gh(a,b),c);else {var f=x.gh(a,b);c=RK.hh?RK.hh(f,e,c):RK.call(null,f,e,c);}return 0===F(c)?Gf.gh(a,b):K.hh(a,b,c)}return a};function SK(a){return p(a)?(JJ(a),LK(function(){return null},a)):null}function TK(a,b){return fd.hh(function(c,d){return A.gh(d,a)?c:Bf.gh(c,d)},I,b)}
    function UK(a,b){return fd.gh(function(c,d){return p(a.m?a.m(d):a.call(null,d))?af(d):null},b)}function VK(a,b){return Sc(x.gh(a,b))?K.hh(a,b,S):a}function WK(a){return jg(function(b,c,d){return K.hh(b,Jg.m(c),d)},S,a)}function XK(){return eh(q,fi.gh(new Ak(null,new n(null,1,["-",null],null),null),q.m(fm())))}function YK(a){return Wy.m(a)}function ZK(a){var b=Qq.gh(a,1),c=["r-",q.m(Wy.m(a)),"-",q.m(b)].join("");return new Q(null,2,5,R,[K.hh(a,Qq,b+1),c],null)}function $K(a){var b=Qq.gh(a,1),c=["c-",q.m(Wy.m(a)),"-",q.m(b)].join("");return new Q(null,2,5,R,[K.hh(a,Qq,b+1),c],null)}function aL(a){var b=Qq.gh(a,1),c=["p-",q.m(Wy.m(a)),"-",q.m(b)].join("");return new Q(null,2,5,R,[K.hh(a,Qq,b+1),c],null)}function bL(a,b,c,d,e){this.uri=a;this.message=b;this.$=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=bL.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "uri":return this.uri;case "message":return this.message;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#gateway.reason.Reason{",", ","}",c,Wg.gh(new Q(null,2,5,R,[new Q(null,2,5,R,[Vv,this.uri],null),new Q(null,2,5,R,[tr,this.message],null)],null),this.j))};g.ua=function(){return new fj(this,2,new Q(null,2,5,R,[Vv,tr],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=57548305^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.uri,b.uri)&&A.gh(this.message,b.message)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,2,[Vv,null,tr,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new bL(this.uri,this.message,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "uri":case "message":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Vv,b):P.call(null,Vv,b))?new bL(c,this.message,this.$,this.j,null):p(P.gh?P.gh(tr,b):P.call(null,tr,b))?new bL(this.uri,c,this.$,this.j,null):new bL(this.uri,this.message,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,2,5,R,[new Fi(Vv,this.uri),new Fi(tr,this.message)],null),this.j))};g.O=function(a,b){return new bL(this.uri,this.message,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function cL(a,b){return new bL(a,b,null,null,null)}function dL(a,b){var c=jm(a);b=Vv.gh(c,b);c=tr.m(c);return new bL(b,p(c)?c:km(a),null,null,null)}function eL(a,b){throw hm(b,cL(a,b));}function fL(a){return cL(qE.m(a),eJ.m(a))}function gL(a,b){return cL(a,b)}function hL(a){var b=XK();return new n(null,2,[Hx,new n(null,2,[Wy,a,Qq,1],null),nn,b],null)}function iL(a,b,c,d){return ni.A(mi(a,new Q(null,3,5,R,[Cn,b,c],null),p(d)?new n(null,1,[os,d],null):S),new Q(null,2,5,R,[zr,c],null),Lh(Bf,Ck),b)}function jL(a,b,c){return RK(ni.A(a,new Q(null,2,5,R,[Cn,b],null),Gf,c),new Q(null,2,5,R,[zr,c],null),b)}function kL(a,b,c){return li.gh(a,new Q(null,3,5,R,[zr,c,b],null))}function lL(a,b,c){return p(b)?mi(a,new Q(null,2,5,R,[WB,b],null),c):a}
    function mL(a,b){return Tk(OK,li)(a,new Q(null,2,5,R,[WB,b],null))}function nL(a,b){return li.gh(a,new Q(null,3,5,R,[lz,b,uq],null))}function oL(a,b){return new n(null,2,[By,a,Sv,b],null)}function pL(a,b){return K.hh(oL(new n(null,1,[U,Uv],null),b),hz,a)}function qL(a,b,c){return K.hh(oL(b,c),hz,a)}var rL=function rL(a){switch(arguments.length){case 6:return rL.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 5:return rL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    rL.la=function(a,b,c,d,e,f){a=new n(null,6,[uq,a,U,DA,is,c,jw,d,qE,Vv.m(e),eJ,tr.m(e)],null);f=p(f)?K.hh(a,ZH,f):a;return oL(b,f)};rL.K=function(a,b,c,d,e){return rL.la(a,b,c,d,e,null)};rL.F=6;var sL=function sL(a){switch(arguments.length){case 4:return sL.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 3:return sL.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};sL.A=function(a,b,c,d){return oL(b,sL.hh(a,c,d))};
    sL.hh=function(a,b,c){return new n(null,4,[uq,a,U,mz,is,b,jw,c],null)};sL.F=4;function tL(a){return A.gh(U.m(a),Fs)}var uL=function uL(a){switch(arguments.length){case 6:return uL.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 5:return uL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};uL.la=function(a,b,c,d,e,f){return oL(b,uL.K(a,c,d,e,f))};
    uL.K=function(a,b,c,d,e){return new n(null,6,[uq,a,U,QE,jw,b,ZA,c,jD,d,Lc,e],null)};uL.F=6;var vL=function vL(a){switch(arguments.length){case 5:return vL.K(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 4:return vL.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};vL.K=function(a,b,c,d,e){return oL(b,vL.A(a,c,d,e))};
    vL.A=function(a,b,c,d){return new n(null,6,[uq,a,U,iE,jw,b,yJ,c,qE,Vv.m(d),eJ,tr.m(d)],null)};vL.F=5;function wL(a,b){if(null!=a&&null!=a.Qc)a=a.Qc(a,b);else {var c=wL[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=wL._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ConjFlat.conj-flat",a);}return a}function xL(a,b){for(a=li.gh(a,b);;)if(p(yL.m?yL.m(a):yL.call(null,a)))a=x.gh(a,0),b=Bf.gh(b,0);else return b}
    function zL(a,b){return new Lg(null,function(){var c=li.gh(a,b);a:{var d=a;for(var e=b;;){if(A.gh(F(e),1)){d=Lf(e)<(AL.m?AL.m(d):AL.call(null,d))-1?xL(d,new Q(null,1,5,R,[Lf(e)+1],null)):null;break a}var f=Lf(e);var k=li.gh(d,Mf(e));k=AL.m?AL.m(k):AL.call(null,k);if(f<k-1){d=xL(d,Bf.gh(Mf(e),Lf(e)+1));break a}e=Mf(e);}}return uf(c,p(d)?zL(a,d):null)},null,null)}function BL(a,b,c,d,e){this.ka=a;this.pe=b;this.Ic=c;this.C=d;this.md=e;this.Vd=null;this.h=31850958;this.I=0;}g=BL.prototype;g.toString=function(){return Ae(B(this))};
    g.ia=function(a,b){return this.ka.ia(null,b)};g.M=function(a,b,c){return this.ka.M(null,b,c)};g.N=function(){return Kf(this.ka)};g.za=function(){return D(B(this))};g.X=function(){return this.C};g.Z=function(){return this.Ic};g.Y=function(a,b){return A.gh(this.Ic,Ie(b))&&A.gh(this.C,F(b))&&(A.gh(this.C,0)||A.gh(B(this),b))};g.pa=function(){return Jf(CL,Kf(this))};g.Fa=function(){return C(B(this))};g.Ha=function(){return Qe(B(this))};
    g.bi=function(){if(!p(this.Vd)){if(this.md){var a=this.ka;a=0<F(a)?zL(a,xL(a,new Q(null,1,5,R,[0],null))):null;}else a=B(this.ka);this.Vd=a;}return this.Vd};g.O=function(a,b){return new BL(Jf(this.ka,b),this.pe,this.Ic,this.C,this.md)};g.ga=function(a,b){return uf(b,this)};
    g.Qc=function(a,b){if(null==b)return this;if(p(yL.m?yL.m(b):yL.call(null,b))){if(0===this.C)return b;if(32>=F(b)){a=DL.gh?DL.gh(this,b):DL.call(null,this,b);var c=this.C+F(b),d=ii.gh(this.ka,b),e=this.md;return new BL(d,a,Ue(a,c),c,e?e:b.md)}a=DL.gh?DL.gh(this,b):DL.call(null,this,b);c=this.C+F(b);return new BL(Bf.gh(this.ka,b),a,Ue(a,c),c,!0)}a=Be(31,this.pe)+Ie(b);c=this.C+1;return new BL(Bf.gh(this.ka,b),a,Ue(a,c),c,this.md)};
    function DL(a,b){var c=F(b);a:if(0===c)c=1;else {c|=0;for(var d=1,e=31;;){var f=Eh(c);c=sg(c,2);if(f)e=Be(e,e);else {if(0===c){c=Be(e,d);break a}d=Be(e,d);e=Be(e,e);}}}c|=0;return Be(c,a.pe)+(b.pe-c)}g.ma=h;g.S=function(a,b,c){return ee(B(this),b,c)};function EL(a){a=Mi(a);a:for(var b=1,c=B(a);;)if(null!=c)b=Be(31,b)+Ie(C(c))|0,c=D(c);else break a;return new BL(a,b,Ie(a),F(a),!1)}var CL=EL(I);function yL(a){return a instanceof BL}function AL(a){return yL(a)?F(a.ka):F(a)}
    var FL=function FL(a,b){for(;;)if(B(b)){var d=C(b);yL(d)?(a=FL.gh?FL.gh(a,d):FL.call(null,a,d),b=D(b)):(a=Xg.gh(a,d),b=D(b));}else return a};function GL(a,b,c,d){this.ka=a;this.Ic=b;this.C=c;this.flat=d;this.h=167142175;this.I=2048;}g=GL.prototype;g.toString=function(){return Ae(HL(this))};g.ia=function(a,b){return HL(this).ia(null,b)};g.M=function(a,b,c){return HL(this).M(null,b,c)};
    function HL(a){Sc(u(a.flat))&&(Qh.gh(a.flat,function(){var b=u(a.ka);b=ke(FL(ie(I),b));return Jf(b,Kf(u(a.ka)))}),Qh.gh(a.ka,function(){return null}));return u(a.flat)}g.Aa=function(a,b,c){return HL(this).Aa(null,b,c)};g.W=function(a,b){return HL(this).W(null,b)};g.wa=function(a,b,c){return HL(this).wa(null,b,c)};g.Ib=function(a,b,c){return HL(this).Ib(null,b,c)};g.N=function(){return p(u(this.flat))?Kf(u(this.flat)):Kf(u(this.ka))};g.X=function(){return this.C};g.Xb=function(){return HL(this).Xb(null)};
    g.Yb=function(){return HL(this).Yb(null)};g.Bc=function(){return 0<this.C?ae(HL(this)):null};g.Z=function(){return this.Ic};g.Y=function(a,b){return A.gh(this.Ic,Ie(b))&&A.gh(this.C,F(b))&&A.gh(HL(this),b)};g.pa=function(){return Jf(I,Kf(this))};g.fa=function(a,b,c){return K.hh(HL(this),b,c)};g.La=function(a,b){return HL(this).La(null,b)};g.bi=function(){return B(HL(this))};
    g.O=function(a,b){return p(u(this.flat))?new GL(Nh(u(this.ka)),this.Ic,this.C,Nh(Jf(u(this.flat),b))):new GL(Nh(Jf(u(this.ka),b)),this.Ic,this.C,Nh(u(this.flat)))};g.ga=function(a,b){return Bf.gh(HL(this),b)};g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 2:return this.gh(arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};
    g.m=function(a){return HL(this).gh(null,a)};g.gh=function(a,b){return HL(this).hh(null,a,b)};g.Wb=function(a,b){return oe(HL(this),b)};g.ma=h;g.S=function(a,b,c){return ee(HL(this),b,c)};function IL(a){return p(a.md)?p(a.Vd)?Mi(B(a)):new GL(Nh(a.ka),a.Ic,a.C,Nh(null)):a.ka}function JL(a,b,c){var d=p(b.ignoreCase)?"gi":"g";d=p(b.multiline)?[d,"m"].join(""):d;return a.replace(new RegExp(b.source,p(b.unicode)?[d,"u"].join(""):d),c)}
    function KL(a){return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=Yh(2,d);if(A.gh(F(d),1))return d=C(d),a.m?a.m(d):a.call(null,d);d=Mi(d);return a.m?a.m(d):a.call(null,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}
    function LL(a,b,c){if("string"===typeof b)return a.replace(new RegExp(String(b).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08"),"g"),c);if(b instanceof RegExp)return "string"===typeof c?JL(a,b,c):JL(a,b,KL(c));throw ["Invalid match arg: ",q.m(b)].join("");}function ML(a,b){var c=new yc;for(b=B(b);;)if(null!=b)c.append(q.m(C(b))),b=D(b),null!=b&&c.append(a);else return c.toString()}
    function NL(a,b){if(0>=b||b>=2+F(a))return Bf.gh(Mi(uf("",Vh.gh(q,B(a)))),"");if(p(wg?Td(1,b):vg.call(null,1,b)))return new Q(null,1,5,R,[a],null);if(p(wg?Td(2,b):vg.call(null,2,b)))return new Q(null,2,5,R,["",a],null);b-=2;return Bf.gh(Mi(uf("",Vi(Mi(Vh.gh(q,B(a))),0,b))),a.substring(b))}
    function OL(a,b,c){if("/(?:)/"===q.m(b))b=NL(a,c);else if(1>c)b=Mi(q.m(a).split(b));else a:for(var d=c,e=I;;){if(1===d){b=Bf.gh(e,a);break a}var f=Wk(b,a);if(null!=f){var k=a.indexOf(f);f=a.substring(k+F(f));--d;e=Bf.gh(e,a.substring(0,k));a=f;}else {b=Bf.gh(e,a);break a}}if(0===c&&1<F(b))a:for(c=b;;)if(""===Lf(c))c=Mf(c);else break a;else c=b;return c}function PL(a,b,c){(b=Sc(b))?(b=c.m?c.m(X):c.call(null,X),a=a.m?a.m(b):a.call(null,b)):a=b;return p(a)?["(",q.m(QL?QL(c,!1):RL.call(null,c,!1)),")"].join(""):QL?QL(c,!1):RL.call(null,c,!1)}var SL=Ih(PL,new Ak(null,new n(null,3,[mF,null,uJ,null,rC,null],null),null));function TL(a){switch(a){case "\n":return "\\n";case "\b":return "\\b";case "\f":return "\\f";case "\r":return "\\r";case "\t":return "\\t";default:return a}}function UL(a){return LL(['#"',a.source.substring(1),'"'].join(""),/[\s]/,TL)}
    function VL(a){return 4095>=a?["0000",q.m(a.toString(16))].join("").substr(-4):a.toString(16)}function WL(a){var b=Ea(a);a=x.gh(b,Vy);b=x.gh(b,sJ);return A.gh(a,b)?["%x",q.m(VL(a))].join(""):["%x",q.m(VL(a)),"-",q.m(VL(b))].join("")}function RL(a){switch(arguments.length){case 1:return QL(arguments[0],!1);case 2:return QL(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}
    function QL(a,b){var c=Ea(a);a=x.gh(c,qv);var d=x.gh(c,Vn),e=x.gh(c,Tn),f=x.gh(c,zn),k=x.gh(c,X);if(p(function(){var m=Sc(b);return m?ls.m(c):m}()))return ["\x3c",q.m(QL(c,!0)),"\x3e"].join("");k=k instanceof z?k.da:null;switch(k){case "epsilon":return "ε";case "opt":return [q.m(SL(b,a)),"?"].join("");case "plus":return [q.m(SL(b,a)),"+"].join("");case "star":return [q.m(SL(b,a)),"*"].join("");case "rep":return jh.gh(lx.m(c),Xv.m(c))?[q.m(SL(b,a)),"{",q.m(lx.m(c)),",",q.m(Xv.m(c)),"}"].join(""):[q.m(SL(b,
    a)),"{",q.m(lx.m(c)),"}"].join("");case "alt":return ML(" | ",Vh.gh(Jh(PL,new Ak(null,new n(null,1,[uJ,null],null),null),b),f));case "ord":return [q.m(PL(new Ak(null,new n(null,1,[rC,null],null),null),b,d))," / ",q.m(PL(new Ak(null,new n(null,1,[rC,null],null),null),b,e))].join("");case "cat":return ML(" ",Vh.gh(Jh(PL,new Ak(null,new n(null,2,[uJ,null,rC,null],null),null),b),f));case "string":var l=new yc;a=Ec;d=Dc;Ec=!0;Dc=function(m){return l.append(m)};try{ml(G([vn.m(c)]),Ic());}finally{Dc=d,Ec=
    a;}return q.m(l);case "string-ci":l=new yc;a=Ec;d=Dc;Ec=!0;Dc=function(m){return l.append(m)};try{ml(G([vn.m(c)]),Ic());}finally{Dc=d,Ec=a;}return q.m(l);case "char":return WL(c);case "regexp":return UL(Ct.m(c));case "nt":return zg(q.m(zJ.m(c)),1);case "look":return ["\x26",q.m(SL(b,a))].join("");case "neg":return ["!",q.m(SL(b,a))].join("");default:throw Error(["No matching clause: ",q.m(k)].join(""));}}
    function XL(a,b){return A.gh(jy.m(Du.m(b)),Nt)?["\x3c",Kg(a),"\x3e \x3d ",q.m(QL(b,!1))].join(""):[Kg(a)," \x3d ",q.m(QL(b,!1))].join("")}
    function YL(a){a=Ea(a);var b=x.gh(a,so),c=x.gh(a,ez);return ML("\n",uf(XL(c,b.m?b.m(c):b.call(null,c)),function(){return function f(e){return new Lg(null,function(){for(var k=e;;)if(k=B(k)){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t),y=J(v,0,null);v=J(v,1,null);jh.gh(y,c)&&(y=XL(y,v),r.add(y));t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);if(jh.gh(r,c))return uf(XL(r,l),f(Qe(k)));k=Qe(k);}else return null},null,null)}(b)}()))}
    function $L(a){p(cJ.m(a))?(ol.g(G(["NOT "])),ol.g(G([cJ.m(a)]))):p(wu.m(a))?ol.g(G([WL(a)])):a instanceof RegExp?ol.g(G([UL(a)])):ml(G([a]),Ic());}
    function aM(a){var b=Ea(a);a=x.gh(b,bn);var c=x.gh(b,px),d=x.gh(b,VD);b=x.gh(b,eJ);rl(G([["Parse error at line ",q.m(a),", column ",q.m(c),":"].join("")]));rl(G([d]));rl(G([ag(c)?1>=c?"^":eh(q,Wg.gh($h(c-1," "),new Q(null,1,5,R,["^"],null))):null]));c=Fk(Vh.gh(yA,ei.gh(KH,b)));a=Fk(Vh.gh(yA,ei.gh(Fh(KH),b)));d=F(c)+F(a);0!==d&&(A.gh(1,d)?rl(G(["Expected:"])):rl(G(["Expected one of:"])));c=B(c);d=null;for(var e=b=0;;)if(e<b){var f=d.W(null,e);$L(f);rl(G([" (followed by end-of-string)"]));e+=1;}else if(c=
    B(c))d=c,Vf(d)?(c=qe(d),e=re(d),d=c,b=F(c),c=e):(c=C(d),$L(c),rl(G([" (followed by end-of-string)"])),c=D(d),d=null,b=0),e=0;else break;a=B(a);c=null;for(e=b=0;;)if(e<b)d=c.W(null,e),$L(d),ql(),e+=1;else if(a=B(a))c=a,Vf(c)?(a=qe(c),b=re(c),c=a,d=F(a),a=b,b=d):(d=C(c),$L(d),ql(),a=D(c),c=null,b=0),e=0;else break}function bM(a){throw eh(q,a);}function cM(a){throw eh(q,a);}function dM(a){var b=p(a.ignoreCase)?"i":"";b=p(a.multiline)?[b,"m"].join(""):b;return p(a.unicode)?[b,"u"].join(""):b}function eM(a){return B(a)&&Sc(D(a))}function fM(a){return K.hh(a,Du,gM)}var gM=new n(null,1,[jy,Nt],null),hM=new n(null,2,[yC,function(a){return new n(null,2,[jy,yC,GI,a],null)},BA,function(a){return new n(null,2,[jy,BA,GI,a],null)}],null),iM=new n(null,2,[BA,function(a,b){return new n(null,2,[X,a,oE,new Cf(null,b,null,1,null)],null)},yC,function(a,b){return new Q(null,2,5,R,[a,b],null)}],null);
    function jM(a,b){var c=jy.m(a);switch(c instanceof z?c.da:null){case "raw":return CL.Qc(null,b);case "hiccup":return IL(EL(new Q(null,1,5,R,[GI.m(a)],null)).Qc(null,b));case "enlive":return b=CL.Qc(null,b),new n(null,2,[X,GI.m(a),oE,0===F(b)?null:b],null);default:return a.m?a.m(b):a.call(null,b)}}
    function kM(a,b){var c=hM.m?hM.m(a):hM.call(null,a);return p(c)?ii.gh(S,function(){return function f(e){return new Lg(null,function(){for(;;){var k=B(e);if(k){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t),y=J(v,0,null);v=J(v,1,null);y=p(Du.m(v))?new Q(null,2,5,R,[y,v],null):new Q(null,2,5,R,[y,K.hh(v,Du,c.m?c.m(y):c.call(null,y))],null);r.add(y);t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return uf(p(Du.m(l))?new Q(null,
    2,5,R,[r,l],null):new Q(null,2,5,R,[r,K.hh(l,Du,c.m?c.m(r):c.call(null,r))],null),f(Qe(k)))}return null}},null,null)}(b)}()):cM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}var lM=new n(null,1,[X,uA],null);function mM(a){return A.gh(a,lM)?lM:new n(null,2,[X,dJ,qv,a],null)}function nM(a){return A.gh(a,lM)?lM:new n(null,2,[X,dq,qv,a],null)}function oM(a){return A.gh(a,lM)?lM:new n(null,2,[X,RC,qv,a],null)}function pM(a,b,c){return A.gh(c,lM)?lM:new n(null,4,[X,Gu,qv,c,lx,a,Xv,b],null)}var qM=function qM(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return qM.g(0<c.length?new Pe(c.slice(0),0,null):null)};
    qM.g=function(a){return Ch(Ih(A,lM),a)?lM:eM(a)?C(a):new n(null,2,[X,rC,zn,a],null)};qM.F=0;qM.G=function(a){return this.g(B(a))};var rM=function rM(a){switch(arguments.length){case 0:return rM.o();default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return rM.g(arguments[0],new Pe(c.slice(1),0,null))}};rM.o=function(){return lM};rM.g=function(a,b){b=A.gh(a,lM)?fi.gh(Dk([lM]),b):b;B(b)&&(b=eh(rM,b),a=new n(null,3,[X,uJ,Vn,a,Tn,b],null));return a};
    rM.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};rM.F=1;var sM=function sM(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return sM.g(0<c.length?new Pe(c.slice(0),0,null):null)};sM.g=function(a){if(Ch(Ih(A,lM),a))return lM;a=fi.gh(Dk([lM]),a);return eM(a)?C(a):new n(null,2,[X,mF,zn,a],null)};sM.F=0;sM.G=function(a){return this.g(B(a))};function tM(a){return A.gh(a,"")?lM:new n(null,2,[X,vn,vn,a],null)}
    function uM(a){return A.gh(a,"")?lM:new n(null,2,[X,tC,vn,a],null)}function vM(a,b){return new n(null,3,[X,jG,Vy,a,sJ,b],null)}function wM(a){A.gh(a,"")?a=lM:(a=Yk(a),a=a instanceof RegExp?new RegExp(["^",q.m(a.source)].join(""),dM(a)):a,a=new n(null,2,[X,Ct,Ct,a],null));return a}function xM(a){return new n(null,2,[X,wy,zJ,a],null)}function yM(a){return new n(null,2,[X,lA,qv,a],null)}function zM(a){return new n(null,2,[X,nC,qv,a],null)}function AM(a){return K.hh(a,ls,!0)}
    var BM=function BM(a){var c=p(ls.m(a))?Gf.gh(a,ls):a;return p(qv.m(c))?K.hh(c,qv,function(){var d=qv.m(c);return BM.m?BM.m(d):BM.call(null,d)}()):p(zn.m(c))?K.hh(c,zn,Vh.gh(BM,zn.m(c))):A.gh(X.m(c),uJ)?K.g(c,Vn,function(){var d=Vn.m(c);return BM.m?BM.m(d):BM.call(null,d)}(),G([Tn,function(){var d=Tn.m(c);return BM.m?BM.m(d):BM.call(null,d)}()])):c};
    function CM(a){return ii.gh(S,function(){return function d(c){return new Lg(null,function(){for(;;){var e=B(c);if(e){if(Vf(e)){var f=qe(e),k=F(f),l=Pg(k);a:for(var m=0;;)if(m<k){var r=pd(f,m),t=J(r,0,null);r=J(r,1,null);t=new Q(null,2,5,R,[t,BM(r)],null);l.add(t);m+=1;}else {f=!0;break a}return f?Rg(Tg(l),d(re(e))):Rg(Tg(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);return uf(new Q(null,2,5,R,[l,BM(f)],null),d(Qe(e)))}return null}},null,null)}(a)}())}
    function DM(a,b){var c=hM.m?hM.m(a):hM.call(null,a);return p(c)?ii.gh(S,function(){return function f(e){return new Lg(null,function(){for(;;){var k=B(e);if(k){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t),y=J(v,0,null);v=J(v,1,null);y=new Q(null,2,5,R,[y,K.hh(v,Du,c.m?c.m(y):c.call(null,y))],null);r.add(y);t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return uf(new Q(null,2,5,R,[r,K.hh(l,Du,c.m?c.m(r):c.call(null,
    r))],null),f(Qe(k)))}return null}},null,null)}(b)}()):cM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}
    function EM(a,b){var c=hM.m?hM.m(a):hM.call(null,a);return p(c)?ii.gh(S,function(){return function f(e){return new Lg(null,function(){for(;;){var k=B(e);if(k){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t),y=J(v,0,null);v=J(v,1,null);y=new Q(null,2,5,R,[y,K.hh(BM(v),Du,c.m?c.m(y):c.call(null,y))],null);r.add(y);t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}l=C(k);r=J(l,0,null);l=J(l,1,null);return uf(new Q(null,2,5,R,[r,K.hh(BM(l),Du,c.m?c.m(r):c.call(null,
    r))],null),f(Qe(k)))}return null}},null,null)}(b)}()):cM(G(["Invalid output format ",a,". Use :enlive or :hiccup."]))}
    var FM=function FM(a,b){var d=X.m(a);d=d instanceof z?d.da:null;switch(d){case "nt":case "epsilon":return a;case "opt":case "plus":case "star":case "rep":case "look":case "neg":return ni.A(a,new Q(null,1,5,R,[qv],null),FM,b);case "alt":case "cat":return K.hh(a,zn,Vh.gh(function(e){return FM.gh?FM.gh(e,b):FM.call(null,e,b)},zn.m(a)));case "ord":return K.g(a,Vn,function(){var e=Vn.m(a);return FM.gh?FM.gh(e,b):FM.call(null,e,b)}(),G([Tn,function(){var e=Tn.m(a);return FM.gh?FM.gh(e,b):FM.call(null,e,
    b)}()]));case "string":case "string-ci":case "regexp":return p(Du.m(a))?K.hh(sM.g(G([b,Gf.gh(a,Du)])),Du,Du.m(a)):sM.g(G([b,a]));default:throw Error(["No matching clause: ",q.m(d)].join(""));}};
    function GM(a,b,c,d){var e=AM(mM(xM(d)));c=K.hh(c,d,fM(c.m?c.m(d):c.call(null,d)));d=ii.gh(S,function(){return function l(k){return new Lg(null,function(){for(;;){var m=B(k);if(m){if(Vf(m)){var r=qe(m),t=F(r),v=Pg(t);a:for(var y=0;;)if(y<t){var E=pd(r,y),H=J(E,0,null);E=J(E,1,null);H=new Q(null,2,5,R,[H,FM(E,e)],null);v.add(H);y+=1;}else {r=!0;break a}return r?Rg(Tg(v),l(re(m))):Rg(Tg(v),null)}r=C(m);v=J(r,0,null);r=J(r,1,null);return uf(new Q(null,2,5,R,[v,FM(r,e)],null),l(Qe(m)))}return null}},null,
    null)}(a)}());b=K.hh(d,b,K.hh(sM.g(G([Gf.gh(d.m?d.m(b):d.call(null,b),Du),e])),Du,Du.m(d.m?d.m(b):d.call(null,b))));return vk.g(G([b,c]))}function HM(a){if(null==a||!(0<=a&&1114111>=a))return null;if(65536<=a&&1114111>=a){const b=(a&1023)+56320;return String.fromCharCode((a>>10)+55232)+String.fromCharCode(b)}return String.fromCharCode(a)}
    function IM(a,b){const c=a.charCodeAt(b);if(55296<=c&&56319>=c&&b+1<a.length){if(a=a.charCodeAt(b+1),56320<=a&&57343>=a)return 55296<=c&&56319>=c&&56320<=a&&57343>=a?(c<<10)-56623104+(a-56320+65536):null}else if(56320<=c&&57343>=c&&0<b&&(a=a.charCodeAt(b-1),55296<=a&&56319>=a))return -(55296<=a&&56319>=a&&56320<=c&&57343>=c?(a<<10)-56623104+(c-56320+65536):0);return c}function JM(a,b,c){var d=X.m(a);d=d instanceof z?d.da:null;switch(d){case "nt":return KM.hh?KM.hh(a,b,c):KM.call(null,a,b,c);case "alt":return LM.hh?LM.hh(a,b,c):LM.call(null,a,b,c);case "cat":return MM.hh?MM.hh(a,b,c):MM.call(null,a,b,c);case "string":return NM.hh?NM.hh(a,b,c):NM.call(null,a,b,c);case "string-ci":return OM.hh?OM.hh(a,b,c):OM.call(null,a,b,c);case "char":return PM.hh?PM.hh(a,b,c):PM.call(null,a,b,c);case "epsilon":return QM.hh?QM.hh(a,b,c):QM.call(null,a,b,c);case "opt":return RM.hh?
    RM.hh(a,b,c):RM.call(null,a,b,c);case "plus":return SM.hh?SM.hh(a,b,c):SM.call(null,a,b,c);case "rep":return TM.hh?TM.hh(a,b,c):TM.call(null,a,b,c);case "star":return UM.hh?UM.hh(a,b,c):UM.call(null,a,b,c);case "regexp":return VM.hh?VM.hh(a,b,c):VM.call(null,a,b,c);case "look":return WM.hh?WM.hh(a,b,c):WM.call(null,a,b,c);case "neg":return XM.hh?XM.hh(a,b,c):XM.call(null,a,b,c);case "ord":return YM.hh?YM.hh(a,b,c):YM.call(null,a,b,c);default:throw Error(["No matching clause: ",q.m(d)].join(""));}}
    function ZM(a,b,c){var d=X.m(a);d=d instanceof z?d.da:null;switch(d){case "nt":return $M.hh?$M.hh(a,b,c):$M.call(null,a,b,c);case "alt":return aN.hh?aN.hh(a,b,c):aN.call(null,a,b,c);case "cat":return bN.hh?bN.hh(a,b,c):bN.call(null,a,b,c);case "string":return cN.hh?cN.hh(a,b,c):cN.call(null,a,b,c);case "string-ci":return dN.hh?dN.hh(a,b,c):dN.call(null,a,b,c);case "char":return eN.hh?eN.hh(a,b,c):eN.call(null,a,b,c);case "epsilon":return fN.hh?fN.hh(a,b,c):fN.call(null,a,b,c);case "opt":return gN.hh?
    gN.hh(a,b,c):gN.call(null,a,b,c);case "plus":return hN.hh?hN.hh(a,b,c):hN.call(null,a,b,c);case "rep":return iN.hh?iN.hh(a,b,c):iN.call(null,a,b,c);case "star":return jN.hh?jN.hh(a,b,c):jN.call(null,a,b,c);case "regexp":return kN.hh?kN.hh(a,b,c):kN.call(null,a,b,c);case "look":return lN.hh?lN.hh(a,b,c):lN.call(null,a,b,c);case "neg":return XM.hh?XM.hh(a,b,c):XM.call(null,a,b,c);case "ord":return mN.hh?mN.hh(a,b,c):mN.call(null,a,b,c);default:throw Error(["No matching clause: ",q.m(d)].join(""));}}
    function nN(a,b,c,d,e){this.index=a;this.reason=b;this.$=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=nN.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "index":return this.index;case "reason":return this.reason;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#instaparse.gll.Failure{",", ","}",c,Wg.gh(new Q(null,2,5,R,[new Q(null,2,5,R,[xH,this.index],null),new Q(null,2,5,R,[eJ,this.reason],null)],null),this.j))};g.ua=function(){return new fj(this,2,new Q(null,2,5,R,[xH,eJ],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1140991288^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.index,b.index)&&A.gh(this.reason,b.reason)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,2,[xH,null,eJ,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new nN(this.index,this.reason,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "index":case "reason":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(xH,b):P.call(null,xH,b))?new nN(c,this.reason,this.$,this.j,null):p(P.gh?P.gh(eJ,b):P.call(null,eJ,b))?new nN(this.index,c,this.$,this.j,null):new nN(this.index,this.reason,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,2,5,R,[new Fi(xH,this.index),new Fi(eJ,this.reason)],null),this.j))};g.O=function(a,b){return new nN(this.index,this.reason,b,this.j,this.B)};
    g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};g.ma=h;g.S=function(a,b){var c=this;return be(b,function(){var d=new yc,e=Ec,f=Dc;Ec=!0;Dc=function(k){return d.append(k)};try{aM(c);}finally{Dc=f,Ec=e;}return q.m(d)}())};var oN=Xc(new nN(null,null,null,null,null));
    function pN(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){this.qa=a;this.text=b;this.Ua=c;this.Ma=d;this.Ta=e;this.stack=f;this.Sa=k;this.Oa=l;this.Ra=m;this.Qa=r;this.sa=t;this.Va=v;this.Na=y;this.Wa=E;this.$=H;this.j=T;this.B=Y;this.h=2230716170;this.I=139264;}g=pN.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "grammar":return this.qa;case "text":return this.text;case "segment":return this.Ua;case "fail-index":return this.Ma;case "node-builder":return this.Ta;case "stack":return this.stack;case "next-stack":return this.Sa;case "generation":return this.Oa;case "negative-listeners":return this.Ra;case "msg-cache":return this.Qa;case "nodes":return this.sa;case "success":return this.Va;case "failure":return this.Na;case "trace?":return this.Wa;default:return x.hh(this.j,
    b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#instaparse.gll.Tramp{",", ","}",c,Wg.gh(new Q(null,14,5,R,[new Q(null,2,5,R,[so,this.qa],null),new Q(null,2,5,R,[VD,this.text],null),new Q(null,2,5,R,[Mv,this.Ua],null),new Q(null,2,5,R,[CB,this.Ma],null),new Q(null,2,5,R,[oq,this.Ta],null),new Q(null,2,5,R,[wC,this.stack],null),new Q(null,2,5,R,[kw,this.Sa],null),new Q(null,2,5,R,[qD,this.Oa],null),new Q(null,2,5,R,[HG,this.Ra],null),new Q(null,2,5,R,[As,this.Qa],null),
    new Q(null,2,5,R,[gA,this.sa],null),new Q(null,2,5,R,[mz,this.Va],null),new Q(null,2,5,R,[fC,this.Na],null),new Q(null,2,5,R,[Jn,this.Wa],null)],null),this.j))};g.ua=function(){return new fj(this,14,new Q(null,14,5,R,[so,VD,Mv,CB,oq,wC,kw,qD,HG,As,gA,mz,fC,Jn],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 14+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=166878148^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.qa,b.qa)&&A.gh(this.text,b.text)&&A.gh(this.Ua,b.Ua)&&A.gh(this.Ma,b.Ma)&&A.gh(this.Ta,b.Ta)&&A.gh(this.stack,b.stack)&&A.gh(this.Sa,b.Sa)&&A.gh(this.Oa,b.Oa)&&A.gh(this.Ra,b.Ra)&&A.gh(this.Qa,b.Qa)&&A.gh(this.sa,b.sa)&&A.gh(this.Va,b.Va)&&A.gh(this.Na,b.Na)&&A.gh(this.Wa,b.Wa)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,14,[As,null,HG,null,qD,null,fC,null,CB,null,so,null,mz,null,gA,null,oq,null,Mv,null,wC,null,Jn,null,kw,null,VD,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "grammar":case "text":case "segment":case "fail-index":case "node-builder":case "stack":case "next-stack":case "generation":case "negative-listeners":case "msg-cache":case "nodes":case "success":case "failure":case "trace?":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(so,b):P.call(null,so,b))?new pN(c,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(VD,b):P.call(null,VD,b))?new pN(this.qa,c,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(Mv,b):P.call(null,Mv,b))?new pN(this.qa,this.text,c,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,
    this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(CB,b):P.call(null,CB,b))?new pN(this.qa,this.text,this.Ua,c,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(oq,b):P.call(null,oq,b))?new pN(this.qa,this.text,this.Ua,this.Ma,c,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(wC,b):P.call(null,wC,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,c,this.Sa,this.Oa,this.Ra,
    this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(kw,b):P.call(null,kw,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,c,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(qD,b):P.call(null,qD,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,c,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(HG,b):P.call(null,HG,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,
    this.Sa,this.Oa,c,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(As,b):P.call(null,As,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,c,this.sa,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(gA,b):P.call(null,gA,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,c,this.Va,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(mz,b):P.call(null,mz,b))?new pN(this.qa,this.text,this.Ua,this.Ma,
    this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,c,this.Na,this.Wa,this.$,this.j,null):p(P.gh?P.gh(fC,b):P.call(null,fC,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,c,this.Wa,this.$,this.j,null):p(P.gh?P.gh(Jn,b):P.call(null,Jn,b))?new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,c,this.$,this.j,null):new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,
    this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,14,5,R,[new Fi(so,this.qa),new Fi(VD,this.text),new Fi(Mv,this.Ua),new Fi(CB,this.Ma),new Fi(oq,this.Ta),new Fi(wC,this.stack),new Fi(kw,this.Sa),new Fi(qD,this.Oa),new Fi(HG,this.Ra),new Fi(As,this.Qa),new Fi(gA,this.sa),new Fi(mz,this.Va),new Fi(fC,this.Na),new Fi(Jn,this.Wa)],null),this.j))};
    g.O=function(a,b){return new pN(this.qa,this.text,this.Ua,this.Ma,this.Ta,this.stack,this.Sa,this.Oa,this.Ra,this.Qa,this.sa,this.Va,this.Na,this.Wa,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function qN(a,b,c,d,e){return new pN(a,b,c,d,e,Nh(I),Nh(I),Nh(0),Nh(sk(pg)),Nh(S),Nh(S),Nh(null),Nh(new nN(0,I,null,null,null)),!1,null,null,null)}function rN(a,b){return new n(null,2,[Nu,a,xH,b],null)}function sN(a,b){return A.gh(F(VD.m(a)),xH.m(b))}
    function tN(a,b,c,d,e,f,k){this.kc=a;this.cc=b;this.results=c;this.dc=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=tN.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "listeners":return this.kc;case "full-listeners":return this.cc;case "results":return this.results;case "full-results":return this.dc;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#instaparse.gll.Node{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[fE,this.kc],null),new Q(null,2,5,R,[ty,this.cc],null),new Q(null,2,5,R,[oJ,this.results],null),new Q(null,2,5,R,[gs,this.dc],null)],null),this.j))};
    g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[fE,ty,oJ,gs],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1610074144^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.kc,b.kc)&&A.gh(this.cc,b.cc)&&A.gh(this.results,b.results)&&A.gh(this.dc,b.dc)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[gs,null,ty,null,fE,null,oJ,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new tN(this.kc,this.cc,this.results,this.dc,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "listeners":case "full-listeners":case "results":case "full-results":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(fE,b):P.call(null,fE,b))?new tN(c,this.cc,this.results,this.dc,this.$,this.j,null):p(P.gh?P.gh(ty,b):P.call(null,ty,b))?new tN(this.kc,c,this.results,this.dc,this.$,this.j,null):p(P.gh?P.gh(oJ,b):P.call(null,oJ,b))?new tN(this.kc,this.cc,c,this.dc,this.$,this.j,null):p(P.gh?P.gh(gs,b):P.call(null,gs,b))?new tN(this.kc,this.cc,this.results,c,this.$,this.j,null):new tN(this.kc,this.cc,this.results,this.dc,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(fE,this.kc),new Fi(ty,this.cc),new Fi(oJ,this.results),new Fi(gs,this.dc)],null),this.j))};g.O=function(a,b){return new tN(this.kc,this.cc,this.results,this.dc,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function uN(a,b){return Qh.hh(wC.m(a),Bf,b)}
    function vN(a,b,c){function d(){return b.m?b.m(c):b.call(null,c)}var e=As.m(a),f=xH.m(c);f=new Q(null,2,5,R,[b,f],null);var k=x.hh(u(e),f,0);k>u(qD.m(a))?Qh.hh(kw.m(a),Bf,d):Qh.hh(wC.m(a),Bf,d);Qh.A(e,K,f,k+1);}function wN(a,b){a=gA.m(a);a=u(a);b=a.m?a.m(b):a.call(null,b);return p(b)?0<F(u(fE.m(b))):null}function xN(a,b){a=gA.m(a);a=u(a);b=a.m?a.m(b):a.call(null,b);return p(b)?0<F(u(ty.m(b)))||0<F(u(fE.m(b))):null}
    function yN(a,b){a=gA.m(a);a=u(a);b=a.m?a.m(b):a.call(null,b);return p(b)?0<F(u(gs.m(b)))||0<F(u(oJ.m(b))):null}function zN(a,b){a=gA.m(a);var c=u(a);c=c.m?c.m(b):c.call(null,b);p(c)||(c=new tN(Nh(I),Nh(I),Nh(Ck),Nh(Ck),null,null,null),Qh.A(a,K,b,c));return c}function AN(a,b){return (null!=a?a.h&262144||h===a.He||(a.h?0:Wc(Nd,a)):Wc(Nd,a))?Jf(a,b):a}
    function BN(a,b,c){var d=zN(a,b),e=b.m?b.m(1):b.call(null,1),f=p(ls.m(e))?K.hh(c,Nu,null):c,k=function(){var E=Du.m(e);return p(E)?rN(AN(jM(E,Nu.m(f)),new n(null,2,[Tv,b.m?b.m(0):b.call(null,0),ep,xH.m(f)],null)),xH.m(f)):f}(),l=(c=sN(a,k))?gs.m(d):oJ.m(d);if(Sc(function(){var E=u(l);return E.m?E.m(k):E.call(null,k)}())){Qh.hh(l,Bf,k);for(var m=B(u(fE.m(d))),r=null,t=0,v=0;;)if(v<t){var y=r.W(null,v);vN(a,y,k);v+=1;}else if(m=B(m))r=m,Vf(r)?(m=qe(r),v=re(r),r=m,t=F(m),m=v):(m=C(r),vN(a,m,k),m=D(r),
    r=null,t=0),v=0;else break;if(c)for(d=B(u(ty.m(d))),c=null,t=r=0;;)if(t<r)m=c.W(null,t),vN(a,m,k),t+=1;else if(d=B(d))c=d,Vf(c)?(d=qe(c),r=re(c),c=d,m=F(d),d=r,r=m):(m=C(c),vN(a,m,k),d=D(c),c=null,r=0),t=0;else return null;else return null}else return null}
    function CN(a,b,c){var d=wN(a,b),e=zN(a,b),f=fE.m(e);Qh.hh(f,Bf,c);f=B(u(oJ.m(e)));for(var k=null,l=0,m=0;;)if(m<l){var r=k.W(null,m);vN(a,c,r);m+=1;}else if(f=B(f))k=f,Vf(k)?(f=qe(k),m=re(k),k=f,l=F(f),f=m):(f=C(k),vN(a,c,f),f=D(k),k=null,l=0),m=0;else break;e=B(u(gs.m(e)));f=null;for(l=k=0;;)if(l<k)m=f.W(null,l),vN(a,c,m),l+=1;else if(e=B(e))f=e,Vf(f)?(e=qe(f),l=re(f),f=e,k=F(e),e=l):(e=C(f),vN(a,c,e),e=D(f),f=null,k=0),l=0;else break;return Sc(d)?uN(a,function(){return JM(b.m?b.m(1):b.call(null,
    1),b.m?b.m(0):b.call(null,0),a)}):null}function DN(a,b,c){var d=xN(a,b),e=zN(a,b),f=ty.m(e);Qh.hh(f,Bf,c);e=B(u(gs.m(e)));f=null;for(var k=0,l=0;;)if(l<k){var m=f.W(null,l);vN(a,c,m);l+=1;}else if(e=B(e))f=e,Vf(f)?(e=qe(f),l=re(f),f=e,k=F(e),e=l):(e=C(f),vN(a,c,e),e=D(f),f=null,k=0),l=0;else break;return Sc(d)?uN(a,function(){return ZM(b.m?b.m(1):b.call(null,1),b.m?b.m(0):b.call(null,0),a)}):null}var EN=Ih(wk,ii);
    function FN(a,b,c){return Qh.hh(HG.m(a),EN,Ff([b.m?b.m(0):b.call(null,0),new Q(null,1,5,R,[c],null)]))}
    function GN(a,b,c,d){Qh.gh(fC.m(a),function(e){var f=xH.m(e);f=cg(c,f);switch(f){case 1:return new nN(c,new Q(null,1,5,R,[d],null),null,null,null);case 0:return new nN(c,Bf.gh(eJ.m(e),d),null,null,null);case -1:return e;default:throw Error(["No matching clause: ",q.m(f)].join(""));}});return A.gh(c,CB.m(a))?BN(a,b,rN(function(){var e=oq.m(a);var f=VD.m(a);f=zg?f.substring(c):yg.call(null,f,c);var k=F(VD.m(a));return HN.K?HN.K(e,Zp,f,c,k):HN.call(null,e,Zp,f,c,k)}(),F(VD.m(a)))):null}
    function IN(a){var b=Lf(u(a));Qh.gh(a,Mf);b.o?b.o():b.call(null);}
    function JN(a,b){for(;;){var c=wC.m(a);if(p(u(mz.m(a))))return uf(Nu.m(u(mz.m(a))),new Lg(null,function(f){return function(){Oh(mz.m(f),null);return JN(f,!0)}}(a),null,null));if(0<F(u(c)))IN(c);else if(0<F(u(HG.m(a)))){var d=C(u(HG.m(a)));c=J(d,0,null);d=J(d,1,null);var e=Lf(d);e.o?e.o():e.call(null);A.gh(F(d),1)?Qh.hh(HG.m(a),Gf,c):Qh.A(HG.m(a),ni,new Q(null,1,5,R,[c],null),Mf);}else if(p(b))b=kw.m(a),Oh(c,u(b)),Oh(b,I),Qh.gh(qD.m(a),Ze),b=null;else return null}}
    function KN(a,b){return function(c){return BN(b,a,c)}}function LN(a,b){return function(){return BN(b,a,rN(null,a.m?a.m(0):a.call(null,0)))}}
    var MN=function MN(a,b,c,d){return function(f){var k=Ea(f);f=x.gh(k,Nu);k=x.gh(k,xH);f=wL(a,f);if(B(b)){k=new Q(null,2,5,R,[k,C(b)],null);var l=D(b);f=MN.A?MN.A(f,l,c,d):MN.call(null,f,l,c,d);f=CN(d,k,f);}else f=BN(d,c,rN(f,k));return f}},NN=function NN(a,b,c,d){return function(f){var k=Ea(f);f=x.gh(k,Nu);k=x.gh(k,xH);var l=wL(a,f);return eM(b)?DN(d,new Q(null,2,5,R,[k,C(b)],null),function(){var m=D(b);return NN.A?NN.A(l,m,c,d):NN.call(null,l,m,c,d)}()):B(b)?CN(d,new Q(null,2,5,R,[k,C(b)],null),function(){var m=
    D(b);return NN.A?NN.A(l,m,c,d):NN.call(null,l,m,c,d)}()):BN(d,c,rN(l,k))}},ON=function ON(a,b,c,d,e){return function(k){var l=Ea(k);k=x.gh(l,Nu);l=x.gh(l,xH);if(A.gh(l,c))return 0===F(a)?BN(e,d,rN(null,l)):null;k=wL(a,k);CN(e,new Q(null,2,5,R,[l,b],null),ON.K?ON.K(k,b,l,d,e):ON.call(null,k,b,l,d,e));return BN(e,d,rN(k,l))}},PN=function PN(a,b,c,d,e){return function(k){var l=Ea(k);k=x.gh(l,Nu);l=x.gh(l,xH);if(A.gh(l,c))return 0===F(a)?BN(e,d,rN(null,l)):null;k=wL(a,k);return A.gh(l,F(VD.m(e)))?BN(e,
    d,rN(k,l)):CN(e,new Q(null,2,5,R,[l,b],null),PN.K?PN.K(k,b,l,d,e):PN.call(null,k,b,l,d,e))}},QN=function QN(a,b,c,d,e,f,k,l){return function(r){r=Ea(r);var t=x.gh(r,Nu);r=x.gh(r,xH);t=wL(a,t);var v=b+1;d<=v&&v<=e&&BN(l,k,rN(t,r));return v<e?CN(l,new Q(null,2,5,R,[r,c],null),QN.Ga?QN.Ga(t,v,c,d,e,r,k,l):QN.call(null,t,v,c,d,e,r,k,l)):null}},RN=function RN(a,b,c,d,e,f,k,l){return function(r){r=Ea(r);var t=x.gh(r,Nu);r=x.gh(r,xH);t=wL(a,t);var v=b+1;return A.gh(r,F(VD.m(l)))?d<=v&&v<=e?BN(l,k,rN(t,r)):
    null:v<e?CN(l,new Q(null,2,5,R,[r,c],null),RN.Ga?RN.Ga(t,v,c,d,e,r,k,l):RN.call(null,t,v,c,d,e,r,k,l)):null}};function SN(a){return function(b){return Oh(mz.m(a),b)}}function NM(a,b,c){var d=vn.m(a),e=VD.m(c);var f=F(e);var k=b+F(d);f=f<k?f:k;e=Ag?e.substring(b,f):yg.call(null,e,b,f);return A.gh(d,e)?BN(c,new Q(null,2,5,R,[b,a],null),rN(d,f)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,vn,yA,d],null))}
    function cN(a,b,c){var d=vn.m(a),e=VD.m(c);var f=F(e);var k=b+F(d);f=f<k?f:k;k=Ag?e.substring(b,f):yg.call(null,e,b,f);return A.gh(f,F(e))&&A.gh(d,k)?BN(c,new Q(null,2,5,R,[b,a],null),rN(d,f)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,vn,yA,d,KH,!0],null))}
    function OM(a,b,c){var d=vn.m(a),e=VD.m(c);var f=F(e);var k=b+F(d);f=f<k?f:k;e=Ag?e.substring(b,f):yg.call(null,e,b,f);return A.gh(d.toUpperCase(),e.toUpperCase())?BN(c,new Q(null,2,5,R,[b,a],null),rN(d,f)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,vn,yA,d],null))}
    function dN(a,b,c){var d=vn.m(a),e=VD.m(c);var f=F(e);var k=b+F(d);f=f<k?f:k;k=Ag?e.substring(b,f):yg.call(null,e,b,f);return A.gh(f,F(e))&&A.gh(d.toUpperCase(),k.toUpperCase())?BN(c,new Q(null,2,5,R,[b,a],null),rN(d,f)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,vn,yA,d,KH,!0],null))}
    function PM(a,b,c){var d=Vy.m(a),e=sJ.m(a),f=VD.m(c);if(b>=F(f))return GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null)],null));if(65535>=e)return f=f.charCodeAt(b),d<=f&&f<=e?BN(c,new Q(null,2,5,R,[b,a],null),rN(q.m(qg(f)),b+1)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null)],null));f=IM(f,b|0);var k=HM(f);return d<=f&&f<=e?BN(c,new Q(null,2,5,R,[b,a],null),rN(k,b+F(k))):GN(c,new Q(null,2,5,R,[b,a],null),
    b,new n(null,2,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null)],null))}
    function eN(a,b,c){var d=Vy.m(a),e=sJ.m(a),f=VD.m(c),k=F(f);if(b>=F(f))return GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null)],null));if(65535>=e)return f=f.charCodeAt(b),A.gh(b+1,k)&&d<=f&&f<=e?BN(c,new Q(null,2,5,R,[b,a],null),rN(q.m(qg(f)),k)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null)],null));f=IM(f,b|0);var l=HM(f);return A.gh(b+F(l),k)&&d<=f&&f<=e?BN(c,new Q(null,2,5,R,[b,a],null),rN(l,k)):GN(c,
    new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,jG,yA,new n(null,3,[wu,!0,Vy,d,sJ,e],null),KH,!0],null))}function TN(a,b){a=(new RegExp(a.source,["g",dM(a)].join(""))).exec(b);return p(p(a)?0===a.index:a)?C(a):null}function VM(a,b,c){var d=Ct.m(a),e=Mv.m(c);e=zg?e.substring(b):yg.call(null,e,b);e=TN(d,e);return p(e)?BN(c,new Q(null,2,5,R,[b,a],null),rN(e,b+F(e))):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Ct,yA,d],null))}
    function kN(a,b,c){var d=Ct.m(a),e=Mv.m(c),f=zg?e.substring(b):yg.call(null,e,b);f=TN(d,f);var k=F(e)-b;return p(p(f)?A.gh(F(f),k):f)?BN(c,new Q(null,2,5,R,[b,a],null),rN(f,F(e))):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,3,[X,Ct,yA,d,KH,!0],null))}function MM(a,b,c){var d=zn.m(a);return CN(c,new Q(null,2,5,R,[b,C(d)],null),MN(CL,D(d),new Q(null,2,5,R,[b,a],null),c))}function bN(a,b,c){var d=zn.m(a);return CN(c,new Q(null,2,5,R,[b,C(d)],null),NN(CL,D(d),new Q(null,2,5,R,[b,a],null),c))}
    function SM(a,b,c){var d=qv.m(a);return CN(c,new Q(null,2,5,R,[b,d],null),ON(CL,d,b,new Q(null,2,5,R,[b,a],null),c))}function hN(a,b,c){var d=qv.m(a);return CN(c,new Q(null,2,5,R,[b,d],null),PN(CL,d,b,new Q(null,2,5,R,[b,a],null),c))}
    function TM(a,b,c){var d=qv.m(a),e=lx.m(a),f=Xv.m(a);return 0===e?(BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)),1<=f?CN(c,new Q(null,2,5,R,[b,d],null),QN(CL,0,d,1,f,b,new Q(null,2,5,R,[b,a],null),c)):null):CN(c,new Q(null,2,5,R,[b,d],null),QN(CL,0,d,e,f,b,new Q(null,2,5,R,[b,a],null),c))}
    function iN(a,b,c){var d=qv.m(a),e=lx.m(a),f=Xv.m(a);return 0===e?(BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)),1<=f?CN(c,new Q(null,2,5,R,[b,d],null),RN(CL,0,d,1,f,b,new Q(null,2,5,R,[b,a],null),c)):null):CN(c,new Q(null,2,5,R,[b,d],null),RN(CL,0,d,e,f,b,new Q(null,2,5,R,[b,a],null),c))}function UM(a,b,c){var d=qv.m(a);CN(c,new Q(null,2,5,R,[b,d],null),ON(CL,d,b,new Q(null,2,5,R,[b,a],null),c));return BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b))}
    function jN(a,b,c){var d=qv.m(a);return A.gh(b,F(VD.m(c)))?BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)):CN(c,new Q(null,2,5,R,[b,d],null),PN(CL,d,b,new Q(null,2,5,R,[b,a],null),c))}
    function LM(a,b,c){var d=zn.m(a);d=B(d);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k);CN(c,new Q(null,2,5,R,[b,l],null),KN(new Q(null,2,5,R,[b,a],null),c));k+=1;}else if(d=B(d))e=d,Vf(e)?(d=qe(e),f=re(e),e=d,l=F(d),d=f,f=l):(l=C(e),CN(c,new Q(null,2,5,R,[b,l],null),KN(new Q(null,2,5,R,[b,a],null),c)),d=D(e),e=null,f=0),k=0;else return null}
    function aN(a,b,c){var d=zn.m(a);d=B(d);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k);DN(c,new Q(null,2,5,R,[b,l],null),KN(new Q(null,2,5,R,[b,a],null),c));k+=1;}else if(d=B(d))e=d,Vf(e)?(d=qe(e),f=re(e),e=d,l=F(d),d=f,f=l):(l=C(e),DN(c,new Q(null,2,5,R,[b,l],null),KN(new Q(null,2,5,R,[b,a],null),c)),d=D(e),e=null,f=0),k=0;else return null}
    function YM(a,b,c){var d=Vn.m(a),e=Tn.m(a);d=new Q(null,2,5,R,[b,d],null);var f=new Q(null,2,5,R,[b,e],null),k=KN(new Q(null,2,5,R,[b,a],null),c);CN(c,d,k);return FN(c,d,function(){return CN(c,f,k)})}function mN(a,b,c){var d=Vn.m(a),e=Tn.m(a);d=new Q(null,2,5,R,[b,d],null);var f=new Q(null,2,5,R,[b,e],null),k=KN(new Q(null,2,5,R,[b,a],null),c);DN(c,d,k);return FN(c,d,function(){return DN(c,f,k)})}
    function RM(a,b,c){var d=qv.m(a);CN(c,new Q(null,2,5,R,[b,d],null),KN(new Q(null,2,5,R,[b,a],null),c));return BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b))}function gN(a,b,c){var d=qv.m(a);DN(c,new Q(null,2,5,R,[b,d],null),KN(new Q(null,2,5,R,[b,a],null),c));return A.gh(b,F(VD.m(c)))?BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Jp,yA,io],null))}
    function KM(a,b,c){var d=so.m(c);var e=zJ.m(a);d=x.hh(d,e,e);return CN(c,new Q(null,2,5,R,[b,d],null),KN(new Q(null,2,5,R,[b,a],null),c))}function $M(a,b,c){var d=so.m(c);var e=zJ.m(a);d=x.hh(d,e,e);return DN(c,new Q(null,2,5,R,[b,d],null),KN(new Q(null,2,5,R,[b,a],null),c))}function WM(a,b,c){var d=qv.m(a);return CN(c,new Q(null,2,5,R,[b,d],null),LN(new Q(null,2,5,R,[b,a],null),c))}
    function lN(a,b,c){return A.gh(b,F(VD.m(c)))?WM(a,b,c):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Dv,yA,io],null))}
    function XM(a,b,c){var d=qv.m(a),e=new Q(null,2,5,R,[b,d],null);if(p(yN(c,e)))return GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,1,[X,pA],null));CN(c,e,function(){var f=new wl(function(){return GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,pA,yA,new n(null,1,[cJ,QL(d,!1)],null)],null))});return function(){return Al(f)}}());return FN(c,e,function(){return Sc(yN(c,e))?BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)):null})}
    function QM(a,b,c){return BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b))}function fN(a,b,c){return A.gh(b,F(VD.m(c)))?BN(c,new Q(null,2,5,R,[b,a],null),rN(null,b)):GN(c,new Q(null,2,5,R,[b,a],null),b,new n(null,2,[X,Os,yA,io],null))}function UN(a,b,c){p(c)?CN(a,new Q(null,2,5,R,[0,b],null),SN(a)):DN(a,new Q(null,2,5,R,[0,b],null),SN(a));}
    function VN(a,b,c,d){a=qN(a,c,c,-1,null);UN(a,xM(b),d);b=JN(a,null);if(p(b))b=C(b);else {b=u(fC.m(a));a:{d=xH.m(b);for(var e=a=1,f=0;;){if(A.gh(d,f)){d=new n(null,2,[bn,a,px,e],null);break a}A.gh("\n",x.gh(c,f))?(f+=1,a+=1,e=1):(f+=1,e+=1);}}a=vk.g;a:for(e=bn.m(d),c=B(LL(c,"\r\n","\n"));;){if(Of(c)){c="";break a}if(A.gh(e,1)){c=eh(q,Lk(Fh(new Ak(null,new n(null,1,["\n",null],null),null)),c));break a}A.gh("\n",C(c))?(c=D(c),--e):c=D(c);}b=a.call(vk,G([b,d,new n(null,1,[VD,c],null)]));}return b}
    function HN(a,b,c,d,e){return Jf(a.gh?a.gh(b,c):a.call(null,b,c),new n(null,2,[Tv,d,ep,e],null))}function WN(a,b){return (null!=a?a.h&262144||h===a.He||(a.h?0:Wc(Nd,a)):Wc(Nd,a))?Jf(a,vk.g(G([b,Kf(a)]))):a}
    var XN=function XN(a,b){var d=X.m(b);d=a.m?a.m(d):a.call(null,d);return p(d)?WN(eh(d,Vh.gh(Ih(XN,a),oE.m(b))),Kf(b)):p(X.m(b))?K.hh(b,oE,Vh.gh(Ih(XN,a),oE.m(b))):b},YN=function YN(a,b){if(Sf(b)&&B(b)){var d=C(b);d=a.m?a.m(d):a.call(null,d);return p(d)?WN(eh(d,Vh.gh(Ih(YN,a),D(b))),Kf(b)):Jf(ii.gh(new Q(null,1,5,R,[C(b)],null),Vh.gh(Ih(YN,a),D(b))),Kf(b))}return b},ZN=function ZN(a,b){if("string"===typeof b)a=b;else {var d=(d=M(b))?X.m(b):d;a=p(d)?XN(a,b):Uf(b)&&C(b)instanceof z?YN(a,b):Sf(b)?Jf(Vh.gh(Ih(ZN,
    a),b),Kf(b)):b instanceof nN?b:cM(G(["Invalid parse-tree, not recognized as either enlive or hiccup format."]));}return a};function $N(a,b,c){if(Bg(c)){var d=eh(O,Vh.gh(a,c));return b.m?b.m(d):b.call(null,d)}return Ni(c)?(d=new Fi(function(){var e=Cd(c);return a.m?a.m(e):a.call(null,e)}(),function(){var e=Dd(c);return a.m?a.m(e):a.call(null,e)}()),b.m?b.m(d):b.call(null,d)):Zf(c)?(d=Uk(Vh.gh(a,c)),b.m?b.m(d):b.call(null,d)):Tf(c)?(d=fd.hh(function(e,f){return Bf.gh(e,a.m?a.m(f):a.call(null,f))},c,c),b.m?b.m(d):b.call(null,d)):Pf(c)?(d=ii.gh(Df(c),Vh.gh(a,c)),b.m?b.m(d):b.call(null,d)):b.m?b.m(c):b.call(null,c)}
    var aO=function aO(a,b){return $N(Ih(aO,a),a,b)};function bO(a){function b(c){var d=J(c,0,null);c=J(c,1,null);return "string"===typeof d?new Q(null,2,5,R,[Jg.m(d),c],null):new Q(null,2,5,R,[d,c],null)}return aO(function(c){return M(c)?ii.gh(S,Vh.gh(b,c)):c},a)}function cO(a){return null==a?null:qg(a)}function dO(a,b,c,d,e){this.vc=a;this.form=b;this.$=c;this.j=d;this.B=e;this.h=2230716170;this.I=139264;}g=dO.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "splicing?":return this.vc;case "form":return this.form;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.tools.reader.impl.utils.ReaderConditional{",", ","}",c,Wg.gh(new Q(null,2,5,R,[new Q(null,2,5,R,[MI,this.vc],null),new Q(null,2,5,R,[Dr,this.form],null)],null),this.j))};g.ua=function(){return new fj(this,2,new Q(null,2,5,R,[MI,Dr],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 2+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-209062840^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.vc,b.vc)&&A.gh(this.form,b.form)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,2,[MI,null,Dr,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new dO(this.vc,this.form,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "splicing?":case "form":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(MI,b):P.call(null,MI,b))?new dO(c,this.form,this.$,this.j,null):p(P.gh?P.gh(Dr,b):P.call(null,Dr,b))?new dO(this.vc,c,this.$,this.j,null):new dO(this.vc,this.form,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,2,5,R,[new Fi(MI,this.vc),new Fi(Dr,this.form)],null),this.j))};g.O=function(a,b){return new dO(this.vc,this.form,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function eO(a,b){return new dO(b,a,null,null,null)}g.ma=h;g.S=function(a,b,c){be(b,["#?",p(this.vc)?"@":null].join(""));return gl(this.form,b,c)};var fO=/[\s]/;function gO(a){return null==a?null:","===a?!0:fO.test(a)}function hO(a){return null==a?null:!/[^0-9]/.test(a)}function iO(a){return a instanceof z?Ff([a,!0]):a instanceof w?new n(null,1,[X,a],null):"string"===typeof a?new n(null,1,[X,a],null):a}var jO=Nh(0);
    function kO(a,b){return function e(d){return new Lg(null,function(){for(;;){var f=B(d);if(f){if(Vf(f)){var k=qe(f),l=F(k),m=Pg(l);return function(){for(var t=0;;)if(t<l){var v=pd(k,t),y=m;if(v instanceof w||v instanceof z){var E=Tk(Hg,Kg)(v),H=J(E,0,null);E=J(E,1,null);var T=v instanceof w?Le:Jg;v=null==H?T.gh?T.gh(a,E):T.call(null,a,E):A.gh("_",H)?T.m?T.m(E):T.call(null,E):v;}y.add(v);t+=1;}else return !0}()?Rg(Tg(m),e(re(f))):Rg(Tg(m),null)}var r=C(f);return uf(r instanceof w||r instanceof z?function(){var t=
    Tk(Hg,Kg)(r),v=J(t,0,null);t=J(t,1,null);var y=r instanceof w?Le:Jg;return null==v?y.gh?y.gh(a,t):y.call(null,a,t):A.gh("_",v)?y.m?y.m(t):y.call(null,t):r}():r,e(Qe(f)))}return null}},null,null)}(b)}function lO(a){var b=J(a,0,null);a=J(a,1,null);return p(b)?null:a}function mO(a,b){a=parseInt(a,b);return p(isNaN(a))?-1:a}function nO(a){if(null!=a&&null!=a.xa)a=a.xa(a);else {var b=nO[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=nO._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Reader.read-char",a);}return a}function oO(a){if(null!=a&&null!=a.Dc)a=a.Dc(a);else {var b=oO[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=oO._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Reader.peek-char",a);}return a}
    function pO(a,b){if(null!=a&&null!=a.Fd)a.Fd(a,b);else {var c=pO[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=pO._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("IPushbackReader.unread",a);}}function qO(a){if(null!=a&&null!=a.Hd)a=a.Hd(a);else {var b=qO[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=qO._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IndexingReader.get-line-number",a);}return a}
    function rO(a){if(null!=a&&null!=a.Gd)a=a.Gd(a);else {var b=rO[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=rO._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IndexingReader.get-column-number",a);}return a}function sO(a){if(null!=a&&null!=a.Me)a=a.Me(a);else {var b=sO[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=sO._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IndexingReader.get-file-name",a);}return a}
    function tO(a,b){this.ha=a;this.Qf=b;this.sd=0;}tO.prototype.xa=function(){if(this.Qf>this.sd){var a=this.ha.charAt(this.sd);this.sd+=1;return a}return null};tO.prototype.Dc=function(){return this.Qf>this.sd?this.ha.charAt(this.sd):null};function uO(a,b){this.Nf=a;this.ca=b;this.Vb=this.xe=1;}uO.prototype.xa=function(){var a=this.Vb<this.xe?this.ca[this.Vb]:this.Nf.xa(null);this.Vb<this.xe&&(this.Vb+=1);return cO(a)};
    uO.prototype.Dc=function(){var a=this.Vb<this.xe?this.ca[this.Vb]:this.Nf.Dc(null);return cO(a)};uO.prototype.Fd=function(a,b){if(p(b)){if(0===this.Vb)throw Error("Pushback buffer is full");--this.Vb;return this.ca[this.Vb]=b}return null};function vO(a){return null!=a?h===a.Yh?!0:!1:!1}function wO(a){a=new tO(a,F(a));a:{var b=Array(1);if(Zf(null))for(var c=0,d=B(null);;)if(d&&1>c)b[c]=C(d),c+=1,d=D(d);else break a;else for(c=0;;)if(1>c)b[c]=null,c+=1;else break}return new uO(a,b)}function xO(a,b,c,d){var e=F(b);a=p(a)?0:10<e?10:e;b=Vh.gh(Ih(yO,!0),Wh.gh(a,b));b=eh(q,Xh(1,ai.gh(AO(" "),b)));e=a<e?"...":null;return [q.m(c),q.m(b),e,q.m(d)].join("")}var yO,ac=Nh(S),bc=Nh(S),ec=Nh(S),fc=Nh(S),gc=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));
    yO=new cm(Le.gh("cljs.tools.reader.impl.inspect","inspect*"),function(a,b){return null==b?UC:"string"===typeof b?vn:b instanceof z?nu:"number"===typeof b?nu:b instanceof w?nu:Uf(b)?Qu:Bg(b)?CI:M(b)?Ov:Qf(b)?tA:A.gh(b,!0)?nu:A.gh(b,!1)?nu:Xc(b)},gc,ac,bc,ec,fc);yO.v(null,vn,function(a,b){a=p(a)?5:20;var c=b.length>a?'..."':'"',d=b.length;return ['"',q.m(b.substring(0,a<d?a:d)),c].join("")});yO.v(null,nu,function(a,b){return q.m(b)});yO.v(null,Pe,function(){return "\x3cindexed seq\x3e"});
    yO.v(null,jj,function(){return "\x3cmap seq\x3e"});yO.v(null,Oj,function(){return "\x3cmap seq\x3e"});yO.v(null,Eg,function(){return "\x3ccons\x3e"});yO.v(null,Lg,function(){return "\x3clazy seq\x3e"});yO.v(null,UC,function(){return "nil"});yO.v(null,CI,function(a,b){return xO(a,b,"(",")")});yO.v(null,Ov,function(a,b){var c=F(b),d=p(a)?0:c;b=eh(Wg,Wh.gh(d,b));return xO(a,b,"{",c>d?"...}":"}")});yO.v(null,tA,function(a,b){return xO(a,b,"#{","}")});yO.v(null,Qu,function(a,b){return xO(a,b,"[","]")});
    yO.v(null,dm,function(a,b){return nl.g(G([Xc(b)]))});function EO(a,b,c){b=new n(null,2,[U,fr,AC,b],null);a=vO(a)?K.g(b,JD,sO(a),G([bn,qO(a),tq,rO(a)])):b;var d=JD.m(a);b=bn.m(a);var e=tq.m(a);d=p(d)?[q.m(d)," "].join(""):null;b=p(b)?["[line ",q.m(b),", col ",q.m(e),"]"].join(""):null;c=hh(q,d,b,p(p(d)?d:b)?" ":null,c);throw hm(c,a);}function FO(a,b){return EO(a,Fp,G([eh(q,b)]))}function GO(a,b){return EO(a,bA,G([eh(q,b)]))}function HO(a,b){return EO(a,cv,G([eh(q,b)]))}
    function IO(a,b,c,d,e){return HO(a,G(["Unexpected EOF while reading ",p(e)?["item ",q.m(e)," of "].join(""):null,Kg(b),p(c)?[", starting at line ",q.m(c)," and column ",q.m(d)].join(""):null,"."]))}function JO(a,b,c,d){FO(a,G(["The map literal starting with ",yO.gh(!1,C(d)),p(b)?[" on line ",q.m(b)," column ",q.m(c)].join(""):null," contains ",F(d)," form(s). Map literals must contain an even number of forms."]));}function KO(a){throw GO(null,G(["Invalid unicode literal: \\",a,"."]));}
    function LO(a,b){return FO(a,G(["Invalid unicode escape: \\u",b,"."]))}function MO(a,b,c){return FO(a,G(["Invalid ",Kg(b),": ",c,"."]))}function NO(a,b){return HO(a,G(["Unexpected EOF while reading start of ",Kg(b),"."]))}function OO(a,b,c){return FO(a,G(["Invalid character: ",c," found while reading ",Kg(b),"."]))}function PO(a){return HO(a,G(["Unexpected EOF while reading dispatch character."]))}
    function QO(a,b,c){a:{var d=b instanceof z?b.da:null;switch(d){case "regex":d='#"';break a;case "string":d='"';break a;default:throw Error(["No matching clause: ",q.m(d)].join(""));}}return HO(a,G(["Unexpected EOF reading ",Kg(b)," starting ",fh(q,d,c),"."]))}function RO(a,b){return GO(null,G(["Invalid digit ",a," in unicode character \\",b,"."]))}function SO(a,b){return GO(a,G(["Invalid digit ",b," in unicode character."]))}
    function TO(a,b,c){return GO(a,G(["Invalid unicode literal. Unicode literals should be ",c,"characters long. ","Value supplied is ",b," characters long."]))}function UO(a,b){return FO(a,G(["Invalid character literal \\u",b,"."]))}function VO(a,b){return FO(a,G(["Invalid octal escape sequence in a character literal: ",b,". Octal escape sequences must be 3 or fewer digits."]))}function WO(a){return FO(a,G(["Octal escape sequence must be in range [0, 377]."]))}
    function XO(a){return HO(a,G(["Unexpected EOF while reading character."]))}function YO(a,b){return FO(a,G(["Unsupported escape character: \\",b,"."]))}function ZO(a){return FO(a,G(["A single colon is not a valid keyword."]))}function $O(a,b){FO(a,G(["Metadata cannot be ",yO.gh(!1,b),". Metadata must be a Symbol, Keyword, String or Map."]));}function aP(a,b){return FO(a,G(["Metadata can not be applied to ",yO.gh(!1,b),". ","Metadata can only be applied to IMetas."]))}
    function bP(a,b){return FO(a,G(["Namespaced map with namespace ",b," does not specify a map."]))}function cP(a,b){return FO(a,G(["Invalid value used as namespace in namespaced map: ",b,"."]))}function dP(a,b){FO(a,G(["Invalid reader tag: ",yO.gh(!1,b),". Reader tags must be symbols."]));}function eP(a,b){return FO(a,G(["No reader function for tag ",yO.gh(!1,b),"."]))}
    function fP(a,b){b=function(c){return function f(e){return new Lg(null,function(){for(var k=e;;)if(k=B(k)){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t),y=J(v,0,null);1<J(v,1,null)&&r.add(y);t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}r=C(k);l=J(r,0,null);if(1<J(r,1,null))return uf(l,f(Qe(k)));k=Qe(k);}else return null},null,null)}(Sk(c))}(b);return hh(q,a,1<F(b)?"s":null,": ",Xh(1,ai.gh(AO(", "),b)))}
    function gP(a,b,c){b=Kg(b);return FO(a,G([fP([String(b.charAt(0)).toUpperCase()+String(b.substr(1)).toLowerCase()," literal contains duplicate key"].join(""),c)]))}function hP(a,b){return p(b)?HO(a,G(["EOF while reading, starting at line ",b,"."])):HO(a,G(["EOF while reading."]))}function iP(a){for(var b=a.xa(null);;)if(gO.m?gO.m(b):gO.call(null,b))b=a.xa(null);else return b}var jP=/^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/,kP=/([-+]?[0-9]+)\/([0-9]+)/,lP=/([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;function mP(a,b){a=Wk(a,b);return J(a,0,null)===b}
    function nP(a){if(mP(jP,a)){var b=Mi(Wk(jP,a));if(null!=(b.m?b.m(2):b.call(null,2)))a=0;else {a="-"===(b.m?b.m(1):b.call(null,1));b=null!=(b.m?b.m(3):b.call(null,3))?new Q(null,2,5,R,[b.m?b.m(3):b.call(null,3),10],null):null!=(b.m?b.m(4):b.call(null,4))?new Q(null,2,5,R,[b.m?b.m(4):b.call(null,4),16],null):null!=(b.m?b.m(5):b.call(null,5))?new Q(null,2,5,R,[b.m?b.m(5):b.call(null,5),8],null):null!=(b.m?b.m(7):b.call(null,7))?new Q(null,2,5,R,[b.m?b.m(7):b.call(null,7),parseInt(b.m?b.m(6):b.call(null,
    6))],null):new Q(null,2,5,R,[null,null],null);var c=b.m?b.m(0):b.call(null,0);null==c?a=null:(b=parseInt(c,b.m?b.m(1):b.call(null,1)),a=a?-1*b:b,a=p(isNaN(a))?null:a);}}else mP(lP,a)?(b=Mi(Wk(lP,a)),a=null!=(b.m?b.m(4):b.call(null,4))?parseFloat(b.m?b.m(1):b.call(null,1)):parseFloat(a)):mP(kP,a)?(b=Mi(Wk(kP,a)),a=b.m?b.m(1):b.call(null,1),b=b.m?b.m(2):b.call(null,2),a=p(Wk(/^\+/,a))?a.substring(1):a,a=parseInt(a)/parseInt(b)):a=null;return a}
    function oP(a){if(""===a||!0===/:$/.test(a)||!0===/^::/.test(a))return null;var b=a.indexOf("/"),c=0<b?a.substring(0,b):null;if(null!=c){b+=1;if(b===F(a))return null;a=a.substring(b);return hO(nf(a,0))||""===a||!1!==/:$/.test(c)||"/"!==a&&-1!==a.indexOf("/")?null:new Q(null,2,5,R,[c,a],null)}return "/"===a||-1===a.indexOf("/")?new Q(null,2,5,R,[null,a],null):null}
    var pP=function pP(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return pP.g(arguments[0],1<c.length?new Pe(c.slice(1),0,null):null)};pP.g=function(a){for(;;){var b=a.xa(null);if("\n"===b||"\n"===b||null==b)break}return a};pP.F=1;pP.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};
    function qP(a){return function(){function b(d,e){var f=null;if(1<arguments.length){f=0;for(var k=Array(arguments.length-1);f<k.length;)k[f]=arguments[f+1],++f;f=new Pe(k,0,null);}return c.call(this,d,f)}function c(d){return FO(d,G([a]))}b.F=1;b.G=function(d){var e=C(d);d=Qe(d);return c(e)};b.g=c;return b}()}function rP(a){switch(a){case '"':case ";":case "@":case "^":case "`":case "~":case "(":case ")":case "[":case "]":case "{":case "}":case "\\":return !0;default:return !1}}var sP=new yc;function tP(a,b,c){if(null==c)return NO(a,b);sP.clear();for(b=c;;){if(gO(b)||rP(b)||null==b)return null!=b&&a.Fd(null,b),sP.toString();sP.append(b);b=a.xa(null);}}
    function uP(a,b,c,d){b=a.xa(null);if(p(b)){var e=vP.m?vP.m(b):vP.call(null,b);if(p(e))return e.A?e.A(a,b,c,d):e.call(null,a,b,c,d);a.Fd(null,b);return wP.A?wP.A(a,b,c,d):wP.call(null,a,b,c,d)}return PO(a)}function xP(a,b){return FO(a,G(["Unmatched delimiter ",b,"."]))}function yP(a){for(var b=new yc,c=a.xa(null);;){if('"'===c)return Yk(q.m(b));if(null==c)return QO(a,Ax,G([b]));b.append(c);"\\"===c&&(c=a.xa(null),null==c&&QO(a,Ax,G([b])),b.append(c));c=a.xa(null);}}
    function zP(a,b,c){b=1+b;F(a)!==b&&KO(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=mO(nf(a,d),c);if(-1===f)return RO(nf(a,d),a);e=f+e*c;d+=1;}}function AP(a,b,c,d,e){for(var f=1,k=mO(b,c);;){if(-1===k)return SO(a,b);if(f!==d){var l=a.Dc(null);var m=gO(l);m||(m=BP.m?BP.m(l):BP.call(null,l),m=p(m)?m:null==l);if(p(m))return p(e)?TO(a,f,d):String.fromCharCode(k);m=mO(l,c);a.xa(null);if(-1===m)return SO(a,l);k=m+k*c;f+=1;}else return String.fromCharCode(k)}}
    function CP(a){var b=a.xa(null);if(null!=b){b=rP(b)||gO(b)?q.m(b):tP(a,LF,b);var c=b.length;if(1===c)return b.charAt(0);if(A.gh(b,"newline"))return "\n";if(A.gh(b,"space"))return " ";if(A.gh(b,"tab"))return "\t";if(A.gh(b,"backspace"))return "\b";if(A.gh(b,"formfeed"))return "\f";if(A.gh(b,"return"))return "\r";if(p(0==b.lastIndexOf("u",0)))return b=zP(b,4,16),c=b.charCodeAt(0),55295<c&&57344>c?UO(a,c.toString(16)):b;if(p(0==b.lastIndexOf("o",0))){--c;if(3<c)return VO(a,b);c=zP(b,c,8);return 255>=parseInt(b.substring(1),
    8)?c:WO(a)}return FO(a,G(["Unsupported character: ",b,"."]))}return XO(a)}function DP(a){return vO(a)?new Q(null,2,5,R,[a.Hd(null),a.Gd(null)-1|0],null):null}function EP(a){return vO(a)?new Q(null,2,5,R,[a.Hd(null),a.Gd(null)],null):null}var FP={},GP={},HP=!1;
    function IP(a,b,c,d,e){var f=HP;HP=!0;try{a:for(var k=DP(c),l=J(k,0,null),m=J(k,1,null),r=cO(b),t=ie(I);;){var v=JP?JP(c,!1,FP,r,d,e):KP.call(null,c,!1,FP,r,d,e);if(v===GP){var y=ke(t);break a}if(v===FP){y=IO(c,a,l,m,F(t));break a}t=Xg.gh(t,v);}return y}finally{HP=f;}}
    function LP(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);var f=IP(CI,")",a,c,d);d=EP(a);c=J(d,0,null);d=J(d,1,null);f=Of(f)?Re:eh(O,f);if(p(b)){var k=vk.g;a=sO(a);a=k.call(vk,G([p(a)?new n(null,1,[JD,a],null):null,new n(null,4,[bn,b,px,e,bz,c,eo,d],null)]));}else a=null;return Jf(f,a)}
    function MP(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);c=IP(Qu,"]",a,c,d);var f=EP(a);d=J(f,0,null);f=J(f,1,null);if(p(b)){var k=vk.g;a=sO(a);a=k.call(vk,G([p(a)?new n(null,1,[JD,a],null):null,new n(null,4,[bn,b,px,e,bz,d,eo,f],null)]));}else a=null;return Jf(c,a)}
    function NP(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);var f=IP(Ov,"}",a,c,d),k=F(f),l=Rk(2,f),m=Ek(l);d=EP(a);c=J(d,0,null);d=J(d,1,null);!Eh(k)&&JO(a,b,e,f);A.gh(F(m),F(l))||gP(a,Ov,l);f=k<=2*oj?qj(gg(f)):Vj(gg(f));p(b)?(k=vk.g,a=sO(a),a=k.call(vk,G([p(a)?new n(null,1,[JD,a],null):null,new n(null,4,[bn,b,px,e,bz,c,eo,d],null)]))):a=null;return Jf(f,a)}
    function OP(a,b){for(var c=function(){var k=new yc;k.append(b);return k}(),d=a.xa(null);;){if(p(function(){var k=gO(d);if(k)return k;k=BP.m?BP.m(d):BP.call(null,d);return p(k)?k:null==d}())){var e=q.m(c);a.Fd(null,d);var f=nP(e);return p(f)?f:FO(a,G(["Invalid number: ",e,"."]))}e=function(){var k=c;k.append(d);return k}();f=a.xa(null);c=e;d=f;}}
    function PP(a){var b=a.xa(null);switch(b){case "t":return "\t";case "r":return "\r";case "n":return "\n";case "\\":return "\\";case '"':return '"';case "b":return "\b";case "f":return "\f";case "u":return b=a.xa(null),-1===parseInt(b|0,16)?LO(a,b):AP(a,b,16,4,!0);default:return hO(b)?(b=AP(a,b,8,3,!1),255<(b|0)?WO(a):b):YO(a,b)}}
    function QP(a){for(var b=new yc,c=a.xa(null);;){if(null==c)return QO(a,vn,G(['"',b]));switch(c){case "\\":var d=function(){var f=b;f.append(PP(a));return f}(),e=a.xa(null);b=d;c=e;continue;case '"':return q.m(b);default:d=function(){var f=b;f.append(c);return f}(),e=a.xa(null),b=d,c=e;}}}
    function SP(a,b){var c=DP(a),d=J(c,0,null);c=J(c,1,null);b=tP(a,tu,b);if(null==b)return null;switch(b){case "nil":return null;case "true":return !0;case "false":return !1;case "/":return Zz;default:var e=oP(b);if(null!=e){b=Le.gh(e.W(null,0),e.W(null,1));e=b.O;if(null==d)d=null;else {var f=sO(a);f=null==f?null:new n(null,1,[JD,f],null);var k=EP(a);a=J(k,0,null);k=J(k,1,null);d=vk.g(G([f,new n(null,4,[bn,d,px,c,bz,a,eo,k],null)]));}d=e.call(b,null,d);}else d=MO(a,tu,b);return d}}
    function TP(a){var b=a.xa(null);if(gO(b))return ZO(a);b=tP(a,zJ,b);var c=oP(b);if(null!=c){var d=c.W(null,0);c=c.W(null,1);if(":"===b.charAt(0)){if(null!=d)return d=x.gh(null,Le.m(d.substring(1))),p(d)?Jg.gh(q.m(d),c):MO(a,zJ,[":",q.m(b)].join(""));d=null;return p(d)?Jg.gh(q.m(d),c.substring(1)):FO(a,G(["Invalid token: :",b]))}return Jg.gh(d,c)}return MO(a,zJ,[":",q.m(b)].join(""))}
    function UP(a){return function(b,c,d,e){return new Cf(null,a,new Cf(null,VP?VP(b,!0,null,d,e):KP.call(null,b,!0,null,d,e),null,1,null),2,null)}}function WP(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);var f=iO(VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d));M(f)||$O(a,f);c=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);return null!=c&&(c.h&131072||h===c.xd)?(a=p(p(b)?Zf(c):b)?K.g(f,bn,b,G([px,e])):f,null!=c&&(c.h&262144||h===c.He)?Jf(c,vk.g(G([Kf(c),a]))):c.H=a):aP(a,c)}
    function XP(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);e=p(e)?e-1|0:null;var f=IP(tA,"}",a,c,d);c=Ek(f);var k=EP(a);d=J(k,0,null);k=J(k,1,null);A.gh(F(f),F(c))||FO(a,G([gP(a,tA,f)]));p(b)?(f=vk.g,a=sO(a),a=f.call(vk,G([p(a)?new n(null,1,[JD,a],null):null,new n(null,4,[bn,b,px,e,bz,d,eo,k],null)]))):a=null;return Jf(c,a)}function YP(a,b,c,d){VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);return a}
    function ZP(a,b,c,d){b=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);return A.gh(ey,b)?Number.NaN:A.gh(LC,b)?Number.NEGATIVE_INFINITY:A.gh(Mw,b)?Number.POSITIVE_INFINITY:FO(a,G([["Invalid token: ##",q.m(b)].join("")]))}var $P=new Ak(null,new n(null,2,[ks,null,Bp,null],null),null);function hc(a,b,c){a===FP&&(a=0>c,hP(b,a?c:a));}function aQ(a,b,c,d){var e=bQ;bQ=!0;try{var f=JP?JP(b,!1,FP,")",c,d):KP.call(null,b,!1,FP,")",c,d);hc(f,b,a);return f===GP?GP:null}finally{bQ=e;}}var cQ={};
    function dQ(a,b,c,d){var e=vO(a)?qO(a):-1;a:for(var f=cQ,k=null;;)if(f===cQ){f=e;k=a;var l=c,m=d,r=JP?JP(k,!1,FP,")",l,m):KP.call(null,k,!1,FP,")",l,m);hc(r,k,f);if(A.gh(r,GP))f=GP;else {var t=k,v=r;p(x.gh($P,v))&&FO(t,G(["Feature name ",v," is reserved"]));t=k;v=l;(r instanceof z?A.gh(dm,r)||N(x.gh(v,ht),r):FO(t,G(["Feature should be a keyword: ",r])))?(l=JP?JP(k,!1,FP,")",l,m):KP.call(null,k,!1,FP,")",l,m),hc(l,k,f),l===GP&&(0>f?FO(k,G(["read-cond requires an even number of forms"])):FO(k,G(["read-cond starting on line ",
    f," requires an even number of forms"]))),f=l):(f=aQ(f,k,l,m),f=p(f)?f:cQ);}if(f===GP){c=GP;break a}k=null;}else if(k!==GP)k=aQ(e,a,c,d);else {c=f;break a}return c===GP?a:p(b)?null!=c&&(c.h&16777216||h===c.Ee)?(b=gg(c),rb(ha,d,0,0).apply(null,b),a):FO(a,G(["Spliced form list in read-cond-splicing must implement ISequential"])):c}
    function eQ(a,b,c,d){if(Sc(function(){if(p(c)){var k=Bx.m(c),l=new Ak(null,new n(null,2,[cB,null,fz,null],null),null);return l.m?l.m(k):l.call(null,k)}return c}()))throw hm("Conditional read not allowed",new n(null,1,[U,Qx],null));var e=a.xa(null);if(p(e))if(e=(b=A.gh(e,"@"))?a.xa(null):e,b&&(p(HP)||FO(a,G(["cond-splice not in list"]))),e=gO(e)?iP(a):e,p(e)){if(jh.gh(e,"("))throw hm("read-cond body must be a list",new n(null,1,[U,Qx],null));var f=bQ;bQ=function(){var k=bQ;return p(k)?k:A.gh(cB,Bx.m(c))}();
    try{return p(bQ)?eO(LP(a,e,c,d),b):dQ(a,b,c,d)}finally{bQ=f;}}else return XO(a);else return XO(a)}var fQ=null;function gQ(a){return Le.m([-1===a?"rest":["p",q.m(a)].join(""),"__",q.m(Qh.gh(jO,Ze)),"#"].join(""))}
    function hQ(a,b,c,d){if(p(fQ))throw hm("Nested #()s are not allowed",new n(null,1,[U,jB],null));b=fQ;fQ=rk();try{pO(a,"(");var e=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);var f=ae(fQ);if(f){var k=Cd(C(f));a:{a=1;for(var l=ie(I);;){if(a>k){var m=ke(l);break a}c=a+1;d=Xg;var r=d.gh;f=l;var t=x.gh(fQ,a);var v=p(t)?t:gQ(a);var y=r.call(d,f,v);a=c;l=y;}}var E=p(fQ.call(null,-1))?Bf.g(m,mm,G([fQ.call(null,-1)])):m;}else E=I;return new Cf(null,Bm,new Cf(null,E,new Cf(null,e,null,1,null),2,null),3,null)}finally{fQ=
    b;}}function iQ(a){if(p(fQ)){var b=fQ.call(null,a);if(p(b))return b;b=gQ(a);fQ=K.hh(fQ,a,b);return b}throw hm("Arg literal not in #()",new n(null,1,[U,jB],null));}function jQ(a,b,c,d){if(null==fQ)return SP(a,b);b=a.Dc(null);if(gO(b)||rP(b)||null==b)return iQ(1);if(A.gh(b,"\x26"))return a.xa(null),iQ(-1);a=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);if(ag(a))return iQ(a);throw hm("Arg literal must be %, %\x26 or %integer",new n(null,1,[U,jB],null));}var kQ=null;
    function lQ(a,b,c,d){b=a.Dc(null);p(b)?A.gh("@",b)?(b=UP(MD),a.xa(null),a=b(a,"@",c,d)):a=UP(Vu)(a,"~",c,d):a=null;return a}function oQ(a){a=B(a);for(var b=ie(I);;)if(a){var c=C(a);a=D(a);b=Xg.gh(Xg.gh(b,Cd(c)),Dd(c));}else return B(ke(b))}function pQ(a){if(Sc(kQ))throw hm("Gensym literal not in syntax-quote",new n(null,1,[U,jB],null));var b=x.gh(kQ,a);if(p(b))return b;b=Le.m([Ag(Kg(a),0,Kg(a).length-1),"__",q.m(Qh.gh(jO,Ze)),"__auto__"].join(""));kQ=K.hh(kQ,a,b);return b}
    function qQ(a,b){return function(){var c=null!=a?a.h&262144||h===a.He?!0:!1:!1;return c?B(Gf.g(Kf(a),bn,G([px,bz,eo,JD,hz]))):c}()?new Cf(null,ux,new Cf(null,b,new Cf(null,function(){var c=Kf(a);return rQ.m?rQ.m(c):rQ.call(null,c)}(),null,1,null),2,null),3,null):b}
    function sQ(a,b){a:{b=B(b);for(var c=ie(I);;)if(b){var d=C(b);c=Xg.gh(c,Zf(d)&&A.gh(C(d),Vu)?new Cf(null,CG,new Cf(null,yf(d),null,1,null),2,null):Zf(d)&&A.gh(C(d),MD)?yf(d):new Cf(null,CG,new Cf(null,rQ.m?rQ.m(d):rQ.call(null,d),null,1,null),2,null));b=D(b);}else {b=B(ke(c));break a}}b=new Cf(null,nx,new Cf(null,uf(ft,b),null,1,null),2,null);return p(a)?new Cf(null,oG,new Cf(null,a,new Cf(null,b,null,1,null),2,null),3,null):b}
    function tQ(a){throw hm("resolve-symbol is not implemented",new n(null,1,[gJ,a],null));}
    function rQ(a){if(lm(a))var b=new Cf(null,Gm,new Cf(null,a,null,1,null),2,null);else if(a instanceof w)b=new Cf(null,Gm,new Cf(null,p(function(){var c=Sc(Hg(a));return c?cc(Kg(a),"#"):c}())?pQ(a):function(){var c=q.m(a);return p(cc(c,"."))?(c=Le.m(c.substring(0,c.length-1)),Le.m([q.m(tQ.call(null,c)),"."].join(""))):tQ.call(null,a)}(),null,1,null),2,null);else if(Zf(a)&&A.gh(C(a),Vu))b=yf(a);else {if(Zf(a)&&A.gh(C(a),MD))throw hm("unquote-splice not in list",new n(null,1,[U,jB],null));if(Pf(a))if(null!=
    a&&(a.h&67108864||h===a.kg))b=a;else if(M(a))b=sQ(16<=F(a)?qy:hE,oQ(a));else if(Uf(a))b=new Cf(null,et,new Cf(null,sQ(null,a),null,1,null),2,null);else if(Qf(a))b=sQ(hI,a);else if(Zf(a)||Bg(a))b=function(){var c=B(a);return c?sQ(null,c):O(XB)}();else throw hm("Unknown Collection type",new n(null,1,[U,fy],null));else b=a instanceof z||"number"===typeof a||"string"===typeof a||null==a||a instanceof Boolean||!0===a||!1===a||a instanceof RegExp?a:new Cf(null,Gm,new Cf(null,a,null,1,null),2,null);}return qQ(a,
    b)}function uQ(a,b,c,d){b=kQ;kQ=S;try{return rQ(VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d))}finally{kQ=b;}}
    function vQ(a,b,c,d){var e=DP(a);b=J(e,0,null);e=J(e,1,null);var f=tP(a,TE,nO(a)),k=A.gh(f,":")?null.name:A.gh(":",C(f))?function(){var m=null==f?null:f.substring(1);m=null==m?null:oP(m);m=null==m?null:lO(m);m=null==m?null:Le.m(m);if(null==m)m=null;else {var r=x.gh(null,m);if(p(r))m=r;else {null==Rm&&(Rm=Nh(S));r=x.gh(u(Rm),m);if(null!=r)m=r;else {r=q.m(m);var t=q.m(r);for(var v=new yc,y=0;;)if(y<t.length){var E=t.charAt(y),H=da(ad,E);null!=H?v.append(H):v.append(E);y+=1;}else break;t=v.toString();t=
    ".."===t?"_DOT__DOT_":p(Nm(t))?[t,"$"].join(""):t;c:for(r=(r instanceof w?Le.m(t):t).split("."),t=bb;;){if(null==t){r=null;break c}if(null==r){r=t;break c}t=da(t,C(r));r=D(r);}null==r?m=null:(r=new Qm(m),Qh.A(Rm,K,m,r),m=r);}m=p(m)?Le.m(m.name):null;}}return m}():function(){var m=null==f?null:oP(f);return null==m?null:lO(m)}();if(p(k)){if("{"===iP(a)){d=IP(TE,"}",a,c,d);var l=EP(a);c=J(l,0,null);l=J(l,1,null);!Eh(F(d))&&JO(a,null,null,d);k=kO(q.m(k),Rk(2,d));d=Rk(2,Qe(d));A.gh(F(Ek(k)),F(k))||gP(a,TE,
    k);return Jf(Hk(k,d),p(b)?vk.g(G([function(){var m=sO(a);return p(m)?new n(null,1,[JD,m],null):null}(),new n(null,4,[bn,b,px,e,bz,c,eo,l],null)])):null)}return bP(a,f)}return cP(a,f)}
    function BP(a){switch(a){case '"':return QP;case ":":return TP;case ";":return pP;case "'":return UP(Gm);case "@":return UP(Xq);case "^":return WP;case "`":return uQ;case "~":return lQ;case "(":return LP;case ")":return xP;case "[":return MP;case "]":return xP;case "{":return NP;case "}":return xP;case "\\":return CP;case "%":return jQ;case "#":return uP;default:return null}}
    function vP(a){switch(a){case "^":return WP;case "'":return UP(Fm);case "(":return hQ;case "{":return XP;case "\x3c":return qP("Unreadable form");case "\x3d":return qP("read-eval not supported");case '"':return yP;case "!":return pP;case "_":return YP;case "?":return eQ;case ":":return vQ;case "#":return ZP;default:return null}}
    function wP(a,b,c,d){b=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d);b instanceof w||dP(a,b);if(p(bQ))return a=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d),new Km(b,a);var e=S.call(null,b);e=p(e)?e:S.m?S.m(b):S.call(null,b);return p(e)?(b=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d),e.m?e.m(b):e.call(null,b)):p(wQ)?(e=wQ,a=VP?VP(a,!0,null,c,d):KP.call(null,a,!0,null,c,d),e.gh?e.gh(b,a):e.call(null,b,a)):eP(a,b)}var wQ=null,bQ=!1;
    function KP(a){switch(arguments.length){case 5:return VP(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);case 6:return JP(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function VP(a,b,c,d,e){return JP(a,b,c,null,d,e)}
    function JP(a,b,c,d,e,f){try{a:for(;;)if(0==f.length){var k=a.xa(null);if(!gO(k)){if(null==k){var l=b?hP(a,null):c;break a}if(k===d){l=GP;break a}if(hO(k)||("+"===k||"-"===k)&&hO(a.Dc(null))){l=OP(a,k);break a}var m=BP(k);if(null!=m){var r=m.A?m.A(a,k,e,f):m.call(null,a,k,e,f);if(r!==a){l=r;break a}}else {l=SP(a,k);break a}}}else {var t=f[0];Array.prototype.splice.call(f,0,1);l=t;break a}return l}catch(v){if(v instanceof Error){b=v;if(b instanceof gm){c=jm(b);if(A.gh(fr,U.m(c)))throw b;throw im(b.message,
    vk.g(G([new n(null,1,[U,fr],null),c,vO(a)?new n(null,3,[bn,a.Hd(null),px,a.Gd(null),JD,a.Me(null)],null):null])),b);}throw im(b.message,vk.g(G([new n(null,1,[U,fr],null),vO(a)?new n(null,3,[bn,a.Hd(null),px,a.Gd(null),JD,a.Me(null)],null):null])),b);}throw v;}}var xQ=dm;function yQ(a,b){var c=xQ;if(A.gh(!0,c))return uM(a);if(A.gh(!1,c))return tM(a);if(A.gh(dm,c))return p(b)?uM(a):tM(a);throw Error(["No matching clause: ",q.m(c)].join(""));}
    var zQ=Yk(/'[^'\\]*(?:\\.[^'\\]*)*'/),AQ=Yk(/#'[^'\\]*(?:\\.[^'\\]*)*'/),BQ=Yk(/"[^"\\]*(?:\\.[^"\\]*)*"/),CQ=Yk(/#"[^"\\]*(?:\\.[^"\\]*)*"/),DQ=/(?:(?!(?:\(\*|\*\)))[\s\S])*/,EQ=Yk("[,\\s]*"),FQ=AM(xM(nA)),GQ=kM(yC,Wj([nC,mF,uJ,AA,rC,lA,fA,wy,vt,Px,RC,vn,JF,ls,$H,Wu,Ct,xn,Iv,dq,uA,nA,vI,dJ],[sM.g(G([AM(tM("!")),FQ,xM(xn)])),nM(sM.g(G([FQ,qM.g(G([xM(xn),xM(lA),xM(nC)])),FQ]))),sM.g(G([xM(mF),nM(sM.g(G([FQ,AM(tM("/")),FQ,xM(mF)])))])),qM.g(G([tM(":"),tM(":\x3d"),tM("::\x3d"),tM("\x3d")])),sM.g(G([xM(mF),
    oM(sM.g(G([FQ,AM(tM("|")),FQ,xM(mF)])))])),sM.g(G([AM(tM("\x26")),FQ,xM(xn)])),sM.g(G([qM.g(G([xM(wy),xM(vt)])),FQ,AM(xM(AA)),FQ,xM(Wu),AM(qM.g(G([xM(nA),sM.g(G([xM(nA),qM.g(G([tM(";"),tM(".")])),xM(nA)]))])))])),sM.g(G([zM(xM(uA)),wM(Yk("[^, \\r\\t\\n\x3c\x3e(){}\\[\\]+*?:\x3d|'\"#\x26!;./]+"))])),sM.g(G([AM(tM("\x3c")),FQ,xM(wy),FQ,AM(tM("\x3e"))])),sM.g(G([wM(DQ),oM(sM.g(G([xM(Iv),wM(DQ)])))])),qM.g(G([sM.g(G([AM(tM("{")),FQ,xM(Wu),FQ,AM(tM("}"))])),sM.g(G([xM(xn),FQ,AM(tM("*"))]))])),qM.g(G([wM(zQ),
    wM(BQ)])),fM(sM.g(G([FQ,nM(xM(fA))]))),sM.g(G([AM(tM("\x3c")),FQ,xM(Wu),FQ,AM(tM("\x3e"))])),sM.g(G([AM(tM("(")),FQ,xM(Wu),FQ,AM(tM(")"))])),fM(qM.g(G([xM(rC),xM(uJ)]))),qM.g(G([wM(AQ),wM(CQ)])),fM(qM.g(G([xM(wy),xM(vn),xM(Ct),xM(dJ),xM(RC),xM(dq),xM($H),xM(ls),xM(uA)]))),sM.g(G([tM("(*"),xM(Px),tM("*)")])),sM.g(G([xM(xn),FQ,AM(tM("+"))])),qM.g(G([tM("Epsilon"),tM("epsilon"),tM("EPSILON"),tM("eps"),tM("ε")])),sM.g(G([wM(EQ),oM(sM.g(G([xM(Iv),wM(EQ)])))])),fM(qM.g(G([xM(JF),xM(Wu)]))),qM.g(G([sM.g(G([AM(tM("[")),
    FQ,xM(Wu),FQ,AM(tM("]"))])),sM.g(G([xM(xn),FQ,AM(tM("?"))]))]))]));function HQ(a){for(var b=B(a),c=I;;){var d=C(b);if(p(d))switch(d){case "\\":var e=yf(b);if(p(e)){A.gh(e,"'")?(b=Xh(2,b),c=Bf.gh(c,e)):(b=Xh(2,b),c=Bf.g(c,d,G([e])));continue}else return bM(G(["Encountered backslash character at end of string: ",a]));case '"':b=D(b);c=Bf.g(c,"\\",G(['"']));continue;default:b=D(b),c=Bf.gh(c,d);}else return eh(q,c)}}
    var ic=u(new Me(function(){return QP},Gt,Wj([Gn,xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[!0,AB,as,"cljs/tools/reader.cljs",20,1,305,305,O(new Q(null,4,5,R,[Jf(fx,new n(null,1,[X,Wm],null)),Dp,ix,oF],null)),null,p(QP)?QP.ld:null])));function JQ(a){a=Ag(a,1,F(a)-1);a=HQ(a);a=[q.m(a),'"'].join("");a=wO(a);return ic.A?ic.A(a,null,null,null):ic.call(null,a,null,null,null)}function KQ(a){a=Ag(a,2,F(a)-1);a=HQ(a);return Yk(a)}
    var LQ=function LQ(a){for(;;){var c=C.m?C.m(a):C.call(null,a);c=c instanceof z?c.da:null;switch(c){case "rule":c=D.m?D.m(a):D.call(null,a);var d=J(c,0,null);c=J(c,1,null);return A.gh(C.m?C.m(d):C.call(null,d),vt)?new Q(null,2,5,R,[Jg.m(function(){var e=zf.m?zf.m(d):zf.call(null,d);return zf.m?zf.m(e):zf.call(null,e)}()),fM(LQ.m?LQ.m(c):LQ.call(null,c))],null):new Q(null,2,5,R,[Jg.m(zf.m?zf.m(d):zf.call(null,d)),LQ.m?LQ.m(c):LQ.call(null,c)],null);case "nt":return xM(Jg.m(zf.m?zf.m(a):zf.call(null,
    a)));case "alt":return eh(qM,Vh.gh(LQ,D.m?D.m(a):D.call(null,a)));case "ord":return eh(rM,Vh.gh(LQ,D.m?D.m(a):D.call(null,a)));case "paren":a=zf.m?zf.m(a):zf.call(null,a);continue;case "hide":return AM(function(){var e=zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "cat":return eh(sM,Vh.gh(LQ,D.m?D.m(a):D.call(null,a)));case "string":return yQ(JQ(zf.m?zf.m(a):zf.call(null,a)),!1);case "regexp":return wM(KQ(zf.m?zf.m(a):zf.call(null,a)));case "opt":return mM(function(){var e=
    zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "star":return oM(function(){var e=zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "plus":return nM(function(){var e=zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "look":return yM(function(){var e=zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "neg":return zM(function(){var e=zf.m?zf.m(a):zf.call(null,a);return LQ.m?LQ.m(e):LQ.call(null,e)}());case "epsilon":return lM;
    default:throw Error(["No matching clause: ",q.m(c)].join(""));}}},MQ=function MQ(a){for(;;){var c=X.m(a);c=c instanceof z?c.da:null;switch(c){case "nt":return new Q(null,1,5,R,[zJ.m(a)],null);case "string":case "string-ci":case "char":case "regexp":case "epsilon":return I;case "opt":case "plus":case "star":case "look":case "neg":case "rep":a=qv.m(a);continue;case "alt":case "cat":return di(MQ,G([zn.m(a)]));case "ord":return di(MQ,G([new Q(null,2,5,R,[Vn.m(a),Tn.m(a)],null)]));default:throw Error(["No matching clause: ",
    q.m(c)].join(""));}}};function NQ(a){for(var b=Ek(lj(a)),c=B(Fk(di(MQ,G([mj(a)])))),d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);p(b.m?b.m(k):b.call(null,k))||bM(G([zg(q.m(k),1)," occurs on the right-hand side of your grammar, but not on the left"]));f+=1;}else if(c=B(c))d=c,Vf(d)?(c=qe(d),f=re(d),d=c,e=F(c),c=f):(c=C(d),p(b.m?b.m(c):b.call(null,c))||bM(G([zg(q.m(c),1)," occurs on the right-hand side of your grammar, but not on the left"])),c=D(d),d=null,e=0),f=0;else break;return a}
    function OQ(a,b){var c=VN(GQ,JF,a,!1);if(c instanceof nN)return bM(G(["Error parsing grammar specification:\n",function(){var e=new yc,f=Ec,k=Dc;Ec=!0;Dc=function(l){return e.append(l)};try{rl(G([c]));}finally{Dc=k,Ec=f;}return q.m(e)}()]));a=Vh.gh(LQ,c);var d=C(C(a));return new n(null,3,[so,NQ(kM(b,ii.gh(S,a))),ez,d,LH,b],null)}
    function PQ(a,b,c){return null==c?cM(G(["When you build a parser from a map of parser combinators, you must provide a start production using the :start keyword argument."])):new n(null,3,[so,NQ(kM(b,a)),ez,c,LH,b],null)}function QQ(a,b){const c=Array.prototype.slice.call(arguments),d=c.shift();if("undefined"==typeof d)throw Error("[goog.string.format] Template required");return d.replace(/%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g,function(e,f,k,l,m,r,t,v){if("%"==r)return "%";const y=c.shift();if("undefined"==typeof y)throw Error("[goog.string.format] Not enough arguments");arguments[0]=y;return QQ.Fc[r].apply(null,arguments)})}QQ.Fc={};
    QQ.Fc.s=function(a,b,c){return isNaN(c)||""==c||a.length>=Number(c)?a:a=-1<b.indexOf("-",0)?a+wc(" ",Number(c)-a.length):wc(" ",Number(c)-a.length)+a};
    QQ.Fc.f=function(a,b,c,d,e){d=a.toString();isNaN(e)||""==e||(d=parseFloat(a).toFixed(e));let f;f=0>Number(a)?"-":0<=b.indexOf("+")?"+":0<=b.indexOf(" ")?" ":"";0<=Number(a)&&(d=f+d);if(isNaN(c)||d.length>=Number(c))return d;d=isNaN(e)?Math.abs(Number(a)).toString():Math.abs(Number(a)).toFixed(e);a=Number(c)-d.length-f.length;0<=b.indexOf("-",0)?d=f+d+wc(" ",a):(b=0<=b.indexOf("0",0)?"0":" ",d=f+wc(b,a)+d);return d};QQ.Fc.d=function(a,b,c,d,e,f,k,l){return QQ.Fc.f(parseInt(a,10),b,c,d,0,f,k,l)};
    QQ.Fc.i=QQ.Fc.d;QQ.Fc.u=QQ.Fc.d;var RQ=Wj([HH,Jq,Sr,KE,uw,Py,hG,tJ,Iw,gI,QG,Ar,vJ,gn,kv,OG],[tM("\r\n"),tM("\t"),qM.g(G([qM.g(G([tM(" "),tM("\t")])),oM(sM.g(G([tM("\r\n"),qM.g(G([tM(" "),tM("\t")]))])))])),tM("\n"),wM("[\\u0021-\\u007E]"),wM("[0-9]"),tM(" "),wM("[0-9a-fA-F]"),wM("[\\u0000-\\u001F|\\u007F]"),tM('"'),qM.g(G([tM(" "),tM("\t")])),tM("\r"),wM("[\\u0000-\\u00FF]"),wM("[a-zA-Z]"),wM("[\\u0001-\\u007F]"),wM("[01]")]),SQ=Wj([nC,EG,Ew,Wx,kH,fw,lA,WA,fA,XE,Py,JE,wv,sz,ls,Ry,tJ,lp,Mx,At,iD,Ur,Vt,xz,Ct,cC,Qv,qB,nA,dn,vB,DD,
    vI],[new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"!"],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,kH],null),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,nC],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"("],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,
    zJ,xz],null),new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,nA],null),new Cf(null,new n(null,2,[X,vn,vn,")"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Du,new n(null,1,[jy,Nt],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"\x3c"],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,Qv],null),new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,
    new n(null,2,[X,wy,zJ,nA],null),new Cf(null,new n(null,2,[X,vn,vn,"\x3e"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Du,new n(null,1,[jy,Nt],null)],null),vk.g(G([wM("\\s+(?:;.*?\\u000D?\\u000A\\s*)*"),new n(null,1,[Du,new n(null,2,[jy,yC,GI,Wx],null)],null)])),new n(null,3,[X,rC,zn,new Cf(null,new n(null,2,[X,wy,zJ,XE],null),new Cf(null,new n(null,2,[X,wy,zJ,EG],null),new Cf(null,new n(null,2,[X,wy,zJ,ls],null),new Cf(null,new n(null,2,[X,wy,zJ,lp],null),new Cf(null,new n(null,
    2,[X,wy,zJ,wv],null),new Cf(null,new n(null,2,[X,wy,zJ,sz],null),new Cf(null,new n(null,2,[X,wy,zJ,lA],null),new Cf(null,new n(null,2,[X,wy,zJ,nC],null),new Cf(null,new n(null,2,[X,wy,zJ,Ct],null),null,1,null),2,null),3,null),4,null),5,null),6,null),7,null),8,null),9,null),Du,new n(null,1,[jy,Nt],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,Ew],null),new Cf(null,new n(null,3,[X,wy,zJ,Ry,ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,xz],null),new Cf(null,new n(null,3,[X,wy,
    zJ,nA,ls,!0],null),null,1,null),2,null),3,null),4,null),Du,new n(null,2,[jy,yC,GI,fw],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"\x26"],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,kH],null),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,lA],null)],null),new n(null,3,[X,dq,qv,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,vn,vn,"0"],null),new Cf(null,new n(null,
    2,[X,vn,vn,"1"],null),null,1,null),2,null)],null),Du,new n(null,2,[jy,yC,GI,WA],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,Qv],null),new Cf(null,new n(null,3,[X,wy,zJ,Ry,ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,xz],null),new Cf(null,new n(null,3,[X,wy,zJ,nA,ls,!0],null),null,1,null),2,null),3,null),4,null),Du,new n(null,2,[jy,yC,GI,fA],null)],null),new n(null,3,[X,wy,zJ,At,Du,new n(null,2,[jy,yC,GI,XE],null)],null),vk.g(G([wM("[0-9]"),new n(null,1,[Du,new n(null,1,
    [jy,Nt],null)],null)])),new n(null,3,[X,dq,qv,new n(null,2,[X,wy,zJ,Py],null),Du,new n(null,2,[jy,yC,GI,JE],null)],null),new n(null,3,[X,rC,zn,new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,'"',ls,!0],null),new Cf(null,new n(null,2,[X,RC,qv,vk.g(G([wM("[\\u0020-\\u0021\\u0023-\\u007E]"),S]))],null),new Cf(null,new n(null,3,[X,vn,vn,'"',ls,!0],null),null,1,null),2,null),3,null)],null),new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,"'",ls,!0],null),new Cf(null,
    new n(null,2,[X,RC,qv,vk.g(G([wM("[\\u0020-\\u0026(-~]"),S]))],null),new Cf(null,new n(null,3,[X,vn,vn,"'",ls,!0],null),null,1,null),2,null),3,null)],null),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,wv],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,"%",ls,!0],null),new Cf(null,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,wy,zJ,iD],null),new Cf(null,new n(null,2,[X,wy,zJ,Ur],null),new Cf(null,new n(null,2,[X,wy,zJ,vB],null),null,1,null),2,null),3,null)],null),null,1,
    null),2,null),Du,new n(null,1,[jy,Nt],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"\x3c"],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,xz],null),new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,nA],null),new Cf(null,new n(null,2,[X,vn,vn,"\x3e"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Du,new n(null,2,[jy,yC,GI,ls],null)],
    null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,wy,zJ,nA,ls,!0],null),new Cf(null,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,vn,vn,"\x3d"],null),new Cf(null,new n(null,2,[X,vn,vn,"\x3d/"],null),null,1,null),2,null)],null),new Cf(null,new n(null,3,[X,wy,zJ,nA,ls,!0],null),null,1,null),2,null),3,null),Du,new n(null,2,[jy,yC,GI,Ry],null)],null),vk.g(G([wM("[0-9a-fA-F]"),new n(null,1,[Du,new n(null,1,[jy,Nt],null)],null)])),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,
    new n(null,2,[X,vn,vn,"["],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,xz],null),new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,nA],null),new Cf(null,new n(null,2,[X,vn,vn,"]"],null),null,1,null),2,null),ls,!0],null),null,1,null),2,null),3,null),Du,new n(null,2,[jy,yC,GI,lp],null)],null),new n(null,3,[X,dq,qv,new n(null,2,[X,wy,zJ,tJ],null),Du,new n(null,2,[jy,yC,GI,Mx],null)],null),vk.g(G([wM("[a-zA-Z][-a-zA-Z0-9]*"),
    new n(null,1,[Du,new n(null,1,[jy,Nt],null)],null)])),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,"b",ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,WA],null),new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,dq,qv,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,".",ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,WA],null),null,1,null),2,null)],null)],null),new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"-"],null),new Cf(null,
    new n(null,2,[X,wy,zJ,WA],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Du,new n(null,2,[jy,yC,GI,iD],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,"d",ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,DD],null),new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,dq,qv,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,".",ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,DD],null),null,1,null),
    2,null)],null)],null),new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"-"],null),new Cf(null,new n(null,2,[X,wy,zJ,DD],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Du,new n(null,2,[jy,yC,GI,Ur],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,cC],null),new Cf(null,new n(null,2,[X,RC,qv,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,wy,zJ,Wx,ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,cC],null),null,
    1,null),2,null)],null)],null),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,Vt],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,Vt],null),new Cf(null,new n(null,2,[X,RC,qv,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,wy,zJ,nA],null),new Cf(null,new n(null,2,[X,vn,vn,"/"],null),new Cf(null,new n(null,2,[X,wy,zJ,nA],null),null,1,null),2,null),3,null),ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,Vt],null),null,1,null),2,null)],null)],null),
    null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,xz],null)],null),new n(null,3,[X,rC,zn,new Cf(null,vk.g(G([wM("#'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"),S])),new Cf(null,vk.g(G([wM('#\\"[^\\"\\\\]*(?:\\\\.[^\\"\\\\]*)*\\"'),S])),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,Ct],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,wy,zJ,dn],null)],null),new Cf(null,new n(null,3,[X,wy,zJ,nA,ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,kH],null),null,1,null),2,null),3,null),
    Du,new n(null,2,[jy,yC,GI,cC],null)],null),new n(null,3,[X,wy,zJ,At,Du,new n(null,2,[jy,yC,GI,Qv],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,wy,zJ,nA,ls,!0],null),new Cf(null,new n(null,2,[X,dq,qv,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,wy,zJ,fA],null),new Cf(null,new n(null,2,[X,wy,zJ,fw],null),null,1,null),2,null)],null)],null),null,1,null),2,null),Du,new n(null,1,[jy,Nt],null)],null),vk.g(G([wM("\\s*(?:;.*?(?:\\u000D?\\u000A\\s*|$))*"),new n(null,1,[Du,new n(null,
    2,[jy,yC,GI,nA],null)],null)])),new n(null,3,[X,rC,zn,new Cf(null,new n(null,2,[X,wy,zJ,JE],null),new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,wy,zJ,JE],null)],null),new Cf(null,new n(null,2,[X,vn,vn,"*"],null),new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,wy,zJ,JE],null)],null),null,1,null),2,null),3,null)],null),null,1,null),2,null),Du,new n(null,2,[jy,yC,GI,dn],null)],null),new n(null,3,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,"x",ls,!0],null),new Cf(null,
    new n(null,2,[X,wy,zJ,Mx],null),new Cf(null,new n(null,2,[X,dJ,qv,new n(null,2,[X,rC,zn,new Cf(null,new n(null,2,[X,dq,qv,new n(null,2,[X,mF,zn,new Cf(null,new n(null,3,[X,vn,vn,".",ls,!0],null),new Cf(null,new n(null,2,[X,wy,zJ,Mx],null),null,1,null),2,null)],null)],null),new Cf(null,new n(null,2,[X,mF,zn,new Cf(null,new n(null,2,[X,vn,vn,"-"],null),new Cf(null,new n(null,2,[X,wy,zJ,Mx],null),null,1,null),2,null)],null),null,1,null),2,null)],null)],null),null,1,null),2,null),3,null),Du,new n(null,
    2,[jy,yC,GI,vB],null)],null),new n(null,3,[X,dq,qv,new n(null,2,[X,wy,zJ,Py],null),Du,new n(null,2,[jy,yC,GI,DD],null)],null),new n(null,3,[X,rC,zn,new Cf(null,new n(null,2,[X,wy,zJ,qB],null),new Cf(null,new n(null,2,[X,wy,zJ,xz],null),null,1,null),2,null),Du,new n(null,1,[jy,Nt],null)],null)]),TQ=function TQ(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return TQ.g(0<c.length?new Pe(c.slice(0),0,null):null)};
    TQ.g=function(a){if(A.gh("-",yf(a))){var b=J(a,0,null);J(a,1,null);var c=J(a,2,null);return vM(b,c)}return eh(sM,function(){return function f(e){return new Lg(null,function(){for(;;){var k=B(e);if(k){if(Vf(k)){var l=qe(k),m=F(l),r=Pg(m);a:for(var t=0;;)if(t<m){var v=pd(l,t);r.add(vM(v,v));t+=1;}else {l=!0;break a}return l?Rg(Tg(r),f(re(k))):Rg(Tg(r),null)}r=C(k);return uf(vM(r,r),f(Qe(k)))}return null}},null,null)}(a)}())};TQ.F=0;TQ.G=function(a){return this.g(B(a))};
    function UQ(a,b){return ii.gh(S,function(){return function e(d){return new Lg(null,function(){for(var f=d;;)if(f=B(f)){if(Vf(f)){var k=qe(f),l=F(k),m=Pg(l);a:for(var r=0;;)if(r<l){var t=pd(k,r);N(a,t)&&(t=new Q(null,2,5,R,[t,a.m?a.m(t):a.call(null,t)],null),m.add(t));r+=1;}else {k=!0;break a}return k?Rg(Tg(m),e(re(f))):Rg(Tg(m),null)}m=C(f);if(N(a,m))return uf(new Q(null,2,5,R,[m,a.m?a.m(m):a.call(null,m)],null),e(Qe(f)));f=Qe(f);}else return null},null,null)}(b)}())}
    function VQ(a){return vk.g(G([UQ(RQ,Fk(di(MQ,G([mj(a)])))),a]))}function WQ(a,b){var c=A.gh(Du.m(a),gM),d=A.gh(Du.m(b),gM);return c&&d?fM(qM.g(G([Gf.gh(a,Du),Gf.gh(b,Du)]))):c?fM(qM.g(G([Gf.gh(a,Du),b]))):d?fM(qM.g(G([a,Gf.gh(b,Du)]))):qM.g(G([a,b]))}
    var XQ=parseInt,YQ=Wj([nC,fw,lA,WA,fA,XE,JE,wv,ls,lp,Mx,iD,Ur,Vt,xz,Ct,cC,Qv,dn,vB,DD],[zM,function(a,b){return Ff([a,fM(b)])},yM,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){c=eh(q,c);return XQ.gh?XQ.gh(c,2):XQ.call(null,c,2)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),pk,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=
    Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){return p(!1)?xM(Jg.m(eh(q,c).toUpperCase())):xM(Jg.m(eh(q,c)))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){c=eh(q,c);return XQ.m?XQ.m(c):XQ.call(null,c)}a.F=0;a.G=function(c){c=B(c);
    return b(c)};a.g=b;return a}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){return yQ(eh(q,c),!0)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),AM,mM,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){c=
    eh(q,c);return XQ.gh?XQ.gh(c,16):XQ.call(null,c,16)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),TQ,TQ,sM,qM,Hh.gh(wM,KQ),function(){function a(c,d){return Of(c)?oM(d):A.gh(F(c),2)?pM(tn.m(c),bq.m(c),d):A.gh(tn.m(c),1)?nM(d):A.gh(bq.m(c),1)?mM(d):pM(function(){var e=tn.m(c);return p(e)?e:0}(),function(){var e=bq.m(c);return p(e)?e:Infinity}(),d)}var b=null;b=function(c,d){switch(arguments.length){case 1:return c;case 2:return a.call(this,c,d)}throw Error("Invalid arity: "+arguments.length);
    };b.m=function(c){return c};b.gh=a;return b}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){return p(!1)?Jg.m(eh(q,c).toUpperCase()):Jg.m(eh(q,c))}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new Pe(e,0,null);}return b.call(this,
    d)}function b(c){var d=F(c);switch(d){case 1:return A.gh(C(c),"*")?S:new n(null,2,[tn,C(c),bq,C(c)],null);case 2:return A.gh(C(c),"*")?new n(null,1,[bq,yf(c)],null):new n(null,1,[tn,C(c)],null);case 3:return new n(null,2,[tn,C(c),bq,nf(c,2)],null);default:throw Error(["No matching clause: ",q.m(d)].join(""));}}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}(),TQ,function(){function a(c){var d=null;if(0<arguments.length){d=0;for(var e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+
    0],++d;d=new Pe(e,0,null);}return b.call(this,d)}function b(c){c=eh(q,c);return XQ.m?XQ.m(c):XQ.call(null,c)}a.F=0;a.G=function(c){c=B(c);return b(c)};a.g=b;return a}()]);
    function ZQ(a,b){var c=VN(SQ,qB,a,!1);if(c instanceof nN)return bM(G(["Error parsing grammar specification:\n",function(){var e=new yc,f=Ec,k=Dc;Ec=!0;Dc=function(l){return e.append(l)};try{rl(G([c]));}finally{Dc=k,Ec=f;}return q.m(e)}()]));var d=ZN(YQ,c);a=VQ(fh(wk,WQ,d));d=C(C(C(d)));return new n(null,3,[so,NQ(kM(b,a)),ez,d,LH,b],null)}function $Q(a){var b=Kf(a);a=Tv.m(b);b=ep.m(b);return p(p(a)?b:a)?new Q(null,2,5,R,[a,b],null):null}function aR(a){return Uf(a)&&A.gh(F(a),1)||M(a)&&N(a,X)&&Of(x.gh(a,oE))||Of(a)}var bR=new nN(null,null,null,null,null),cR=function cR(a){switch(arguments.length){case 1:return cR.m(arguments[0]);case 2:return cR.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};cR.m=function(a){var b=$Q(a);J(b,0,null);b=J(b,1,null);return p(b)?rg(b):F(a)};cR.gh=function(a,b){var c=$Q(a);J(c,0,null);c=J(c,1,null);return p(c)?rg(c):b+F(a)};cR.F=2;
    function dR(a,b,c,d,e){a=qN(a,c,d,-1,null);CN(a,new Q(null,2,5,R,[e,b],null),SN(a));return JN(a,null)}function eR(a,b,c,d,e,f){var k=F(c);for(f=B(f);;)if(f){var l=C(f),m=$Q(l);J(m,0,null);m=J(m,1,null);m=p(m)?m:e+F(l);if(A.gh(m,k))return new Q(null,3,5,R,[l,m,null],null);var r=B(dR(a,b,c,d,m));if(r)return new Q(null,3,5,R,[l,m,r],null);f=D(f);}else return null}
    function fR(a,b,c,d,e){var f=F(c),k=dR(a,b,c,d,e);e=rg(e);var l=eR(a,b,c,d,e,k);J(l,0,null);J(l,1,null);J(l,2,null);k=e;for(e=CL;;){var m=l,r=J(m,0,null);l=J(m,1,null);var t=J(m,2,null);if(null==m||A.gh(k,l))return bR;if(null==t)return AN(wL(e,r),new n(null,3,[kG,jz,Tv,0,ep,f],null));k=rg(l);e=wL(e,r);l=eR(a,b,c,d,l,t);}}
    function gR(a,b,c,d,e){if(A.gh(c,yC))a:{c=F(e);var f=dR(a,b,e,e,0),k=rg(0),l=EL(new Q(null,1,5,R,[d],null));f=eR(a,b,e,e,k,f);J(f,0,null);J(f,1,null);J(f,2,null);d=k;k=l;for(l=f;;){var m=l,r=J(m,0,null);l=J(m,1,null);f=J(m,2,null);if(null==m||A.gh(d,l)){a=bR;break a}if(null==f){a=AN(IL(wL(k,r)),new n(null,3,[kG,jz,Tv,0,ep,c],null));break a}d=rg(l);k=wL(k,r);l=eR(a,b,e,e,l,f);}}else if(A.gh(c,BA))a:for(c=F(e),l=dR(a,b,e,e,0),k=rg(0),f=eR(a,b,e,e,k,l),J(f,0,null),J(f,1,null),J(f,2,null),l=CL;;){var t=
    f;m=J(t,0,null);f=J(t,1,null);r=J(t,2,null);if(null==t||A.gh(k,f)){a=bR;break a}if(null==r){a=AN(new n(null,2,[X,d,oE,B(wL(l,m))],null),new n(null,3,[kG,jz,Tv,0,ep,c],null));break a}k=rg(f);l=wL(l,m);f=eR(a,b,e,e,f,r);}else a=null;return a}
    function hR(a,b,c,d,e,f){var k=F(f),l=dR(a,b,f,f,0),m=Of(l);b=m?m:ls.m(b);if(p(b))return bR;l=fh(Ik,cR,l);b=cR.m(l);a=fR(a,qv.m(c),f,f,b);k=new n(null,3,[kG,jz,Tv,0,ep,k],null);if(a instanceof nN||A.gh(X.m(c),RC)&&aR(a))return bR;switch(d instanceof z?d.da:null){case "enlive":return AN(new n(null,2,[X,e,oE,wL(CL.Qc(null,l),a)],null),k);case "hiccup":return AN(IL(wL(EL(new Q(null,1,5,R,[e],null)).Qc(null,l),a)),k);default:return AN(wL(CL.Qc(null,l),a),k)}}
    function iR(a,b,c,d,e){var f=zn.m(d),k=Af(f),l;if(l=A.gh(X.m(d),mF)){l=X.m(k);var m=new Ak(null,new n(null,2,[RC,null,dq,null],null),null);l=m.m?m.m(l):m.call(null,l);l=p(l)?Sc(ls.m(k))&&Sc(ls.m(qv.m(k))):l;}if(Sc(l))return bR;f=eh(sM,Gk(f));return A.gh(Du.m(d),gM)?hR(a,f,k,null,c,b):hR(a,f,k,e,c,b)}
    function jR(a,b,c){var d=so.m(a);a=LH.m(a);var e=x.gh(d,c);return A.gh(ls.m(e),!0)?bR:A.gh(Du.m(e),gM)?A.gh(X.m(e),RC)?(c=qv.m(e),fR(d,c,b,b,0)):A.gh(X.m(e),dq)?(c=qv.m(e),b=fR(d,c,b,b,0),aR(b)?bR:b):iR(d,b,c,e,a):A.gh(X.m(e),RC)?gR(d,qv.m(e),a,c,b):A.gh(X.m(e),dq)?(b=gR(d,qv.m(e),a,c,b),aR(b)?bR:b):iR(d,b,c,e,a)}function kR(a,b){if(A.gh(null,b))return a;if(A.gh(oE,b))return K.hh(a,so,CM(so.m(a)));if(A.gh(rF,b))return K.hh(a,so,DM(LH.m(a),so.m(a)));if(A.gh(sC,b))return K.hh(a,so,EM(LH.m(a),so.m(a)));throw Error(["No matching clause: ",q.m(b)].join(""));}var lR=function lR(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return lR.g(arguments[0],arguments[1],2<c.length?new Pe(c.slice(2),0,null):null)};
    lR.g=function(a,b,c){var d=Ea(c);c=x.hh(d,oz,ez.m(a));var e=x.hh(d,$q,!1),f=x.hh(d,kG,!1),k=x.gh(d,Et);x.hh(d,iu,!1);a=kR(a,k);return p(yr.m(d))?(f=so.m(a),a=LH.m(a),d=iM.m?iM.m(a):iM.call(null,a),a=VN(f,c,b,e),a instanceof nN?(k=xH.m(a),f=qN(f,b,b,k,d),UN(f,xM(c),e),e=JN(f,null),p(e)?b=C(e):(e=HN(d,Zp,b,0,F(b)),b=HN(d,c,e,0,F(b))),b=Jf(b,vk.g(G([a,Kf(b)])))):b=a,b):p(p(f)?Sc(e):f)?(d=jR(a,b,c),p(mR.m?mR.m(d):mR.call(null,d))?VN(so.m(a),c,b,e):d):VN(so.m(a),c,b,e)};lR.F=2;
    lR.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};function nR(a,b,c,d,e,f){this.qa=a;this.oc=b;this.sc=c;this.$=d;this.j=e;this.B=f;this.h=2230716171;this.I=139264;}g=nR.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "grammar":return this.qa;case "start-production":return this.oc;case "output-format":return this.sc;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#instaparse.core.Parser{",", ","}",c,Wg.gh(new Q(null,3,5,R,[new Q(null,2,5,R,[so,this.qa],null),new Q(null,2,5,R,[ez,this.oc],null),new Q(null,2,5,R,[LH,this.sc],null)],null),this.j))};g.ua=function(){return new fj(this,3,new Q(null,3,5,R,[so,ez,LH],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};
    g.X=function(){return 3+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-360509877^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.qa,b.qa)&&A.gh(this.oc,b.oc)&&A.gh(this.sc,b.sc)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,3,[ez,null,so,null,LH,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new nR(this.qa,this.oc,this.sc,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "grammar":case "start-production":case "output-format":return !0;default:return N(this.j,b)}};g.fa=function(a,b,c){return p(P.gh?P.gh(so,b):P.call(null,so,b))?new nR(c,this.oc,this.sc,this.$,this.j,null):p(P.gh?P.gh(ez,b):P.call(null,ez,b))?new nR(this.qa,c,this.sc,this.$,this.j,null):p(P.gh?P.gh(LH,b):P.call(null,LH,b))?new nR(this.qa,this.oc,c,this.$,this.j,null):new nR(this.qa,this.oc,this.sc,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,3,5,R,[new Fi(so,this.qa),new Fi(ez,this.oc),new Fi(LH,this.sc)],null),this.j))};g.O=function(a,b){return new nR(this.qa,this.oc,this.sc,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    g.call=function(a){switch(arguments.length-1){case 1:return this.m(arguments[1]);case 3:return this.hh(arguments[1],arguments[2],arguments[3]);case 5:return this.K(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 7:return this.ib(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7]);case 9:return this.Xa(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9]);case 11:return this.cb(arguments[1],
    arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11]);case 13:return this.eb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13]);case 15:return this.fb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],
    arguments[13],arguments[14],arguments[15]);case 17:return this.gb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17]);case 19:return this.hb(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],
    arguments[15],arguments[16],arguments[17],arguments[18],arguments[19]);case 21:return this.Sc(arguments[1],arguments[2],arguments[3],arguments[4],arguments[5],arguments[6],arguments[7],arguments[8],arguments[9],arguments[10],arguments[11],arguments[12],arguments[13],arguments[14],arguments[15],arguments[16],arguments[17],arguments[18],arguments[19],arguments[20],arguments[21]);default:throw Error(["Invalid arity: ",q.m(arguments.length-1)].join(""));}};
    g.apply=function(a,b){return this.call.apply(this,[this].concat(dd(b)))};g.m=function(a){return lR(this,a)};g.hh=function(a,b,c){return lR.g(this,a,G([b,c]))};g.K=function(a,b,c,d,e){return lR.g(this,a,G([b,c,d,e]))};g.ib=function(a,b,c,d,e,f,k){return lR.g(this,a,G([b,c,d,e,f,k]))};g.Xa=function(a,b,c,d,e,f,k,l,m){return lR.g(this,a,G([b,c,d,e,f,k,l,m]))};g.cb=function(a,b,c,d,e,f,k,l,m,r,t){return lR.g(this,a,G([b,c,d,e,f,k,l,m,r,t]))};
    g.eb=function(a,b,c,d,e,f,k,l,m,r,t,v,y){return lR.g(this,a,G([b,c,d,e,f,k,l,m,r,t,v,y]))};g.fb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H){return lR.g(this,a,G([b,c,d,e,f,k,l,m,r,t,v,y,E,H]))};g.gb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){return lR.g(this,a,G([b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y]))};g.hb=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y){return lR.g(this,a,G([b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y]))};
    g.Sc=function(a,b,c,d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta){return ih(lR,this,a,b,c,G([d,e,f,k,l,m,r,t,v,y,E,H,T,Y,ia,ba,wa,ta]))};function oR(a){var b=Gf.g(a,so,G([ez,LH]));b=Tf(a)?ii.gh(S,b):b;return new nR(so.m(a),ez.m(a),LH.m(a),null,kh(b),null)}g.ma=h;g.S=function(a,b){return be(b,YL(this))};function pR(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return qR(arguments[0],1<b.length?new Pe(b.slice(1),0,null):null)}
    function qR(a,b){var c=Ea(b),d=x.hh(c,pJ,YA),e=x.hh(c,LH,yC),f=x.hh(c,oz,null);b="string"===typeof a?function(){a:{var m=xQ;xQ=tC.gh(c,dm);try{var r=d instanceof z?d.da:null;switch(r){case "abnf":var t=ZQ(a,e);break a;case "ebnf":t=OQ(a,e);break a;default:throw Error(["No matching clause: ",q.m(r)].join(""));}}finally{xQ=m;}t=void 0;}return p(f)?oR(K.hh(t,ez,f)):oR(t)}():M(a)?function(){var m=PQ(a,e,f);return oR(m)}():Uf(a)?function(){var m=p(f)?f:a.m?a.m(0):a.call(null,0);m=PQ(eh(pk,a),e,m);return oR(m)}():
    cM(G(["Expected string, map, or vector as grammar specification, got ",nl.g(G([a]))]));var k=x.gh(c,zo);k=k instanceof z?x.gh(rR,k):k;if(p(k)){var l=Ea(k);k=x.gh(l,so);l=x.gh(l,ez);return K.hh(b,so,GM(b.qa,b.oc,k,l))}return b}function mR(a){return a instanceof oN||Kf(a)instanceof oN}var rR=new n(null,2,[cI,pR("whitespace \x3d #'\\s+'"),Sy,pR("whitespace \x3d #'[,\\s]+'")],null);function sR(a){var b="#"!==a;return b?(b="'"!==a)?(b=":"!==a)?tR.m?tR.m(a):tR.call(null,a):b:b:b}function uR(a){return "@"===a||"`"===a||"~"===a}function vR(a,b,c,d){if(Sc(c))return NO(a,b);if(p(p(d)?uR(c):d))return OO(a,b,c);d=new yc;for(pO(a,c);;){if(gO(c)||sR(c)||null==c)return q.m(d);if(uR(c))return OO(a,b,c);d.append(nO(a));c=oO(a);}}
    function wR(a,b,c){b=nO(a);if(p(b)){var d=xR.m?xR.m(b):xR.call(null,b);if(p(d))return d.hh?d.hh(a,b,c):d.call(null,a,b,c);pO(a,b);return yR.hh?yR.hh(a,b,c):yR.call(null,a,b,c)}return PO(a)}function zR(a,b){return FO(a,G(["Unmatched delimiter ",b,"."]))}function AR(a,b,c){b=1+b;F(a)!==b&&KO(a);for(var d=1,e=0;;){if(d===b)return String.fromCharCode(e);var f=mO(nf(a,d),c);if(-1===f)return RO(nf(a,d),a);e=f+e*c;d+=1;}}
    function BR(a,b,c,d,e){for(var f=1,k=mO(b,c);;){if(-1===k)return SO(a,b);if(f!==d){var l=oO(a);var m=gO(l);m||(m=tR.m?tR.m(l):tR.call(null,l),m=p(m)?m:null==l);if(p(m))return p(e)?TO(a,f,d):String.fromCharCode(k);m=mO(l,c);nO(a);if(-1===m)return SO(a,l);k=m+k*c;f+=1;}else return String.fromCharCode(k)}}
    function CR(a){var b=nO(a);if(null!=b){b=sR(b)||uR(b)||gO(b)?q.m(b):vR(a,LF,b,!1);var c=b.length;if(1===c)return nf(b,0);if("newline"===b)return "\n";if("space"===b)return " ";if("tab"===b)return "\t";if("backspace"===b)return "\b";if("formfeed"===b)return "\f";if("return"===b)return "\r";if(p(0==b.lastIndexOf("u",0)))return b=AR(b,4,16),c=b.charCodeAt(),55295<c&&57344>c?UO(a,c.toString(16)):b;if(p(0==b.lastIndexOf("o",0))){--c;if(3<c)return VO(a,b);b=AR(b,c,8);return 255<(b|0)?WO(a):b}return FO(a,G(["Unsupported character: ",
    b,"."]))}return XO(a)}function DR(a){return vO(a)?new Q(null,2,5,R,[qO(a),(rO(a)|0)-1|0],null):null}function ER(a,b,c,d){var e=DR(c),f=J(e,0,null);e=J(e,1,null);b=cO(b);for(var k=ie(I);;){var l=iP(c);p(l)||IO(c,a,f,e,F(k));if(A.gh(b,cO(l)))return ke(k);var m=tR.m?tR.m(l):tR.call(null,l);p(m)?(l=m.hh?m.hh(c,l,d):m.call(null,c,l,d),k=l!==c?Xg.gh(k,l):k):(pO(c,l),l=FR?FR(c,!0,null,d):GR.call(null,c,!0,null,d),k=l!==c?Xg.gh(k,l):k);}}function HR(a,b,c){a=ER(CI,")",a,c);return Of(a)?Re:eh(O,a)}
    function IR(a,b,c){return ER(Qu,"]",a,c)}function JR(a,b,c){var d=DR(a);b=J(d,0,null);d=J(d,1,null);c=ER(Ov,"}",a,c);var e=F(c),f=Rk(2,c),k=Ek(f);!Eh(e)&&JO(a,b,d,c);A.gh(F(k),F(f))||gP(a,Ov,f);return e<=2*oj?qj(gg(c)):Vj(gg(c))}
    function KR(a,b){for(var c=function(){var k=new yc;k.append(b);return k}(),d=nO(a);;){if(p(function(){var k=gO(d);if(k)return k;k=tR.m?tR.m(d):tR.call(null,d);return p(k)?k:null==d}())){var e=q.m(c);pO(a,d);var f=nP(e);return p(f)?f:FO(a,G(["Invalid number: ",e,"."]))}e=function(){var k=c;k.append(d);return k}();f=nO(a);c=e;d=f;}}
    function LR(a){var b=nO(a);switch(b){case "t":return "\t";case "r":return "\r";case "n":return "\n";case "\\":return "\\";case '"':return '"';case "b":return "\b";case "f":return "\f";case "u":return b=nO(a),-1===parseInt(b|0,16)?LO(a,b):BR(a,b,16,4,!0);default:return hO(b)?(b=BR(a,b,8,3,!1),255<(b|0)?WO(a):b):YO(a,b)}}
    function MR(a){for(var b=new yc,c=nO(a);;){var d=c;if(A.gh(null,d))return QO(a,vn,G(['"',b]));if(A.gh("\\",d)){d=function(){var f=b;f.append(LR(a));return f}();var e=nO(a);b=d;c=e;}else {if(A.gh('"',d))return q.m(b);d=function(){var f=b;f.append(c);return f}();e=nO(a);b=d;c=e;}}}
    function NR(a,b){b=vR(a,tu,b,!0);if(p(b))switch(b){case "nil":return null;case "true":return !0;case "false":return !1;case "/":return Zz;default:var c=oP(b);c=p(c)?Le.gh(c.m?c.m(0):c.call(null,0),c.m?c.m(1):c.call(null,1)):null;return p(c)?c:MO(a,tu,b)}else return null}
    function OR(a){var b=nO(a);if(gO(b))return ZO(a);b=vR(a,zJ,b,!0);var c=oP(b);if(p(p(c)?-1===b.indexOf("::"):c)){var d=c.m?c.m(0):c.call(null,0);c=c.m?c.m(1):c.call(null,1);return ":"===nf(b,0)?MO(a,zJ,[":",q.m(b)].join("")):Jg.gh(d,c)}return MO(a,zJ,[":",q.m(b)].join(""))}function PR(a,b,c){b=iO(FR?FR(a,!0,null,c):GR.call(null,a,!0,null,c));M(b)||$O(a,b);c=FR?FR(a,!0,null,c):GR.call(null,a,!0,null,c);return null!=c&&(c.h&131072||h===c.xd)?Jf(c,vk.g(G([Kf(c),b]))):aP(a,c)}
    function QR(a,b,c){b=ER(tA,"}",a,c);c=Ek(b);A.gh(F(b),F(c))||gP(a,tA,b);return c}function RR(a){FR?FR(a,!0,null,!0):GR.call(null,a,!0,null,!0);return a}function SR(a,b,c){b=nO(a);b=vR(a,TE,b,!0);var d=null==b?null:oP(b);d=null==d?null:lO(d);return p(d)?"{"===iP(a)?(c=ER(TE,"}",a,c),!Eh(F(c))&&JO(a,null,null,c),b=kO(q.m(d),Rk(2,c)),c=Rk(2,Qe(c)),A.gh(F(Ek(b)),F(b))||gP(a,TE,b),Hk(b,c)):bP(a,b):cP(a,b)}
    function TR(a,b,c){b=FR?FR(a,!0,null,c):GR.call(null,a,!0,null,c);return A.gh(ey,b)?Number.NaN:A.gh(LC,b)?Number.NEGATIVE_INFINITY:A.gh(Mw,b)?Number.POSITIVE_INFINITY:FO(a,G([["Invalid token: ##",q.m(b)].join("")]))}function tR(a){switch(a){case '"':return MR;case ":":return OR;case ";":return pP;case "^":return PR;case "(":return HR;case ")":return zR;case "[":return IR;case "]":return zR;case "{":return JR;case "}":return zR;case "\\":return CR;case "#":return wR;default:return null}}
    function xR(a){switch(a){case "^":return PR;case "{":return QR;case "\x3c":return qP("Unreadable form");case "!":return pP;case "_":return RR;case ":":return SR;case "#":return TR;default:return null}}
    function yR(a,b,c){b=FR?FR(a,!0,null,c):GR.call(null,a,!0,null,c);var d=FR?FR(a,!0,null,c):GR.call(null,a,!0,null,c);b instanceof w||dP(a,"Reader tag must be a symbol");var e=x.gh(Ny.m(c),b);e=p(e)?e:S.m?S.m(b):S.call(null,b);if(p(e))return e.m?e.m(d):e.call(null,d);c=dm.m(c);return p(c)?c.gh?c.gh(b,d):c.call(null,b,d):eP(a,b)}
    function GR(a){switch(arguments.length){case 1:return UR(S,arguments[0]);case 2:return UR(arguments[0],arguments[1]);case 4:return FR(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function UR(a,b){a=Ea(a);var c=x.gh(a,cv),d=!N(a,cv);return FR(b,d,c,a)}
    function FR(a,b,c,d){try{for(;;){var e=nO(a);if(!gO(e)){if(null==e)return p(b)?hP(a,null):c;if(hO(e)||("+"===e||"-"===e)&&hO(a.Dc(null)))return KR(a,e);var f=tR(e);if(p(f)){var k=f.hh?f.hh(a,e,d):f.call(null,a,e,d);if(k!==a)return k}else return NR(a,e)}}}catch(l){if(l instanceof Error){b=l;if(b instanceof gm){c=jm(b);if(A.gh(fr,U.m(c)))throw b;throw im(b.message,vk.g(G([new n(null,1,[U,fr],null),c,vO(a)?new n(null,3,[bn,qO(a),px,rO(a),JD,sO(a)],null):null])),b);}throw im(b.message,vk.g(G([new n(null,
    1,[U,fr],null),vO(a)?new n(null,3,[bn,qO(a),px,rO(a),JD,sO(a)],null):null])),b);}throw l;}}function VR(a,b){return p(p(b)?jh.gh(b,""):b)?UR(a,wO(b)):null}var WR=function(){var a=new Q(null,13,5,R,[null,31,28,31,30,31,30,31,31,30,31,30,31],null),b=new Q(null,13,5,R,[null,31,29,31,30,31,30,31,31,30,31,30,31],null);return function(c,d){return x.gh(p(d)?b:a,c)}}(),YR=/(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;function ZR(a){a=parseInt(a,10);return Sc(isNaN(a))?a:null}
    function $R(a,b,c,d){if(!(a<=b&&b<=c))throw Error([q.m(d)," Failed:  ",q.m(a),"\x3c\x3d",q.m(b),"\x3c\x3d",q.m(c)].join(""));return b}
    function aS(a){var b=Vk(YR,a);J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),k=J(b,5,null),l=J(b,6,null),m=J(b,7,null),r=J(b,8,null),t=J(b,9,null),v=J(b,10,null);if(Sc(b))throw Error(["Unrecognized date/time syntax: ",q.m(a)].join(""));a=ZR(c);b=function(){var Y=ZR(d);return p(Y)?Y:1}();c=function(){var Y=ZR(e);return p(Y)?Y:1}();var y=function(){var Y=ZR(f);return p(Y)?Y:0}(),E=function(){var Y=ZR(k);return p(Y)?Y:0}(),H=function(){var Y=ZR(l);return p(Y)?Y:0}(),T=function(){a:if(A.gh(3,
    F(m)))var Y=m;else if(3<F(m))Y=m.substring(0,3);else for(Y=new yc(m);;)if(3>Y.getLength())Y=Y.append("0");else {Y=Y.toString();break a}Y=ZR(Y);return p(Y)?Y:0}();r=(A.gh(r,"-")?-1:1)*(60*function(){var Y=ZR(t);return p(Y)?Y:0}()+function(){var Y=ZR(v);return p(Y)?Y:0}());return new Q(null,8,5,R,[a,$R(1,b,12,"timestamp month field must be in range 1..12"),$R(1,c,WR(b,0===(a%4+4)%4&&(0!==(a%100+100)%100||0===(a%400+400)%400)),"timestamp day field must be in range 1..last day in month"),$R(0,y,23,"timestamp hour field must be in range 0..23"),
    $R(0,E,59,"timestamp minute field must be in range 0..59"),$R(0,H,A.gh(E,59)?60:59,"timestamp second field must be in range 0..60"),$R(0,T,999,"timestamp millisecond field must be in range 0..999"),r],null)}
    var bS=Nh(null),cS=Nh(vk.g(G([new n(null,4,[pw,function(a){if("string"===typeof a){var b=aS(a);if(p(b)){a=J(b,0,null);var c=J(b,1,null),d=J(b,2,null),e=J(b,3,null),f=J(b,4,null),k=J(b,5,null),l=J(b,6,null);b=J(b,7,null);b=new Date(Date.UTC(a,c-1,d,e,f,k,l)-6E4*b);}else throw Error(["Unrecognized date/time syntax: ",q.m(a)].join(""));return b}throw Error("Instance literal expects a string for its timestamp.");},es,function(a){if("string"===typeof a)return new em(a.toLowerCase());throw Error("UUID literal expects a string as its representation.");
    },js,function(a){if(Uf(a))return ii.gh(bj,a);throw Error("Queue literal expects a vector for its elements.");},ev,function(a){if(Uf(a)){var b=[];a=B(a);for(var c=null,d=0,e=0;;)if(e<d){var f=c.W(null,e);b.push(f);e+=1;}else if(a=B(a))c=a,Vf(c)?(a=qe(c),e=re(c),c=a,d=F(a),a=e):(a=C(c),b.push(a),a=D(c),c=null,d=0),e=0;else break;return b}if(M(a)){b={};a=B(a);c=null;for(e=d=0;;)if(e<d){var k=c.W(null,e);f=J(k,0,null);k=J(k,1,null);f=Kg(f);b[f]=k;e+=1;}else if(a=B(a))Vf(a)?(d=qe(a),a=re(a),c=d,d=F(d)):
    (d=C(a),c=J(d,0,null),d=J(d,1,null),c=Kg(c),b[c]=d,a=D(a),c=null,d=0),e=0;else break;return b}throw Error("JS literal expects a vector or map containing only string or unqualified keyword keys");}],null),S]))),dS=function dS(a){switch(arguments.length){case 1:return dS.m(arguments[0]);case 2:return dS.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};dS.m=function(a){return VR(new n(null,3,[Ny,u(cS),dm,u(bS),cv,null],null),a)};
    dS.gh=function(a,b){return VR(oi(vk.g(G([new n(null,1,[dm,u(bS)],null),a])),Ny,function(c){return vk.g(G([u(cS),c]))}),b)};dS.F=2;var eS=pR("\n    expr\x3dand-or\n    \x3cand-or\x3e\x3d\x3cws*\x3e (eq-neq | and | or)\n    \x3ceq-neq\x3e\x3d\x3cws*\x3e (term | eq | neq | match)\n    and\x3dand-or \x3cws*\x3e \x3c'\x26\x26'\x3e eq-neq\n    or\x3dand-or \x3cws*\x3e \x3c'||'\x3e eq-neq\n    eq\x3deq-neq \x3cws*\x3e \x3c'\x3d\x3d'\x3e term\n    neq\x3deq-neq \x3cws*\x3e \x3c'!\x3d'\x3e term\n    match\x3deq-neq \x3cws*\x3e \x3c'?'\x3e term\n    \x3cterm\x3e\x3d\x3cws*\x3e (ident | own-ident | number | str | lparen and-or rparen)\n    \x3clparen\x3e \x3d \x3cws*'('ws*\x3e\n    \x3crparen\x3e \x3d \x3cws*')'ws*\x3e\n    ident\x3d\x3c'$'\x3e word\n    own-ident\x3d\x3c'#'\x3e word\n    str\x3d\x3c'\\''\x3e #'[^\\']+' \x3c'\\''\x3e\n    word\x3d#'[a-zA-Z]+'\n    number\x3d#'[-+]?[0-9]*\\.?[0-9]+'\n    ws\x3d#'[\\s\\t]+'\n    ");
    function fS(a){if(B(a)){a=lR(eS,a);if(null==a)var b=null;else b=a instanceof oN?a:Kf(a)instanceof oN?Kf(a):null,b=p(b)?q.m(b):null;if(p(b))throw hm(["Error parsing restrictions ",b].join(""),new n(null,1,[tr,b],null));return a}return null}
    function gS(a,b,c){return B(a)?ZN(Wj([qI,bF,Rz,rI,zv,jC,sA,GC,hs,mH],[A,dS,function(d,e){return p(d)?d:e},kg,kg,jh,function(d){J(d,0,null);d=J(d,1,null);var e=x.gh(c,d);return p(e)?e:x.gh(c,Jg.m(d))},function(d,e){return p(d)?e:d},function(d){J(d,0,null);d=J(d,1,null);var e=x.gh(b,d);return p(e)?e:x.gh(b,Jg.m(d))},function(d,e){return p(p(e)?d:e)?Vk(Yk(e),d):null}]),a):!0}var hS={};var iS={},jc,kc,lc,nc,nS,oc,pc,qc,rc,sc;function tS(a,b){if(null!=a&&null!=a.Zb)a=a.Zb(a,b);else {var c=tS[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=tS._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Spec.conform*",a);}return a}
    function uS(a,b){if(null!=a&&null!=a.$b)a=a.$b(a,b);else {var c=uS[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=uS._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Spec.with-gen*",a);}return a}var vS=Nh(S);function wS(a){if(Ig(a)){var b=u(vS);a=x.gh(b,a);if(Ig(a))a:for(;;)if(Ig(a))a=x.gh(b,a);else {b=a;break a}else b=a;return b}return a}function xS(a){if(Ig(a)){var b=wS(a);if(p(b))return b;throw Error(["Unable to resolve spec: ",q.m(a)].join(""));}return a}
    function yS(a){return null!=a&&h===a.rc?a:null}function zS(a){var b=kB.m(a);return p(b)?a:b}function AS(a,b){return Ig(a)?a:p(zS(a))?K.hh(a,Po,b):null!=a&&(a.h&131072||h===a.xd)?Jf(a,K.hh(Kf(a),Po,b)):null}function BS(a){return Ig(a)?a:p(zS(a))?Po.m(a):null!=a&&(a.h&131072||h===a.xd)?Po.m(Kf(a)):null}function CS(a){var b=function(){var c=(c=Ig(a))?wS(a):c;if(p(c))return c;c=yS(a);if(p(c))return c;c=zS(a);return p(c)?c:null}();return p(zS(b))?AS(DS(b,null),BS(b)):b}
    function ES(a){var b=CS(a);if(p(b))return b;if(Ig(a))throw Error(["Unable to resolve spec: ",q.m(a)].join(""));return null}function FS(a){if(dc(null==a?"":String(a)))return null;a=Vh.gh(Pm,OL(a,"$",0));if(2<=F(a)&&Ch(function(c){return !dc(null==c?"":String(c))},a)){var b=Tk(Gk,Af)(a);a=J(b,0,null);b=J(b,1,null);return Le.m([ML(".",a),"/",q.m(b)].join(""))}return null}
    var tc=function(){function a(d,e){var f=GS[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=GS._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("Specize.specize*",d);}function b(d){var e=GS[cb(null==d?null:d)];if(null!=e)return e.m?e.m(d):e.call(null,d);e=GS._;if(null!=e)return e.m?e.m(d):e.call(null,d);throw Yc("Specize.specize*",d);}var c=null;c=function(d,e){switch(arguments.length){case 1:return b.call(this,d);case 2:return a.call(this,d,e)}throw Error("Invalid arity: "+
    arguments.length);};c.m=b;c.gh=a;return c}(),GS=function GS(a){switch(arguments.length){case 1:return GS.m(arguments[0]);case 2:return GS.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};GS.m=function(a){return null!=a&&null!=a.Db?a.Db(a):tc(a)};GS.gh=function(a,b){return null!=a&&null!=a.Eb?a.Eb(a,b):tc(a,b)};GS.F=2;z.prototype.Db=function(){return GS(xS(this))};z.prototype.Eb=function(){return GS(xS(this))};w.prototype.Db=function(){return GS(xS(this))};
    w.prototype.Eb=function(){return GS(xS(this))};Ak.prototype.Db=function(){return HS(this,this,null,null,null)};Ak.prototype.Eb=function(a,b){return HS(b,this,null,null,null)};
    GS._=function(){function a(c){var d=(d=Hf(c))?FS(c.name):d;return p(d)?HS(d,c,null,null,null):HS(Ix,c,null,null,null)}var b=null;b=function(c,d){switch(arguments.length){case 1:return a.call(this,c);case 2:return HS(d,c,null,null,null)}throw Error("Invalid arity: "+arguments.length);};b.m=a;b.gh=function(c,d){return HS(d,c,null,null,null)};return b}();
    var IS=function IS(a){switch(arguments.length){case 1:return IS.m(arguments[0]);case 2:return IS.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};IS.m=function(a){var b=yS(a);return p(b)?b:GS(a)};IS.gh=function(a,b){var c=yS(a);return p(c)?c:GS(a,b)};IS.F=2;function JS(a){return P(Nr,a)}function KS(a,b){return tS(IS.m(a),b)}function LS(a,b){a=wS(a);return p(zS(a))?K.hh(a,dH,b):uS(IS.m(a),b)}
    function Z(a,b,c){if(null==c)Qh.hh(vS,Gf,a);else {var d=yS(c);p(d)||(d=zS(c),d=p(d)?d:x.gh(u(vS),c));b=p(d)?c:HS(b,c,null,null,null);Qh.A(vS,K,a,AS(b,a));}}function MS(a,b,c){if(p(a)){var d=ES(a);if(p(d))return KS(d,b);if(Hf(a)||(null!=a?a.h&1||h===a.Nh||(a.h?0:Wc(hd,a)):Wc(hd,a)))return p(null)?a.m?a.m(b):a.call(null,b):p(a.m?a.m(b):a.call(null,b))?b:Nr;throw Error([nl.g(G([c]))," is not a fn, expected predicate fn"].join(""));}return b}function NS(a,b){a=IS.m(a);return !JS(tS(a,b))}
    var OS=function OS(a){var c=Ea(a),d=x.gh(c,dJ),e=x.gh(c,ir),f=x.gh(c,dA),k=x.gh(c,RE),l=x.gh(c,Tt),m=x.gh(c,nt),r=x.gh(c,cx),t=x.gh(c,wG),v=x.gh(c,Hu),y=x.gh(c,JI),E=x.gh(c,GF),H=x.gh(c,CE),T=Hk(Wg.gh(y,r),Wg.gh(t,E)),Y=fm();if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof jc)jc=function(ia,ba,wa,ta,ob,qb,pb,xc,Sb,mb,Tb,gb,hb,mc,of,hv,JG,KG,LG){this.he=ia;this.ph=ba;this.Eh=wa;this.sh=ta;this.jb=ob;this.vh=qb;this.ie=pb;this.ff=xc;this.qh=Sb;this.Dh=
    mb;this.vi=Tb;this.th=gb;this.Bh=hb;this.id=mc;this.Ch=of;this.rh=hv;this.Ig=JG;this.wh=KG;this.Hh=LG;this.h=393216;this.I=0;},jc.prototype.O=function(ia,ba){return new jc(this.he,this.ph,this.Eh,this.sh,this.jb,this.vh,this.ie,this.ff,this.qh,this.Dh,this.vi,this.th,this.Bh,this.id,this.Ch,this.rh,this.Ig,this.wh,ba)},jc.prototype.N=function(){return this.Hh},jc.prototype.Db=function(){return this},jc.prototype.Eb=function(){return this},jc.prototype.rc=h,jc.prototype.Zb=function(ia,ba){if(p(this.ie.m?
    this.ie.m(ba):this.ie.call(null,ba))){ia=u(vS);var wa=B(ba),ta=C(wa);D(wa);J(ta,0,null);J(ta,1,null);for(ta=wa=ba;;){ba=wa;var ob=B(ta);wa=C(ob);var qb=D(ob);ob=wa;wa=J(ob,0,null);ob=J(ob,1,null);if(p(ta))if(ta=this.he.m?this.he.m(wa):this.he.call(null,wa),ta=x.gh(ia,ta),p(ta)){ta=KS(ta,ob);if(JS(ta))return Nr;ba=ta===ob?ba:K.hh(ba,wa,ta);ta=qb;wa=ba;}else ta=qb,wa=ba;else return ba}}else return Nr},jc.prototype.$b=function(ia,ba){ia=K.hh(this.ff,RE,ba);return OS.m?OS.m(ia):OS.call(null,ia)},jc.Ia=
    !0,jc.Da="cljs.spec.alpha/t_cljs$spec$alpha14715",jc.Ja=function(ia){return be(ia,"cljs.spec.alpha/t_cljs$spec$alpha14715")};return new jc(function(ia){var ba=T.m?T.m(ia):T.call(null,ia);return p(ba)?ba:ia},d,e,f,k,l,m,c,r,t,a,c,v,Y,y,E,T,H,S)};
    function HS(a,b,c,d,e){if(p(yS(b)))return p(c)?LS(b,c):b;if(p(zS(b)))return DS(b,c);if(Ig(b))return a=ES(b),p(c)?LS(a,c):a;if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof kc)kc=function(f,k,l,m,r,t){this.form=f;this.Sb=k;this.jb=l;this.Oe=m;this.Sf=r;this.Jh=t;this.h=393216;this.I=0;},kc.prototype.O=function(f,k){return new kc(this.form,this.Sb,this.jb,this.Oe,this.Sf,k)},kc.prototype.N=function(){return this.Jh},kc.prototype.Db=function(){return this},
    kc.prototype.Eb=function(){return this},kc.prototype.rc=h,kc.prototype.Zb=function(f,k){f=this.Sb.m?this.Sb.m(k):this.Sb.call(null,k);return p(this.Oe)?f:p(f)?k:Nr},kc.prototype.$b=function(f,k){return HS(this.form,this.Sb,k,this.Oe,this.Sf)},kc.Ia=!0,kc.Da="cljs.spec.alpha/t_cljs$spec$alpha14800",kc.Ja=function(f){return be(f,"cljs.spec.alpha/t_cljs$spec$alpha14800")};return new kc(a,b,c,d,e,S)}function PS(a,b){return QS(a,b,U,null)}
    function QS(a,b,c,d){var e=fm(),f=c instanceof z?function(k,l){return K.hh(k,c,l)}:c;if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof lc)lc=function(k,l,m,r,t,v,y,E,H){this.form=k;this.Cf=l;this.Of=m;this.jb=r;this.id=t;this.oe=v;this.yg=y;this.tag=E;this.ci=H;this.h=393216;this.I=0;},lc.prototype.O=function(k,l){return new lc(this.form,this.Cf,this.Of,this.jb,this.id,this.oe,this.yg,this.tag,l)},lc.prototype.N=function(){return this.ci},lc.prototype.Db=
    function(){return this},lc.prototype.Eb=function(){return this},lc.prototype.rc=h,lc.prototype.Zb=function(k,l){k=this.oe.m?this.oe.m(l):this.oe.call(null,l);return p(k)?MS(k,l,this.form):Nr},lc.prototype.$b=function(k,l){return QS(this.form,this.Cf,this.Of,l)},lc.Ia=!0,lc.Da="cljs.spec.alpha/t_cljs$spec$alpha14834",lc.Ja=function(k){return be(k,"cljs.spec.alpha/t_cljs$spec$alpha14834")};return new lc(a,b,c,d,e,function(k){var l=u(b);var m=am(l);m=m.m?m.m(k):m.call(null,k);m=$l(l,m);return p(m)?l.m?
    l.m(k):l.call(null,k):m},function(k){var l=am(u(b));return l.m?l.m(k):l.call(null,k)},f,S)}function RS(a,b){return SS(a,b,null)}
    function SS(a,b,c){var d=new wl(function(){return ji.hh(IS,b,a)}),e=F(b);if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof nc)nc=function(f,k,l,m,r,t){this.forms=f;this.Cb=k;this.jb=l;this.td=m;this.C=r;this.di=t;this.h=393216;this.I=0;},nc.prototype.O=function(f,k){return new nc(this.forms,this.Cb,this.jb,this.td,this.C,k)},nc.prototype.N=function(){return this.di},nc.prototype.Db=function(){return this},nc.prototype.Eb=function(){return this},nc.prototype.rc=
    h,nc.prototype.Zb=function(f,k){f=u(this.td);if(Uf(k)&&A.gh(F(k),this.C))for(var l=k,m=0;;){if(A.gh(m,this.C))return l;var r=k.m?k.m(m):k.call(null,m),t=tS(f.m?f.m(m):f.call(null,m),r);if(JS(t))return Nr;l=t===r?l:K.hh(l,m,t);m+=1;}else return Nr},nc.prototype.$b=function(f,k){return SS(this.forms,this.Cb,k)},nc.Ia=!0,nc.Da="cljs.spec.alpha/t_cljs$spec$alpha14886",nc.Ja=function(f){return be(f,"cljs.spec.alpha/t_cljs$spec$alpha14886")};return new nc(a,b,c,d,e,S)}
    function TS(a,b){return new Fi(a,b)}
    var US=function US(a,b,c,d){var f=fm(),k=Hk(a,c),l=new wl(function(){return ji.hh(IS,c,b)}),m=function(){switch(F(c)){case 2:return function(r){var t=u(l),v=tS(t.m?t.m(0):t.call(null,0),r);return JS(v)?(r=tS(t.m?t.m(1):t.call(null,1),r),JS(r)?Nr:TS(a.m?a.m(1):a.call(null,1),r)):TS(a.m?a.m(0):a.call(null,0),v)};case 3:return function(r){var t=u(l),v=tS(t.m?t.m(0):t.call(null,0),r);return JS(v)?(v=tS(t.m?t.m(1):t.call(null,1),r),JS(v)?(r=tS(t.m?t.m(2):t.call(null,2),r),JS(r)?Nr:TS(a.m?a.m(2):a.call(null,
    2),r)):TS(a.m?a.m(1):a.call(null,1),v)):TS(a.m?a.m(0):a.call(null,0),v)};default:return function(r){for(var t=u(l),v=0;;)if(v<F(t)){var y=t.m?t.m(v):t.call(null,v);y=tS(y,r);if(JS(y))v+=1;else return TS(a.m?a.m(v):a.call(null,v),y)}else return Nr}}}();if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof nS)nS=function(r,t,v,y,E,H,T,Y,ia){this.keys=r;this.forms=t;this.Cb=v;this.jb=y;this.id=E;this.Lg=H;this.td=T;this.yc=Y;this.Ug=ia;this.h=393216;this.I=
    0;},nS.prototype.O=function(r,t){return new nS(this.keys,this.forms,this.Cb,this.jb,this.id,this.Lg,this.td,this.yc,t)},nS.prototype.N=function(){return this.Ug},nS.prototype.Db=function(){return this},nS.prototype.Eb=function(){return this},nS.prototype.rc=h,nS.prototype.Zb=function(r,t){return this.yc.m?this.yc.m(t):this.yc.call(null,t)},nS.prototype.$b=function(r,t){return US.A?US.A(this.keys,this.forms,this.Cb,t):US.call(null,this.keys,this.forms,this.Cb,t)},nS.Ia=!0,nS.Da="cljs.spec.alpha/t_cljs$spec$alpha14906",
    nS.Ja=function(r){return be(r,"cljs.spec.alpha/t_cljs$spec$alpha14906")};return new nS(a,b,c,d,f,k,l,m,S)};function VS(a,b,c){var d=B(b);C(d);D(d);d=B(c);C(d);D(d);for(d=c;;){c=a;b=B(b);a=C(b);b=D(b);var e=B(d);d=C(e);e=D(e);var f=d;d=e;if(p(a)){c=MS(a,c,f);if(JS(c))return Nr;a=c;}else return c}}
    var WS=function WS(a,b,c){var e=new wl(function(){return ji.hh(IS,b,a)}),f=function(){switch(F(b)){case 2:return function(k){var l=u(e);k=tS(l.m?l.m(0):l.call(null,0),k);return JS(k)?Nr:tS(l.m?l.m(1):l.call(null,1),k)};case 3:return function(k){var l=u(e);k=tS(l.m?l.m(0):l.call(null,0),k);if(JS(k))return Nr;k=tS(l.m?l.m(1):l.call(null,1),k);return JS(k)?Nr:tS(l.m?l.m(2):l.call(null,2),k)};default:return function(k){for(var l=u(e),m=0;;)if(m<F(l)){k=tS(l.m?l.m(m):l.call(null,m),k);if(JS(k))return Nr;
    m+=1;}else return k}}}();if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof oc)oc=function(k,l,m,r,t,v){this.forms=k;this.Cb=l;this.jb=m;this.td=r;this.yc=t;this.ei=v;this.h=393216;this.I=0;},oc.prototype.O=function(k,l){return new oc(this.forms,this.Cb,this.jb,this.td,this.yc,l)},oc.prototype.N=function(){return this.ei},oc.prototype.Db=function(){return this},oc.prototype.Eb=function(){return this},oc.prototype.rc=h,oc.prototype.Zb=function(k,l){return this.yc.m?
    this.yc.m(l):this.yc.call(null,l)},oc.prototype.$b=function(k,l){return WS.hh?WS.hh(this.forms,this.Cb,l):WS.call(null,this.forms,this.Cb,l)},oc.Ia=!0,oc.Da="cljs.spec.alpha/t_cljs$spec$alpha14970",oc.Ja=function(k){return be(k,"cljs.spec.alpha/t_cljs$spec$alpha14970")};return new oc(a,b,c,e,f,S)},XS=function XS(a,b,c){if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof pc)pc=function(e,f,k,l){this.forms=e;this.Cb=f;this.jb=k;this.fi=l;this.h=393216;
    this.I=0;},pc.prototype.O=function(e,f){return new pc(this.forms,this.Cb,this.jb,f)},pc.prototype.N=function(){return this.fi},pc.prototype.Db=function(){return this},pc.prototype.Eb=function(){return this},pc.prototype.rc=h,pc.prototype.Zb=function(e,f){e=Vh.hh(function(k,l){return MS(k,f,l)},this.Cb,this.forms);return p(Dh(JS,e))?Nr:eh(vk,e)},pc.prototype.$b=function(e,f){return XS.hh?XS.hh(this.forms,this.Cb,f):XS.call(null,this.forms,this.Cb,f)},pc.Ia=!0,pc.Da="cljs.spec.alpha/t_cljs$spec$alpha14999",
    pc.Ja=function(e){return be(e,"cljs.spec.alpha/t_cljs$spec$alpha14999")};return new pc(a,b,c,S)},YS=new n(null,4,[TF,I,QB,Ck,lv,Re,Iq,S],null);
    function ZS(a,b,c,d){function e(qb,pb,xc,Sb){return Bf.gh(qb,Sb)}var f=Ea(c),k=x.gh(f,EJ),l=x.gh(f,Xn),m=x.hh(f,HB,20),r=x.gh(f,IC),t=x.gh(f,Yz),v=x.gh(f,GH),y=x.gh(f,XD),E=x.gh(f,MF),H=x.gh(f,bw),T=x.gh(f,Zt),Y=x.gh(f,Ns),ia=x.gh(f,oy),ba=x.gh(f,oC),wa=p(ba)?Df(ba):x.gh(YS,l),ta=new wl(function(){return IS.m(b)}),ob=function(){return p(E)?E:function(qb){return qb}}();if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof qc)qc=function(qb,pb,xc,Sb,mb,Tb,
    gb,hb,mc,of,hv,JG,KG,LG,r_,s_,t_,u_,v_,w_,x_,y_,z_,A_,B_){this.form=qb;this.Pg=pb;this.uh=xc;this.$f=Sb;this.jb=mb;this.Hg=Tb;this.Sb=gb;this.ce=hb;this.ug=mc;this.Kg=of;this.Yf=hv;this.Xd=JG;this.wg=KG;this.xg=LG;this.Sd=r_;this.Jg=s_;this.Gg=t_;this.wi=u_;this.count=v_;this.mh=w_;this.Df=x_;this.kind=y_;this.uf=z_;this.tg=A_;this.gi=B_;this.h=393216;this.I=0;},qc.prototype.O=function(qb,pb){return new qc(this.form,this.Pg,this.uh,this.$f,this.jb,this.Hg,this.Sb,this.ce,this.ug,this.Kg,this.Yf,this.Xd,
    this.wg,this.xg,this.Sd,this.Jg,this.Gg,this.wi,this.count,this.mh,this.Df,this.kind,this.uf,this.tg,pb)},qc.prototype.N=function(){return this.gi},qc.prototype.Db=function(){return this},qc.prototype.Eb=function(){return this},qc.prototype.rc=h,qc.prototype.Zb=function(qb,pb){qb=u(this.Sd);if(Sc(this.ce.m?this.ce.m(pb):this.ce.call(null,pb)))return Nr;if(p(this.uf)){var xc=this.Xd.m?this.Xd.m(pb):this.Xd.call(null,pb),Sb=J(xc,0,null),mb=J(xc,1,null);xc=J(xc,2,null);var Tb=Sb.m?Sb.m(pb):Sb.call(null,
    pb);Sb=0;var gb=B(pb);pb=B(gb);C(pb);D(pb);for(pb=Tb;;){var hb=gb;Tb=B(hb);gb=C(Tb);Tb=D(Tb);if(hb){hb=tS(qb,gb);if(JS(hb))return Nr;pb=mb.A?mb.A(pb,Sb,gb,hb):mb.call(null,pb,Sb,gb,hb);Sb+=1;gb=Tb;}else return xc.m?xc.m(pb):xc.call(null,pb)}}else if(lf(pb))for(mb=rg(F(pb)/101),mb=1>mb?1:mb,Sb=0;;){if(Sb>=F(pb))return pb;if(NS(qb,nf(pb,Sb)))Sb+=mb;else return Nr}else for(Sb=0,mb=B(pb),xc=B(mb),C(xc),D(xc);;){gb=B(mb);xc=C(gb);Tb=D(gb);gb=xc;hb=mb;if(null==hb||A.gh(Sb,101))return pb;if(NS(qb,gb))mb=
    Tb,Sb+=1;else return Nr}},qc.prototype.$b=function(qb,pb){return ZS(this.form,this.Sb,this.Df,pb)},qc.Ia=!0,qc.Da="cljs.spec.alpha/t_cljs$spec$alpha15014",qc.Ja=function(qb){return be(qb,"cljs.spec.alpha/t_cljs$spec$alpha15014")};return new qc(a,k,f,function(qb){return NS(u(ta),qb)},d,m,b,r,t,l,e,function(qb){return Uf(qb)&&(Sc(ba)||Uf(ba))?new Q(null,3,5,R,[kg,function(pb,xc,Sb,mb){return Sb===mb?pb:K.hh(pb,xc,mb)},kg],null):p(function(){var pb=M(qb);return pb?(pb=p(Y)?Sc(ba):Y,p(pb)?pb:M(ba)):pb}())?
    new Q(null,3,5,R,[p(t)?Df:kg,function(pb,xc,Sb,mb){return Sb===mb&&Sc(t)?pb:K.hh(pb,nf(p(t)?mb:Sb,0),nf(mb,1))},kg],null):Bg(ba)||Zf(ba)||Sc(ba)&&(Bg(qb)||Zf(qb))?new Q(null,3,5,R,[Df,e,Dg],null):new Q(null,3,5,R,[function(pb){return Df(p(ba)?ba:pb)},e,kg],null)},v,y,ta,ob,wa,c,H,T,f,Y,ia,ba,S)}function $S(a){return new n(null,2,[kB,Zs,Iu,a],null)}function aT(a){a=Ea(a);a=x.gh(a,kB);return A.gh(Zs,a)}
    var bT=function bT(a){var c=Ea(a),d=x.gh(c,Ez);a=B(d);var e=C(a);a=D(a);var f=x.gh(c,dz),k=B(f),l=C(k);k=D(k);var m=x.gh(c,jr),r=B(m);C(r);r=D(r);var t=x.gh(c,Iu);c=x.gh(c,$x);return Ch(kg,d)?aT(e)?(d=Iu.m(e),d=Bf.gh(t,p(f)?Ff([l,d]):d),a?(a=new n(null,4,[Ez,a,dz,k,jr,r,Iu,d],null),bT.m?bT.m(a):bT.call(null,a)):$S(d)):new n(null,6,[kB,Or,Ez,d,Iu,t,dz,f,jr,m,$x,c],null):null};
    function cT(a,b,c,d,e){return p(a)?(d=new n(null,5,[kB,Rw,Hy,b,nw,d,jr,e,kJ,fm()],null),aT(a)?K.g(d,Iy,b,G([Iu,Bf.gh(c,Iu.m(a))])):K.g(d,Iy,a,G([Iu,c]))):null}
    function dT(a,b,c,d){return p(p(b)?b:c)?(a=ei.gh(function(e){e=C(e);return d.m?d.m(e):d.call(null,e)},Vh.A(Qi,a,function(){var e=B(b);return e?e:AO(null)}(),function(){var e=B(c);return e?e:AO(null)}())),new Q(null,3,5,R,[B(Vh.gh(C,a)),p(b)?B(Vh.gh(yf,a)):null,p(c)?B(Vh.gh(function(e){return nf(e,2)},a)):null],null)):new Q(null,3,5,R,[B(ei.gh(d,a)),b,c],null)}
    function eT(a,b,c){var d=dT(a,b,c,kg);b=J(d,0,null);c=B(b);a=C(c);c=D(c);var e=J(d,1,null),f=J(e,0,null);d=J(d,2,null);return p(b)?(b=new n(null,4,[kB,Hn,Ez,b,dz,e,jr,d],null),null==c?p(f)?aT(a)?$S(TS(f,Iu.m(a))):b:a:b):null}function fT(a,b){return p(p(a)?b:a)?eT(G([a,b]),null,null):p(a)?a:b}
    var gT=function gT(a){a=xS(a);var c=Ea(a),d=x.gh(c,kB),e=x.gh(c,Ez);a=x.gh(c,Iy);var f=x.gh(c,Hy);c=x.gh(c,jr);if(A.gh(Zs,d))return !0;if(A.gh(null,d))return null;if(A.gh(Dn,d))return d=gT.m?gT.m(a):gT.call(null,a),p(d)?(a=VS(hT(a),e,D(c)),!JS(a)):d;if(A.gh(Rw,d))return (e=a===f)?e:gT.m?gT.m(a):gT.call(null,a);if(A.gh(Or,d))return Ch(gT,e);if(A.gh(Hn,d))return Dh(gT,e);throw Error(["No matching clause: ",q.m(d)].join(""));},hT=function hT(a){a=xS(a);var c=Ea(a);a=x.gh(c,Ez);var d=B(a),e=C(d);D(d);var f=
    x.gh(c,dz),k=J(f,0,null),l=x.gh(c,kB);d=x.gh(c,Iy);var m=x.gh(c,Iu);c=x.gh(c,jr);if(A.gh(Zs,l))return m;if(A.gh(null,l))return null;if(A.gh(Dn,l))return e=hT.m?hT.m(d):hT.call(null,d),(f=A.gh(e,Wn))?d=f:(d=kB.m(xS(d)),f=new Ak(null,new n(null,2,[Rw,null,Or,null],null),null),d=f.m?f.m(d):f.call(null,d),d=p(d)?Of(e):d,d=p(d)?d:null),p(d)?Wn:VS(e,a,c);if(A.gh(Rw,l))return iT(d,m,k);if(A.gh(Or,l))return iT(e,m,k);if(A.gh(Hn,l))return c=dT(a,f,c,gT),a=J(c,0,null),a=J(a,0,null),c=J(c,1,null),c=J(c,0,null),
    a=null==a?Wn:hT.m?hT.m(a):hT.call(null,a),p(c)?TS(c,a):a;throw Error(["No matching clause: ",q.m(l)].join(""));};function iT(a,b,c){a=xS(a);var d=Ea(a),e=x.gh(d,kB);x.gh(d,Ez);a=x.gh(d,nw);if(A.gh(null,e))return b;if(A.gh(Hn,e)||A.gh(Zs,e)||A.gh(Dn,e))return a=hT(d),A.gh(a,Wn)?b:Bf.gh(b,p(c)?Ff([c,a]):a);if(A.gh(Rw,e)||A.gh(Or,e))return d=hT(d),Of(d)||(c=p(c)?Ff([c,d]):d,a=p(a)?ii:Bf,b=a.gh?a.gh(b,c):a.call(null,b,c)),b;throw Error(["No matching clause: ",q.m(e)].join(""));}
    var jT=function jT(a,b){a=xS(a);var d=Ea(a),e=x.gh(d,jr),f=x.gh(d,Hy);a=x.gh(d,Ez);var k=B(a),l=C(k),m=D(k),r=x.gh(d,Iu);k=x.gh(d,kB);var t=x.gh(d,nw),v=x.gh(d,dz),y=B(v),E=C(y),H=D(y);y=x.gh(d,EC);var T=x.gh(d,Iy);if(p(d)){if(A.gh(Zs,k))return null;if(A.gh(null,k))return a=MS(d,b,d),JS(a)?null:$S(a);if(A.gh(Dn,k))return d=jT.gh?jT.gh(T,b):jT.call(null,T,b),p(d)?A.gh(Zs,kB.m(d))?(a=VS(hT(d),a,D(e)),JS(a)?null:$S(a)):new n(null,5,[kB,Dn,Iy,d,EC,y,Ez,a,jr,e],null):null;if(A.gh(Or,k))return fT(bT(new n(null,
    4,[Ez,uf(jT.gh?jT.gh(l,b):jT.call(null,l,b),m),dz,v,jr,e,Iu,r],null)),p(gT(l))?function(){var Y=bT(new n(null,4,[Ez,m,dz,H,jr,D(e),Iu,iT(l,r,E)],null));return jT.gh?jT.gh(Y,b):jT.call(null,Y,b)}():null);if(A.gh(Hn,k))return eT(Vh.gh(function(Y){return jT.gh?jT.gh(Y,b):jT.call(null,Y,b)},a),v,e);if(A.gh(Rw,k))return fT(cT(jT.gh?jT.gh(T,b):jT.call(null,T,b),f,r,t,e),p(gT(T))?function(){var Y=cT(f,f,iT(T,r,null),t,e);return jT.gh?jT.gh(Y,b):jT.call(null,Y,b)}():null);throw Error(["No matching clause: ",
    q.m(k)].join(""));}return null};function kT(a,b){for(;;){var c=B(b),d=C(c);c=D(c);if(Of(b))return p(gT(a))?(a=hT(a),A.gh(a,Wn)?null:a):Nr;a=jT(a,d);if(p(a))b=c;else return Nr}}
    var DS=function DS(a,b){if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof rc)rc=function(d,e,f){this.qe=d;this.jb=e;this.hi=f;this.h=393216;this.I=0;},rc.prototype.O=function(d,e){return new rc(this.qe,this.jb,e)},rc.prototype.N=function(){return this.hi},rc.prototype.Db=function(){return this},rc.prototype.Eb=function(){return this},rc.prototype.rc=h,rc.prototype.Zb=function(d,e){return null==e||Sf(e)?kT(this.qe,B(e)):Nr},rc.prototype.$b=function(d,
    e){return DS.gh?DS.gh(this.qe,e):DS.call(null,this.qe,e)},rc.Ia=!0,rc.Da="cljs.spec.alpha/t_cljs$spec$alpha15328",rc.Ja=function(d){return be(d,"cljs.spec.alpha/t_cljs$spec$alpha15328")};return new rc(a,b,S)};
    Z(Ls,O(RG,O(Bm,new Q(null,1,5,R,[eb],null),O(Cs,O(Ow,vr,eb),O(Ow,sr,eb))),O(Bm,new Q(null,1,5,R,[Ra],null),O(Ow,O(W,new Q(null,1,5,R,[new Q(null,2,5,R,[Ip,Gp],null)],null),new n(null,2,[vr,Ip,sr,Gp],null)),Ra))),HS(O(RG,O(W,new Q(null,1,5,R,[V],null),O(Cs,O(Ow,vr,V),O(Ow,sr,V))),O(W,new Q(null,1,5,R,[V],null),O(Ow,O(W,new Q(null,1,5,R,[new Q(null,2,5,R,[Ip,Gp],null)],null),new n(null,2,[vr,Ip,sr,Gp],null)),V))),function(a){return Hk(Vh.gh(vr,a),Vh.gh(sr,a))},null,!0,function(a){return Vh.gh(function(b){var c=
    J(b,0,null);b=J(b,1,null);return new n(null,2,[vr,c,sr,b],null)},a)}));
    var lT=function lT(a,b,c){var e=new wl(function(){return IS.gh(b,a)});if("undefined"===typeof zc||"undefined"===typeof hS||"undefined"===typeof iS||"undefined"===typeof sc)sc=function(f,k,l,m,r){this.form=f;this.Sb=k;this.jb=l;this.Sd=m;this.ii=r;this.h=393216;this.I=0;},sc.prototype.O=function(f,k){return new sc(this.form,this.Sb,this.jb,this.Sd,k)},sc.prototype.N=function(){return this.ii},sc.prototype.Db=function(){return this},sc.prototype.Eb=function(){return this},sc.prototype.rc=h,sc.prototype.Zb=
    function(f,k){return null==k?null:tS(u(this.Sd),k)},sc.prototype.$b=function(f,k){return lT.hh?lT.hh(this.form,this.Sb,k):lT.call(null,this.form,this.Sb,k)},sc.Ia=!0,sc.Da="cljs.spec.alpha/t_cljs$spec$alpha15364",sc.Ja=function(f){return be(f,"cljs.spec.alpha/t_cljs$spec$alpha15364")};return new sc(a,b,c,e,S)};Z(Pz,yo,Uc);Z(wF,yo,Uc);Z(tB,Bw,xg);Z(eq,eI,Tc);
    Z(Xx,O(ut,ir,new Q(null,3,5,R,[Pz,wF,tB],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Pz,wF,tB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Vv)},function(a){return N(a,Pn)},function(a){return N(a,In)}],null),function(a){return M(a)&&N(a,Vv)&&N(a,Pn)&&N(a,In)},I,new Q(null,3,5,R,[Pz,wF,tB],null),null,new Q(null,3,5,R,[Vv,Pn,In],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Vv)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,Pn)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,In))],null),null])));Z(CA,yo,Uc);
    Z(Qo,O(oI,CA,O(ut,ir,new Q(null,2,5,R,[eq,Xx],null))),ZS(O(gr,CA,O(qu,ir,new Q(null,2,5,R,[eq,Xx],null))),RS(new Q(null,2,5,R,[CA,O(ut,ir,new Q(null,2,5,R,[eq,Xx],null))],null),new Q(null,2,5,R,[CA,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[eq,Xx],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,uq)},function(a){return N(a,mD)}],null),function(a){return M(a)&&N(a,uq)&&N(a,mD)},I,new Q(null,2,5,R,[eq,Xx],null),null,new Q(null,2,5,R,[uq,mD],null),
    I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,uq)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,mD))],null),null]))],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,CA,O(ut,ir,new Q(null,2,5,R,[eq,Xx],null)))],null),null));Z(EA,yo,Uc);Z(DF,O(wJ,yo),lT(yo,Uc,null));Z(ln,BC,bg);Z(pq,yo,Uc);var mT,uc=Nh(S),Bc=Nh(S),mh=Nh(S),ci=Nh(S),Mk=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));mT=new cm(Le.gh("gateway.state.spec.common","address-type"),U,Mk,uc,Bc,mh,ci);Z(ws,uI,Vc);
    mT.v(null,Fs,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[pn,ws],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,gD)}],null),function(a){return M(a)&&N(a,U)&&N(a,gD)},I,new Q(null,2,5,R,[pn,ws],null),null,new Q(null,2,5,R,[U,gD],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,gD))],null),null]))});
    Z(Vo,yo,Uc);
    mT.v(null,PI,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[pn,Aq,Vo],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Cp)},function(a){return N(a,Wp)}],null),function(a){return M(a)&&N(a,U)&&N(a,Cp)&&N(a,Wp)},I,new Q(null,3,5,R,[pn,Aq,Vo],null),null,new Q(null,3,5,R,[U,Cp,Wp],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,
    [V],null),O(fG,V,Cp)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Wp))],null),null]))});mT.v(null,Uv,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[pn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},I,new Q(null,1,5,R,[pn],null),null,new Q(null,1,5,R,[U],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U))],null),null]))});
    mT.v(null,Wp,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[pn,Vo],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Wp)}],null),function(a){return M(a)&&N(a,U)&&N(a,Wp)},I,new Q(null,2,5,R,[pn,Vo],null),null,new Q(null,2,5,R,[U,Wp],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Wp))],null),null]))});
    mT.v(null,dm,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[pn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},I,new Q(null,1,5,R,[pn],null),null,new Q(null,1,5,R,[U],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U))],null),null]))});
    Z(Xu,O(fo,SA,U),PS(SA,new Me(function(){return mT},SA,Wj([xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[ex,ap,"gateway/state/spec/common.cljc",23,1,10,10,Re,null,p(mT)?mT.ld:null]))));Z(Br,O(fo,SA,U),PS(SA,new Me(function(){return mT},SA,Wj([xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[ex,ap,"gateway/state/spec/common.cljc",23,1,10,10,Re,null,p(mT)?mT.ld:null]))));
    Z(Rx,O(oI,O(UB,PD,yo,AJ,Np),uI),ZS(O(gr,O(HF,PD,Qy,AJ,bp),kC),RS(new Q(null,2,5,R,[O(UB,PD,yo,AJ,Np),uI],null),new Q(null,2,5,R,[US(new Q(null,2,5,R,[PD,AJ],null),new Q(null,2,5,R,[yo,Np],null),new Q(null,2,5,R,[Uc,Gg],null),null),Vc],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,O(UB,PD,yo,AJ,Np),uI)],null),null));Z(gH,O(UB,Lo,wx,En,yo,CJ,TF),US(new Q(null,3,5,R,[Lo,En,CJ],null),new Q(null,3,5,R,[wx,yo,TF],null),new Q(null,3,5,R,[Pc,Uc,Uf],null),null));Z(yp,O(fD,yo,Ep),WS(new Q(null,2,5,R,[yo,Ep],null),new Q(null,2,5,R,[Uc,B],null),null));Z(Ty,yo,Uc);Z(EI,O(wJ,Iq),lT(Iq,M,null));Z(iB,gH,gH);Z(mI,gH,gH);
    Z(Zm,O(fD,Np,O(Bm,new Q(null,1,5,R,[Za],null),O(fG,new Ak(null,new n(null,4,[UH,"null",Tr,"null",Do,"null",Hw,"null"],null),null),Za))),WS(new Q(null,2,5,R,[Np,O(W,new Q(null,1,5,R,[V],null),O(fG,new Ak(null,new n(null,4,[UH,"null",Tr,"null",Do,"null",Hw,"null"],null),null),V))],null),new Q(null,2,5,R,[Gg,function(a){return N(new Ak(null,new n(null,4,[UH,null,Tr,null,Do,null,Hw,null],null),null),a)}],null),null));
    Z(un,O(hq,EA,Ns,QB),ZS(EA,EA,new n(null,5,[Xn,QB,IC,function(a){return Qf(a)},Ns,Qf,oy,!0,GH,O(hq,EA,Ns,QB)],null),null));Z(zx,EA,EA);Z(Pb,EA,EA);Z(Oa,fq,Rc);Z(Ka,fq,Rc);
    Z(TC,O(ut,ir,new Q(null,2,5,R,[Oa,Ka],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Oa,Ka],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,ub)},function(a){return N(a,Va)}],null),function(a){return M(a)&&N(a,ub)&&N(a,Va)},I,new Q(null,2,5,R,[Oa,Ka],null),null,new Q(null,2,5,R,[ub,Va],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ub)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Va))],null),
    null])));
    Z(WE,O(ut,ir,new Q(null,4,5,R,[yp,Zm,un,Pb],null),dA,new Q(null,6,5,R,[Ty,iB,mI,EI,zx,TC],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[yp,Zm,un,Pb],null),new Q(null,6,5,R,[Ty,iB,mI,EI,zx,TC],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,kJ)},function(a){return N(a,Uz)},function(a){return N(a,nD)},function(a){return N(a,Rb)}],null),function(a){return M(a)&&N(a,kJ)&&N(a,Uz)&&N(a,nD)&&N(a,Rb)},new Q(null,6,5,R,[tw,cz,Xs,wn,jA,In],null),new Q(null,
    4,5,R,[yp,Zm,un,Pb],null),null,new Q(null,4,5,R,[kJ,Uz,nD,Rb],null),new Q(null,6,5,R,[Ty,iB,mI,EI,zx,TC],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,kJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,nD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Rb))],null),null])));
    Z(Cy,O(oI,yp,WE),ZS(O(gr,yp,WE),RS(new Q(null,2,5,R,[yp,WE],null),new Q(null,2,5,R,[yp,WE],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,yp,WE)],null),null));Z(Rr,BC,bg);Z(yH,yo,Uc);Z(Yv,O(oI,eI,uI),ZS(O(gr,xA,kC),RS(new Q(null,2,5,R,[eI,uI],null),new Q(null,2,5,R,[Tc,Vc],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,eI,uI)],null),null));Z(ZI,O(oI,eI,uI),ZS(O(gr,xA,kC),RS(new Q(null,2,5,R,[eI,uI],null),new Q(null,2,5,R,[Tc,Vc],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,eI,uI)],null),null));
    Z(Oq,O(ut,ir,new Q(null,2,5,R,[Rr,yH],null),dA,new Q(null,2,5,R,[Yv,ZI],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Rr,yH],null),new Q(null,2,5,R,[Yv,ZI],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,kJ)},function(a){return N(a,DH)}],null),function(a){return M(a)&&N(a,kJ)&&N(a,DH)},new Q(null,2,5,R,[IH,bv],null),new Q(null,2,5,R,[Rr,yH],null),null,new Q(null,2,5,R,[kJ,DH],null),new Q(null,2,5,R,[Yv,ZI],null),new Q(null,3,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,kJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,DH))],null),null])));Z(fF,O(oI,yH,Oq),ZS(O(gr,yH,Oq),RS(new Q(null,2,5,R,[yH,Oq],null),new Q(null,2,5,R,[yH,Oq],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,yH,Oq)],null),null));Z(vA,yo,Uc);Z(sv,vA,vA);Z(Wr,O(oI,eI,eI),ZS(O(gr,xA,xA),RS(new Q(null,2,5,R,[eI,eI],null),new Q(null,2,5,R,[Tc,Tc],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,eI,eI)],null),null));
    Z(Av,O(ut,ir,new Q(null,1,5,R,[vA],null),dA,new Q(null,2,5,R,[sv,Wr],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[vA],null),new Q(null,2,5,R,[sv,Wr],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,U)},new Q(null,2,5,R,[tw,IH],null),new Q(null,1,5,R,[vA],null),null,new Q(null,1,5,R,[U],null),new Q(null,2,5,R,[sv,Wr],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),
    O(fG,V,U))],null),null])));Z(Sq,Av,Av);Z(Dt,O(hq,Av,Ns,TF),ZS(Av,Av,new n(null,5,[Xn,TF,IC,function(a){return Uf(a)},Ns,Uf,oy,!0,GH,O(hq,Av,Ns,TF)],null),null));Z(KD,O(oI,eI,eI),ZS(O(gr,xA,xA),RS(new Q(null,2,5,R,[eI,eI],null),new Q(null,2,5,R,[Tc,Tc],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,eI,eI)],null),null));Z(Fq,gH,gH);
    Z(QD,O(ut,ir,new Q(null,2,5,R,[sv,Sq],null),dA,new Q(null,3,5,R,[Dt,KD,Fq],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[sv,Sq],null),new Q(null,3,5,R,[Dt,KD,Fq],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,tw)},function(a){return N(a,nH)}],null),function(a){return M(a)&&N(a,tw)&&N(a,nH)},new Q(null,3,5,R,[XF,Mz,Fx],null),new Q(null,2,5,R,[sv,Sq],null),null,new Q(null,2,5,R,[tw,nH],null),new Q(null,3,5,R,[Dt,KD,Fq],null),new Q(null,3,5,R,[O(W,
    new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,nH))],null),null])));Z($u,yo,Uc);
    Z(ur,O(oI,$u,O(oI,vA,QD)),ZS(O(gr,$u,O(EF,vA,QD)),RS(new Q(null,2,5,R,[$u,O(oI,vA,QD)],null),new Q(null,2,5,R,[$u,ZS(O(gr,vA,QD),RS(new Q(null,2,5,R,[vA,QD],null),new Q(null,2,5,R,[vA,QD],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,vA,QD)],null),null)],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,$u,O(oI,vA,QD))],null),null));Z(Bn,yo,Uc);Z(gt,yp,yp);Z(Tq,EA,EA);
    Z(Oy,EA,EA);Z(nr,O(hq,EA,Ns,QB),ZS(EA,EA,new n(null,5,[Xn,QB,IC,function(a){return Qf(a)},Ns,Qf,oy,!0,GH,O(hq,EA,Ns,QB)],null),null));Z(IA,O(hq,EA,Ns,QB),ZS(EA,EA,new n(null,5,[Xn,QB,IC,function(a){return Qf(a)},Ns,Qf,oy,!0,GH,O(hq,EA,Ns,QB)],null),null));Z(MB,WE,WE);
    Z(lI,O(ut,ir,new Q(null,3,5,R,[vA,MB,Oy],null),dA,new Q(null,3,5,R,[IA,iC,su],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[vA,MB,Oy],null),new Q(null,3,5,R,[IA,iC,su],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,ZH)},function(a){return N(a,jA)}],null),function(a){return M(a)&&N(a,U)&&N(a,ZH)&&N(a,jA)},new Q(null,3,5,R,[fs,Dw,SC],null),new Q(null,3,5,R,[vA,MB,Oy],null),null,new Q(null,3,5,R,[U,ZH,jA],null),new Q(null,
    3,5,R,[IA,iC,su],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ZH)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jA))],null),null])));Z(su,O(oI,Bn,lI),ZS(O(gr,Bn,lI),RS(new Q(null,2,5,R,[Bn,lI],null),new Q(null,2,5,R,[Bn,lI],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,Bn,lI)],null),null));Z(Fy,Bn,Bn);Z(BB,cH,Yf);
    Z(gB,O(ut,ir,new Q(null,4,5,R,[Bn,vA,Nq,Tq],null),dA,new Q(null,5,5,R,[BB,Oy,IA,nr,su],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[Bn,vA,Nq,Tq],null),new Q(null,5,5,R,[BB,Oy,IA,nr,su],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,kJ)},function(a){return N(a,U)},function(a){return N(a,Yo)},function(a){return N(a,jn)}],null),function(a){return M(a)&&N(a,kJ)&&N(a,U)&&N(a,Yo)&&N(a,jn)},new Q(null,5,5,R,[Fo,jA,fs,tG,SC],null),new Q(null,4,5,R,[Bn,
    vA,Nq,Tq],null),null,new Q(null,4,5,R,[kJ,U,Yo,jn],null),new Q(null,5,5,R,[BB,Oy,IA,nr,su],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,kJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Yo)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jn))],null),null])));
    Z(rE,O(oI,Bn,gB),ZS(O(gr,Bn,gB),RS(new Q(null,2,5,R,[Bn,gB],null),new Q(null,2,5,R,[Bn,gB],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,Bn,gB)],null),null));
    Z(yD,O(ut,dA,new Q(null,1,5,R,[fF],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,1,5,R,[fF],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[VF],null),I,null,I,new Q(null,1,5,R,[fF],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));
    Z(yB,O(oI,O(UB,U,vA,sC,O(VA,iH,sC)),O(hq,EA,Ns,QB)),ZS(O(gr,O(HF,U,vA,sC,O(Ku,jF,sC)),O(iz,EA,Ns,FA)),RS(new Q(null,2,5,R,[O(UB,U,vA,sC,O(VA,iH,sC)),O(hq,EA,Ns,QB)],null),new Q(null,2,5,R,[US(new Q(null,2,5,R,[U,sC],null),new Q(null,2,5,R,[vA,O(VA,iH,sC)],null),new Q(null,2,5,R,[vA,Ih(A,sC)],null),null),ZS(EA,EA,new n(null,5,[Xn,QB,IC,function(a){return Qf(a)},Ns,Qf,oy,!0,GH,O(hq,EA,Ns,QB)],null),null)],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,
    0)},oy,!0,GH,O(oI,O(UB,U,vA,sC,O(VA,iH,sC)),O(hq,EA,Ns,QB))],null),null));Z(NG,BC,bg);Z(pB,yo,Uc);Z(Ro,BC,bg);Z(FD,yo,Uc);Z(mr,yo,Uc);Z(tE,yo,Uc);Z(dv,yo,Uc);
    Z(GD,O(ut,ir,new Q(null,6,5,R,[NG,pB,Ro,jp,FD,mr],null),dA,new Q(null,3,5,R,[tE,dv,gH],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,6,5,R,[NG,pB,Ro,jp,FD,mr],null),new Q(null,3,5,R,[tE,dv,gH],null),null,new Q(null,7,5,R,[function(a){return M(a)},function(a){return N(a,kJ)},function(a){return N(a,tw)},function(a){return N(a,In)},function(a){return N(a,bv)},function(a){return N(a,sp)},function(a){return N(a,qp)}],null),function(a){return M(a)&&N(a,kJ)&&N(a,tw)&&N(a,In)&&N(a,bv)&&N(a,
    sp)&&N(a,qp)},new Q(null,3,5,R,[Pv,Pn,os],null),new Q(null,6,5,R,[NG,pB,Ro,jp,FD,mr],null),null,new Q(null,6,5,R,[kJ,tw,In,bv,sp,qp],null),new Q(null,3,5,R,[tE,dv,gH],null),new Q(null,7,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,kJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,In)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,bv)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,sp)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qp))],null),null])));
    Z(QH,O(UB,fB,YC,to,O(oI,NG,GD)),US(new Q(null,2,5,R,[fB,to],null),new Q(null,2,5,R,[YC,O(oI,NG,GD)],null),new Q(null,2,5,R,[Of,ZS(O(gr,NG,GD),RS(new Q(null,2,5,R,[NG,GD],null),new Q(null,2,5,R,[NG,GD],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,NG,GD)],null),null)],null),null));
    Z(Ps,O(oI,EA,QH),ZS(O(gr,EA,QH),RS(new Q(null,2,5,R,[EA,QH],null),new Q(null,2,5,R,[EA,QH],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,EA,QH)],null),null));Z(TG,NG,NG);Z(ry,DF,DF);Z(xI,DF,DF);Z(cG,DF,DF);Z(ly,EA,EA);
    Z(dr,O(ut,ir,new Q(null,3,5,R,[ly,TG,ry],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[ly,TG,ry],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Yr)},function(a){return N(a,FI)},function(a){return N(a,mu)}],null),function(a){return M(a)&&N(a,Yr)&&N(a,FI)&&N(a,mu)},I,new Q(null,3,5,R,[ly,TG,ry],null),null,new Q(null,3,5,R,[Yr,FI,mu],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Yr)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,mu))],null),null])));Z(So,O(oI,cG,dr),ZS(O(gr,cG,dr),RS(new Q(null,2,5,R,[cG,dr],null),new Q(null,2,5,R,[cG,dr],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,cG,dr)],null),null));Z(ny,EA,EA);
    Z(Wt,O(ut,ir,new Q(null,3,5,R,[ny,TG,cG],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[ny,TG,cG],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Qr)},function(a){return N(a,FI)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,Qr)&&N(a,FI)&&N(a,is)},I,new Q(null,3,5,R,[ny,TG,cG],null),null,new Q(null,3,5,R,[Qr,FI,is],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Qr)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,is))],null),null])));Z(xE,O(oI,ry,Wt),ZS(O(gr,ry,Wt),RS(new Q(null,2,5,R,[ry,Wt],null),new Q(null,2,5,R,[ry,Wt],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,ry,Wt)],null),null));Z(hD,yo,Uc);Z(rZ,hD,hD);Z(Es,EA,EA);
    Z($p,O(ut,ir,new Q(null,3,5,R,[Es,TG,cG],null),dA,new Q(null,1,5,R,[rZ],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Es,TG,cG],null),new Q(null,1,5,R,[rZ],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,ro)},function(a){return N(a,FI)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,ro)&&N(a,FI)&&N(a,is)},new Q(null,1,5,R,[mJ],null),new Q(null,3,5,R,[Es,TG,cG],null),null,new Q(null,3,5,R,[ro,FI,is],null),new Q(null,1,5,R,[rZ],null),
    new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ro)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,is))],null),null])));Z(MA,O(oI,xI,$p),ZS(O(gr,xI,$p),RS(new Q(null,2,5,R,[xI,$p],null),new Q(null,2,5,R,[xI,$p],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,xI,$p)],null),null));Z(Eo,EA,EA);
    Z(Vq,O(ut,Pq,new Q(null,2,5,R,[Eo,NG],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,null,null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},I,I,null,I,I,new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));Z(cy,O(oI,xI,Vq),ZS(O(gr,xI,Vq),RS(new Q(null,2,5,R,[xI,Vq],null),new Q(null,2,5,R,[xI,Vq],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,xI,Vq)],null),null));
    Z(eF,O(oI,EA,O(hq,xI,Ns,QB)),ZS(O(gr,EA,O(iz,xI,Ns,FA)),RS(new Q(null,2,5,R,[EA,O(hq,xI,Ns,QB)],null),new Q(null,2,5,R,[EA,ZS(xI,xI,new n(null,5,[Xn,QB,IC,function(a){return Qf(a)},Ns,Qf,oy,!0,GH,O(hq,xI,Ns,QB)],null),null)],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,EA,O(hq,xI,Ns,QB))],null),null));
    Z(UI,O(oI,hD,eF),ZS(O(gr,hD,eF),RS(new Q(null,2,5,R,[hD,eF],null),new Q(null,2,5,R,[hD,eF],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,hD,eF)],null),null));
    Z(qF,O(ut,dA,new Q(null,7,5,R,[gH,Ps,So,xE,MA,cy,UI],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,7,5,R,[gH,Ps,So,xE,MA,cy,UI],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,7,5,R,[os,Uw,eA,Sw,my,Yn,vD],null),I,null,I,new Q(null,7,5,R,[gH,Ps,So,xE,MA,cy,UI],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));Z(bo,DF,DF);Z(wz,yo,Uc);Z(zq,uI,Vc);
    Z(QI,O(ut,ir,new Q(null,1,5,R,[wz],null),dA,new Q(null,2,5,R,[zq,Ay],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[wz],null),new Q(null,2,5,R,[zq,Ay],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Wo)}],null),function(a){return M(a)&&N(a,Wo)},new Q(null,2,5,R,[kF,FH],null),new Q(null,1,5,R,[wz],null),null,new Q(null,1,5,R,[Wo],null),new Q(null,2,5,R,[zq,Ay],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],
    null),O(fG,V,Wo))],null),null])));Z(Rs,O(oI,bo,QI),ZS(O(gr,bo,QI),RS(new Q(null,2,5,R,[bo,QI],null),new Q(null,2,5,R,[bo,QI],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,bo,QI)],null),null));
    Z(SG,O(ut,dA,new Q(null,1,5,R,[Rs],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,1,5,R,[Rs],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[my],null),I,null,I,new Q(null,1,5,R,[Rs],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));Z($D,yo,Uc);Z(hB,BC,bg);Z(Lz,EA,EA);Z(QC,DF,DF);
    Z(Ev,O(ut,ir,new Q(null,2,5,R,[Lz,QC],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Lz,QC],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,cD)},function(a){return N(a,tH)}],null),function(a){return M(a)&&N(a,cD)&&N(a,tH)},I,new Q(null,2,5,R,[Lz,QC],null),null,new Q(null,2,5,R,[cD,tH],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,cD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tH))],null),
    null])));Z(YG,DF,DF);Z(Ms,yo,Uc);Z(cF,cH,Yf);Z($r,O(ut,Pq,new Q(null,2,5,R,[Ms,cF],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,null,null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},I,I,null,I,I,new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));Z(Bu,$D,$D);Z(pu,new Ak(null,new n(null,2,[wB,"null",Tr,"null"],null),null),new Ak(null,new n(null,2,[wB,null,Tr,null],null),null));
    Z(yw,O(ut,ir,new Q(null,2,5,R,[Ms,pu],null),dA,new Q(null,3,5,R,[Uy,$r,yH],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Ms,pu],null),new Q(null,3,5,R,[Uy,$r,yH],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,kJ)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,kJ)&&N(a,U)},new Q(null,3,5,R,[en,Tr,DH],null),new Q(null,2,5,R,[Ms,pu],null),null,new Q(null,2,5,R,[kJ,U],null),new Q(null,3,5,R,[Uy,$r,yH],null),new Q(null,3,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,kJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U))],null),null])));Z(Ks,O(oI,YG,yw),ZS(O(gr,YG,yw),RS(new Q(null,2,5,R,[YG,yw],null),new Q(null,2,5,R,[YG,yw],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,YG,yw)],null),null));Z(mp,BC,bg);Z(Pt,yw,yw);
    Z(vy,O(ut,ir,new Q(null,2,5,R,[Br,Rx],null),dA,new Q(null,6,5,R,[XC,qF,yD,SG,Pt,yH],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Br,Rx],null),new Q(null,6,5,R,[XC,qF,yD,SG,Pt,yH],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,hz)},function(a){return N(a,jD)}],null),function(a){return M(a)&&N(a,hz)&&N(a,jD)},new Q(null,6,5,R,[YH,fp,Yx,Hq,XG,DH],null),new Q(null,2,5,R,[Br,Rx],null),null,new Q(null,2,5,R,[hz,jD],null),new Q(null,6,5,R,[XC,qF,yD,
    SG,Pt,yH],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,hz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD))],null),null])));Z(Zv,O(oI,EA,vy),ZS(O(gr,EA,vy),RS(new Q(null,2,5,R,[EA,vy],null),new Q(null,2,5,R,[EA,vy],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,EA,vy)],null),null));
    Z(uD,O(oI,O(UB,Mt,yo,Eu,new Ak(null,new n(null,1,[My,"null"],null),null)),O(hq,EA)),ZS(O(gr,O(HF,Mt,Qy,Eu,new Ak(null,new n(null,1,[My,"null"],null),null)),O(iz,EA)),RS(new Q(null,2,5,R,[O(UB,Mt,yo,Eu,new Ak(null,new n(null,1,[My,"null"],null),null)),O(hq,EA)],null),new Q(null,2,5,R,[US(new Q(null,2,5,R,[Mt,Eu],null),new Q(null,2,5,R,[yo,new Ak(null,new n(null,1,[My,"null"],null),null)],null),new Q(null,2,5,R,[Uc,new Ak(null,new n(null,1,[My,null],null),null)],null),null),ZS(EA,EA,new n(null,4,[Xn,
    null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,EA)],null),null)],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,O(UB,Mt,yo,Eu,new Ak(null,new n(null,1,[My,"null"],null),null)),O(hq,EA))],null),null));Z(mB,O(hq,EA),ZS(EA,EA,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,EA)],null),null));Z(Xt,Cy,Cy);Z(mG,ur,ur);Z(Co,yB,yB);
    Z(cs,O(oI,Rx,EA),ZS(O(gr,Rx,EA),RS(new Q(null,2,5,R,[Rx,EA],null),new Q(null,2,5,R,[Rx,EA],null)),new n(null,7,[oC,S,Xn,Iq,IC,function(a){return M(a)},Ns,M,MF,function(a,b){return nf(b,0)},oy,!0,GH,O(oI,Rx,EA)],null),null));Z(HI,uI,Vc);Z(Gw,yo,Uc);Z(VG,Bw,xg);
    Z(iw,O(ut,ir,new Q(null,2,5,R,[Gw,VG],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Gw,VG],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Wy)},function(a){return N(a,Qq)}],null),function(a){return M(a)&&N(a,Wy)&&N(a,Qq)},I,new Q(null,2,5,R,[Gw,VG],null),null,new Q(null,2,5,R,[Wy,Qq],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Wy)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Qq))],null),
    null])));Z(dp,yo,Uc);
    Z(tp,O(ut,ir,new Q(null,2,5,R,[iw,dp],null),dA,new Q(null,11,5,R,[HI,Qo,Zv,uD,mB,cs,Xt,Ks,rE,mG,Co],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[iw,dp],null),new Q(null,11,5,R,[HI,Qo,Zv,uD,mB,cs,Xt,Ks,rE,mG,Co],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Hx)},function(a){return N(a,nn)}],null),function(a){return M(a)&&N(a,Hx)&&N(a,nn)},new Q(null,11,5,R,[er,lz,Cn,uv,at,ru,Zn,WB,vs,Vr,BF],null),new Q(null,2,5,R,[iw,dp],null),null,new Q(null,
    2,5,R,[Hx,nn],null),new Q(null,11,5,R,[HI,Qo,Zv,uD,mB,cs,Xt,Ks,rE,mG,Co],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Hx)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,nn))],null),null])));Z(LE,yo,Uc);Z(Sm,Np,Gg);var sT,Pk=Nh(S),Qk=Nh(S),kl=Nh(S),Kl=Nh(S),Um=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));sT=new cm(Le.gh("gateway.common.spec.messages","message-body"),U,Um,Pk,Qk,kl,Kl);Z(LD,yo,Uc);Z(ZB,yo,Uc);Z(Lt,O(wJ,EA),lT(EA,EA,null));
    Z(gG,O(ut,ir,new Q(null,2,5,R,[LE,Sm],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[LE,Sm],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,uq)},function(a){return N(a,U)}],null),function(a){return M(a)&&N(a,uq)&&N(a,U)},I,new Q(null,2,5,R,[LE,Sm],null),null,new Q(null,2,5,R,[uq,U],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,uq)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U))],null),null])));
    Z(Up,O(ut,ir,new Q(null,2,5,R,[DF,EA],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[DF,EA],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,is)},function(a){return N(a,jw)}],null),function(a){return M(a)&&N(a,is)&&N(a,jw)},I,new Q(null,2,5,R,[DF,EA],null),null,new Q(null,2,5,R,[is,jw],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,is)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw))],null),
    null])));Z(Mn,O(ut,ir,new Q(null,1,5,R,[EA],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[EA],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,jw)}],null),function(a){return M(a)&&N(a,jw)},I,new Q(null,1,5,R,[EA],null),null,new Q(null,1,5,R,[jw],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw))],null),null])));
    Z(rs,O(rv,gG,Mn),XS(new Q(null,2,5,R,[gG,Mn],null),new Q(null,2,5,R,[gG,Mn],null),null));
    Z(ov,O(rv,gG,Mn,O(ut,ir,new Q(null,1,5,R,[DF],null))),XS(new Q(null,3,5,R,[gG,Mn,O(ut,ir,new Q(null,1,5,R,[DF],null))],null),new Q(null,3,5,R,[gG,Mn,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[DF],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,is)}],null),function(a){return M(a)&&N(a,is)},I,new Q(null,1,5,R,[DF],null),null,new Q(null,1,5,R,[is],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,
    V,is))],null),null]))],null),null));
    sT.v(null,DA,function(){return XS(new Q(null,2,5,R,[gG,O(ut,ir,new Q(null,2,5,R,[LD,ZB],null),dA,new Q(null,1,5,R,[Lt],null))],null),new Q(null,2,5,R,[gG,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[LD,ZB],null),new Q(null,1,5,R,[Lt],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,qE)&&N(a,eJ)},new Q(null,1,5,R,[jw],null),new Q(null,2,5,R,[LD,ZB],null),null,new Q(null,2,5,R,[qE,eJ],
    null),new Q(null,1,5,R,[Lt],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});
    sT.v(null,mz,function(){return XS(new Q(null,2,5,R,[gG,O(ut,dA,new Q(null,1,5,R,[Lt],null))],null),new Q(null,2,5,R,[gG,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,1,5,R,[Lt],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,1,5,R,[jw],null),I,null,I,new Q(null,1,5,R,[Lt],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null]))],null),null)});
    Z(RI,O(fo,Ir,U),PS(Ir,new Me(function(){return sT},Ir,Wj([xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[xB,no,"gateway/common/spec/messages.cljc",23,1,8,8,Re,null,p(sT)?sT.ld:null]))));Z(xJ,Xu,Xu);
    Z(OC,O(ut,ir,new Q(null,2,5,R,[Br,RI],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Br,RI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,hz)},function(a){return N(a,Sv)}],null),function(a){return M(a)&&N(a,hz)&&N(a,Sv)},I,new Q(null,2,5,R,[Br,RI],null),null,new Q(null,2,5,R,[hz,Sv],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,hz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Sv))],null),
    null])));
    Z(mv,O(ut,ir,new Q(null,2,5,R,[xJ,RI],null),dA,new Q(null,1,5,R,[Br],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[xJ,RI],null),new Q(null,1,5,R,[Br],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,By)},function(a){return N(a,Sv)}],null),function(a){return M(a)&&N(a,By)&&N(a,Sv)},new Q(null,1,5,R,[hz],null),new Q(null,2,5,R,[xJ,RI],null),null,new Q(null,2,5,R,[By,Sv],null),new Q(null,1,5,R,[Br],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,By)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Sv))],null),null])));Z(sy,O(wJ,O(hq,mv)),lT(O(hq,mv),ZS(mv,mv,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,mv)],null),null),null));Z(XA,cH,Yf);
    Z(dE,O(ut,ir,new Q(null,1,5,R,[XA],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[XA],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Fs)}],null),function(a){return M(a)&&N(a,Fs)},I,new Q(null,1,5,R,[XA],null),null,new Q(null,1,5,R,[Fs],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Fs))],null),null])));
    sT.v(null,QE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[dD,Rx,dE],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[dD,Rx,dE],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,ZA)},function(a){return N(a,jD)},function(a){return N(a,Lc)}],null),function(a){return M(a)&&N(a,ZA)&&N(a,jD)&&N(a,Lc)},I,new Q(null,3,5,R,[dD,Rx,dE],null),null,new Q(null,3,5,R,[ZA,jD,Lc],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ZA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Lc))],null),null]))],null),null)});Z(aF,EA,EA);
    sT.v(null,iE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[aF,LD,ZB],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[aF,LD,ZB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,yJ)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,yJ)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[aF,LD,ZB],null),null,new Q(null,3,5,R,[yJ,qE,eJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,yJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});Z(hx,O(wJ,O(gr,O(wJ,tp),O(wJ,O(hq,mv)))),lT(O(gr,O(wJ,tp),O(wJ,O(hq,mv))),RS(new Q(null,2,5,R,[O(wJ,tp),O(wJ,O(hq,mv))],null),new Q(null,2,5,R,[lT(tp,tp,null),lT(O(hq,mv),ZS(mv,mv,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,mv)],null),null),null)],null)),null));function yT(a){if(null!=a&&null!=a.Yc)a=a.Yc(a);else {var b=yT[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=yT._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Domain.info",a);}return a}
    function zT(a,b){if(null!=a&&null!=a.Zc)a=a.Zc(a,b);else {var c=zT[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=zT._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Domain.init",a);}return a}function AT(a,b){if(null!=a&&null!=a.Wc)a=a.Wc(a,b);else {var c=AT[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=AT._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Domain.destroy",a);}return a}
    function BT(a,b,c){if(null!=a&&null!=a.Xc)a=a.Xc(a,b,c);else {var d=BT[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=BT._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("Domain.handle-message",a);}return a}function CT(a,b,c,d,e,f,k){this.id=a;this.fc=b;this.source=c;this.options=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=CT.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "id":return this.id;case "identity":return this.fc;case "source":return this.source;case "options":return this.options;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#gateway.state.peers.Peer{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[kJ,this.id],null),new Q(null,2,5,R,[jD,this.fc],null),new Q(null,2,5,R,[hz,this.source],null),new Q(null,2,5,R,[YH,this.options],null)],null),this.j))};
    g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[kJ,jD,hz,YH],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=802532213^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.id,b.id)&&A.gh(this.fc,b.fc)&&A.gh(this.source,b.source)&&A.gh(this.options,b.options)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[jD,null,hz,null,kJ,null,YH,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new CT(this.id,this.fc,this.source,this.options,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "id":case "identity":case "source":case "options":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(kJ,b):P.call(null,kJ,b))?new CT(c,this.fc,this.source,this.options,this.$,this.j,null):p(P.gh?P.gh(jD,b):P.call(null,jD,b))?new CT(this.id,c,this.source,this.options,this.$,this.j,null):p(P.gh?P.gh(hz,b):P.call(null,hz,b))?new CT(this.id,this.fc,c,this.options,this.$,this.j,null):p(P.gh?P.gh(YH,b):P.call(null,YH,b))?new CT(this.id,this.fc,this.source,c,this.$,this.j,null):new CT(this.id,this.fc,this.source,this.options,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(kJ,this.id),new Fi(jD,this.fc),new Fi(hz,this.source),new Fi(YH,this.options)],null),this.j))};g.O=function(a,b){return new CT(this.id,this.fc,this.source,this.options,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    var DT=function DT(a){switch(arguments.length){case 2:return DT.gh(arguments[0],arguments[1]);case 3:return DT.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};DT.gh=function(a,b){return p(b)?li.gh(a,new Q(null,2,5,R,[Cn,b],null)):null};DT.hh=function(a,b,c){a=DT.gh(a,b);return p(x.gh(a,c))?a:null};DT.F=3;
    function ET(a,b){if(null==b)throw hm("Peer id is missing",S);a=DT.gh(a,b);if(p(a))return a;throw hm(["Unable to find peer with id ",q.m(b)].join(""),S);}function FT(a,b,c){if(null==b)throw hm("Peer id is missing",S);a=DT.hh(a,b,c);if(p(a))return a;throw hm(["Unable to find peer with id ",q.m(b)," in domain ",q.m(c)].join(""),S);}function GT(a){return A.gh(Fs,li.gh(a,new Q(null,2,5,R,[hz,U],null)))}function HT(a,b){return Cl(G([Vh.m(Ih(DT,a)),li.gh(a,new Q(null,2,5,R,[zr,b],null))]))}
    function IT(a,b){var c=U.m(b);switch(c instanceof z?c.da:null){case "node":return A.gh(Wp.m(b),Wp.m(a));case "peer":return A.gh(Wp.m(b),Wp.m(a))&&A.gh(Cp.m(b),Cp.m(a));case "local":return A.gh(gD.m(b),gD.m(a));default:return !1}}function JT(a,b){return Cl(G([Hh.gh(Vh.m(Pi),ei.m(function(c){return IT(hz.m(c),b)})),Cn.m(a)]))}function KT(a,b,c){return Cl(G([ei.m(function(d){return IT(hz.m(d),b)}),HT(a,c)]))}
    function LT(a,b,c,d,e,f){var k=DT.gh(a,c);if(p(k)){var l=k;return new Q(null,2,5,R,[a,l],null)}l=function(){var r=new CT(c,d,b,f,null,null,null);return p(e)?K.hh(r,XG,e):r}();var m=ct.gh(d,My);k=function(){var r=mi(ni.A(mi(a,new Q(null,2,5,R,[ru,d],null),c),new Q(null,2,5,R,[uv,m],null),Lh(Bf,Ck),c),new Q(null,2,5,R,[Cn,c],null),l);return p(ko.m(f))?pi(r,at,Lh(Bf,Ck),c):r}();return new Q(null,2,5,R,[k,l],null)}
    function MT(a,b){var c=jD.m(b),d=kJ.m(b),e=ct.gh(c,My);return pi(pi(oi(pi(a,ru,Gf,c),uv,function(f){var k=Nf.gh(x.gh(f,e),d);return B(k)?K.hh(f,e,k):Gf.gh(f,e)}),Cn,Gf,d),at,Lh(Nf,Ck),d)}function NT(a,b,c){return mi(a,new Q(null,2,5,R,[Cn,b],null),c)}function OT(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return hh(ni,arguments[0],new Q(null,2,5,R,[Cn,arguments[1]],null),arguments[2],3<b.length?new Pe(b.slice(3),0,null):null)}
    var PT=function PT(a){switch(arguments.length){case 6:return PT.la(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);case 3:return PT.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};PT.la=function(a,b,c,d,e,f){if(null==b&&null==e)return d=ct.m(d),a=ct.m(a),p(f)?f:p(c)?c:A.gh(d,a);c=gS(b,a,d);return p(c)?gS(e,d,a):c};
    PT.hh=function(a,b,c){var d=jD.m(b),e=li.gh(b,new Q(null,2,5,R,[a,os],null)),f=li.gh(b,new Q(null,2,5,R,[YH,ko],null)),k=jD.m(c);a=li.gh(c,new Q(null,2,5,R,[a,os],null));var l=li.gh(c,new Q(null,2,5,R,[YH,ko],null));return (b=jh.gh(kJ.m(c),kJ.m(b)))?PT.la(d,e,f,k,a,l):b};PT.F=6;function QT(a,b,c,d){return Cl(G([ei.m(function(e){var f=PT.hh(b,c,e);return p(f)?f:p(d)?A.gh(kJ.m(e),kJ.m(c)):d}),Wg.gh(HT(a,b),Vh.gh(Ih(DT,a),at.m(a)))]))}
    function RT(a,b,c,d){if(p(li.gh(c,new Q(null,2,5,R,[YH,ko],null))))return QT(a,b,c,d);var e=li.gh(c,new Q(null,2,5,R,[jD,ct],null));return p(e)?Cl(G([Hh.gh(Vh.m(Ih(DT,a)),ei.m(function(f){var k=x.gh(f,b);k=p(k)?PT.hh(b,c,f):k;return p(k)?k:p(d)?A.gh(kJ.m(f),kJ.m(c)):d})),Wg.gh(li.gh(a,new Q(null,2,5,R,[uv,e],null)),at.m(a))])):QT(a,b,c,d)}
    function ST(a,b,c,d,e){return fd.hh(function(f,k){var l=jD.m(k),m=kJ.m(k),r=kJ.m(e),t=GT(e);f=t?Bf.gh(f,uL.la(a,d,r,m,l,new n(null,1,[Fs,t],null))):f;return GT(k)?Bf.gh(f,uL.la(a,hz.m(k),m,r,jD.m(e),new n(null,1,[Fs,t],null))):f},I,RT(c,b,e,!1))}function TT(a,b,c,d,e,f){var k=kJ.m(d);return new Q(null,2,5,R,[jL(c,k,b),fd.hh(function(l,m){l=Bf.gh(l,vL.K(a,hz.m(m),kJ.m(m),k,e));return Sc(f)?Bf.gh(l,vL.K(a,hz.m(d),k,kJ.m(m),e)):l},I,RT(c,b,d,!1))],null)}var cn={Tg:["BC","AD"],Sg:["Before Christ","Anno Domini"],Wg:"JFMAMJJASOND".split(""),bh:"JFMAMJJASOND".split(""),Vg:"January February March April May June July August September October November December".split(" "),ah:"January February March April May June July August September October November December".split(" "),Yg:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),eh:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),jh:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
    ih:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),$g:"Sun Mon Tue Wed Thu Fri Sat".split(" "),fh:"Sun Mon Tue Wed Thu Fri Sat".split(" "),xi:"SMTWTFS".split(""),dh:"SMTWTFS".split(""),Zg:["Q1","Q2","Q3","Q4"],Xg:["1st quarter","2nd quarter","3rd quarter","4th quarter"],Og:["AM","PM"],Ef:["EEEE, MMMM d, y","MMMM d, y","MMM d, y","M/d/yy"],sg:["h:mm:ss a zzzz","h:mm:ss a z","h:mm:ss a","h:mm a"],Qg:["{1} 'at' {0}","{1} 'at' {0}","{1}, {0}","{1}, {0}"],Vf:6,zi:[5,6],Wf:5},yn=cn;
    yn=cn;function Ln(a,b,c,d,e){a=new Date(a,b,c);e=e||0;return a.valueOf()+864E5*(((void 0!==d?d:3)-e+7)%7-((a.getDay()+6)%7-e+7)%7)}function On(){}
    function $n(a){if("number"==typeof a){var b=new On;b.Qb=a;var c=a;if(0==c)c="Etc/GMT";else {var d=["Etc/GMT",0>c?"-":"+"];c=Math.abs(c);d.push(Math.floor(c/60)%100);c%=60;0!=c&&d.push(":",ua(c,2));c=d.join("");}b.nd=c;c=a;0==c?c="UTC":(d=["UTC",0>c?"+":"-"],c=Math.abs(c),d.push(Math.floor(c/60)%100),c%=60,0!=c&&d.push(":",c),c=d.join(""));a=ao(a);b.ve=[c,c];b.Mb={yi:a,Xf:a};b.Tb=[];return b}b=new On;b.nd=a.id;b.Qb=-a.std_offset;b.ve=a.names;b.Mb=a.names_ext;b.Tb=a.transitions;return b}
    function ao(a){var b=["GMT"];b.push(0>=a?"+":"-");a=Math.abs(a);b.push(ua(Math.floor(a/60)%100,2),":",ua(a%60,2));return b.join("")}function oo(a,b){b=Date.UTC(b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate(),b.getUTCHours(),b.getUTCMinutes())/36E5;for(var c=0;c<a.Tb.length&&b>=a.Tb[c];)c+=2;return 0==c?0:a.Tb[c-1]}function wo(a){this.Pb=[];this.Pa=yn;"number"==typeof a?xo(this,a):Ao(this,a);}var Io=[/^'(?:[^']|'')*('|$)/,/^(?:G+|y+|Y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|m+|s+|v+|V+|w+|z+|Z+)/,/^[^'GyYMkSEahKHcLQdmsvVwzZ]+/];function Ko(a){return a.getHours?a.getHours():0}
    function Ao(a,b){for(Mo;b;){const c=b;for(let d=0;d<Io.length;++d){const e=b.match(Io[d]);if(e){let f=e[0];b=b.substring(f.length);0==d&&("''"==f?f="'":(f=f.substring(1,"'"==e[1]?f.length-1:f.length),f=f.replace(/''/g,"'")));a.Pb.push({text:f,type:d});break}}if(c===b)throw Error("Malformed pattern part: "+b);}}
    wo.prototype.format=function(a,b){if(!a)throw Error("The date to format must be non-null.");var c=b?6E4*(a.getTimezoneOffset()-(b.Qb-oo(b,a))):0;let d=c?new Date(a.getTime()+c):a,e=d;b&&d.getTimezoneOffset()!=a.getTimezoneOffset()&&(d=new Date(d.getTime()+6E4*(d.getTimezoneOffset()-a.getTimezoneOffset())),e=new Date(a.getTime()+(c+(0<c?-864E5:864E5))));c=[];for(let f=0;f<this.Pb.length;++f){const k=this.Pb[f].text;1==this.Pb[f].type?c.push(kp(this,k,a,d,e,b)):c.push(k);}return c.join("")};
    function xo(a,b){let c;if(4>b)c=a.Pa.Ef[b];else if(8>b)c=a.Pa.sg[b-4];else if(12>b)c=a.Pa.Qg[b-8],c=c.replace("{1}",a.Pa.Ef[b-8]),c=c.replace("{0}",a.Pa.sg[b-8]);else {xo(a,10);return}Ao(a,c);}function rp(a,b){{b=String(b);const c=a.Pa||yn;if(void 0!==c.kh){a=[];for(let d=0;d<b.length;d++){const e=b.charCodeAt(d);a.push(48<=e&&57>=e?String.fromCharCode(c.kh+e-48):b.charAt(d));}b=a.join("");}}return b}var Mo=!1;
    function up(a){if(!(a.getHours&&a.getSeconds&&a.getMinutes))throw Error("The date to format has no time (probably a goog.date.Date). Use Date or goog.date.DateTime, or use a pattern without time fields.");}
    function kp(a,b,c,d,e,f){var k=b.length;switch(b.charAt(0)){case "G":return c=0<d.getFullYear()?1:0,4<=k?a.Pa.Sg[c]:a.Pa.Tg[c];case "y":return c=d.getFullYear(),0>c&&(c=-c),2==k&&(c%=100),rp(a,ua(c,k));case "Y":return c=(new Date(Ln(d.getFullYear(),d.getMonth(),d.getDate(),a.Pa.Wf,a.Pa.Vf))).getFullYear(),0>c&&(c=-c),2==k&&(c%=100),rp(a,ua(c,k));case "M":a:switch(c=d.getMonth(),k){case 5:k=a.Pa.Wg[c];break a;case 4:k=a.Pa.Vg[c];break a;case 3:k=a.Pa.Yg[c];break a;default:k=rp(a,ua(c+1,k));}return k;
    case "k":return up(e),rp(a,ua(Ko(e)||24,k));case "S":return rp(a,(e.getMilliseconds()/1E3).toFixed(Math.min(3,k)).substr(2)+(3<k?ua(0,k-3):""));case "E":return c=d.getDay(),4<=k?a.Pa.jh[c]:a.Pa.$g[c];case "a":return up(e),k=Ko(e),a.Pa.Og[12<=k&&24>k?1:0];case "h":return up(e),rp(a,ua(Ko(e)%12||12,k));case "K":return up(e),rp(a,ua(Ko(e)%12,k));case "H":return up(e),rp(a,ua(Ko(e),k));case "c":a:switch(c=d.getDay(),k){case 5:k=a.Pa.dh[c];break a;case 4:k=a.Pa.ih[c];break a;case 3:k=a.Pa.fh[c];break a;
    default:k=rp(a,ua(c,1));}return k;case "L":a:switch(c=d.getMonth(),k){case 5:k=a.Pa.bh[c];break a;case 4:k=a.Pa.ah[c];break a;case 3:k=a.Pa.eh[c];break a;default:k=rp(a,ua(c+1,k));}return k;case "Q":return c=Math.floor(d.getMonth()/3),4>k?a.Pa.Zg[c]:a.Pa.Xg[c];case "d":return rp(a,ua(d.getDate(),k));case "m":return up(e),rp(a,ua(e.getMinutes(),k));case "s":return up(e),rp(a,ua(e.getSeconds(),k));case "v":return k=f||$n(c.getTimezoneOffset()),k.nd;case "V":return a=f||$n(c.getTimezoneOffset()),2>=k?
    a.nd:0<oo(a,c)?void 0!==a.Mb.Rg?a.Mb.Rg:a.Mb.DST_GENERIC_LOCATION:void 0!==a.Mb.Xf?a.Mb.Xf:a.Mb.STD_GENERIC_LOCATION;case "w":return c=Ln(e.getFullYear(),e.getMonth(),e.getDate(),a.Pa.Wf,a.Pa.Vf),rp(a,ua(Math.floor(Math.round((c-(new Date((new Date(c)).getFullYear(),0,1)).valueOf())/864E5)/7)+1,k));case "z":return a=f||$n(c.getTimezoneOffset()),4>k?a.ve[0<oo(a,c)?2:0]:a.ve[0<oo(a,c)?3:1];case "Z":return b=f||$n(c.getTimezoneOffset()),4>k?(k=-(b.Qb-oo(b,c)),a=[0>k?"-":"+"],k=Math.abs(k),a.push(ua(Math.floor(k/
    60)%100,2),ua(k%60,2)),k=a.join("")):k=rp(a,ao(b.Qb-oo(b,c))),k;default:return ""}}function UT(a,b){var c=fh(Ik,a,b);return uf(c,fi.gh(function(d){return c===d},b))}function VT(a,b){return F(a)<F(b)?fd.hh(Bf,b,a):fd.hh(Bf,a,b)}function WT(a,b,c){a=UT(F,Bf.g(c,b,G([a])));return fd.hh(ii,C(a),Qe(a))}function xX(a){try{return bb.JSON.parse(a)}catch(b){}a=String(a);if(/^\s*$/.test(a)?0:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,"")))try{return eval("("+a+")")}catch(b){}throw Error("Invalid JSON string: "+a);}function yX(a){const b=[];zX(new AX,a,b);return b.join("")}
    function AX(){this.re=void 0;}
    function zX(a,b,c){if(null==b)c.push("null");else {if("object"==typeof b){if(Array.isArray(b)){var d=b;b=d.length;c.push("[");var e="";for(var f=0;f<b;f++)c.push(e),e=d[f],zX(a,a.re?a.re.call(d,String(f),e):e,c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else {c.push("{");f="";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(e=b[d],"function"!=typeof e&&(c.push(f),BX(d,c),c.push(":"),zX(a,a.re?a.re.call(b,d,e):e,c),f=","));c.push("}");
    return}}switch(typeof b){case "string":BX(b,c);break;case "number":c.push(isFinite(b)&&!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}}var CX={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\u000b"},DX=/\uffff/.test("￿")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;
    function BX(a,b){b.push('"',a.replace(DX,function(c){let d=CX[c];d||(d="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1),CX[c]=d);return d}),'"');}var EX=new Q(null,3,5,R,[3,12,0],null);function FX(a){return "string"===typeof a?A.gh(a,"")?null:a:null}function GX(a){return "number"===typeof a?rg(a):"string"===typeof a?(a=parseInt(a,10),p(isNaN(a))?null:a):null}function HX(a,b,c){return ng(Kk(),lg(function(d,e){var f=J(e,0,null);e=J(e,1,null);return a.hh?a.hh(d,f,e):a.call(null,d,f,e)},kg),b,c)}function IX(a,b){return fd.hh(function(c,d){c=a.m?a.m(d):a.call(null,d);return p(c)?af(c):null},null,b)}A.gh("default","nodejs");
    var vp="undefined"!==typeof window?window:null;function JX(a){a=OL(q.m(a),/-/,2);var b=J(a,0,null);a=J(a,1,null);var c=/\d+/;if("string"===typeof b)b=Xk(c,b);else throw new TypeError("re-seq must match against a string.");b=p(b)?ji.gh(GX,b):null;return new n(null,2,[In,b,$G,p(a)?a.toLowerCase():null],null)}
    function KX(a){var b=J(EX,0,null),c=J(EX,1,null),d=J(EX,2,null),e=Uf(a)?a:In.m(JX(a));a=J(e,0,null);var f=J(e,1,null);e=J(e,2,null);e=ji.gh(function(k){return p(k)?k:0},new Q(null,3,5,R,[a,f,e],null));a=J(e,0,null);f=J(e,1,null);e=J(e,2,null);if(!(b>a||A.gh(b,a)&&(c>f||A.gh(c,f)&&d>=e)))throw hm("Insufficient `com.taoensso/encore` version, you may have a dependency conflict: see http://goo.gl/qBbLvC for solutions.",new n(null,2,[BE,ML(".",new Q(null,3,5,R,[a,f,e],null)),rq,ML(".",new Q(null,3,5,R,
    [b,c,d],null))],null));}var LX=function LX(a){switch(arguments.length){case 3:return LX.hh(arguments[0],arguments[1],arguments[2]);case 2:return LX.gh(arguments[0],arguments[1]);default:for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return LX.g(arguments[0],arguments[1],arguments[2],new Pe(c.slice(3),0,null))}};LX.hh=function(a,b,c){return N(a,b)?a:K.hh(a,b,c)};LX.g=function(a,b,c,d){return HX(LX,LX.hh(a,b,c),d)};
    LX.G=function(a){var b=C(a),c=D(a);a=C(c);var d=D(c);c=C(d);d=D(d);return this.g(b,a,c,d)};LX.gh=function(a,b){return jg(function(c,d,e){return N(c,d)?c:K.hh(c,d,e)},null==a?S:a,b)};LX.F=3;var MX=function MX(a){switch(arguments.length){case 2:return MX.gh(arguments[0],arguments[1]);case 3:return MX.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};MX.gh=function(a,b){b=0>b?0:b;var c=F(a);return b>=c?I:Vi(a,b,c)};
    MX.hh=function(a,b,c){b=0>b?0:b;var d=rg(F(a));c=c>d?d:c;return b>=c?I:Vi(a,b,c)};MX.F=3;var NX=function NX(a){switch(arguments.length){case 2:return NX.gh(arguments[0],arguments[1]);case 3:return NX.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};NX.gh=function(a,b){var c=F(a);return 0>b?(b+=c,Vi(a,0>b?0:b,c)):b>=c?I:Vi(a,b,c)};
    NX.hh=function(a,b,c){if(0>=c)return I;var d=rg(F(a));if(0>b)return b+=d,b=0>b?0:b,c=b+c,Vi(a,b,c>d?d:c);c=b+c;d=c>d?d:c;return b>=d?I:Vi(a,b,d)};NX.F=3;function wp(a){return 1<F(a)?Vi(a,1,F(a)):I}
    (function(){var a=da(vp,Kg("performance"),null);if(p(a)){var b=function(){var c=da(a,Kg("now"),null);if(p(c))return c;c=da(a,Kg("mozNow"),null);if(p(c))return c;c=da(a,Kg("msNow"),null);if(p(c))return c;c=da(a,Kg("oNow"),null);return p(c)?c:da(a,Kg("webkitNow"),null)}();return p(b)?function(){return 1E6*rg(b.call(a))}:function(){return 1E6*(new Date).getTime()}}return function(){return 1E6*(new Date).getTime()}})();function PX(a,b){this.n=a;this.We=b;}function QX(a,b){this.n=a;this.$e=b;}
    function RX(a,b,c){this.Ue=a;this.Uf=b;this.cf=c;}function SX(a){if(M(a))return jg(function(c,d,e){var f=J(e,0,null);e=J(e,1,null);return K.hh(c,d,new PX(f,e))},S,a);if(Uf(a)){var b=new Th(-1);return fd.hh(function(c,d){var e=J(d,0,null),f=J(d,1,null);d=J(d,2,null);return K.hh(c,p(d)?d:b.Cc(null,b.zb(null)+1),new PX(e,f))},S,a)}throw hm("`encore/cond!`: no matching clause",S);}
    function TX(a){function b(f,k){var l=(new Date).getTime();Sc(k)&&6.25E-5>=Math.random()&&(Oh(c,null),Qh.gh(d,function(v){return ke(jg(function(y,E,H){H=jg(function(T,Y,ia){var ba=x.gh(e,Y);return p(ba)?l>=ia.$e+ba.We?Gf.gh(T,Y):T:Gf.gh(T,Y)},H,H);return Of(H)?me(y,E):le(y,E,H)},ie(p(v)?v:S),v))}));for(;;){var m=u(d),r=x.gh(m,f),t=null==r?null:jg(function(v,y,E,H,T,Y){return function(ia,ba,wa){var ta=x.gh(Y,ba);if(p(ta)){if(wa.n<ta.n)return ia;wa=wa.$e+ta.We-E;return 0>=wa?ia:null==ia?new RX(Ff([ba,
    wa]),ba,wa):wa>ia.cf?new RX(K.hh(ia.Ue,ba,wa),ba,wa):new RX(K.hh(ia.Ue,ba,wa),ia.Uf,ia.cf)}return ia}}(m,r,l,c,d,e),null,r);if(p(p(k)?k:t))return k=t,p(k)?(f=k,new Q(null,3,5,R,[f.Uf,f.cf,f.Ue],null)):null;k=u(c);p(k)||(r=jg(function(v,y,E,H,T){return function(Y,ia,ba){var wa=K.hh;var ta=x.gh(E,ia);if(p(ta)){var ob=ta.$e;ba=T>=ob+ba.We?new QX(1,T):new QX(ta.n+1,ob);}else ba=new QX(1,T);return wa.call(K,Y,ia,ba)}}(k,m,r,t,l),r,e),Oh(d,K.hh(m,f,r)));return null}}if(Of(a))return new Q(null,2,5,
    R,[null,Gh(null)],null);var c=Nh(null),d=Nh(null),e=SX(a);return new Q(null,2,5,R,[d,function(){function f(r,t){if(p(P.gh?P.gh(r,ju):P.call(null,r,ju)))return p(P.gh?P.gh(t,ED):P.call(null,t,ED))?Oh(d,null):Qh.hh(d,Gf,t),null;if(p(P.gh?P.gh(r,GG):P.call(null,r,GG)))return b(t,!0);throw hm("Unrecognized rate limiter command",new n(null,2,[sF,r,Mq,t],null));}function k(r){return b(r,!1)}function l(){return b(null,!1)}var m=null;m=function(r,t){switch(arguments.length){case 0:return l.call(this);case 1:return k.call(this,
    r);case 2:return f.call(this,r,t)}throw Error("Invalid arity: "+arguments.length);};m.o=l;m.m=k;m.gh=f;return m}()],null)}
    var UX=function(){function a(d){return new yc(d)}function b(){return new yc}var c=null;c=function(d){switch(arguments.length){case 0:return b.call(this);case 1:return a.call(this,d)}throw Error("Invalid arity: "+arguments.length);};c.o=b;c.m=a;return c}(),VX=function(){function a(e,f){e=e instanceof yc?e:UX.m(q.m(e));f=q.m(f);return e.append(f)}function b(e){return e instanceof yc?e:UX.m(q.m(e))}function c(){return UX.o()}var d=null;d=function(e,f){switch(arguments.length){case 0:return c.call(this);
    case 1:return b.call(this,e);case 2:return a.call(this,e,f)}throw Error("Invalid arity: "+arguments.length);};d.o=c;d.m=b;d.gh=a;return d}();function WX(a,b){if(p(p(" ")?jh.gh(" ",""):" ")){var c=bi(),d=lg(VX,q);return p(a)?mg(Hh.gh(a,c),d,b):mg(c,d,b)}return p(a)?mg(a,lg(VX,q),b):q.m(fd.gh(VX,b))}
    var XX=function XX(a){switch(arguments.length){case 2:return XX.gh(arguments[0],arguments[1]);case 3:return XX.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};XX.gh=function(a,b){return a.substring(b)};XX.hh=function(a,b,c){return b>=c?"":a.substring(b,c)};XX.F=3;
    var YX=function YX(a){switch(arguments.length){case 2:return YX.gh(arguments[0],arguments[1]);case 3:return YX.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};YX.gh=function(a,b){return FX(a.substr(b))};YX.hh=function(a,b,c){return FX(a.substr(b,c))};YX.F=3;function ZX(a){return void 0===a||null==a?"nil":a}ji.gh(q,"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_");
    var $X=function $X(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return $X.g(0<c.length?new Pe(c.slice(0),0,null):null)};$X.g=function(a){var b=Ea(a);a=x.gh(b,Ky);var c=x.gh(b,yx),d=x.gh(b,gy),e=x.gh(b,SD),f=x.gh(b,Uq),k=x.gh(b,YE),l=x.gh(b,Nn),m=x.gh(b,EE);b=x.gh(b,Ys);return Math.round((p(b)?31536E6*b:0)+(p(e)?2551392E3*e:0)+(p(c)?6048E5*c:0)+(p(l)?864E5*l:0)+(p(m)?36E5*m:0)+(p(k)?6E4*k:0)+(p(f)?1E3*f:0)+(p(d)?d:0)+(p(a)?a:0))};$X.F=0;$X.G=function(a){return this.g(B(a))};
    Hh.gh(function(a){return sg(rg(a),1E3)},$X);function xp(){return !0}function Kp(){return !1}function Lp(a){return jh.gh(-1,a.indexOf("*"))?Yk(LL(LL(["^",q.m(a),"$"].join(""),".","\\."),"*","(.*)")):null}
    function Mp(a,b){for(;;){if(p(function(){var r=new Ak(null,new n(null,2,["*",null,Ab,null],null),null);return r.m?r.m(a):r.call(null,a)}()))return xp;if(p(function(){var r=Dk([I,Ck,Bp]);return r.m?r.m(a):r.call(null,a)}()))return Kp;if(a instanceof RegExp)return function(r){return function(t){return Wk(r,t)}}(a);if("string"===typeof a){var c=Lp(a);if(p(c)){var d=b;a=c;b=d;}else return function(r){return function(t){return A.gh(t,r)}}(a)}else if(Uf(a)||Qf(a)){if(p(function(){var r=
    Ek(a);return r.m?r.m("*"):r.call(null,"*")}()))return xp;if(A.gh(F(a),1))c=C(a),d=b,a=c,b=d;else {var e=fd.hh(function(r,t,v,y,E){return function(H,T){var Y=J(H,0,null);H=J(H,1,null);var ia=T instanceof RegExp?T:E(T);return p(ia)?new Q(null,2,5,R,[Y,Bf.gh(H,ia)],null):new Q(null,2,5,R,[Bf.gh(Y,T),H],null)}}(a,b,xp,Kp,Lp),new Q(null,2,5,R,[Ck,I],null),a),f=J(e,0,null),k=J(e,1,null),l=kh(f),m=function(){var r=kh(k);return p(r)?(r=function(t,v,y,E,H,T,Y,ia,ba,wa,ta){return function(ob){return IX(function(){return function(qb){return Wk(qb,
    ob)}}(),y)}}(a,b,r),p(b)?Ia(r):r):null}();if(p(function(){var r=l;return p(r)?m:r}()))return function(r,t,v,y,E,H,T){return function(Y){var ia=H.m?H.m(Y):H.call(null,Y);return p(ia)?ia:T.m?T.m(Y):T.call(null,Y)}}(a,b,e,f,k,l,m);if(p(l))return l;if(p(m))return m;throw hm("`encore/cond!`: no matching clause",S);}}else throw hm("Unexpected compile spec type",new n(null,2,[sF,a,U,Xc(a)],null));}}
    function Op(a){for(;;){if(M(a)){var b=x.gh(a,Jb),c=function(){var k=x.gh(a,fz);return p(k)?k:x.gh(a,py)}(),d=function(){var k=x.gh(a,Pa);return p(k)?k:x.gh(a,Hz)}(),e=function(){var k=c;return p(k)?Mp(k,b):null}(),f=function(){var k=d;return p(k)?Mp(k,b):null}();if(A.gh(f,xp)||A.gh(e,Kp))return Kp;if(p(function(){var k=e;return p(k)?f:k}()))return function(k,l,m,r,t,v){return function(y){y=q.m(y);return p(t.m?t.m(y):t.call(null,y))?p(v.m?v.m(y):v.call(null,y))?!1:!0:!1}}(a,b,c,d,e,f);
    if(p(e))return A.gh(e,xp)?xp:function(k,l,m,r,t){return function(v){v=q.m(v);v=t.m?t.m(v):t.call(null,v);return p(v)?!0:!1}}(a,b,c,d,e);if(p(f))return A.gh(f,Kp)?xp:function(k,l,m,r,t,v){return function(y){y=q.m(y);y=v.m?v.m(y):v.call(null,y);return p(y)?!0:!1}}(a,b,c,d,e,f);throw hm("compile-str-filter: `allow-spec` and `deny-spec` cannot both be nil",new n(null,2,[Kb,c,ab,d],null));}a=new n(null,2,[fz,a,Pa,null],null);}}Hh.gh(kh,MX);Hh.gh(kh,NX);Hh.gh(FX,XX);Hh.gh(FX,YX);function Pp(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return Qp(0<b.length?new Pe(b.slice(0),0,null):null)}function Qp(a){J(a,0,null);return new n(null,6,[Fu,!0,oB,!1,zI,null,$B,null,wr,Zw,jI,function(b){b=Ea(b);b=x.gh(b,Lx);return rl(G([Al(b)]))}],null)}function bY(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return cY(0<b.length?new Pe(b.slice(0),0,null):null)}
    function cY(a){J(a,0,null);return new n(null,6,[Fu,!0,oB,!1,zI,null,$B,null,wr,Zw,jI,"undefined"===typeof console?function(){return null}:function(){function b(c){var d=function(){var e=c instanceof z?c.da:null;switch(e){case "trace":return console.trace;case "debug":return console.debug;case "info":return console.info;case "warn":return console.warn;case "error":return console.error;case "fatal":return console.error;case "report":return console.info;default:throw Error(["No matching clause: ",q.m(e)].join(""));
    }}();return p(d)?d:console.log}return function(c){var d=b($m.m(c));if(p(d)){if(p(function(){var k=x.gh(c,Xz);return p(k)?k:li.gh(c,new Q(null,2,5,R,[sw,Xz],null))}())){var e=function(){var k=K.g(c,ax,"",G([$A,null])),l=wr.m(c);return l.m?l.m(k):l.call(null,k)}(),f=function(){var k=JH.m(c),l=$A.m(c);return p(l)?uf(e,uf(l,k)):uf(e,k)}();return d.apply(console,ed(f))}return d.call(console,Al(Lx.m(c)))}return null}}()],null)}Uf(EX)?KX(new Q(null,3,5,R,[2,126,2],null)):KX(2.126);var aq=new n(null,1,[Ub,Qa],null),dY=function dY(a){switch(arguments.length){case 1:return dY.m(arguments[0]);case 2:return dY.gh(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};dY.m=function(a){return dY.gh(null,a)};
    dY.gh=function(a,b){var c=Ea(a),d=x.gh(c,sB);x.gh(c,NH);var e=Ea(b);b=x.gh(e,$m);c=x.gh(e,$A);var f=x.gh(e,ax),k=x.gh(e,vq),l=x.gh(e,Kv);x.gh(e,dt);var m=x.gh(e,iI);e=x.gh(e,gF);m=Al(m);return [p(m)?[q.m(m)," "].join(""):null,Kg(b).toUpperCase()," [",q.m(p(k)?k:p(l)?l:"?"),":",q.m(p(e)?e:"?"),"] - ",q.m(Al(f)),p(d)?null:p(c)?["\n",q.m(eY?eY(c):fY.call(null,c,a))].join(""):null].join("")};dY.F=2;
    var gY=new n(null,6,[zI,uG,Ob,new Ak(null,new n(null,1,["*",null],null),null),Au,I,Ua,aq,wr,dY,BG,"undefined"!==typeof window?new n(null,1,[sI,bY.m?bY.m(S):bY.call(null,S)],null):new n(null,1,[Ta,Pp.m?Pp.m(S):Pp.call(null,S)],null)],null);function iY(a){function b(){return a}return hY.m?hY.m(b):hY.call(null,b)}function hY(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return gY=fh(arguments[0],gY,1<b.length?new Pe(b.slice(1),0,null):null)}
    function gq(a){switch(a instanceof z?a.da:null){case "trace":return 0;case "debug":return 1;case "info":return 2;case "warn":return 3;case "error":return 4;case "fatal":return 5;case "report":return 6;default:return null}}function lY(a){if(p(gq(a)))return a;throw hm("Invalid Timbre logging level: should be e/o #{:trace :debug :info :warn :error :fatal :report}",new n(null,2,[sF,a,U,Xc(a)],null));}
    function sq(a){var b=gq(a);if(p(b))return b;throw hm("Invalid Timbre logging level: should be e/o #{:trace :debug :info :warn :error :fatal :report}",new n(null,2,[sF,a,U,Xc(a)],null));}function mY(a,b){return (sq.m?sq.m(a):sq.call(null,a))>=(sq.m?sq.m(b):sq.call(null,b))}var Yq=Ia(function(a){return Op(a)}),kr=Ia(function(a,b){a=Yq(a);return a.m?a.m(b):a.call(null,b)});function xr(a,b){a=p(Hf.m?Hf.m(a):Hf.call(null,a))?a.m?a.m(b):a.call(null,b):kr(a,b);return p(a)?!0:!1}
    var Kr=Ia(function(a,b){return IX(function(c){var d=J(c,0,null);c=J(c,1,null);return p(kr(d,b))?lY(c):null},a)});function bs(a,b,c){b=Uf(b)?Kr(b,c):b;a=p(b)?b:a;return lY.m?lY.m(a):lY.call(null,a)}function zs(a){if(p(a)){var b=Dk([I,Ck]);b=b.m?b.m(a):b.call(null,a);a=p(b)?null:a;}else a=null;return a}function Js(a,b){a=zs(a);b=zs(b);return p(p(a)?a:b)?new n(null,2,[fz,a,Pa,b],null):null}
    function Us(a,b,c,d){var e=p(d)?d:gY;d=function(){var f=x.gh(e,zI);f=p(f)?f:x.gh(e,$m);return bs.hh?bs.hh(a,f,c):bs.call(null,a,f,c)}();return p(mY.gh?mY.gh(b,d):mY.call(null,b,d))?(b=function(){var f=x.gh(e,Ob);if(p(f))return f;f=x.gh(e,pz);var k=x.gh(e,pp);return Js.gh?Js.gh(f,k):Js.call(null,f,k)}(),p(b)?p(xr.gh?xr.gh(b,c):xr.call(null,b,c))?!0:!1:!0):!1}function qY(a){return WX(Vh.m(function(b){b=ZX(b);return Tf(b)?nl.g(G([b])):b}),a)}var rY=Ia(function(a,b){a=TX(b);J(a,0,null);return J(a,1,null)});
    function tY(a){var b=P.gh?P.gh(mq,mq):P.call(null,mq,mq),c=P.gh?P.gh(bG,ZF):P.call(null,bG,ZF),d=J(a,0,null);if(p(p(b)?d instanceof Error:b)){var e=d,f=null,k=wp(a);a=p(c)?J(k,0,null):null;c=p(c)?wp(k):k;return new Q(null,4,5,R,[e,f,a,c],null)}f=p(function(){var m=M(d);return m?Lc.m(Kf(d)):m}())?d:null;e=function(){var m=NB.m(f);return p(m)?m:p(b)?null:mq}();var l=Gf.gh(f,NB);k=p(l)?wp(a):a;a=p(c)?J(k,0,null):null;c=p(c)?wp(k):k;return new Q(null,4,5,R,[e,l,a,c],null)}
    function Vs(a,b,c,d,e){var f=gY;if(Us(nz,a,b,f)){var k=new Date;d=u(d);d=tY(d);var l=J(d,0,null),m=J(d,1,null),r=J(d,2,null);d=J(d,3,null);k=Bf.gh(p(null)?null:S,Wj([vC,$a,Ux,JH,Kv,xs,vq,$m,$A,ZH,gF,an,sw,it],[k,null,f,d,null,function(){var T=new Ak(null,new n(null,2,[VB,null,DA,null],null),null);return T.m?T.m(a):T.call(null,a)}(),b,a,l,null,c,new wl(function(){return l}),m,r]));k=fd.hh(function(T,Y){T=Y.m?Y.m(T):Y.call(null,T);return null==T?af(null):T},k,Au.m(f));if(p(k)){d=Ea(k);var t=x.gh(d,
    JH);k=K.hh(k,qo,new wl(function(){return t}));var v=LX.g(k,ax,new wl(function(){if(A.gh(null,bG))return "";if(A.gh(bG,bG))return qY(t);if(A.gh(ZF,bG)){if("string"!==typeof r)throw hm("Timbre format-style logging call without a format pattern (string)",new n(null,2,[$m,a,Ft,[q.m(p(b)?b:p(null)?null:"?"),":",q.m(p(c)?c:"?")].join("")],null));var T=p(r)?r:"",Y=ji.gh(ZX,t);return fh(QQ,T,Y)}throw Error(["No matching clause: ",q.m(bG)].join(""));}),G([Gv,new wl(function(){return Ie(new Q(null,3,5,R,[e,
    r,x.hh(m,tI,t)],null))})])),y=Ia(x.hh(f,wr,dY)),E=Bf.gh(aq,x.gh(f,Ua)),H=Ia(function(T){return new wl(function(){var Y=x.gh(v,vC),ia=Ea(T);ia=x.gh(ia,Ub);return p(P.gh?P.gh(ia,Qa):P.call(null,ia,Qa))?(new Date(Y)).toISOString():(new wo(ia)).format(Y)})});jg(function(T,Y,ia){if(p(function(){var pb=Fu.m(ia);return p(pb)?Us(iu,a,b,ia):pb}())){var ba=$B.m(ia);if(function(){var pb=Of(ba);if(pb)return pb;pb=rY(Y,ba);var xc=Al(Gv.m(v));pb=pb.m?pb.m(xc):pb.call(null,xc);return Sc(pb)}()){var wa=Ea(ia);T=
    x.gh(wa,jI);x.gh(wa,oB);var ta=function(){var pb=wr.m(ia);var xc=(xc=null==pb)?xc:P.gh?P.gh(pb,Zw):P.call(null,pb,Zw);return p(xc)?y:pb}(),ob=function(){var pb=Ua.m(ia);var xc=(xc=null==pb)?xc:P.gh?P.gh(pb,Zw):P.call(null,pb,Zw);return p(xc)?H(E):H(Bf.gh(E,pb))}(),qb=Bf.gh(v,new n(null,5,[Bz,Y,xw,ia,wr,ta,Lx,new wl(function(){var pb=K.hh(v,iI,ob);return ta.m?ta.m(pb):ta.call(null,pb)}),iI,ob],null));wa=function(){var pb=Ly.m(ia);return p(pb)?pb.m?pb.m(qb):pb.call(null,qb):qb}();return p(wa)?T.m?T.m(wa):
    T.call(null,wa):null}}return null},null,BG.m(f));}}return null}function fY(a){switch(arguments.length){case 1:return eY(arguments[0]);case 2:return eY(arguments[0]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}}function eY(a){var b=a.stack;return p(b)?b:q.m(a)}function vY(a,b,c){var d=vY[cb(null)];if(null!=d)d.A?d.A(null,a,b,c):d.call(null,null,a,b,c);else if(d=vY._,null!=d)d.A?d.A(null,a,b,c):d.call(null,null,a,b,c);else throw Yc("Measurements.record!",null);}function wY(a){if(null!=a&&null!=a.yf)a.yf(a);else {var b=wY[cb(null==a?null:a)];if(null!=b)b.m?b.m(a):b.call(null,a);else if(b=wY._,null!=b)b.m?b.m(a):b.call(null,a);else throw Yc("Node.close",a);}}function xY(a,b){if(null!=a&&null!=a.zf)a.zf(a,b);else {var c=xY[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=xY._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Node.message",a);}}
    function yY(a,b){if(null==a||null==a.Fg){var c=yY[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=yY._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Node.add-source",a);}}function zY(a,b){if(null!=a&&null!=a.Af)a.Af(a,b);else {var c=zY[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=zY._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Node.remove-source",a);}}
    function AY(a,b,c){c=jw.m(c);a=DT.gh(a,c);if(p(p(a)?jh.gh(b,hz.m(a)):a))throw hm(["The original source of peer ",q.m(c)," doesnt match the current source"].join(""),S);}
    function BY(a,b,c){return fd.hh(function(d,e){var f=J(d,0,null);d=J(d,1,null);Vs(uG,"gateway.node",33,new wl(function(){return new Q(null,2,5,R,["about to remove source from domain",yT(e)],null)}),-341408493);var k=BT(e,f,a);return p(k)?(f=J(k,0,null),k=J(k,1,null),Vs(uG,"gateway.node",36,new wl(function(){return new Q(null,2,5,R,["removed source from domain",yT(e)],null)}),-894956337),new Q(null,2,5,R,[f,ii.gh(d,k)],null)):new Q(null,2,5,R,[f,d],null)},new Q(null,2,5,R,[b,I],null),ei.gh(Tc,Bf.gh(ji.gh(function(d){J(d,
    0,null);d=J(d,1,null);return uq.m(d)},Gf.gh(c,"global")),li.gh(c,new Q(null,2,5,R,["global",uq],null)))))}
    function CY(a,b,c,d,e){try{if(A.gh(Iz,U.m(e)))return BY(c,b,a);var f=li.gh(a,new Q(null,2,5,R,[uq.gh(e,"global"),uq],null));return p(f)?(Vs(uG,"gateway.node",59,new wl(function(){return new Q(null,4,5,R,["Handling message with domain",f,"message: \n",q.m(c)],null)}),-2107733924),AY(b,d,e),BT(f,b,c)):new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(uq.m(e),d,is.m(e),jw.m(e),gL("global.errors.failure",["Unable to find domain for message ",q.m(c)].join("")))],null)],null)}finally{a=U.m(e),p(a)&&p(null)&&vY(CC,
    ["inv/",Kg(a)].join(""),0);}}var DY={};function EY(a){a=WK(a);var b=U.m(a);return p(b)?K.hh(a,U,Jg.m(b)):a}function FY(a,b,c,d){a=EY(a);var e=li.gh(u(b),new Q(null,2,5,R,[d,hz],null));if(p(e)){A.gh(WI,U.m(a))||xY(c,new n(null,3,[Bv,Fs,hz,e,Sv,a],null));var f=(new Date).getTime();return Qh.gh(b,function(k){return mi(k,new Q(null,2,5,R,[d,Kn],null),f)})}return Vs(OH,"gateway.cljs.common",31,new wl(function(){return new Q(null,2,5,R,["Cannot process message for not-registered key",d],null)}),1968933778)}
    function GY(a,b){SK(gD.m(a));try{zY(b,a);}catch(d){if(d instanceof Error){var c=d;Vs(DA,"gateway.cljs.common",39,new wl(function(){return new Q(null,3,5,R,[c,"Unable to remove client for",Oi],null)}),907786189);}else throw d;}}function HY(a,b,c){Vs(mD,"gateway.cljs.common",43,new wl(function(){return new Q(null,2,5,R,["removing client for",c],null)}),-187744118);a=Sh(a,c);var d=J(a,0,null);J(a,1,null);a=li.gh(d,new Q(null,2,5,R,[c,hz],null));p(a)&&GY(a,b);}
    function IY(a,b,c,d){Qh.A(a,K,c,new n(null,2,[hz,d,Kn,(new Date).getTime()],null));yY(b,d);}function JY(a,b,c){return ii.gh(S,function(){function d(e){J(e,0,null);e=J(e,1,null);return Kn.m(e)<b}return a.gh?a.gh(d,c):a.call(null,d,c)}())}
    function KY(a,b,c){Vs(uG,"gateway.cljs.common",61,new wl(function(){return new Q(null,2,5,R,["running client scavenger. collecting everything older than",c],null)}),-568460502);a=Rh(a,Jh(JY,fi,c));for(var d=J(a,0,null),e=J(a,1,null),f=JY(ei,c,d),k=B(f),l=null,m=0,r=0;;)if(r<m){var t=l.W(null,r),v=J(t,0,null),y=J(t,1,null),E=hz.m(y);Vs(mD,"gateway.cljs.common",66,new wl(function(Y,ia,ba,wa,ta,ob,qb){return function(){return new Q(null,2,5,R,["scavenging client for",qb],null)}}(k,l,m,r,E,t,v)),677134820);GY(E,b);r+=1;}else if(E=B(k)){t=E;if(Vf(t))k=qe(t),r=re(t),l=k,m=F(k),k=r;else {var H=C(t);v=J(H,0,null);y=J(H,1,null);var T=hz.m(y);Vs(mD,"gateway.cljs.common",66,new wl(function(Y,ia,ba,wa,ta,ob,qb){return function(){return new Q(null,2,5,R,["scavenging client for",qb],null)}}(k,l,m,r,T,H,v)),1474863015);GY(T,b);k=D(t);l=null;m=0;}r=0;}else break}var LY={},ot;
    function NY(a,b,c,d){var e=IK(1);oK(function(){var f=function(){function l(m){var r=m[1];if(7===r)return m[2]=m[2],m[1]=3,uz;if(1===r)return m[2]=null,m[1]=2,uz;if(4===r)return r=m[7],r=m[2],m[7]=r,m[1]=p(r)?5:6,uz;if(13===r)return m[2]=null,m[1]=14,uz;if(6===r)return m[2]=null,m[1]=7,uz;if(3===r)return FK(m,m[2]);if(12===r)return r=m[7],r=Gl(r),r=a.gh?a.gh(d,r):a.call(null,d,r),m[2]=r,m[1]=14,uz;if(2===r)return EK(m,c);if(11===r){m[4]=Qe(m[4]);r=m[2];m[5]=r;if(r instanceof Error)m[1]=10,m[5]=null;
    else throw r;return uz}if(9===r)return m[8]=m[2],m[2]=null,m[1]=2,uz;if(5===r)return m[2]=null,m[1]=8,uz;if(14===r)return r=m[2],m[4]=Qe(m[4]),m[2]=r,m[1]=9,uz;if(10===r){r=m[7];var t=m[2];r=Vs(DA,"gateway.cljs.local-client",15,new wl(function(){return function(){return new Q(null,2,5,R,[t,"error while invoking the client callback"],null)}}()),595737375);m[2]=r;m[1]=9;return uz}return 8===r?(m[4]=uf(11,m[4]),m[1]=p(a)?12:13,uz):null}return function(){function m(v){for(;;){a:try{for(;;){var y=l(v);
    if(!P(y,uz)){var E=y;break a}}}catch(H){E=H;v[2]=E;if(B(v[4]))v[1]=C(v[4]);else throw E;E=uz;}if(!P(E,uz))return E}}function r(){var v=[null,null,null,null,null,null,null,null,null];v[0]=t;v[1]=1;return v}var t=null;t=function(v){switch(arguments.length){case 0:return r.call(this);case 1:return m.call(this,v)}throw Error("Invalid arity: "+arguments.length);};t.o=r;t.m=m;return t}()}(),k=function(){var l=f();l[6]=e;return l}();return DK(k)});return new n(null,3,[U,Fs,gD,c,Qs,rn.gh(b,"127.0.0.1")],null)}
    function OY(a,b){p(p(a)?b:a)&&(a=u(a),HY(gE.m(a),Wp.m(a),b),Vs(mD,"gateway.cljs.local-client",27,new wl(function(){return new Q(null,1,5,R,["local client disconnected"],null)}),231788097));return Promise.resolve(!0)}function PY(a,b,c){if(p(p(a)?b:a)){Vs(uG,"gateway.cljs.local-client",33,new wl(function(){return new Q(null,3,5,R,["Processing incoming message",c,"from local client"],null)}),-1509443157);var d=uZ(c);a=u(a);return FY(d,gE.m(a),Wp.m(a),b)}return null}
    function QY(a,b){var c=u(a),d=IK(new SJ(QJ(100),100)),e=function(){if("undefined"===typeof MK||"undefined"===typeof DY||"undefined"===typeof LY||"undefined"===typeof ot)ot=function(k,l,m,r,t){this.Qe=k;this.Wd=l;this.qd=m;this.ch=r;this.pi=t;this.h=393216;this.I=0;},ot.prototype.O=function(k,l){return new ot(this.Qe,this.Wd,this.qd,this.ch,l)},ot.prototype.N=function(){return this.pi},ot.prototype.disconnect=function(){return OY(this.Qe,this.ch)},ot.prototype.send=function(k){return PY(this.Qe,this.ch,
    k)},ot.Ia=!0,ot.Da="gateway.cljs.local-client/t_gateway$cljs$local_client23100",ot.Ja=function(k){return be(k,"gateway.cljs.local-client/t_gateway$cljs$local_client23100")};return new ot(a,b,c,d,S)}();Vs(mD,"gateway.cljs.local-client",46,new wl(function(){return new Q(null,1,5,R,["local client connected"],null)}),-1049487735);var f=NY(b,c,d,e);IY(gE.m(c),Wp.m(c),d,f);return Promise.resolve(e)}var pt=function(){function a(d,e,f){var k=RY[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=RY._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("IPromise.-then",d);}function b(d,e){var f=RY[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=RY._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("IPromise.-then",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),RY=function RY(a){switch(arguments.length){case 2:return RY.gh(arguments[0],arguments[1]);case 3:return RY.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};RY.gh=function(a,b){return null!=a&&null!=a.If?a.If(a,b):pt(a,b)};RY.hh=function(a,b,c){return null!=a&&null!=a.Jf?a.Jf(a,b,c):pt(a,b,c)};RY.F=3;
    var xt=function(){function a(d,e,f){var k=SY[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=SY._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("IPromise.-thenErr",d);}function b(d,e){var f=SY[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=SY._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("IPromise.-thenErr",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),SY=function SY(a){switch(arguments.length){case 2:return SY.gh(arguments[0],arguments[1]);case 3:return SY.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};SY.gh=function(a,b){return null!=a&&null!=a.Kf?a.Kf(a,b):xt(a,b)};SY.hh=function(a,b,c){return null!=a&&null!=a.Lf?a.Lf(a,b,c):xt(a,b,c)};SY.F=3;
    var It=function(){function a(d,e,f){var k=Ht[cb(null==d?null:d)];if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);k=Ht._;if(null!=k)return k.hh?k.hh(d,e,f):k.call(null,d,e,f);throw Yc("IPromise.-finally",d);}function b(d,e){var f=Ht[cb(null==d?null:d)];if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);f=Ht._;if(null!=f)return f.gh?f.gh(d,e):f.call(null,d,e);throw Yc("IPromise.-finally",d);}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,
    d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}(),Ht=function Ht(a){switch(arguments.length){case 2:return Ht.gh(arguments[0],arguments[1]);case 3:return Ht.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};Ht.gh=function(a,b){return null!=a&&null!=a.zg?a.zg(a,b):It(a,b)};Ht.hh=function(a,b,c){return null!=a&&null!=a.Ng?a.Ng(a,b,c):It(a,b,c)};Ht.F=3;
    function TY(a){if(null!=a&&null!=a.Xe)a=a.Xe(a);else {var b=TY[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=TY._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("IPromiseFactory.-promise",a);}return a}function UY(a){if(null!=a&&null!=a.Ff)a=a.Ff(a);else {var b=UY[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=UY._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("ICancellable.-cancel!",a);}return a}
    function VY(a,b){if(null!=a&&null!=a.Hf)a=a.Hf(a,b);else {var c=VY[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=VY._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ICompletable.-resolve!",a);}return a}function WY(a,b){if(null!=a&&null!=a.Gf)a=a.Gf(a,b);else {var c=WY[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=WY._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("ICompletable.-reject!",a);}return a}
    function XY(a,b,c){if(null!=a&&null!=a.Mf)a=a.Mf(a,b,c);else {var d=XY[cb(null==a?null:a)];if(null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else if(d=XY._,null!=d)a=d.hh?d.hh(a,b,c):d.call(null,a,b,c);else throw Yc("IScheduler.-schedule!",a);}return a}var ZY=new wl(function(){return YY.o?YY.o():YY.call(null)});function $Y(a){return XY(ZY instanceof wl?u(ZY):ZY,1E3,a)}function aZ(a,b){var c=ZY instanceof wl?u(ZY):ZY;return XY(c,a,b)}function bZ(a){this.state=a;this.I=1;this.h=0;}bZ.prototype.Bd=function(){return u(da(this.state,"done"))};bZ.prototype.Ff=function(){if(p(da(this.state,"cancelled")))return null;var a=da(this.state,"cancel-fn");this.state.cancelled=!0;return a.o?a.o():a.call(null)};function cZ(){}
    cZ.prototype.Mf=function(a,b,c){var d=new Th(!1),e=setTimeout(function(){try{return c.o?c.o():c.call(null)}finally{we(d,!0);}},b);return new bZ({done:d,cancelled:!1,"cancel-fn":function(){return clearTimeout(e)}})};function YY(){return new cZ}var dZ=Promise;function eZ(){var a={},b=new dZ(function(c,d){a.resolve=c;return a.reject=d});b.Zh=h;b.Hf=function(c,d){return a.resolve(d)};b.Gf=function(c,d){return a.reject(d)};return b}
    (function(a){a.prototype.Xe=function(){return this};a.prototype.If=function(b,c){return this.then(function(d){return c.m?c.m(d):c.call(null,d)})};a.prototype.Jf=function(b,c){return this.then(function(d){return c.m?c.m(d):c.call(null,d)})};a.prototype.Kf=function(b,c){return this.catch(function(d){return c.m?c.m(d):c.call(null,d)})};a.prototype.Lf=function(b,c){return this.catch(function(d){return c.m?c.m(d):c.call(null,d)})};a.prototype.zg=function(b,c){this.then(function(d){return c.gh?c.gh(d,null):
    c.call(null,d,null)},function(d){return c.gh?c.gh(null,d):c.call(null,null,d)});return this};return a.prototype.Ng=function(b,c){this.then(function(d){return c.gh?c.gh(d,null):c.call(null,d,null)},function(d){return c.gh?c.gh(null,d):c.call(null,null,d)});return this}})(Promise);
    RY._=function(){function a(d,e,f){return RY(TY(d),e,f)}function b(d,e){return RY(TY(d),e)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}();
    SY._=function(){function a(d,e,f){return SY(TY(d),e,f)}function b(d,e){return SY(TY(d),e)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}();
    Ht._=function(){function a(d,e,f){return Ht(TY(d),e,f)}function b(d,e){return Ht(TY(d),e)}var c=null;c=function(d,e,f){switch(arguments.length){case 2:return b.call(this,d,e);case 3:return a.call(this,d,e,f)}throw Error("Invalid arity: "+arguments.length);};c.gh=b;c.hh=a;return c}();Error.prototype.Xe=function(){return dZ.reject(this)};TY._=function(a){return dZ.resolve(a)};Promise.prototype.ma=h;Promise.prototype.S=function(a,b){return be(b,"#\x3cPromise[~]\x3e")};function fZ(a){var b=eZ();try{var c=function(e){return VY(b,e)},d=function(e){return WY(b,e)};a.gh?a.gh(c,d):a.call(null,c,d);}catch(e){WY(b,e);}return b}function gZ(a,b){return RY(a,b)}function Jt(a,b){return Ht(a,b)}function hZ(a,b){return SY(a,b)}function iZ(){return this}tb(iZ,Error);function jZ(a,b){return kZ(a,b)}
    function kZ(a,b){var c=new n(null,2,[U,fC,tr,"Authentication timed out"],null),d=eZ(),e=aZ(b,function(){return A.gh(c,Dx)?WY(d,new iZ("Operation timed out.")):VY(d,c)});return dZ.race(ed(Vh.gh(TY,new Q(null,2,5,R,[Jt(a,function(){return UY(e)}),d],null))))}function lZ(a,b){if(null!=a&&null!=a.wf)a=a.wf(a,b);else {var c=lZ[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=lZ._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Authenticator.authenticate",a);}return a}function mZ(a){if(null!=a&&null!=a.xf)a.xf(a);else {var b=mZ[cb(null==a?null:a)];if(null!=b)b.m?b.m(a):b.call(null,a);else if(b=mZ._,null!=b)b.m?b.m(a):b.call(null,a);else throw Yc("Authenticator.stop",a);}}
    function nZ(a){a=TB.m(a);var b=Ea(a);a=x.gh(b,Gs);b=x.gh(b,Oo);return p(p(a)?b:a)?dZ.resolve(new n(null,3,[U,mz,ct,a,Gs,a],null)):dZ.reject(hm("Missing login/secret",new n(null,2,[U,fC,tr,"Missing login/secret"],null)))}function oZ(a){return A.gh(Ss.m(a),"gateway-token")?Yp.m(a):null}Z(DI,uI,Vc);Z(cq,Rx,Rx);
    Z(MC,O(ut,ir,new Q(null,1,5,R,[DI],null),dA,new Q(null,2,5,R,[DF,cq],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[DI],null),new Q(null,2,5,R,[DF,cq],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,TB)}],null),function(a){return M(a)&&N(a,TB)},new Q(null,2,5,R,[is,ou],null),new Q(null,1,5,R,[DI],null),null,new Q(null,1,5,R,[TB],null),new Q(null,2,5,R,[DF,cq],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],
    null),O(fG,V,TB))],null),null])));Z(bE,Np,Gg);var pZ,Ut=Nh(S),cu=Nh(S),du=Nh(S),vu=Nh(S),Ou=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));pZ=new cm(Le.gh("gateway.auth.spec","response-type"),U,Ou,Ut,cu,du,vu);Z(ay,yo,Uc);
    pZ.v(null,fC,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[bE,ay],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,tr)}],null),function(a){return M(a)&&N(a,U)&&N(a,tr)},I,new Q(null,2,5,R,[bE,ay],null),null,new Q(null,2,5,R,[U,tr],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tr))],null),null]))});
    Z(br,yo,Uc);Z(Ws,yo,Uc);Z(bB,yo,Uc);
    pZ.v(null,mz,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[bE,br,Ws],null),new Q(null,1,5,R,[bB],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Gs)},function(a){return N(a,ct)}],null),function(a){return M(a)&&N(a,U)&&N(a,Gs)&&N(a,ct)},new Q(null,1,5,R,[Cu],null),new Q(null,3,5,R,[bE,br,Ws],null),null,new Q(null,3,5,R,[U,Gs,ct],null),new Q(null,1,5,R,[bB],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Gs)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ct))],null),null]))});
    pZ.v(null,dF,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[bE,DI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,TB)}],null),function(a){return M(a)&&N(a,U)&&N(a,TB)},I,new Q(null,2,5,R,[bE,DI],null),null,new Q(null,2,5,R,[U,TB],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,TB))],null),null]))});
    Z(pH,O(fo,Xo,U),PS(Xo,new Me(function(){return pZ},Xo,Wj([xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[ms,pC,"gateway/auth/spec.cljc",24,1,14,14,Re,null,p(pZ)?pZ.ld:null]))));var vZ=new n(null,6,["application",new n(null,1,[Ww,!0],null),"instance",new n(null,1,[Ww,!1],null),"region",new n(null,1,[Ww,!1],null),"environment",new n(null,1,[Ww,!1],null),"machine",new n(null,1,[Ww,!1],null),"user",new n(null,1,[Ww,!1],null)],null);function wZ(a){return jg(function(b,c,d){return K.hh(b,N(vZ,c)?Jg.m(c):c,d)},S,a)}
    function xZ(a){var b=Dh(function(d){var e=J(d,0,null);J(d,1,null);d=Ww.m(e);return p(d)?null==x.gh(a,Jg.m(e)):d},vZ);if(p(b)){var c=J(b,0,null);J(b,1,null);return c}return null}function yZ(a){var b=xZ(a);if(p(b))throw hm(["Identity ",q.m(a)," is missing a required key: ",q.m(b)].join(""),S);}function Yu(a,b){var c=p(a)?-1!=a.indexOf("127.0.0.1"):a;if(p(c))return c=b,p(c)?c:a;c=a;return p(c)?c:b}function zZ(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e;}return b}ra();Wb()||qa("iPod");qa("iPad");!qa("Android")||sa()||ra()||qa("Opera")||qa("Silk");sa();var AZ=qa("Safari")&&!(sa()||qa("Coast")||qa("Opera")||qa("Edge")||qa("Edg/")||qa("OPR")||ra()||qa("Silk")||qa("Android"))&&!(Wb()||qa("iPad")||qa("iPod"));var BZ={},CZ=null,DZ=XJ||YJ,EZ=DZ||"function"==typeof bb.btoa,FZ=DZ||!AZ&&!VJ&&"function"==typeof bb.atob;function GZ(a,b){void 0===b&&(b=0);HZ();b=BZ[b];const c=Array(Math.floor(a.length/3)),d=b[64]||"";let e=0,f=0;for(;e<a.length-2;e+=3){var k=a[e],l=a[e+1],m=a[e+2],r=b[k>>2];k=b[(k&3)<<4|l>>4];l=b[(l&15)<<2|m>>6];m=b[m&63];c[f++]=""+r+k+l+m;}r=0;m=d;switch(a.length-e){case 2:r=a[e+1],m=b[(r&15)<<2]||d;case 1:a=a[e],c[f]=""+b[a>>2]+b[(a&3)<<4|r>>4]+m+d;}return c.join("")}
    function IZ(a){return EZ?bb.btoa(a):GZ(zZ(a),void 0)}function JZ(a){if(FZ)return bb.atob(a);var b="";KZ(a,function(c){b+=String.fromCharCode(c);});return b}function KZ(a,b){function c(m){for(;d<a.length;){var r=a.charAt(d++),t=CZ[r];if(null!=t)return t;if(!dc(r))throw Error("Unknown base64 encoding at char: "+r);}return m}HZ();for(var d=0;;){var e=c(-1),f=c(0),k=c(64),l=c(64);if(64===l&&-1===e)break;b(e<<2|f>>4);64!=k&&(b(f<<4&240|k>>2),64!=l&&b(k<<6&192|l));}}
    function HZ(){if(!CZ){CZ={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/\x3d","+/","-_\x3d","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));BZ[c]=d;for(var e=0;e<d.length;e++){var f=d[e];void 0===CZ[f]&&(CZ[f]=e);}}}}function LZ(){this.blockSize=-1;}function MZ(a,b){this.blockSize=-1;this.blockSize=NZ;this.zc=bb.Uint8Array?new Uint8Array(this.blockSize):Array(this.blockSize);this.Lc=this.rd=0;this.aa=[];this.me=a;this.ge=b;this.af=bb.Int32Array?new Int32Array(64):Array(64);void 0===OZ&&(OZ=bb.Int32Array?new Int32Array(PZ):PZ);this.reset();}var OZ;tb(MZ,LZ);var NZ=64,QZ=ea(128,na(NZ-1));MZ.prototype.reset=function(){this.Lc=this.rd=0;this.aa=bb.Int32Array?new Int32Array(this.ge):fa(this.ge);};
    MZ.prototype.Tc=function(){for(var a=this.zc,b=this.af,c=0,d=0;d<a.length;)b[c++]=a[d]<<24|a[d+1]<<16|a[d+2]<<8|a[d+3],d=4*c;for(a=16;64>a;a++){d=b[a-15]|0;c=b[a-2]|0;var e=(b[a-16]|0)+((d>>>7|d<<25)^(d>>>18|d<<14)^d>>>3)|0,f=(b[a-7]|0)+((c>>>17|c<<15)^(c>>>19|c<<13)^c>>>10)|0;b[a]=e+f|0;}c=this.aa[0]|0;d=this.aa[1]|0;var k=this.aa[2]|0,l=this.aa[3]|0,m=this.aa[4]|0,r=this.aa[5]|0,t=this.aa[6]|0;e=this.aa[7]|0;for(a=0;64>a;a++){var v=((c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10))+(c&d^c&k^d&k)|0;f=
    m&r^~m&t;e=e+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))|0;f=f+(OZ[a]|0)|0;f=e+(f+(b[a]|0)|0)|0;e=t;t=r;r=m;m=l+f|0;l=k;k=d;d=c;c=f+v|0;}this.aa[0]=this.aa[0]+c|0;this.aa[1]=this.aa[1]+d|0;this.aa[2]=this.aa[2]+k|0;this.aa[3]=this.aa[3]+l|0;this.aa[4]=this.aa[4]+m|0;this.aa[5]=this.aa[5]+r|0;this.aa[6]=this.aa[6]+t|0;this.aa[7]=this.aa[7]+e|0;};
    MZ.prototype.update=function(a,b){void 0===b&&(b=a.length);var c=0,d=this.rd;if("string"===typeof a)for(;c<b;)this.zc[d++]=a.charCodeAt(c++),d==this.blockSize&&(this.Tc(),d=0);else if(db(a))for(;c<b;){var e=a[c++];if(!("number"==typeof e&&0<=e&&255>=e&&e==(e|0)))throw Error("message must be a byte array");this.zc[d++]=e;d==this.blockSize&&(this.Tc(),d=0);}else throw Error("message must be string or array");this.rd=d;this.Lc+=b;};
    MZ.prototype.digest=function(){var a=[],b=8*this.Lc;56>this.rd?this.update(QZ,56-this.rd):this.update(QZ,this.blockSize-(this.rd-56));for(var c=63;56<=c;c--)this.zc[c]=b&255,b/=256;this.Tc();for(c=b=0;c<this.me;c++)for(var d=24;0<=d;d-=8)a[b++]=this.aa[c]>>d&255;return a};
    var PZ=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,
    4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function RZ(){MZ.call(this,8,SZ);}tb(RZ,MZ);var SZ=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function TZ(a,b){this.blockSize=-1;this.blockSize=128;this.zc=bb.Uint8Array?new Uint8Array(this.blockSize):Array(this.blockSize);this.Lc=this.fd=0;this.aa=[];this.me=a;this.af=[];this.ge=UZ(b);this.le=!1;this.reset();}tb(TZ,LZ);var VZ=ea([128],na(127));g=TZ.prototype;g.reset=function(){this.Lc=this.fd=0;this.aa=fa(this.ge);this.le=!1;};
    g.update=function(a,b){b=void 0!==b?b:a.length;if(this.le)throw Error("this hasher needs to be reset");var c=this.fd;if("string"===typeof a)for(var d=0;d<b;d++){var e=a.charCodeAt(d);if(255<e)throw Error("Characters must be in range [0,255]");this.zc[c++]=e;c==this.blockSize&&(this.Tc(),c=0);}else if(db(a))for(d=0;d<b;d++){e=a[d];if("number"!==typeof e||0>e||255<e||e!=(e|0))throw Error("message must be a byte array");this.zc[c++]=e;c==this.blockSize&&(this.Tc(),c=0);}else throw Error("message must be string or array");
    this.fd=c;this.Lc+=b;};g.digest=function(){if(this.le)throw Error("this hasher needs to be reset");var a=8*this.Lc;112>this.fd?this.update(VZ,112-this.fd):this.update(VZ,this.blockSize-this.fd+112);for(var b=127;112<=b;b--)this.zc[b]=a&255,a/=256;this.Tc();a=0;var c=Array(8*this.me);for(b=0;b<this.me;b++){var d=this.aa[b],e=d.ea;d=d.ja;for(var f=24;0<=f;f-=8)c[a++]=e>>f&255;for(f=24;0<=f;f-=8)c[a++]=d>>f&255;}this.le=!0;return c};
    g.Tc=function(){for(var a=this.zc,b=this.af,c=0;16>c;c++){var d=8*c;b[c]=new wb(a[d+4]<<24|a[d+5]<<16|a[d+6]<<8|a[d+7],a[d]<<24|a[d+1]<<16|a[d+2]<<8|a[d+3]);}for(c=16;80>c;c++){d=b[c-15];a=d.ja;d=d.ea;var e=b[c-2],f=e.ja;e=e.ea;b[c]=this.Rf(b[c-16],b[c-7],new wb(a>>>1^d<<31^a>>>8^d<<24^a>>>7^d<<25,d>>>1^a<<31^d>>>8^a<<24^d>>>7),new wb(f>>>19^e<<13^e>>>29^f<<3^f>>>6^e<<26,e>>>19^f<<13^f>>>29^e<<3^e>>>6));}a=this.aa[0];d=this.aa[1];f=this.aa[2];e=this.aa[3];var k=this.aa[4],l=this.aa[5],m=this.aa[6],
    r=this.aa[7];for(c=0;80>c;c++){var t=a.ja,v=a.ea;t=(new wb(t>>>28^v<<4^v>>>2^t<<30^v>>>7^t<<25,v>>>28^t<<4^t>>>2^v<<30^t>>>7^v<<25)).add(new wb(a.ja&d.ja|d.ja&f.ja|a.ja&f.ja,a.ea&d.ea|d.ea&f.ea|a.ea&f.ea));v=k.ja;var y=k.ea,E=k.ja,H=k.ea;v=this.Rf(r,new wb(v>>>14^y<<18^v>>>18^y<<14^y>>>9^v<<23,y>>>14^v<<18^y>>>18^v<<14^v>>>9^y<<23),new wb(E&l.ja|~E&m.ja,H&l.ea|~H&m.ea),WZ[c],b[c]);r=m;m=l;l=k;k=e.add(v);e=f;f=d;d=a;a=v.add(t);}this.aa[0]=this.aa[0].add(a);this.aa[1]=this.aa[1].add(d);this.aa[2]=this.aa[2].add(f);
    this.aa[3]=this.aa[3].add(e);this.aa[4]=this.aa[4].add(k);this.aa[5]=this.aa[5].add(l);this.aa[6]=this.aa[6].add(m);this.aa[7]=this.aa[7].add(r);};g.Rf=function(a,b,c){for(var d=(a.ja^2147483648)+(b.ja^2147483648),e=a.ea+b.ea,f=arguments.length-1;2<=f;--f)d+=arguments[f].ja^2147483648,e+=arguments[f].ea;arguments.length&1&&(d+=2147483648);e+=arguments.length>>1;e+=Math.floor(d/4294967296);return new wb(d,e)};function UZ(a){for(var b=[],c=0;c<a.length;c+=2)b.push(new wb(a[c+1],a[c]));return b}
    var WZ=UZ([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,
    1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,
    1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,
    289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);function XZ(){TZ.call(this,6,YZ);}tb(XZ,TZ);var YZ=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428];function ZZ(){TZ.call(this,8,$Z);}tb(ZZ,TZ);var $Z=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];function a_(a,b,c){this.blockSize=-1;this.Rb=a;this.blockSize=c||a.blockSize||16;this.Bf=Array(this.blockSize);this.Te=Array(this.blockSize);a=b;a.length>this.blockSize&&(this.Rb.update(a),a=this.Rb.digest(),this.Rb.reset());for(c=0;c<this.blockSize;c++)b=c<a.length?a[c]:0,this.Bf[c]=b^92,this.Te[c]=b^54;this.Rb.update(this.Te);}tb(a_,LZ);a_.prototype.reset=function(){this.Rb.reset();this.Rb.update(this.Te);};a_.prototype.update=function(a,b){this.Rb.update(a,b);};
    a_.prototype.digest=function(){var a=this.Rb.digest();this.Rb.reset();this.Rb.update(this.Bf);this.Rb.update(a);return this.Rb.digest()};a_.prototype.getHmac=function(a){this.reset();this.update(a);return this.digest()};var b_=new n(null,4,"HS256 sha256 HS384 sha384 HS512 sha512 RS256 RSA-SHA256".split(" "),null),c_=new n(null,4,"HS256 hmac HS384 hmac HS512 hmac RS256 sign".split(" "),null);function d_(a){return LL(LL(LL(a,"+","-"),"/","_"),"\x3d","")}function e_(a,b){var c=function(){switch(a){case "sha256":return new RZ;case "sha384":return new XZ;case "sha512":return new ZZ;default:throw Error([q.m(a)," hashing not supported"].join(""));}}();return new a_(c,b)}
    function f_(a,b,c,d){switch(d){case "hmac":return d_(GZ(e_(c,zZ(b)).getHmac(a)));default:throw Error("algorithm not supported");}}function g_(a,b,c,d,e){switch(e){case "hmac":return A.gh(b,f_(a,c,d,e));default:throw Error("algorithm not supported");}}
    function h_(a,b){b=Ea(b);var c=x.gh(b,qt),d=x.gh(b,uu),e=x.gh(b,HD),f=x.hh(b,RD,sg((new Date).getTime(),1E3)),k=x.hh(b,bH,0);if(p(function(){if(p(d)){var l=uu.m(a);Pf(d)?(l=Dk([l]),l=Sc(Dh(l,d))):l=jh.gh(l,d);return l}return d}()))throw hm(["Issuer does not match ",q.m(d)].join(""),new n(null,2,[U,Nw,OD,uu],null));if(p(function(){if(p(e)){var l=HD.m(a);if(Pf(l)){var m=Dk([e]);l=Sc(Dh(m,l));}else l=jh.gh(e,l);return l}return e}()))throw hm(["Audience does not match ",q.m(e)].join(""),new n(null,2,[U,
    Nw,OD,HD],null));if(p(function(){var l=WC.m(a);return p(l)?WC.m(a)<=f-k:l}()))throw hm(["Token is expired ",q.m(WC.m(a))].join(""),new n(null,2,[U,Nw,OD,WC],null));if(p(function(){var l=DB.m(a);return p(l)?DB.m(a)>f+k:l}()))throw hm(["Token is not yet valid ",q.m(DB.m(a))].join(""),new n(null,2,[U,Nw,OD,DB],null));if(p(function(){var l=kx.m(a);return p(l)?"number"===typeof c&&f-kx.m(a)>c:l}()))throw hm(["Token is older than max-age ",q.m(c)].join(""),new n(null,2,[U,Nw,OD,qt],null));return a}
    var i_=function i_(a){switch(arguments.length){case 2:return i_.gh(arguments[0],arguments[1]);case 3:return i_.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};sb("gateway.common.jwt.unsign",i_);i_.gh=function(a,b){return i_.hh(a,b,S)};
    i_.hh=function(a,b,c){c=Ea(c);var d=x.hh(c,yt,!1),e=OL(a,".",0);a=x.gh(e,0);var f=x.gh(e,1);e=x.gh(e,2);if(p(Dh(Pc,new Q(null,3,5,R,[a,f,e],null))))throw Error("invalid token");var k=xX(JZ(LL(LL(a,"_","/"),"-","+"))).alg,l=jg(function(r,t,v){return K.hh(r,Jg.m(t),v)},S,uZ(xX(JZ(LL(LL(f,"_","/"),"-","+"))))),m=x.gh(b_,k);k=x.gh(c_,k);if(p(d))return l;if(Sc(p(m)?k:m))throw Error("algorithm not supported");if(Sc(g_([q.m(a),".",q.m(f)].join(""),e,b,m,k)))throw Error("signature verification failed");return h_(l,
    c)};i_.F=3;var j_=function j_(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return j_.g(arguments[0],arguments[1],2<c.length?new Pe(c.slice(2),0,null):null)};sb("gateway.common.jwt.sign",j_);
    j_.g=function(a,b,c){var d=J(c,0,null);c=J(c,1,null);var e=p(d)?d:"HS256",f=p(c)?c:S;d=x.gh(b_,e);c=x.gh(c_,e);if(!M(a))throw Error("payload should be in JSON format");if(!M(f))throw Error("extra-headers should be a map");if(!p(p(d)?c:d))throw Error("algorithm not supported");e=d_(IZ(yX(Gl(fh(Bf,f,new n(null,2,[hC,e,Cr,"JWT"],null))))));a=d_(IZ(yX(Gl(a))));b=f_([e,".",a].join(""),b,d,c);return [e,".",a,".",q.m(b)].join("")};j_.F=2;
    j_.G=function(a){var b=C(a),c=D(a);a=C(c);c=D(c);return this.g(b,a,c)};var k_=6E5;function l_(a,b,c){var d=NK()+k_;b=new n(null,3,[U,aI,cD,b,aI,c],null);d=p(d)?K.hh(b,WC,sg(d,1E3)):b;return j_(d,nn.m(a))}function m_(a,b){var c=NK();a=oi(oi(i_.hh(b,a,p(c)?new n(null,1,[RD,sg(c,1E3)],null):null),U,Jg),cD,wZ);return A.gh(U.m(a),aI)?oi(a,aI,function(d){return oi(bO(d),U,Jg)}):a}var Fv=new n(null,2,[uE,5E3,Ma,2E4],null);function n_(a,b){if(null!=a&&null!=a.Re)a=a.Re(a,b);else {var c=n_[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=n_._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("AuthImpl.auth",a);}return a}
    function o_(a,b){a=m_(a,b);b=U.m(a);switch(b instanceof z?b.da:null){case "gw-request":return b=aI.m(a),p(b)?dZ.resolve(new n(null,3,[U,mz,aI,b,cD,cD.m(a)],null)):dZ.reject(new n(null,2,[U,fC,tr,"Token is missing the gateway request information"],null));case "authentication":return b=ct.m(a),p(b)?dZ.resolve(new n(null,2,[U,mz,ct,b],null)):dZ.reject(new n(null,2,[U,fC,tr,"Token is missing the impersonation information"],null));default:return dZ.reject(new n(null,2,[U,fC,tr,["Invalid gateway token type: ",
    q.m(U.m(a))].join("")],null))}}function p_(a,b,c){var d=oZ(TB.m(c));return p(d)?o_(nn.m(c),d):p(a)?jZ(fZ(function(e,f){return KK(a,new Q(null,3,5,R,[e,f,c],null))}),b):dZ.reject(hm("No authenticator configured",new n(null,2,[U,fC,tr,"No authenticator configured"],null)))}function q_(a,b){this.we=a;this.timeout=b;}q_.prototype.xf=function(){return p(this.we)?SK(this.we):null};q_.prototype.wf=function(a,b){return p_(this.we,this.timeout,b)};
    function C_(a,b){a=vk.g(G([Fv,a]));var c=Ea(a);a=x.gh(c,uE);c=x.gh(c,Ma);var d=IK(new SJ(QJ(c),c));Vs(mD,"gateway.auth.impl",87,new wl(function(){return new Q(null,2,5,R,["starting authenticator with impl ",b],null)}),976933818);var e=IK(1);oK(function(){var f=function(){function l(m){var r=m[1];if(1===r)return m[2]=null,m[1]=2,uz;if(2===r)return EK(m,d);if(3===r)return FK(m,m[2]);if(4===r)return r=m[7],r=m[2],m[7]=r,m[1]=p(r)?5:6,uz;if(5===r){r=m[7];var t=J(r,0,null),v=J(r,1,null);r=J(r,2,null);
    var y=oi(r,TB,bO),E=TB.m(y);r=Vs(uG,"gateway.auth.impl",94,new wl(function(){return function(){var H=R;var T=p(Oo.m(E))?K.hh(E,Oo,"XXX"):K.hh(E,Yp,"XXX");return new Q(null,2,5,H,["processing authentication",T],null)}}()),-998213813);y=n_(b,y);y=gZ(y,function(){return function(H){return t.m?t.m(H):t.call(null,H)}}());y=hZ(y,function(){return function(H){return v.m?v.m(H):v.call(null,H)}}());m[8]=r;m[9]=y;m[2]=null;m[1]=2;return uz}return 6===r?(m[2]=null,m[1]=7,uz):7===r?(m[2]=m[2],m[1]=3,uz):null}
    return function(){function m(v){for(;;){a:try{for(;;){var y=l(v);if(!P(y,uz)){var E=y;break a}}}catch(H){E=H;v[2]=E;if(B(v[4]))v[1]=C(v[4]);else throw E;E=uz;}if(!P(E,uz))return E}}function r(){var v=[null,null,null,null,null,null,null,null,null,null];v[0]=t;v[1]=1;return v}var t=null;t=function(v){switch(arguments.length){case 0:return r.call(this);case 1:return m.call(this,v)}throw Error("Invalid arity: "+arguments.length);};t.o=r;t.m=m;return t}()}(),k=function(){var l=f();l[6]=e;return l}();return DK(k)});
    return new q_(d,a)}function E5(a){this.Yi=a;}E5.prototype.Re=function(a,b){var c=this;return hZ(gZ(function(){var d=Gl(b);return c.Yi.m?c.Yi.m(d):c.Yi.call(null,d)}(),function(d){var e=oi(bO(uZ(d)),U,Jg);Vs(uG,"gateway.cljs.authenticators",15,new wl(function(){return new Q(null,2,5,R,["auth response",e],null)}),-845349014);return e}),function(d){Vs(uG,"gateway.cljs.authenticators",18,new wl(function(){return new Q(null,2,5,R,["auth failure",d],null)}),-529640170);throw hm(d,new n(null,2,[U,fC,tr,d],null));})};function E_(a,b,c){this.ca=a;this.n=b;this.se=0;this.ne=c;this.h=2;this.I=0;}E_.prototype.Dd=function(){return !1};E_.prototype.ae=function(a,b){this.ca.length!==this.n?this.ca.unshift(b):(this.se+=1,p(this.ne)&&(this.ne.gh?this.ne.gh(b,this.se):this.ne.call(null,b,this.se)));return this};E_.prototype.X=function(){return this.ca.length};function F_(a,b){return new E_(QJ(a),a,b)}var XT={},Nv,gw,lw,Aw,gx,Ex,dU=function dU(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return dU.g(0<c.length?new Pe(c.slice(0),0,null):null)};dU.g=function(a){return be(Cc,eh(pl,a))};dU.F=0;dU.G=function(a){return this.g(B(a))};var eU=function eU(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return eU.g(0<c.length?new Pe(c.slice(0),0,null):null)};eU.g=function(a){return be(Cc,eh(nl,a))};eU.F=0;eU.G=function(a){return this.g(B(a))};
    function fU(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;eh(eU,0<b.length?new Pe(b.slice(0),0,null):null);be(Cc,"\n");}function gU(a){if("number"===typeof a)return a;if("string"===typeof a&&1===a.length)return a.charCodeAt(0);throw Error("Argument to char must be a character or number");}
    function hU(a,b,c){var d=c;for(c=I;;){if(Of(d))return new Q(null,2,5,R,[c,b],null);var e=C(d);d=D(d);e=eh(a,new Q(null,2,5,R,[e,b],null));b=J(e,0,null);e=J(e,1,null);c=Bf.gh(c,b);b=e;}}function iU(a,b){var c=b;for(b=I;;){var d=eh(a,new Q(null,1,5,R,[c],null));c=J(d,0,null);d=J(d,1,null);if(Sc(c))return new Q(null,2,5,R,[b,d],null);b=Bf.gh(b,c);c=d;}}
    function jU(a){return new Q(null,2,5,R,[ii.gh(S,function(){return function d(c){return new Lg(null,function(){for(;;){var e=B(c);if(e){if(Vf(e)){var f=qe(e),k=F(f),l=Pg(k);a:for(var m=0;;)if(m<k){var r=pd(f,m),t=J(r,0,null);r=J(r,1,null);var v=J(r,0,null);J(r,1,null);l.add(new Q(null,2,5,R,[t,v],null));m+=1;}else {f=!0;break a}return f?Rg(Tg(l),d(re(e))):Rg(Tg(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);k=J(f,0,null);J(f,1,null);return uf(new Q(null,2,5,R,[l,k],null),d(Qe(e)))}return null}},null,null)}(a)}()),
    ii.gh(S,function(){return function d(c){return new Lg(null,function(){for(;;){var e=B(c);if(e){if(Vf(e)){var f=qe(e),k=F(f),l=Pg(k);a:for(var m=0;;)if(m<k){var r=pd(f,m),t=J(r,0,null);r=J(r,1,null);J(r,0,null);r=J(r,1,null);l.add(new Q(null,2,5,R,[t,r],null));m+=1;}else {f=!0;break a}return f?Rg(Tg(l),d(re(e))):Rg(Tg(l),null)}f=C(e);l=J(f,0,null);f=J(f,1,null);J(f,0,null);f=J(f,1,null);return uf(new Q(null,2,5,R,[l,f],null),d(Qe(e)))}return null}},null,null)}(a)}())],null)}
    function kU(a,b){return ii.gh(S,function(){return function e(d){return new Lg(null,function(){for(;;){var f=B(d);if(f){if(Vf(f)){var k=qe(f),l=F(k),m=Pg(l);a:for(var r=0;;)if(r<l){var t=pd(k,r),v=J(t,0,null);t=J(t,1,null);m.add(new Q(null,2,5,R,[v,new Q(null,2,5,R,[t,b],null)],null));r+=1;}else {k=!0;break a}return k?Rg(Tg(m),e(re(f))):Rg(Tg(m),null)}k=C(f);m=J(k,0,null);k=J(k,1,null);return uf(new Q(null,2,5,R,[m,new Q(null,2,5,R,[k,b],null)],null),e(Qe(f)))}return null}},null,null)}(a)}())}
    function lU(){var a=Cc;if(null!=a&&null!=a.Le)a.Le(a);else {var b=lU[cb(null==a?null:a)];if(null!=b)b.m?b.m(a):b.call(null,a);else if(b=lU._,null!=b)b.m?b.m(a):b.call(null,a);else throw Yc("IPrettyFlush.-ppflush",a);}}function mU(a,b){a=u(u(a));return b.m?b.m(a):b.call(null,a)}function nU(a,b,c){Qh.A(u(a),K,b,c);}function oU(a,b){A.gh(b,"\n")?(nU(a,lr,0),nU(a,bn,mU(a,bn)+1)):nU(a,lr,mU(a,lr)+1);return be(mU(a,GA),b)}
    function pU(a,b){var c=Nh(new n(null,4,[Xv,b,lr,0,bn,0,GA,a],null));if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof Nv)Nv=function(d,e,f,k){this.ya=d;this.Ve=e;this.Vc=f;this.ji=k;this.h=1074167808;this.I=0;},Nv.prototype.O=function(d,e){return new Nv(this.ya,this.Ve,this.Vc,e)},Nv.prototype.N=function(){return this.ji},Nv.prototype.zb=function(){return this.Vc},Nv.prototype.qc=function(){return ce(this.ya)},Nv.prototype.Pc=function(d,e){d=Xc(e);if(p(A.gh?A.gh(String,d):A.call(null,
    String,d)))return d=e.lastIndexOf("\n"),0>d?nU(this,lr,mU(this,lr)+F(e)):(nU(this,lr,F(e)-d-1),nU(this,bn,mU(this,bn)+F(ei.gh(function(f){return A.gh(f,"\n")},e)))),be(mU(this,GA),e);if(p(A.gh?A.gh(Number,d):A.call(null,Number,d)))return oU(this,e);throw Error(["No matching clause: ",q.m(d)].join(""));},Nv.Ia=!0,Nv.Da="cljs.pprint/t_cljs$pprint18407",Nv.Ja=function(d){return be(d,"cljs.pprint/t_cljs$pprint18407")};return new Nv(a,b,c,S)}
    function qU(a,b,c,d,e,f,k,l,m,r,t,v,y){this.parent=a;this.xb=b;this.lb=c;this.kb=d;this.sb=e;this.tb=f;this.prefix=k;this.wb=l;this.yb=m;this.ub=r;this.$=t;this.j=v;this.B=y;this.h=2230716170;this.I=139264;}g=qU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "parent":return this.parent;case "section":return this.xb;case "start-col":return this.lb;case "indent":return this.kb;case "done-nl":return this.sb;case "intra-block-nl":return this.tb;case "prefix":return this.prefix;case "per-line-prefix":return this.wb;case "suffix":return this.yb;case "logical-block-callback":return this.ub;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.logical-block{",", ","}",c,Wg.gh(new Q(null,10,5,R,[new Q(null,2,5,R,[Eq,this.parent],null),new Q(null,2,5,R,[Jw,this.xb],null),new Q(null,2,5,R,[lC,this.lb],null),new Q(null,2,5,R,[rJ,this.kb],null),new Q(null,2,5,R,[Fn,this.sb],null),new Q(null,2,5,R,[FB,this.tb],null),new Q(null,2,5,R,[NA,this.prefix],null),new Q(null,2,5,R,[qn,this.wb],null),new Q(null,2,5,R,[Tw,this.yb],null),new Q(null,2,5,R,[vx,this.ub],
    null)],null),this.j))};g.ua=function(){return new fj(this,10,new Q(null,10,5,R,[Eq,Jw,lC,rJ,Fn,FB,NA,qn,Tw,vx],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 10+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1977012399^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.parent,b.parent)&&A.gh(this.xb,b.xb)&&A.gh(this.lb,b.lb)&&A.gh(this.kb,b.kb)&&A.gh(this.sb,b.sb)&&A.gh(this.tb,b.tb)&&A.gh(this.prefix,b.prefix)&&A.gh(this.wb,b.wb)&&A.gh(this.yb,b.yb)&&A.gh(this.ub,b.ub)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,10,[Tw,null,rJ,null,Eq,null,Jw,null,Fn,null,lC,null,NA,null,qn,null,vx,null,FB,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "parent":case "section":case "start-col":case "indent":case "done-nl":case "intra-block-nl":case "prefix":case "per-line-prefix":case "suffix":case "logical-block-callback":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Eq,b):P.call(null,Eq,b))?new qU(c,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(Jw,b):P.call(null,Jw,b))?new qU(this.parent,c,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(lC,b):P.call(null,lC,b))?new qU(this.parent,this.xb,c,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(rJ,b):P.call(null,rJ,b))?new qU(this.parent,
    this.xb,this.lb,c,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(Fn,b):P.call(null,Fn,b))?new qU(this.parent,this.xb,this.lb,this.kb,c,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(FB,b):P.call(null,FB,b))?new qU(this.parent,this.xb,this.lb,this.kb,this.sb,c,this.prefix,this.wb,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(NA,b):P.call(null,NA,b))?new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,c,this.wb,this.yb,this.ub,
    this.$,this.j,null):p(P.gh?P.gh(qn,b):P.call(null,qn,b))?new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,c,this.yb,this.ub,this.$,this.j,null):p(P.gh?P.gh(Tw,b):P.call(null,Tw,b))?new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,c,this.ub,this.$,this.j,null):p(P.gh?P.gh(vx,b):P.call(null,vx,b))?new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,c,this.$,this.j,null):new qU(this.parent,this.xb,this.lb,this.kb,
    this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,10,5,R,[new Fi(Eq,this.parent),new Fi(Jw,this.xb),new Fi(lC,this.lb),new Fi(rJ,this.kb),new Fi(Fn,this.sb),new Fi(FB,this.tb),new Fi(NA,this.prefix),new Fi(qn,this.wb),new Fi(Tw,this.yb),new Fi(vx,this.ub)],null),this.j))};g.O=function(a,b){return new qU(this.parent,this.xb,this.lb,this.kb,this.sb,this.tb,this.prefix,this.wb,this.yb,this.ub,b,this.j,this.B)};
    g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function rU(a,b){for(b=Eq.m(b);;){if(null==b)return !1;if(a===b)return !0;b=Eq.m(b);}}function sU(a,b,c,d,e,f,k,l){this.V=a;this.data=b;this.Ub=c;this.U=d;this.T=e;this.$=f;this.j=k;this.B=l;this.h=2230716170;this.I=139264;}g=sU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "data":return this.data;case "trailing-white-space":return this.Ub;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.buffer-blob{",", ","}",c,Wg.gh(new Q(null,5,5,R,[new Q(null,2,5,R,[Jy,this.V],null),new Q(null,2,5,R,[wn,this.data],null),new Q(null,2,5,R,[Zo,this.Ub],null),new Q(null,2,5,R,[QA,this.U],null),new Q(null,2,5,R,[AE,this.T],null)],null),this.j))};g.ua=function(){return new fj(this,5,new Q(null,5,5,R,[Jy,wn,Zo,QA,AE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 5+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1809113693^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.V,b.V)&&A.gh(this.data,b.data)&&A.gh(this.Ub,b.Ub)&&A.gh(this.U,b.U)&&A.gh(this.T,b.T)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,5,[AE,null,Zo,null,Jy,null,QA,null,wn,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new sU(this.V,this.data,this.Ub,this.U,this.T,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "type-tag":case "data":case "trailing-white-space":case "start-pos":case "end-pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Jy,b):P.call(null,Jy,b))?new sU(c,this.data,this.Ub,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(wn,b):P.call(null,wn,b))?new sU(this.V,c,this.Ub,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(Zo,b):P.call(null,Zo,b))?new sU(this.V,this.data,c,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(QA,b):P.call(null,QA,b))?new sU(this.V,this.data,this.Ub,c,this.T,this.$,this.j,null):p(P.gh?P.gh(AE,b):P.call(null,AE,b))?new sU(this.V,this.data,this.Ub,this.U,c,this.$,
    this.j,null):new sU(this.V,this.data,this.Ub,this.U,this.T,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,5,5,R,[new Fi(Jy,this.V),new Fi(wn,this.data),new Fi(Zo,this.Ub),new Fi(QA,this.U),new Fi(AE,this.T)],null),this.j))};g.O=function(a,b){return new sU(this.V,this.data,this.Ub,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function tU(a,b,c,d,e,f,k,l){this.V=a;this.type=b;this.ba=c;this.U=d;this.T=e;this.$=f;this.j=k;this.B=l;this.h=2230716170;this.I=139264;}g=tU.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "type":return this.type;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.nl-t{",", ","}",c,Wg.gh(new Q(null,5,5,R,[new Q(null,2,5,R,[Jy,this.V],null),new Q(null,2,5,R,[U,this.type],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[QA,this.U],null),new Q(null,2,5,R,[AE,this.T],null)],null),this.j))};
    g.ua=function(){return new fj(this,5,new Q(null,5,5,R,[Jy,U,nq,QA,AE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 5+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1640656800^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.V,b.V)&&A.gh(this.type,b.type)&&A.gh(this.ba,b.ba)&&A.gh(this.U,b.U)&&A.gh(this.T,b.T)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,5,[AE,null,U,null,nq,null,Jy,null,QA,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new tU(this.V,this.type,this.ba,this.U,this.T,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "type-tag":case "type":case "logical-block":case "start-pos":case "end-pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Jy,b):P.call(null,Jy,b))?new tU(c,this.type,this.ba,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(U,b):P.call(null,U,b))?new tU(this.V,c,this.ba,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(nq,b):P.call(null,nq,b))?new tU(this.V,this.type,c,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(QA,b):P.call(null,QA,b))?new tU(this.V,this.type,this.ba,c,this.T,this.$,this.j,null):p(P.gh?P.gh(AE,b):P.call(null,AE,b))?new tU(this.V,this.type,this.ba,this.U,c,this.$,this.j,
    null):new tU(this.V,this.type,this.ba,this.U,this.T,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,5,5,R,[new Fi(Jy,this.V),new Fi(U,this.type),new Fi(nq,this.ba),new Fi(QA,this.U),new Fi(AE,this.T)],null),this.j))};g.O=function(a,b){return new tU(this.V,this.type,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function uU(a,b,c,d,e,f,k){this.V=a;this.ba=b;this.U=c;this.T=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=uU.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.start-block-t{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[Jy,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[QA,this.U],null),new Q(null,2,5,R,[AE,this.T],null)],null),this.j))};
    g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[Jy,nq,QA,AE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-414877272^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.V,b.V)&&A.gh(this.ba,b.ba)&&A.gh(this.U,b.U)&&A.gh(this.T,b.T)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[AE,null,nq,null,Jy,null,QA,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new uU(this.V,this.ba,this.U,this.T,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "type-tag":case "logical-block":case "start-pos":case "end-pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Jy,b):P.call(null,Jy,b))?new uU(c,this.ba,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(nq,b):P.call(null,nq,b))?new uU(this.V,c,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(QA,b):P.call(null,QA,b))?new uU(this.V,this.ba,c,this.T,this.$,this.j,null):p(P.gh?P.gh(AE,b):P.call(null,AE,b))?new uU(this.V,this.ba,this.U,c,this.$,this.j,null):new uU(this.V,this.ba,this.U,this.T,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(Jy,this.V),new Fi(nq,this.ba),new Fi(QA,this.U),new Fi(AE,this.T)],null),this.j))};g.O=function(a,b){return new uU(this.V,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function vU(a,b,c,d,e,f,k){this.V=a;this.ba=b;this.U=c;this.T=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=vU.prototype;g.ia=function(a,b){return this.M(null,b,null)};
    g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.end-block-t{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[Jy,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[QA,this.U],null),new Q(null,2,5,R,[AE,this.T],null)],null),this.j))};g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[Jy,nq,QA,AE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=1365867980^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.V,b.V)&&A.gh(this.ba,b.ba)&&A.gh(this.U,b.U)&&A.gh(this.T,b.T)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[AE,null,nq,null,Jy,null,QA,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new vU(this.V,this.ba,this.U,this.T,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "type-tag":case "logical-block":case "start-pos":case "end-pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Jy,b):P.call(null,Jy,b))?new vU(c,this.ba,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(nq,b):P.call(null,nq,b))?new vU(this.V,c,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(QA,b):P.call(null,QA,b))?new vU(this.V,this.ba,c,this.T,this.$,this.j,null):p(P.gh?P.gh(AE,b):P.call(null,AE,b))?new vU(this.V,this.ba,this.U,c,this.$,this.j,null):new vU(this.V,this.ba,this.U,this.T,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(Jy,this.V),new Fi(nq,this.ba),new Fi(QA,this.U),new Fi(AE,this.T)],null),this.j))};g.O=function(a,b){return new vU(this.V,this.ba,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function wU(a,b,c,d,e,f,k,l,m){this.V=a;this.ba=b;this.Jb=c;this.offset=d;this.U=e;this.T=f;this.$=k;this.j=l;this.B=m;this.h=2230716170;this.I=139264;}g=wU.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "type-tag":return this.V;case "logical-block":return this.ba;case "relative-to":return this.Jb;case "offset":return this.offset;case "start-pos":return this.U;case "end-pos":return this.T;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.indent-t{",", ","}",c,Wg.gh(new Q(null,6,5,R,[new Q(null,2,5,R,[Jy,this.V],null),new Q(null,2,5,R,[nq,this.ba],null),new Q(null,2,5,R,[fv,this.Jb],null),new Q(null,2,5,R,[mE,this.offset],null),new Q(null,2,5,R,[QA,this.U],null),new Q(null,2,5,R,[AE,this.T],null)],null),this.j))};g.ua=function(){return new fj(this,6,new Q(null,6,5,R,[Jy,nq,fv,mE,QA,AE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};
    g.X=function(){return 6+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-1602780238^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.V,b.V)&&A.gh(this.ba,b.ba)&&A.gh(this.Jb,b.Jb)&&A.gh(this.offset,b.offset)&&A.gh(this.U,b.U)&&A.gh(this.T,b.T)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,6,[mE,null,AE,null,fv,null,nq,null,Jy,null,QA,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new wU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "type-tag":case "logical-block":case "relative-to":case "offset":case "start-pos":case "end-pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(Jy,b):P.call(null,Jy,b))?new wU(c,this.ba,this.Jb,this.offset,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(nq,b):P.call(null,nq,b))?new wU(this.V,c,this.Jb,this.offset,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(fv,b):P.call(null,fv,b))?new wU(this.V,this.ba,c,this.offset,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(mE,b):P.call(null,mE,b))?new wU(this.V,this.ba,this.Jb,c,this.U,this.T,this.$,this.j,null):p(P.gh?P.gh(QA,b):P.call(null,QA,b))?new wU(this.V,
    this.ba,this.Jb,this.offset,c,this.T,this.$,this.j,null):p(P.gh?P.gh(AE,b):P.call(null,AE,b))?new wU(this.V,this.ba,this.Jb,this.offset,this.U,c,this.$,this.j,null):new wU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,6,5,R,[new Fi(Jy,this.V),new Fi(nq,this.ba),new Fi(fv,this.Jb),new Fi(mE,this.offset),new Fi(QA,this.U),new Fi(AE,this.T)],null),this.j))};
    g.O=function(a,b){return new wU(this.V,this.ba,this.Jb,this.offset,this.U,this.T,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};var xU=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("cljs.pprint","write-token"),function(f,k){return Jy.m(k)},e,a,b,c,d)}();
    xU.v(null,on,function(a,b){var c=vx.m(u(u(a)));p(c)&&(c.m?c.m(oz):c.call(null,oz));b=nq.m(b);c=NA.m(b);p(c)&&be(GA.m(u(u(a))),c);a=mU(GA.m(u(u(a))),lr);Oh(lC.m(b),a);return Oh(rJ.m(b),a)});xU.v(null,DJ,function(a,b){var c=vx.m(u(u(a)));p(c)&&(c.m?c.m(Su):c.call(null,Su));b=Tw.m(nq.m(b));return p(b)?be(GA.m(u(u(a))),b):null});
    xU.v(null,iG,function(a,b){var c=nq.m(b),d=rJ.m(c),e=mE.m(b);b=fv.m(b);if(p(A.gh?A.gh(aE,b):A.call(null,aE,b)))a=u(lC.m(c));else if(p(A.gh?A.gh(xq,b):A.call(null,xq,b)))a=mU(GA.m(u(u(a))),lr);else throw Error(["No matching clause: ",q.m(b)].join(""));return Oh(d,e+a)});xU.v(null,Tu,function(a,b){return be(GA.m(u(u(a))),wn.m(b))});
    xU.v(null,ZG,function(a,b){var c=A.gh(U.m(b),co);c||(c=(c=!A.gh(U.m(b),ND))?u(Fn.m(nq.m(b))):c);p(c)?yU.gh?yU.gh(a,b):yU.call(null,a,b):(b=Zo.m(u(u(a))),p(b)&&be(GA.m(u(u(a))),b));return Qh.A(u(a),K,Zo,null)});
    function zU(a,b,c){b=B(b);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);if(!A.gh(Jy.m(k),ZG)){var l=Zo.m(u(u(a)));p(l)&&be(GA.m(u(u(a))),l);}xU.gh(a,k);Qh.A(u(a),K,Zo,Zo.m(k));k=Zo.m(u(u(a)));p(p(c)?k:c)&&(be(GA.m(u(u(a))),k),Qh.A(u(a),K,Zo,null));f+=1;}else if(b=B(b))Vf(b)?(d=qe(b),b=re(b),k=d,e=F(d),d=k):(k=C(b),A.gh(Jy.m(k),ZG)||(d=Zo.m(u(u(a))),p(d)&&be(GA.m(u(u(a))),d)),xU.gh(a,k),Qh.A(u(a),K,Zo,Zo.m(k)),k=Zo.m(u(u(a))),p(p(c)?k:c)&&(be(GA.m(u(u(a))),k),Qh.A(u(a),K,Zo,null)),b=D(b),d=null,
    e=0),f=0;else break}function AU(a,b){var c=mU(GA.m(u(u(a))),Xv),d;(d=null==c)||(a=mU(GA.m(u(u(a))),lr),b=(b=B(b))?AE.m(Af(b))-QA.m(C(b)):0,d=a+b<c);return d}function BU(a,b,c){b=u(Fn.m(b));return p(b)?b:!AU(a,c)}function CU(a,b,c){var d=dw.m(u(u(a))),e=mU(GA.m(u(u(a))),Xv);return p(d)?p(e)?(d=u(lC.m(b))>=e-d)?BU(a,b,c):d:e:d}
    var DU=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("cljs.pprint","emit-nl?"),function(f){return U.m(f)},e,a,b,c,d)}();DU.v(null,$E,function(a,b,c){a=nq.m(a);return BU(b,a,c)});DU.v(null,WH,function(a,b,c){a=nq.m(a);return CU(b,a,c)});DU.v(null,ND,function(a,b,c,d){a=nq.m(a);var e=u(FB.m(a));return p(e)?e:(d=!AU(b,d))?d:CU(b,a,c)});DU.v(null,co,function(){return !0});
    function EU(a){var b=C(a),c=nq.m(b);b=B(Lk(function(d){return !(A.gh(Jy.m(d),ZG)&&rU(nq.m(d),c))},D(a)));return new Q(null,2,5,R,[b,B(Xh(F(b)+1,a))],null)}function FU(a){var b=C(a),c=nq.m(b);return B(Lk(function(d){var e=nq.m(d);return !(A.gh(Jy.m(d),ZG)&&(A.gh(e,c)||rU(e,c)))},D(a)))}
    function yU(a,b){be(GA.m(u(u(a))),"\n");Qh.A(u(a),K,Zo,null);b=nq.m(b);var c=qn.m(b);p(c)&&be(GA.m(u(u(a))),c);c=eh(q,$h(u(rJ.m(b))-F(c)," "));be(GA.m(u(u(a))),c);a:for(Oh(FB.m(b),!0),Oh(Fn.m(b),!0),a=Eq.m(b);;)if(p(a))Oh(Fn.m(a),!0),Oh(FB.m(a),!0),a=Eq.m(a);else break a;return null}function GU(a){var b=B(Lk(function(c){return !A.gh(Jy.m(c),ZG)},a));return new Q(null,2,5,R,[b,B(Xh(F(b),a))],null)}
    var HU=function HU(a,b){var d=GU(b);b=J(d,0,null);var e=J(d,1,null);p(b)&&zU(a,b,!1);if(p(e)){d=EU(e);b=J(d,0,null);d=J(d,1,null);var f=C(e),k=DU.A(f,a,b,FU(e));p(k)&&(yU(a,f),e=D(e));AU(a,e)?a=e:(e=HU.gh?HU.gh(a,b):HU.call(null,a,b),A.gh(e,b)?(zU(a,b,!1),a=d):a=ii.gh(I,Wg.gh(e,d)));return a}return null};function IU(a){for(var b=Yw.m(u(u(a)));;){Qh.A(u(a),K,Yw,ii.gh(I,b));if(AU(a,b))return null;var c=HU(a,b);if(b!==c)b=c;else return null}}
    function JU(a,b){Qh.A(u(a),K,Yw,Bf.gh(Yw.m(u(u(a))),b));return AU(a,Yw.m(u(u(a))))?null:IU(a)}function KU(a){var b=Zo.m(u(u(a)));return p(b)?(be(GA.m(u(u(a))),b),Qh.A(u(a),K,Zo,null)):null}
    function LU(a,b){var c=OL(b,"\n",-1);if(A.gh(F(c),1))return b;b=qn.m(C(SB.m(u(u(a)))));var d=C(c);if(A.gh($z,Wv.m(u(u(a))))){var e=qr.m(u(u(a))),f=e+F(d);Qh.A(u(a),K,qr,f);JU(a,new sU(Tu,d,null,e,f,null,null,null));IU(a);d=Yw.m(u(u(a)));p(d)&&(zU(a,d,!0),Qh.A(u(a),K,Yw,I));}else KU(a),be(GA.m(u(u(a))),d);be(GA.m(u(u(a))),"\n");d=B(D(Gk(c)));e=null;for(var k=f=0;;)if(k<f){var l=e.W(null,k);be(GA.m(u(u(a))),l);be(GA.m(u(u(a))),"\n");p(b)&&be(GA.m(u(u(a))),b);k+=1;}else if(d=B(d))e=d,Vf(e)?(d=qe(e),k=
    re(e),e=d,f=F(d),d=k):(d=C(e),be(GA.m(u(u(a))),d),be(GA.m(u(u(a))),"\n"),p(b)&&be(GA.m(u(u(a))),b),d=D(e),e=null,f=0),k=0;else break;Qh.A(u(a),K,$z,yq);return Af(c)}
    function MU(a){var b=NU,c=OU,d=new qU(null,null,Nh(0),Nh(0),Nh(!1),Nh(!1),null,null,null,null,null,null,null),e=Nh(Wj([SB,dw,ZC,Er,jt,Wv,qr,Zo,GA,BD,Yw],[d,c,d,!0,null,yq,0,null,pU(a,b),1,I]));if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof gw)gw=function(f,k,l,m,r,t){this.ya=f;this.Ve=k;this.nh=l;this.Mg=m;this.Vc=r;this.ki=t;this.h=1074167808;this.I=0;},gw.prototype.O=function(f,k){return new gw(this.ya,this.Ve,this.nh,this.Mg,this.Vc,k)},gw.prototype.N=function(){return this.ki},
    gw.prototype.zb=function(){return this.Vc},gw.prototype.Pc=function(f,k){f=Xc(k);if(p(A.gh?A.gh(String,f):A.call(null,String,f))){var l=LU(this,k);k=l.replace(/\s+$/,"");f=l.substring(k.length);var m=Wv.m(u(u(this)));if(A.gh(m,yq))return KU(this),be(GA.m(u(u(this))),k),Qh.A(u(this),K,Zo,f);m=qr.m(u(u(this)));l=m+F(l);Qh.A(u(this),K,qr,l);return JU(this,new sU(Tu,k,f,m,l,null,null,null))}if(p(A.gh?A.gh(Number,f):A.call(null,Number,f)))return A.gh(Wv.m(u(u(this))),yq)?(KU(this),k=be(GA.m(u(u(this))),
    k)):A.gh(k,"\n")?k=LU(this,"\n"):(f=qr.m(u(u(this))),l=f+1,Qh.A(u(this),K,qr,l),k=qg(k),k=JU(this,new sU(Tu,k,null,f,l,null,null,null))),k;throw Error(["No matching clause: ",q.m(f)].join(""));},gw.prototype.qc=function(){this.Le(null);return ce(GA.m(u(u(this))))},gw.prototype.Le=function(){return A.gh(Wv.m(u(u(this))),$z)?(zU(this,Yw.m(u(u(this))),!0),Qh.A(u(this),K,Yw,I)):KU(this)},gw.Ia=!0,gw.Da="cljs.pprint/t_cljs$pprint19374",gw.Ja=function(f){return be(f,"cljs.pprint/t_cljs$pprint19374")};return new gw(a,
    b,c,d,e,S)}function PU(a,b){var c=Cc;b=new qU(SB.m(u(u(c))),null,Nh(0),Nh(0),Nh(!1),Nh(!1),a,null,b,null,null,null,null);Qh.A(u(c),K,SB,b);if(A.gh(Wv.m(u(u(c))),yq)){KU(c);var d=vx.m(u(u(c)));p(d)&&(d.m?d.m(oz):d.call(null,oz));p(a)&&be(GA.m(u(u(c))),a);c=mU(GA.m(u(u(c))),lr);Oh(b.lb,c);Oh(b.kb,c);}else d=qr.m(u(u(c))),a=d+(p(a)?F(a):0),Qh.A(u(c),K,qr,a),JU(c,new uU(on,b,d,a,null,null,null));}
    function QU(){var a=Cc,b=SB.m(u(u(a))),c=Tw.m(b);if(A.gh(Wv.m(u(u(a))),yq)){KU(a);p(c)&&be(GA.m(u(u(a))),c);var d=vx.m(u(u(a)));p(d)&&(d.m?d.m(Su):d.call(null,Su));}else d=qr.m(u(u(a))),c=d+(p(c)?F(c):0),Qh.A(u(a),K,qr,c),JU(a,new vU(DJ,b,d,c,null,null,null));Qh.A(u(a),K,SB,Eq.m(b));}var RU=!0,SU=null,NU=72,OU=40,TU=null,UU=null,VU=null,WU=null,XU=10,YU=0,ZU=null;function $U(a){var b=null!=a?a.h&32768||h===a.nf?!0:a.h?!1:Wc(Kd,a):Wc(Kd,a);return b?Er.m(u(u(a))):b}
    function aV(a){var b=ZU;p(b)&&(b=Gc,b=p(b)?ZU>=Gc:b);Sc(RU)?eU.call(null,a):p(b)?be(Cc,"..."):(p(ZU)&&(ZU+=1),SU.call(null,a));return b}var bV=function bV(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return bV.g(arguments[0],1<c.length?new Pe(c.slice(1),0,null):null)};
    bV.g=function(a,b){var c=vk.g(G([new n(null,1,[mJ,!0],null),eh(pk,b)]));b=XU;var d=UU,e=Gc,f=Hc,k=TU,l=OU,m=SU,r=RU,t=WU,v=Fc,y=NU,E=VU,H=GA.gh(c,XU),T=kz.gh(c,UU),Y=Az.gh(c,Gc),ia=$m.gh(c,Hc),ba=kt.gh(c,TU),wa=dw.gh(c,OU),ta=ow.gh(c,SU),ob=Jr.gh(c,RU),qb=UD.gh(c,WU),pb=Kc.gh(c,Fc),xc=Bo.gh(c,NU),Sb=Bq.gh(c,VU);XU=H;UU=T;Gc=Y;Hc=ia;TU=ba;OU=wa;SU=ta;RU=ob;WU=qb;Fc=pb;NU=xc;VU=Sb;try{var mb=new yc,Tb=N(c,mJ)?mJ.m(c):!0,gb=!0===Tb||null==Tb?new ze(mb):Tb;if(p(RU)){var hb=Sc($U(gb));c=Cc;Cc=hb?MU(gb):
    gb;try{aV(a),lU();}finally{Cc=c;}}else {hb=Cc;Cc=gb;try{eU.call(null,a);}finally{Cc=hb;}}!0===Tb&&bl(q.m(mb));return null==Tb?q.m(mb):null}finally{VU=E,NU=y,Fc=v,WU=t,RU=r,SU=m,OU=l,TU=k,Hc=f,Gc=e,UU=d,XU=b;}};bV.F=1;bV.G=function(a){var b=C(a);a=D(a);return this.g(b,a)};function Nx(a){var b=new yc,c=Cc;Cc=new ze(b);try{var d=Cc,e=Sc($U(d)),f=Cc;Cc=e?MU(d):d;try{d=RU;RU=!0;try{aV(a);}finally{RU=d;}A.gh(0,mU(Cc,lr))||be(Cc,"\n");lU();}finally{Cc=f;}bl(q.m(b));}finally{Cc=c;}}
    function dV(a,b){if(Sc(b.m?b.m(a):b.call(null,a)))throw Error(["Bad argument: ",q.m(a),". It must be one of ",q.m(b)].join(""));}function eV(){var a=Hc;return p(a)?YU>=Hc:a}function fV(a){dV(a,new Ak(null,new n(null,4,[co,null,WH,null,ND,null,$E,null],null),null));var b=Cc;Qh.A(u(b),K,Wv,$z);var c=qr.m(u(u(b))),d=SB.m(u(u(b)));JU(b,new tU(ZG,a,d,c,c,null,null,null));}
    function gV(a,b){dV(a,new Ak(null,new n(null,2,[aE,null,xq,null],null),null));var c=Cc,d=SB.m(u(u(c)));if(A.gh(Wv.m(u(u(c))),yq)){KU(c);var e=rJ.m(d);if(p(A.gh?A.gh(aE,a):A.call(null,aE,a)))a=u(lC.m(d));else if(p(A.gh?A.gh(xq,a):A.call(null,xq,a)))a=mU(GA.m(u(u(c))),lr);else throw Error(["No matching clause: ",q.m(a)].join(""));Oh(e,b+a);}else e=qr.m(u(u(c))),JU(c,new wU(iG,d,a,b,e,e,null,null,null));}
    function hV(a,b,c){b="string"===typeof b?iV(b):b;c=jV(c);a:{var d=new yc,e=Sc(a)||!0===a?new ze(d):a,f=kV(b)&&Sc($U(e))?p($U(e))?e:MU(e):e,k=Cc;Cc=f;try{try{lV(b,c);}finally{e!==f&&ce(f);}var l=Sc(a)?q.m(d):!0===a?bl(q.m(d)):null;break a}finally{Cc=k;}l=void 0;}return l}var mV=null;function nV(a,b){a=[q.m(a),"\n",q.m(mV),"\n",q.m(eh(q,$h(b," "))),"^\n"].join("");throw Error(a);}function oV(a,b,c,d,e,f){this.uc=a;this.ab=b;this.tc=c;this.$=d;this.j=e;this.B=f;this.h=2230716170;this.I=139264;}g=oV.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "seq":return this.uc;case "rest":return this.ab;case "pos":return this.tc;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.arg-navigator{",", ","}",c,Wg.gh(new Q(null,3,5,R,[new Q(null,2,5,R,[rA,this.uc],null),new Q(null,2,5,R,[ts,this.ab],null),new Q(null,2,5,R,[qr,this.tc],null)],null),this.j))};g.ua=function(){return new fj(this,3,new Q(null,3,5,R,[rA,ts,qr],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 3+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-402038447^Xe(this)};
    g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.uc,b.uc)&&A.gh(this.ab,b.ab)&&A.gh(this.tc,b.tc)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,3,[qr,null,rA,null,ts,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new oV(this.uc,this.ab,this.tc,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "seq":case "rest":case "pos":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(rA,b):P.call(null,rA,b))?new oV(c,this.ab,this.tc,this.$,this.j,null):p(P.gh?P.gh(ts,b):P.call(null,ts,b))?new oV(this.uc,c,this.tc,this.$,this.j,null):p(P.gh?P.gh(qr,b):P.call(null,qr,b))?new oV(this.uc,this.ab,c,this.$,this.j,null):new oV(this.uc,this.ab,this.tc,this.$,K.hh(this.j,b,c),null)};g.bi=function(){return B(Wg.gh(new Q(null,3,5,R,[new Fi(rA,this.uc),new Fi(ts,this.ab),new Fi(qr,this.tc)],null),this.j))};
    g.O=function(a,b){return new oV(this.uc,this.ab,this.tc,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};function jV(a){a=B(a);return new oV(a,a,0,null,null,null)}function pV(a){var b=ts.m(a);if(p(b))return new Q(null,2,5,R,[C(b),new oV(rA.m(a),D(b),qr.m(a)+1,null,null,null)],null);throw Error("Not enough arguments for format definition");}
    function qV(a){var b=pV(a);a=J(b,0,null);b=J(b,1,null);a="string"===typeof a?iV(a):a;return new Q(null,2,5,R,[a,b],null)}function rV(a,b){return b>=qr.m(a)?(b=qr.m(a)-b,sV.gh?sV.gh(a,b):sV.call(null,a,b)):new oV(rA.m(a),Xh(b,rA.m(a)),b,null,null,null)}function sV(a,b){var c=qr.m(a)+b;return 0>b?rV(a,c):new oV(rA.m(a),Xh(b,ts.m(a)),c,null,null,null)}function tV(a,b,c,d,e,f,k){this.ec=a;this.bc=b;this.nc=c;this.offset=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=tV.prototype;
    g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "func":return this.ec;case "def":return this.bc;case "params":return this.nc;case "offset":return this.offset;default:return x.hh(this.j,b,c)}};g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};
    g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#cljs.pprint.compiled-directive{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[eG,this.ec],null),new Q(null,2,5,R,[uo,this.bc],null),new Q(null,2,5,R,[ns,this.nc],null),new Q(null,2,5,R,[mE,this.offset],null)],null),this.j))};g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[eG,uo,ns,mE],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};
    g.Z=function(){var a=this.B;return null!=a?a:this.B=a=-829256337^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.ec,b.ec)&&A.gh(this.bc,b.bc)&&A.gh(this.nc,b.nc)&&A.gh(this.offset,b.offset)&&A.gh(this.j,b.j)};g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[mE,null,eG,null,ns,null,uo,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new tV(this.ec,this.bc,this.nc,this.offset,this.$,kh(Gf.gh(this.j,b)),null)};
    g.La=function(a,b){switch(b instanceof z?b.da:null){case "func":case "def":case "params":case "offset":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(eG,b):P.call(null,eG,b))?new tV(c,this.bc,this.nc,this.offset,this.$,this.j,null):p(P.gh?P.gh(uo,b):P.call(null,uo,b))?new tV(this.ec,c,this.nc,this.offset,this.$,this.j,null):p(P.gh?P.gh(ns,b):P.call(null,ns,b))?new tV(this.ec,this.bc,c,this.offset,this.$,this.j,null):p(P.gh?P.gh(mE,b):P.call(null,mE,b))?new tV(this.ec,this.bc,this.nc,c,this.$,this.j,null):new tV(this.ec,this.bc,this.nc,this.offset,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(eG,this.ec),new Fi(uo,this.bc),new Fi(ns,this.nc),new Fi(mE,this.offset)],null),this.j))};g.O=function(a,b){return new tV(this.ec,this.bc,this.nc,this.offset,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function uV(a,b){var c=J(a,0,null);a=J(a,1,null);var d=J(a,0,null);a=J(a,1,null);d=N(new Ak(null,new n(null,2,[lt,null,BH,null],null),null),c)?new Q(null,2,5,R,[d,b],null):A.gh(d,zw)?pV(b):A.gh(d,bD)?new Q(null,2,5,R,[F(ts.m(b)),b],null):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);return new Q(null,2,5,R,[new Q(null,2,5,R,[c,new Q(null,2,5,R,[b,a],null)],null),d],null)}function vV(a,b){b=hU(uV,b,a);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[ii.gh(S,a),b],null)}
    var wV=new n(null,3,[2,"#b",8,"#o",16,"#x"],null);
    function zV(a,b,c){c=pV(c);var d=J(c,0,null);c=J(c,1,null);if(ag(d))if(A.gh(XU,10))var e=[q.m(d),p(WU)?".":null].join("");else {e=q;var f=e.m;if(p(WU)){var k=x.gh(wV,XU);k=p(k)?k:["#",q.m(XU),"r"].join("");}else k=null;e=[f.call(e,k),q.m(yV(XU,d))].join("");}else e=null;a=p(e)?e:a.m?a.m(d):a.call(null,d);d=a.length;e=d+rt.m(b);e=e>=Cx.m(b)?e:e+(sg(Cx.m(b)-e-1,lq.m(b))+1)*lq.m(b);d=eh(q,$h(e-d,PC.m(b)));p(BH.m(b))?dU.g(G([[q.m(d),q.m(a)].join("")])):dU.g(G([[q.m(a),q.m(d)].join("")]));return c}
    function BV(a,b){return Dg(C(iU(function(c){return 0<c?new Q(null,2,5,R,[tg(c,a),sg(c,a)],null):new Q(null,2,5,R,[null,null],null)},b)))}function yV(a,b){return 0===b?"0":eh(q,Vh.gh(function(c){return 10>c?qg(gU("0")+c):qg(gU("a")+(c-10))},BV(a,b)))}function CV(a,b){return Dg(C(iU(function(c){return new Q(null,2,5,R,[B(Dg(Wh.gh(a,c))),B(Xh(a,c))],null)},Dg(b))))}
    function DV(a,b,c){c=pV(c);var d=J(c,0,null);c=J(c,1,null);if(ag(d)||"number"===typeof d&&!isNaN(d)&&Infinity!==d&&parseFloat(d)!==parseInt(d,10)&&A.gh(d,Math.floor(d))){var e=0>d,f=yV(a,e?-d:d);a=p(lt.m(b))?function(){var k=Vh.gh(function(m){return eh(q,m)},CV(pD.m(b),f)),l=$h(F(k),us.m(b));return eh(q,D(ai.gh(l,k)))}():f;a=e?["-",q.m(a)].join(""):p(BH.m(b))?["+",q.m(a)].join(""):a;a=a.length<Cx.m(b)?[q.m(eh(q,$h(Cx.m(b)-a.length,PC.m(b)))),q.m(a)].join(""):a;dU.g(G([a]));}else zV(pl,new n(null,5,
    [Cx,Cx.m(b),lq,1,rt,0,PC,PC.m(b),BH,!0],null),jV(new Q(null,1,5,R,[d],null)));return c}
    var EV=new Q(null,20,5,R,"zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),null),FV=new Q(null,20,5,R,"zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "),null),GV=new Q(null,10,5,R,"  twenty thirty forty fifty sixty seventy eighty ninety".split(" "),null),HV=new Q(null,10,5,R,"  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "),
    null),IV=new Q(null,22,5,R," thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "),null);
    function JV(a){var b=sg(a,100);a=tg(a,100);var c=0<b?[q.m(nf(EV,b))," hundred"].join(""):null,d=q,e=d.m;if(0<a)if(20>a)var f=nf(EV,a);else {f=sg(a,10);var k=tg(a,10);f=[q.m(0<f?nf(GV,f):null),0<f&&0<k?"-":null,q.m(0<k?nf(EV,k):null)].join("");}else f=null;return [c,0<b&&0<a?" ":null,e.call(d,f)].join("")}
    function KV(a,b){var c=F(a),d=I;--c;var e=C(a);for(a=D(a);;){if(null==a)return [q.m(eh(q,Xh(1,ai.gh(AO(", "),d)))),Of(e)||Of(d)?null:", ",q.m(e),!Of(e)&&0<c+b?[" ",q.m(nf(IV,c+b))].join(""):null].join("");d=Of(e)?d:Bf.gh(d,[q.m(e)," ",q.m(nf(IV,c+b))].join(""));--c;e=C(a);a=D(a);}}
    var MV=new Q(null,4,5,R,[new Q(null,9,5,R,"I II III IIII V VI VII VIII VIIII".split(" "),null),new Q(null,9,5,R,"X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "),null),new Q(null,9,5,R,"C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "),null),new Q(null,3,5,R,["M","MM","MMM"],null)],null),NV=new Q(null,4,5,R,[new Q(null,9,5,R,"I II III IV V VI VII VIII IX".split(" "),null),new Q(null,9,5,R,"X XX XXX XL L LX LXX LXXX XC".split(" "),null),new Q(null,9,5,R,"C CC CCC CD D DC DCC DCCC CM".split(" "),null),new Q(null,
    3,5,R,["M","MM","MMM"],null)],null);function OV(a,b){b=pV(b);var c=J(b,0,null);b=J(b,1,null);if("number"===typeof c&&0<c&&4E3>c){var d=BV(10,c);c=I;for(var e=F(d)-1;;)if(Of(d)){dU.g(G([eh(q,c)]));break}else {var f=C(d);c=A.gh(0,f)?c:Bf.gh(c,nf(nf(a,e),f-1));--e;d=D(d);}}else DV(10,new n(null,5,[Cx,0,PC," ",us,",",pD,3,lt,!0],null),jV(new Q(null,1,5,R,[c],null)));return b}var PV=new n(null,5,[8,"Backspace",9,"Tab",10,"Newline",13,"Return",32,"Space"],null);
    function QV(a,b){a=pV(b);b=J(a,0,null);a=J(a,1,null);var c=gU(b);b=c&127;c&=128;var d=x.gh(PV,b);0<c&&dU.g(G(["Meta-"]));dU.g(G([p(d)?d:32>b?["Control-",q.m(qg(b+64))].join(""):A.gh(b,127)?"Control-?":qg(b)]));return a}
    function RV(a,b){var c=pV(b);b=J(c,0,null);c=J(c,1,null);a=lH.m(a);if(p(A.gh?A.gh("o",a):A.call(null,"o",a)))hV(!0,"\\o~3,'0o",G([gU(b)]));else if(p(A.gh?A.gh("u",a):A.call(null,"u",a)))hV(!0,"\\u~4,'0x",G([gU(b)]));else if(p(A.gh?A.gh(null,a):A.call(null,null,a)))be(Cc,p(A.gh?A.gh("\b",b):A.call(null,"\b",b))?"\\backspace":p(A.gh?A.gh(" ",b):A.call(null," ",b))?"\\space":p(A.gh?A.gh("\t",b):A.call(null,"\t",b))?"\\tab":p(A.gh?A.gh("\n",b):A.call(null,"\n",b))?"\\newline":p(A.gh?A.gh("\f",b):A.call(null,
    "\f",b))?"\\formfeed":p(A.gh?A.gh("\r",b):A.call(null,"\r",b))?"\\return":p(A.gh?A.gh('"',b):A.call(null,'"',b))?'\\"':p(A.gh?A.gh("\\",b):A.call(null,"\\",b))?"\\\\":["\\",q.m(b)].join(""));else throw Error(["No matching clause: ",q.m(a)].join(""));return c}function SV(a,b){b=pV(b);a=J(b,0,null);b=J(b,1,null);dU.g(G([a]));return b}function TV(a){a=C(a);return A.gh(tx,a)||A.gh(FG,a)}
    function UV(a,b,c){return yf(hU(function(d,e){if(TV(e))return new Q(null,2,5,R,[null,e],null);e=vV(ns.m(d),e);var f=J(e,0,null);e=J(e,1,null);var k=jU(f);f=J(k,0,null);k=J(k,1,null);f=K.hh(f,lo,c);return new Q(null,2,5,R,[null,eh(eG.m(d),new Q(null,3,5,R,[f,e,k],null))],null)},b,a))}
    function VV(a){a=q.m(a).toLowerCase();var b=a.indexOf("e"),c=a.indexOf(".");a=0>b?0>c?new Q(null,2,5,R,[a,q.m(a.length-1)],null):new Q(null,2,5,R,[[a.substring(0,c),a.substring(c+1)].join(""),q.m(c-1)],null):0>c?new Q(null,2,5,R,[a.substring(0,b),a.substring(b+1)],null):new Q(null,2,5,R,[[a.substring(0,1),a.substring(2,b)].join(""),a.substring(b+1)],null);b=J(a,0,null);a=J(a,1,null);a:if(c=F(b),0<c&&A.gh(nf(b,F(b)-1),"0"))for(--c;;){if(0>c){b="";break a}if(A.gh(nf(b,c),"0"))--c;else {b=b.substring(0,
    c+1);break a}}a:{c=b;var d=F(c);if(0<d&&A.gh(nf(c,0),"0"))for(var e=0;;){if(A.gh(e,d)||!A.gh(nf(c,e),"0")){c=c.substring(e);break a}e+=1;}}b=F(b)-F(c);a=0<F(a)&&A.gh(nf(a,0),"+")?a.substring(1):a;return Of(c)?new Q(null,2,5,R,["0",0],null):new Q(null,2,5,R,[c,parseInt(a,10)-b],null)}
    function WV(a,b,c,d){if(p(p(c)?c:d)){var e=F(a);d=p(d)?2>d?2:d:0;p(c)?c=b+c+1:0<=b?(c=b+1,--d,c=c>d?c:d):c=d+b;var f=A.gh(c,0)?new Q(null,4,5,R,[["0",q.m(a)].join(""),b+1,1,e+1],null):new Q(null,4,5,R,[a,b,c,e],null);c=J(f,0,null);e=J(f,1,null);d=J(f,2,null);f=J(f,3,null);if(p(d)){if(0>d)return new Q(null,3,5,R,["0",0,!1],null);if(f>d){b=nf(c,d);a=c.substring(0,d);if(gU(b)>=gU("5")){a:for(b=F(a)-1,c=b|0;;){if(0>c){b=fh(q,"1",$h(b+1,"0"));break a}if(A.gh("9",a.charAt(c)))--c;else {b=gh(q,a.substring(0,
    c),qg(gU(a.charAt(c))+1),$h(b-c,"0"));break a}}a=F(b)>a.length;return new Q(null,3,5,R,[a?Ag(b,0,F(b)-1):b,e,a],null)}return new Q(null,3,5,R,[a,e,!1],null)}}}return new Q(null,3,5,R,[a,b,!1],null)}
    function XV(a,b,c){var d=0>b?new Q(null,2,5,R,[[q.m(eh(q,$h(-b-1,"0"))),q.m(a)].join(""),-1],null):new Q(null,2,5,R,[a,b],null);a=J(d,0,null);var e=J(d,1,null);d=F(a);c=p(c)?e+c+1:e+1;c=d<c?[q.m(a),q.m(eh(q,$h(c-d,"0")))].join(""):a;0>b?b=[".",q.m(c)].join(""):(b+=1,b=[c.substring(0,b),".",c.substring(b)].join(""));return b}function YV(a,b){return 0>b?[".",q.m(a)].join(""):[a.substring(0,b),".",a.substring(b)].join("")}
    function ZV(a,b){var c=aG.m(a),d=$F.m(a);b=pV(b);var e=J(b,0,null);b=J(b,1,null);var f=0>e?new Q(null,2,5,R,["-",-e],null):new Q(null,2,5,R,["+",e],null),k=J(f,0,null);f=J(f,1,null);f=VV(f);var l=J(f,0,null),m=J(f,1,null)+WF.m(a);f=function(){var y=BH.m(a);return p(y)?y:0>e}();var r=Sc(d)&&F(l)-1<=m,t=WV(l,m,d,p(c)?c-(p(f)?1:0):null);l=J(t,0,null);m=J(t,1,null);t=J(t,2,null);l=XV(l,p(t)?m+1:m,d);d=p(p(c)?p(d)?1<=d&&A.gh(l.charAt(0),"0")&&A.gh(l.charAt(1),".")&&l.length>c-(p(f)?1:0):d:c)?l.substring(1):
    l;m=A.gh(C(d),".");if(p(c)){l=d.length;l=p(f)?l+1:l;m=m&&!(l>=c);r=r&&!(l>=c);var v=m||r?l+1:l;p(function(){var y=v>c;return y?LI.m(a):y}())?dU.g(G([eh(q,$h(c,LI.m(a)))])):dU.g(G([[q.m(eh(q,$h(c-v,PC.m(a)))),q.m(p(f)?k:null),m?"0":null,d,r?"0":null].join("")]));}else dU.g(G([[q.m(p(f)?k:null),m?"0":null,d,r?"0":null].join("")]));return b}
    function $V(a,b){b=pV(b);var c=J(b,0,null);b=J(b,1,null);var d=VV(0>c?-c:c);J(d,0,null);for(J(d,1,null);;){var e=J(d,0,null),f=J(d,1,null),k=aG.m(a),l=$F.m(a),m=YF.m(a),r=WF.m(a),t=function(){var Y=Ho.m(a);return p(Y)?Y:"E"}();d=function(){var Y=BH.m(a);return p(Y)?Y:0>c}();var v=0>=r,y=f-(r-1),E=q.m(Math.abs(y));t=[q.m(t),0>y?"-":"+",q.m(p(m)?eh(q,$h(m-E.length,"0")):null),E].join("");var H=t.length;y=F(e);e=[q.m(eh(q,$h(-r,"0"))),q.m(e),q.m(p(l)?eh(q,$h(l-(y-1)-(0>r?-r:0),"0")):null)].join("");
    y=p(k)?k-H:null;e=WV(e,0,A.gh(r,0)?l-1:0<r?l:0>r?l-1:null,p(y)?y-(p(d)?1:0):null);y=J(e,0,null);J(e,1,null);E=J(e,2,null);e=YV(y,r);l=A.gh(r,F(y))&&null==l;if(Sc(E)){if(p(k)){f=e.length+H;f=p(d)?f+1:f;var T=(v=v&&!A.gh(f,k))?f+1:f;f=l&&T<k;p(function(){var Y=T>k;Y||(Y=m,Y=p(Y)?H-2>m:Y);return p(Y)?LI.m(a):Y}())?dU.g(G([eh(q,$h(k,LI.m(a)))])):dU.g(G([[q.m(eh(q,$h(k-T-(f?1:0),PC.m(a)))),p(d)?0>c?"-":"+":null,v?"0":null,e,f?"0":null,t].join("")]));}else dU.g(G([[p(d)?0>c?"-":"+":null,v?"0":null,e,l?"0":
    null,t].join("")]));break}else d=new Q(null,2,5,R,[y,f+1],null);}return b}function aW(a,b,c){var d=pV(b),e=J(d,0,null);J(d,1,null);d=VV(0>e?-e:e);var f=J(d,0,null);d=J(d,1,null);var k=aG.m(a),l=$F.m(a),m=YF.m(a);d=A.gh(e,0)?0:d+1;e=p(m)?m+2:4;k=p(k)?k-e:null;p(l)?f=l:(f=F(f),l=7>d?d:7,f=f>l?f:l);d=f-d;return 0<=d&&d<=f?(a=ZV(new n(null,6,[aG,k,$F,d,WF,0,LI,LI.m(a),PC,PC.m(a),BH,BH.m(a)],null),b),dU.g(G([eh(q,$h(e," "))])),a):$V(a,b)}
    function bW(a,b){b=pV(b);var c=J(b,0,null);b=J(b,1,null);var d=VV(Math.abs(c)),e=J(d,0,null),f=J(d,1,null),k=$F.m(a),l=dG.m(a);d=aG.m(a);var m=function(){var t=BH.m(a);return p(t)?t:0>c}(),r=WV(e,f,k,null);e=J(r,0,null);f=J(r,1,null);r=J(r,2,null);k=XV(e,p(r)?f+1:f,k);l=[q.m(eh(q,$h(l-k.indexOf("."),"0"))),k].join("");k=l.length+(p(m)?1:0);dU.g(G([[p(function(){var t=lt.m(a);return p(t)?m:t}())?0>c?"-":"+":null,q.m(eh(q,$h(d-k,PC.m(a)))),p(function(){var t=Sc(lt.m(a));return t?m:t}())?0>c?"-":"+":
    null,l].join("")]));return b}function cW(a,b){var c=SH.m(a);c=p(c)?new Q(null,2,5,R,[c,b],null):pV(b);b=J(c,0,null);c=J(c,1,null);var d=cw.m(a);b=0>b||b>=F(d)?C(ks.m(a)):nf(d,b);return p(b)?UV(b,c,lo.m(a)):c}function dW(a,b){var c=pV(b);b=J(c,0,null);c=J(c,1,null);var d=cw.m(a);b=p(b)?yf(d):C(d);return p(b)?UV(b,c,lo.m(a)):c}function eW(a,b){var c=pV(b),d=J(c,0,null);c=J(c,1,null);var e=cw.m(a);e=p(d)?C(e):null;return p(d)?p(e)?UV(e,b,lo.m(a)):b:c}
    function fW(a,b){var c=Kx.m(a),d=C(cw.m(a));d=Of(d)?qV(b):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);d=pV(d);var e=J(d,0,null);d=J(d,1,null);var f=0;e=jV(e);for(var k=-1;;){if(Sc(c)&&A.gh(qr.m(e),k)&&1<f)throw Error("%{ construct not consuming any arguments: Infinite loop!");k=Of(ts.m(e))&&(Sc(lt.m(hp.m(a)))||0<f);if(p(k?k:p(c)?f>=c:c))return d;k=UV(b,e,lo.m(a));if(A.gh(tx,C(k)))return d;f+=1;var l=qr.m(e);e=k;k=l;}}
    function gW(a,b){var c=Kx.m(a),d=C(cw.m(a));d=Of(d)?qV(b):new Q(null,2,5,R,[d,b],null);b=J(d,0,null);d=J(d,1,null);d=pV(d);var e=J(d,0,null);d=J(d,1,null);for(var f=0;;){var k=Of(e)&&(Sc(lt.m(hp.m(a)))||0<f);if(p(k?k:p(c)?f>=c:c))return d;k=UV(b,jV(C(e)),jV(D(e)));if(A.gh(FG,C(k)))return d;f+=1;e=D(e);}}
    function hW(a,b){var c=Kx.m(a),d=C(cw.m(a)),e=Of(d)?qV(b):new Q(null,2,5,R,[d,b],null);b=J(e,0,null);d=0;e=J(e,1,null);for(var f=-1;;){if(Sc(c)&&A.gh(qr.m(e),f)&&1<d)throw Error("%@{ construct not consuming any arguments: Infinite loop!");f=Of(ts.m(e))&&(Sc(lt.m(hp.m(a)))||0<d);if(p(f?f:p(c)?d>=c:c))return e;f=UV(b,e,lo.m(a));if(A.gh(tx,C(f)))return yf(f);d+=1;var k=qr.m(e);e=f;f=k;}}
    function iW(a,b){var c=Kx.m(a),d=C(cw.m(a)),e=Of(d)?qV(b):new Q(null,2,5,R,[d,b],null);b=J(e,0,null);d=0;for(e=J(e,1,null);;){var f=Of(ts.m(e))&&(Sc(lt.m(hp.m(a)))||0<d);if(p(f?f:p(c)?d>=c:c))return e;f=ts.m(e);f=p(f)?new Q(null,2,5,R,[C(f),new oV(rA.m(e),D(f),qr.m(e)+1,null,null,null)],null):new Q(null,2,5,R,[null,e],null);e=J(f,0,null);f=J(f,1,null);e=UV(b,jV(e),f);if(A.gh(FG,C(e)))return f;e=f;d+=1;}}
    function jW(a,b){if(p(lt.m(hp.m(a)))){var c=cw.m(a),d=F(c),e=1<d?vn.m(ns.m(C(C(c)))):p(lt.m(a))?"(":null,f=nf(c,1<d?1:0);c=2<d?vn.m(ns.m(C(nf(c,2)))):p(lt.m(a))?")":null;d=pV(b);b=J(d,0,null);d=J(d,1,null);if(p(eV()))be(Cc,"#");else {var k=YU,l=ZU;YU+=1;ZU=0;try{PU(e,c),UV(f,jV(b),lo.m(a)),QU();}finally{ZU=l,YU=k;}}a=d;}else a=kW(a,b);return a}
    function lW(a,b,c){for(var d=I;;){if(Of(a))return new Q(null,2,5,R,[d,b],null);var e=C(a);a:{var f=new yc,k=Cc;Cc=new ze(f);try{var l=new Q(null,2,5,R,[UV(e,b,c),q.m(f)],null);break a}finally{Cc=k;}l=void 0;}b=J(l,0,null);e=J(l,1,null);if(A.gh(tx,C(b)))return new Q(null,2,5,R,[d,yf(b)],null);a=D(a);d=Bf.gh(d,e);}}
    function kW(a,b){var c=function(){var ba=ks.m(a);return p(ba)?lW(ba,b,lo.m(a)):null}(),d=J(c,0,null);d=J(d,0,null);c=J(c,1,null);var e=p(c)?c:b;c=function(){var ba=BJ.m(a);return p(ba)?vV(ba,e):null}();var f=J(c,0,null);c=J(c,1,null);var k=p(c)?c:e;c=function(){var ba=C(lE.m(f));return p(ba)?ba:0}();var l=function(){var ba=C(oH.m(f));return p(ba)?ba:mU(Cc,Xv)}(),m=cw.m(a);k=lW(m,k,lo.m(a));var r=J(k,0,null);k=J(k,1,null);var t=function(){var ba=F(r)-1+(p(lt.m(a))?1:0)+(p(BH.m(a))?1:0);return 1>ba?
    1:ba}();m=fd.gh(og,Vh.gh(F,r));var v=Cx.m(a),y=rt.m(a),E=lq.m(a),H=m+t*y;v=H<=v?v:v+E*(1+sg(H-v-1,E));var T=v-m;m=function(){var ba=sg(T,t);return y>ba?y:ba}();E=T-m*t;m=eh(q,$h(m,PC.m(a)));p(p(d)?mU(GA.m(u(u(Cc))),lr)+c+v>l:d)&&dU.g(G([d]));c=E;for(var Y=r,ia=function(){var ba=lt.m(a);return p(ba)?ba:A.gh(F(Y),1)&&Sc(BH.m(a))}();;)if(B(Y))dU.g(G([[q.m(Sc(ia)?C(Y):null),q.m(p(function(){var ba=ia;return p(ba)?ba:(ba=D(Y))?ba:BH.m(a)}())?m:null),q.m(0<c?PC.m(a):null)].join("")])),--c,Y=d=p(ia)?Y:D(Y),
    ia=!1;else break;return k}
    function mW(a){if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof lw)lw=function(b,c){this.ya=b;this.li=c;this.h=1074135040;this.I=0;},lw.prototype.O=function(b,c){return new lw(this.ya,c)},lw.prototype.N=function(){return this.li},lw.prototype.qc=function(){return ce(this.ya)},lw.prototype.Pc=function(b,c){b=Xc(c);if(p(A.gh?A.gh(String,b):A.call(null,String,b)))return be(this.ya,c.toLowerCase());if(p(A.gh?A.gh(Number,b):A.call(null,Number,b)))return be(this.ya,qg(c).toLowerCase());
    throw Error(["No matching clause: ",q.m(b)].join(""));},lw.Ia=!0,lw.Da="cljs.pprint/t_cljs$pprint20074",lw.Ja=function(b){return be(b,"cljs.pprint/t_cljs$pprint20074")};return new lw(a,S)}
    function nW(a){if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof Aw)Aw=function(b,c){this.ya=b;this.mi=c;this.h=1074135040;this.I=0;},Aw.prototype.O=function(b,c){return new Aw(this.ya,c)},Aw.prototype.N=function(){return this.mi},Aw.prototype.qc=function(){return ce(this.ya)},Aw.prototype.Pc=function(b,c){b=Xc(c);if(p(A.gh?A.gh(String,b):A.call(null,String,b)))return be(this.ya,c.toUpperCase());if(p(A.gh?A.gh(Number,b):A.call(null,Number,b)))return be(this.ya,qg(c).toUpperCase());
    throw Error(["No matching clause: ",q.m(b)].join(""));},Aw.Ia=!0,Aw.Da="cljs.pprint/t_cljs$pprint20081",Aw.Ja=function(b){return be(b,"cljs.pprint/t_cljs$pprint20081")};return new Aw(a,S)}
    function oW(a,b){var c=C(a);return eh(q,C(iU(function(d){if(Of(d))return new Q(null,2,5,R,[null,null],null);var e=RegExp("\\W\\w","g").exec(d);e=p(e)?e.index+1:e;return p(e)?new Q(null,2,5,R,[[d.substring(0,e),nf(d,e).toUpperCase()].join(""),d.substring(e+1)],null):new Q(null,2,5,R,[d,null],null)},p(p(b)?p(c)?vc(c):c:b)?[c.toUpperCase(),a.substring(1)].join(""):a)))}
    function pW(a){var b=Nh(!0);if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof gx)gx=function(c,d,e){this.ya=c;this.Od=d;this.ni=e;this.h=1074135040;this.I=0;},gx.prototype.O=function(c,d){return new gx(this.ya,this.Od,d)},gx.prototype.N=function(){return this.ni},gx.prototype.qc=function(){return ce(this.ya)},gx.prototype.Pc=function(c,d){c=Xc(d);if(p(A.gh?A.gh(String,c):A.call(null,String,c)))return be(this.ya,oW(d.toLowerCase(),u(this.Od))),0<d.length?Oh(this.Od,dc(nf(d,F(d)-
    1))):null;if(p(A.gh?A.gh(Number,c):A.call(null,Number,c)))return d=qg(d),c=p(u(this.Od))?d.toUpperCase():d,be(this.ya,c),Oh(this.Od,dc(d));throw Error(["No matching clause: ",q.m(c)].join(""));},gx.Ia=!0,gx.Da="cljs.pprint/t_cljs$pprint20094",gx.Ja=function(c){return be(c,"cljs.pprint/t_cljs$pprint20094")};return new gx(a,b,S)}
    function qW(a){var b=Nh(!1);if("undefined"===typeof zc||"undefined"===typeof XT||"undefined"===typeof Ex)Ex=function(c,d,e){this.ya=c;this.wd=d;this.oi=e;this.h=1074135040;this.I=0;},Ex.prototype.O=function(c,d){return new Ex(this.ya,this.wd,d)},Ex.prototype.N=function(){return this.oi},Ex.prototype.qc=function(){return ce(this.ya)},Ex.prototype.Pc=function(c,d){c=Xc(d);if(p(A.gh?A.gh(String,c):A.call(null,String,c)))return d=d.toLowerCase(),Sc(u(this.wd))?(c=RegExp("\\S","g").exec(d),c=p(c)?c.index:
    c,p(c)?(be(this.ya,[d.substring(0,c),nf(d,c).toUpperCase(),d.substring(c+1).toLowerCase()].join("")),Oh(this.wd,!0)):be(this.ya,d)):be(this.ya,d.toLowerCase());if(p(A.gh?A.gh(Number,c):A.call(null,Number,c)))return d=qg(d),c=Sc(u(this.wd)),p(c?vc(d):c)?(Oh(this.wd,!0),be(this.ya,d.toUpperCase())):be(this.ya,d.toLowerCase());throw Error(["No matching clause: ",q.m(c)].join(""));},Ex.Ia=!0,Ex.Da="cljs.pprint/t_cljs$pprint20104",Ex.Ja=function(c){return be(c,"cljs.pprint/t_cljs$pprint20104")};return new Ex(a,
    b,S)}function rW(a,b){var c=p(lt.m(a))?xq:aE;gV(c,dG.m(a));return b}function sW(a,b){a=p(lt.m(a))?p(BH.m(a))?co:ND:p(BH.m(a))?WH:$E;fV(a);return b}
    var tW=Wj("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""),[new n(null,5,[No,"A",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],null),rt,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){return zV(pl,a,b)}}],null),new n(null,5,[No,"S",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],
    null),rt,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){return zV(nl,a,b)}}],null),new n(null,5,[No,"D",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),pD,new Q(null,2,5,R,[3,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,
    b){return DV(10,a,b)}}],null),new n(null,5,[No,"B",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),pD,new Q(null,2,5,R,[3,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){return DV(2,a,b)}}],null),new n(null,5,[No,"O",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],
    null),pD,new Q(null,2,5,R,[3,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){return DV(8,a,b)}}],null),new n(null,5,[No,"X",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),pD,new Q(null,2,5,R,[3,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){return DV(16,a,b)}}],
    null),new n(null,5,[No,"R",ns,new n(null,5,[GA,new Q(null,2,5,R,[null,Number],null),Cx,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null),us,new Q(null,2,5,R,[",",String],null),pD,new Q(null,2,5,R,[3,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(a){return p(C(GA.m(a)))?function(b,c){return DV(GA.m(b),b,c)}:p(function(){var b=BH.m(a);return p(b)?lt.m(a):b}())?function(b,c){return OV(MV,c)}:p(BH.m(a))?function(b,c){return OV(NV,
    c)}:p(lt.m(a))?function(b,c){b=pV(c);c=J(b,0,null);b=J(b,1,null);if(A.gh(0,c))dU.g(G(["zeroth"]));else {var d=BV(1E3,0>c?-c:c);if(F(d)<=F(IV)){var e=Vh.gh(JV,Yh(1,d));e=KV(e,1);var f=Af(d);d=sg(f,100);f=tg(f,100);var k=0<d?[q.m(nf(EV,d))," hundred"].join(""):null,l=q,m=l.m;if(0<f)if(20>f)var r=nf(FV,f);else {r=sg(f,10);var t=tg(f,10);r=0<r&&!(0<t)?nf(HV,r):[q.m(0<r?nf(GV,r):null),0<r&&0<t?"-":null,q.m(0<t?nf(FV,t):null)].join("");}else r=0<d?"th":null;d=[k,0<d&&0<f?" ":null,m.call(l,r)].join("");dU.g(G([[0>
    c?"minus ":null,Of(e)||Of(d)?Of(e)?d:[e,"th"].join(""):[e,", ",d].join("")].join("")]));}else DV(10,new n(null,5,[Cx,0,PC," ",us,",",pD,3,lt,!0],null),jV(new Q(null,1,5,R,[c],null))),e=tg(c,100),c=11<e||19>e,e=tg(e,10),dU.g(G([1===e&&c?"st":2===e&&c?"nd":3===e&&c?"rd":"th"]));}return b}:function(b,c){c=pV(c);b=J(c,0,null);c=J(c,1,null);if(A.gh(0,b))dU.g(G(["zero"]));else {var d=BV(1E3,0>b?-b:b);F(d)<=F(IV)?(d=Vh.gh(JV,d),d=KV(d,0),dU.g(G([[0>b?"minus ":null,d].join("")]))):DV(10,new n(null,5,[Cx,0,PC,
    " ",us,",",pD,3,lt,!0],null),jV(new Q(null,1,5,R,[b],null)));}return c}}],null),new n(null,5,[No,"P",ns,S,bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return function(a,b){b=p(lt.m(a))?sV(b,-1):b;a=p(BH.m(a))?new Q(null,2,5,R,["y","ies"],null):new Q(null,2,5,R,["","s"],null);var c=pV(b);b=J(c,0,null);c=J(c,1,null);dU.g(G([A.gh(b,1)?C(a):yf(a)]));return c}}],null),new n(null,5,[No,"C",ns,new n(null,1,[lH,new Q(null,2,5,R,[null,String],null)],null),bv,new Ak(null,
    new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(a){return p(lt.m(a))?QV:p(BH.m(a))?RV:SV}],null),new n(null,5,[No,"F",ns,new n(null,5,[aG,new Q(null,2,5,R,[null,Number],null),$F,new Q(null,2,5,R,[null,Number],null),WF,new Q(null,2,5,R,[0,Number],null),LI,new Q(null,2,5,R,[null,String],null),PC,new Q(null,2,5,R,[" ",String],null)],null),bv,new Ak(null,new n(null,1,[BH,null],null),null),Kw,S,II,function(){return ZV}],null),new n(null,5,[No,"E",ns,new n(null,7,[aG,new Q(null,2,5,
    R,[null,Number],null),$F,new Q(null,2,5,R,[null,Number],null),YF,new Q(null,2,5,R,[null,Number],null),WF,new Q(null,2,5,R,[1,Number],null),LI,new Q(null,2,5,R,[null,String],null),PC,new Q(null,2,5,R,[" ",String],null),Ho,new Q(null,2,5,R,[null,String],null)],null),bv,new Ak(null,new n(null,1,[BH,null],null),null),Kw,S,II,function(){return $V}],null),new n(null,5,[No,"G",ns,new n(null,7,[aG,new Q(null,2,5,R,[null,Number],null),$F,new Q(null,2,5,R,[null,Number],null),YF,new Q(null,2,5,R,[null,Number],
    null),WF,new Q(null,2,5,R,[1,Number],null),LI,new Q(null,2,5,R,[null,String],null),PC,new Q(null,2,5,R,[" ",String],null),Ho,new Q(null,2,5,R,[null,String],null)],null),bv,new Ak(null,new n(null,1,[BH,null],null),null),Kw,S,II,function(){return aW}],null),new n(null,5,[No,"$",ns,new n(null,4,[$F,new Q(null,2,5,R,[2,Number],null),dG,new Q(null,2,5,R,[1,Number],null),aG,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],
    null),null),Kw,S,II,function(){return bW}],null),new n(null,5,[No,"%",ns,new n(null,1,[bw,new Q(null,2,5,R,[1,Number],null)],null),bv,Ck,Kw,S,II,function(){return function(a,b){a=bw.m(a);for(var c=0;;)if(c<a)fU(),c+=1;else break;return b}}],null),new n(null,5,[No,"\x26",ns,new n(null,1,[bw,new Q(null,2,5,R,[1,Number],null)],null),bv,new Ak(null,new n(null,1,[Jr,null],null),null),Kw,S,II,function(){return function(a,b){a=bw.m(a);0<a&&((null!=Cc?Cc.h&32768||h===Cc.nf||(Cc.h?0:Wc(Kd,Cc)):Wc(Kd,Cc))?
    A.gh(0,mU(GA.m(u(u(Cc))),lr))||fU():fU());--a;for(var c=0;;)if(c<a)fU(),c+=1;else break;return b}}],null),new n(null,5,[No,"|",ns,new n(null,1,[bw,new Q(null,2,5,R,[1,Number],null)],null),bv,Ck,Kw,S,II,function(){return function(a,b){a=bw.m(a);for(var c=0;;)if(c<a)dU.g(G(["\f"])),c+=1;else break;return b}}],null),new n(null,5,[No,"~",ns,new n(null,1,[dG,new Q(null,2,5,R,[1,Number],null)],null),bv,Ck,Kw,S,II,function(){return function(a,b){a=dG.m(a);dU.g(G([eh(q,$h(a,"~"))]));return b}}],null),new n(null,
    5,[No,"\n",ns,S,bv,new Ak(null,new n(null,2,[lt,null,BH,null],null),null),Kw,S,II,function(){return function(a,b){p(BH.m(a))&&fU();return b}}],null),new n(null,5,[No,"T",ns,new n(null,2,[bI,new Q(null,2,5,R,[1,Number],null),lq,new Q(null,2,5,R,[1,Number],null)],null),bv,new Ak(null,new n(null,2,[BH,null,Jr,null],null),null),Kw,S,II,function(a){return p(BH.m(a))?function(b,c){var d=bI.m(b);b=lq.m(b);var e=d+mU(GA.m(u(u(Cc))),lr);e=0<b?tg(e,b):0;d+=A.gh(0,e)?0:b-e;dU.g(G([eh(q,$h(d," "))]));return c}:
    function(b,c){var d=bI.m(b);b=lq.m(b);var e=mU(GA.m(u(u(Cc))),lr);d=e<d?d-e:A.gh(b,0)?0:b-tg(e-d,b);dU.g(G([eh(q,$h(d," "))]));return c}}],null),new n(null,5,[No,"*",ns,new n(null,1,[dG,new Q(null,2,5,R,[1,Number],null)],null),bv,new Ak(null,new n(null,2,[lt,null,BH,null],null),null),Kw,S,II,function(){return function(a,b){var c=dG.m(a);return p(BH.m(a))?rV(b,c):sV(b,p(lt.m(a))?-c:c)}}],null),new n(null,5,[No,"?",ns,S,bv,new Ak(null,new n(null,1,[BH,null],null),null),Kw,S,II,function(a){return p(BH.m(a))?
    function(b,c){var d=qV(c);c=J(d,0,null);d=J(d,1,null);return UV(c,d,lo.m(b))}:function(b,c){var d=qV(c);c=J(d,0,null);d=J(d,1,null);var e=pV(d);d=J(e,0,null);e=J(e,1,null);d=jV(d);UV(c,d,lo.m(b));return e}}],null),new n(null,5,[No,"(",ns,S,bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,new n(null,3,[LB,")",zG,null,ks,null],null),II,function(a){var b=p(function(){var c=BH.m(a);return p(c)?lt.m(a):c}())?nW:p(lt.m(a))?pW:p(BH.m(a))?qW:mW;return function(c,d){a:{var e=C(cw.m(c)),
    f=Cc;Cc=b.m?b.m(Cc):b.call(null,Cc);try{var k=UV(e,d,lo.m(c));break a}finally{Cc=f;}k=void 0;}return k}}],null),new n(null,5,[No,")",ns,S,bv,Ck,Kw,S,II,function(){return null}],null),new n(null,5,[No,"[",ns,new n(null,1,[SH,new Q(null,2,5,R,[null,Number],null)],null),bv,new Ak(null,new n(null,2,[lt,null,BH,null],null),null),Kw,new n(null,3,[LB,"]",zG,!0,ks,RF],null),II,function(a){return p(lt.m(a))?dW:p(BH.m(a))?eW:cW}],null),new n(null,5,[No,";",ns,new n(null,2,[lE,new Q(null,2,5,R,[null,Number],null),
    oH,new Q(null,2,5,R,[null,Number],null)],null),bv,new Ak(null,new n(null,1,[lt,null],null),null),Kw,new n(null,1,[rD,!0],null),II,function(){return null}],null),new n(null,5,[No,"]",ns,S,bv,Ck,Kw,S,II,function(){return null}],null),new n(null,5,[No,"{",ns,new n(null,1,[Kx,new Q(null,2,5,R,[null,Number],null)],null),bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,new n(null,2,[LB,"}",zG,!1],null),II,function(a){var b=BH.m(a);b=p(b)?lt.m(a):b;return p(b)?iW:p(lt.m(a))?gW:p(BH.m(a))?
    hW:fW}],null),new n(null,5,[No,"}",ns,S,bv,new Ak(null,new n(null,1,[lt,null],null),null),Kw,S,II,function(){return null}],null),new n(null,5,[No,"\x3c",ns,new n(null,4,[Cx,new Q(null,2,5,R,[0,Number],null),lq,new Q(null,2,5,R,[1,Number],null),rt,new Q(null,2,5,R,[0,Number],null),PC,new Q(null,2,5,R,[" ",String],null)],null),bv,new Ak(null,new n(null,4,[lt,null,BH,null,Mu,null,Jr,null],null),null),Kw,new n(null,3,[LB,"\x3e",zG,!0,ks,TA],null),II,function(){return jW}],null),new n(null,5,[No,"\x3e",
    ns,S,bv,new Ak(null,new n(null,1,[lt,null],null),null),Kw,S,II,function(){return null}],null),new n(null,5,[No,"^",ns,new n(null,3,[AI,new Q(null,2,5,R,[null,Number],null),BI,new Q(null,2,5,R,[null,Number],null),yI,new Q(null,2,5,R,[null,Number],null)],null),bv,new Ak(null,new n(null,1,[lt,null],null),null),Kw,S,II,function(){return function(a,b){var c=AI.m(a),d=BI.m(a),e=yI.m(a),f=p(lt.m(a))?FG:tx;return p(p(c)?p(d)?e:d:c)?c<=d&&d<=e?new Q(null,2,5,R,[f,b],null):b:p(p(c)?d:c)?A.gh(c,d)?new Q(null,
    2,5,R,[f,b],null):b:p(c)?A.gh(c,0)?new Q(null,2,5,R,[f,b],null):b:(p(lt.m(a))?Of(ts.m(lo.m(a))):Of(ts.m(b)))?new Q(null,2,5,R,[f,b],null):b}}],null),new n(null,5,[No,"W",ns,S,bv,new Ak(null,new n(null,4,[lt,null,BH,null,Mu,null,Jr,null],null),null),Kw,S,II,function(a){if(p(function(){var c=BH.m(a);return p(c)?c:lt.m(a)}())){var b=Wg.gh(p(BH.m(a))?new Q(null,4,5,R,[$m,null,Az,null],null):I,p(lt.m(a))?new Q(null,2,5,R,[Jr,!0],null):I);return function(c,d){d=pV(d);c=J(d,0,null);d=J(d,1,null);return p(fh(bV,
    c,b))?new Q(null,2,5,R,[tx,d],null):d}}return function(c,d){d=pV(d);c=J(d,0,null);d=J(d,1,null);return p(aV(c))?new Q(null,2,5,R,[tx,d],null):d}}],null),new n(null,5,[No,"_",ns,S,bv,new Ak(null,new n(null,3,[lt,null,BH,null,Mu,null],null),null),Kw,S,II,function(){return sW}],null),new n(null,5,[No,"I",ns,new n(null,1,[dG,new Q(null,2,5,R,[0,Number],null)],null),bv,new Ak(null,new n(null,1,[lt,null],null),null),Kw,S,II,function(){return rW}],null)]),uW=/^([vV]|#|('.)|([+-]?\d+)|(?=,))/,vW=new Ak(null,
    new n(null,2,[bD,null,zw,null],null),null);
    function wW(a){var b=J(a,0,null),c=J(a,1,null),d=J(a,2,null);a=new RegExp(uW.source,"g");var e=a.exec(b);return p(e)?(d=C(e),b=b.substring(a.lastIndex),a=c+a.lastIndex,A.gh(",",nf(b,0))?new Q(null,2,5,R,[new Q(null,2,5,R,[d,c],null),new Q(null,3,5,R,[b.substring(1),a+1,!0],null)],null):new Q(null,2,5,R,[new Q(null,2,5,R,[d,c],null),new Q(null,3,5,R,[b,a,!1],null)],null)):p(d)?nV("Badly formed parameters in format directive",c):new Q(null,2,5,R,[null,new Q(null,2,5,R,[b,c],null)],null)}
    function xW(a){var b=J(a,0,null);a=J(a,1,null);return new Q(null,2,5,R,[A.gh(b.length,0)?null:A.gh(b.length,1)&&N(new Ak(null,new n(null,2,["V",null,"v",null],null),null),nf(b,0))?zw:A.gh(b.length,1)&&A.gh("#",nf(b,0))?bD:A.gh(b.length,2)&&A.gh("'",nf(b,0))?nf(b,1):parseInt(b,10),a],null)}var yW=new n(null,2,[":",lt,"@",BH],null);
    function zW(a,b){return iU(function(c){var d=J(c,0,null),e=J(c,1,null);c=J(c,2,null);if(Of(d))return new Q(null,2,5,R,[null,new Q(null,3,5,R,[d,e,c],null)],null);var f=x.gh(yW,C(d));return p(f)?N(c,f)?nV(['Flag "',q.m(C(d)),'" appears more than once in a directive'].join(""),e):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[d.substring(1),e+1,K.hh(c,f,new Q(null,2,5,R,[!0,e],null))],null)],null):new Q(null,2,5,R,[null,new Q(null,3,5,R,[d,e,c],null)],null)},new Q(null,3,5,R,[a,b,S],null))}
    function AW(a,b){var c=bv.m(a);p(function(){var d=Sc(BH.m(c));return d?BH.m(b):d}())&&nV(['"@" is an illegal flag for format directive "',q.m(No.m(a)),'"'].join(""),nf(BH.m(b),1));p(function(){var d=Sc(lt.m(c));return d?lt.m(b):d}())&&nV(['":" is an illegal flag for format directive "',q.m(No.m(a)),'"'].join(""),nf(lt.m(b),1));p(function(){var d=Sc(Mu.m(c));return d?(d=BH.m(b),p(d)?lt.m(b):d):d}())&&nV(['Cannot combine "@" and ":" flags for format directive "',q.m(No.m(a)),'"'].join(""),function(){var d=
    nf(lt.m(b),1),e=nf(BH.m(b),1);return d<e?d:e}());}
    function BW(a,b,c,d){AW(a,c);F(b)>F(ns.m(a))&&nV(hV(null,'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed',G([No.m(a),F(b),F(ns.m(a))])),yf(C(b)));Uk(Vh.hh(function(e,f){var k=C(e);return null==k||N(vW,k)||A.gh(yf(yf(f)),Xc(k))?null:nV(["Parameter ",Kg(C(f)),' has bad type in directive "',q.m(No.m(a)),'": ',q.m(Xc(k))].join(""),yf(e))},b,ns.m(a)));return vk.g(G([ii.gh(S,Dg(function(){return function k(f){return new Lg(null,function(){for(;;){var l=
    B(f);if(l){if(Vf(l)){var m=qe(l),r=F(m),t=Pg(r);a:for(var v=0;;)if(v<r){var y=pd(m,v),E=J(y,0,null);y=J(y,1,null);y=J(y,0,null);t.add(new Q(null,2,5,R,[E,new Q(null,2,5,R,[y,d],null)],null));v+=1;}else {m=!0;break a}return m?Rg(Tg(t),k(re(l))):Rg(Tg(t),null)}m=C(l);t=J(m,0,null);m=J(m,1,null);m=J(m,0,null);return uf(new Q(null,2,5,R,[t,new Q(null,2,5,R,[m,d],null)],null),k(Qe(l)))}return null}},null,null)}(ns.m(a))}())),fd.hh(function(e,f){return fh(K,e,f)},S,ei.gh(function(e){return C(nf(e,1))},Hk(lj(ns.m(a)),
    b))),c]))}
    function CW(a,b){b=iU(wW,new Q(null,3,5,R,[a,b,!1],null));a=J(b,0,null);var c=J(b,1,null);b=J(c,0,null);c=J(c,1,null);b=zW(b,c);J(b,0,null);b=J(b,1,null);var d=J(b,0,null),e=J(b,1,null);b=J(b,2,null);c=C(d);var f=x.gh(tW,c.toUpperCase()),k=p(f)?BW(f,Vh.gh(xW,a),b,e):null;Sc(c)&&nV("Format string ended in the middle of a directive",e);Sc(f)&&nV(['Directive "',q.m(c),'" is undefined'].join(""),e);return new Q(null,2,5,R,[new tV(function(){var l=II.m(f);return l.gh?l.gh(k,e):l.call(null,k,e)}(),f,k,
    e,null,null,null),function(){var l=d.substring(1),m=e+1;if(A.gh("\n",No.m(f))&&Sc(lt.m(k)))a:{var r=new Q(null,2,5,R,[" ","\t"],null);r=Pf(r)?Ek(r):Dk([r]);for(var t=0;;){var v;(v=A.gh(t,F(l)))||(v=nf(l,t),v=r.m?r.m(v):r.call(null,v),v=Sc(v));if(v){r=t;break a}t+=1;}}else r=0;return new Q(null,2,5,R,[l.substring(r),m+r],null)}()],null)}function DW(a,b){return new tV(function(c,d){dU.g(G([a]));return d},null,new n(null,1,[vn,a],null),b,null,null,null)}
    function EW(a,b){var c=FW(Kw.m(uo.m(a)),mE.m(a),b);b=J(c,0,null);c=J(c,1,null);return new Q(null,2,5,R,[new tV(eG.m(a),uo.m(a),vk.g(G([ns.m(a),kU(b,mE.m(a))])),mE.m(a),null,null,null),c],null)}
    function GW(a,b,c){return iU(function(d){if(Of(d))return nV("No closing bracket found.",b);var e=C(d);d=D(d);if(p(LB.m(Kw.m(uo.m(e)))))e=EW(e,d);else if(A.gh(LB.m(a),No.m(uo.m(e))))e=new Q(null,2,5,R,[null,new Q(null,4,5,R,[Lq,ns.m(e),null,d],null)],null);else {var f=rD.m(Kw.m(uo.m(e)));f=p(f)?lt.m(ns.m(e)):f;e=p(f)?new Q(null,2,5,R,[null,new Q(null,4,5,R,[ks,null,ns.m(e),d],null)],null):p(rD.m(Kw.m(uo.m(e))))?new Q(null,2,5,R,[null,new Q(null,4,5,R,[rD,null,null,d],null)],null):new Q(null,2,5,R,[e,
    d],null);}return e},c)}
    function FW(a,b,c){return yf(iU(function(d){var e=J(d,0,null),f=J(d,1,null);d=J(d,2,null);var k=GW(a,b,d);d=J(k,0,null);var l=J(k,1,null);k=J(l,0,null);var m=J(l,1,null),r=J(l,2,null);l=J(l,3,null);return A.gh(k,Lq)?new Q(null,2,5,R,[null,new Q(null,2,5,R,[wk.g(Wg,G([e,Ff([p(f)?ks:cw,new Q(null,1,5,R,[d],null),hp,m])])),l],null)],null):A.gh(k,ks)?p(ks.m(e))?nV('Two else clauses ("~:;") inside bracket construction.',b):Sc(ks.m(a))?nV('An else clause ("~:;") is in a bracket type that doesn\'t support it.',b):
    A.gh(TA,ks.m(a))&&B(cw.m(e))?nV('The else clause ("~:;") is only allowed in the first position for this directive.',b):A.gh(TA,ks.m(a))?new Q(null,2,5,R,[!0,new Q(null,3,5,R,[wk.g(Wg,G([e,new n(null,2,[ks,new Q(null,1,5,R,[d],null),BJ,r],null)])),!1,l],null)],null):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[wk.g(Wg,G([e,new n(null,1,[cw,new Q(null,1,5,R,[d],null)],null)])),!0,l],null)],null):A.gh(k,rD)?p(f)?nV('A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.',b):
    Sc(zG.m(a))?nV('A separator ("~;") is in a bracket type that doesn\'t support it.',b):new Q(null,2,5,R,[!0,new Q(null,3,5,R,[wk.g(Wg,G([e,new n(null,1,[cw,new Q(null,1,5,R,[d],null)],null)])),!1,l],null)],null):null},new Q(null,3,5,R,[new n(null,1,[cw,I],null),!1,c],null)))}function HW(a){return C(iU(function(b){var c=C(b);b=D(b);var d=Kw.m(uo.m(c));return p(LB.m(d))?EW(c,b):new Q(null,2,5,R,[c,b],null)},a))}
    function iV(a){var b=mV;mV=a;try{return HW(C(iU(function(c){var d=J(c,0,null);c=J(c,1,null);if(Of(d))return new Q(null,2,5,R,[null,d],null);var e=d.indexOf("~");return 0>e?new Q(null,2,5,R,[DW(d,c),new Q(null,2,5,R,["",c+d.length],null)],null):0===e?CW(d.substring(1),c+1):new Q(null,2,5,R,[DW(d.substring(0,e),c),new Q(null,2,5,R,[d.substring(e),e+c],null)],null)},new Q(null,2,5,R,[a,0],null))))}finally{mV=b;}}
    var kV=function kV(a){for(;;){if(Of(a))return !1;var c=Jr.m(bv.m(uo.m(C(a))));p(c)||(c=Dh(kV,C(cw.m(ns.m(C(a))))),c=p(c)?c:Dh(kV,C(ks.m(ns.m(C(a))))));if(p(c))return !0;a=D(a);}};function lV(a,b){hU(function(c,d){if(TV(d))return new Q(null,2,5,R,[null,d],null);d=vV(ns.m(c),d);var e=J(d,0,null);d=J(d,1,null);var f=jU(e);e=J(f,0,null);f=J(f,1,null);e=K.hh(e,lo,d);return new Q(null,2,5,R,[null,eh(eG.m(c),new Q(null,3,5,R,[e,d,f],null))],null)},b,a);return null}
    var IW=Ia(iV),JW=new n(null,6,[Gm,"'",Fm,"#'",Xq,"@",Vu,"~",Sn,"@",Oz,"~"],null);function KW(a){var b=C(a);b=JW.m?JW.m(b):JW.call(null,b);return p(p(b)?A.gh(2,F(a)):b)?(be(Cc,b),aV(yf(a)),!0):null}function LW(a){if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("[","]");for(var d=0,e=B(a);;){if(Sc(Gc)||d<Gc){if(e&&(aV(C(e)),D(e))){be(Cc," ");fV($E);a=d+1;var f=D(e);d=a;e=f;continue}}else be(Cc,"...");break}QU();}finally{ZU=c,YU=b;}}return null}
    (function(){var a=IW("~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=jV(d);return lV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()})();
    function MW(a){var b=Tf(a)?null:function(){var m=new Me(function(){return tl},UF,Wj([Gn,xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[!0,Dy,yu,"cljs/core.cljs",15,1,10449,10449,O(new Q(null,1,5,R,[Hp],null)),"Returns [lifted-ns lifted-map] or nil if m can't be lifted.",p(tl)?tl.ld:null]));return m.m?m.m(a):m.call(null,a)}(),c=J(b,0,null);b=J(b,1,null);var d=p(b)?b:a,e=p(c)?["#:",q.m(c),"{"].join(""):"{";if(p(eV()))be(Cc,"#");else {c=YU;b=ZU;YU+=1;ZU=0;try{PU(e,"}");e=0;for(var f=B(d);;){if(Sc(Gc)||e<Gc){if(f){if(p(eV()))be(Cc,
    "#");else {d=YU;var k=ZU;YU+=1;ZU=0;try{PU(null,null),aV(C(C(f))),be(Cc," "),fV($E),ZU=0,aV(zf(C(f))),QU();}finally{ZU=k,YU=d;}}if(D(f)){be(Cc,", ");fV($E);d=e+1;var l=D(f);e=d;f=l;continue}}}else be(Cc,"...");break}QU();}finally{ZU=b,YU=c;}}return null}function NW(a){return be(Cc,nl.g(G([a])))}
    var OW=function(){var a=IW("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=jV(d);return lV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}(),PW=new n(null,2,["core$future_call","Future","core$promise","Promise"],null),RW=function(){var a=IW("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e");return function(){function b(d){var e=
    null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=jV(d);return lV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}();function SW(a){return a instanceof aj?MH:(null!=a?a.h&32768||h===a.nf||(a.h?0:Wc(Kd,a)):Wc(Kd,a))?Gx:a instanceof w?tu:Zf(a)?CI:M(a)?Ov:Uf(a)?Qu:Qf(a)?tA:null==a?null:dm}var TW,Sx=Nh(S),by=Nh(S),dy=Nh(S),yy=Nh(S),Xy=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));
    TW=new cm(Le.gh("cljs.pprint","simple-dispatch"),SW,Xy,Sx,by,dy,yy);Zl(TW,CI,function(a){if(Sc(KW(a)))if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("(",")");for(var d=0,e=B(a);;){if(Sc(Gc)||d<Gc){if(e&&(aV(C(e)),D(e))){be(Cc," ");fV($E);a=d+1;var f=D(e);d=a;e=f;continue}}else be(Cc,"...");break}QU();}finally{ZU=c,YU=b;}}return null});Zl(TW,Qu,LW);Zl(TW,Ov,MW);Zl(TW,tA,OW);Zl(TW,null,function(){return be(Cc,nl.g(G([null])))});Zl(TW,dm,NW);SU=TW;
    function ZW(a){return Uf(a)?new Q(null,2,5,R,["[","]"],null):new Q(null,2,5,R,["(",")"],null)}
    function $W(a){if(Sf(a)){var b=ZW(a),c=J(b,0,null),d=J(b,1,null),e=B(a),f=C(e),k=D(e);if(p(eV()))be(Cc,"#");else {var l=YU,m=ZU,r=YU+1;YU=r;ZU=0;try{PU(c,d);(function(){var qb=IW("~w~:i");return function(){function pb(Sb){var mb=null;if(0<arguments.length){mb=0;for(var Tb=Array(arguments.length-0);mb<Tb.length;)Tb[mb]=arguments[mb+0],++mb;mb=new Pe(Tb,0,null);}return xc.call(this,mb)}function xc(Sb){Sb=jV(Sb);return lV(qb,Sb)}pb.F=0;pb.G=function(Sb){Sb=B(Sb);return xc(Sb)};pb.g=xc;return pb}()})()(f);
    for(var t=k;;)if(B(t)){(function(){var qb=IW(" ");return function(pb,xc,Sb){return function(){function mb(gb){var hb=null;if(0<arguments.length){hb=0;for(var mc=Array(arguments.length-0);hb<mc.length;)mc[hb]=arguments[hb+0],++hb;hb=new Pe(mc,0,null);}return Tb.call(this,hb)}function Tb(gb){gb=jV(gb);return lV(Sb,gb)}mb.F=0;mb.G=function(gb){gb=B(gb);return Tb(gb)};mb.g=Tb;return mb}()}(t," ",qb,l,m,r,0,b,c,d,a,e,f,k,f,k)})()();var v=C(t);if(Sf(v)){var y=ZW(v),E=J(y,0,null),H=J(y,1,null);if(p(eV()))be(Cc,
    "#");else {var T=YU,Y=ZU,ia=YU+1;YU=ia;ZU=0;try{PU(E,H);if(A.gh(F(v),3)&&yf(v)instanceof z){var ba=v,wa=J(ba,0,null),ta=J(ba,1,null),ob=J(ba,2,null);(function(){var qb=IW("~w ~w ");return function(pb,xc,Sb){return function(){function mb(gb){var hb=null;if(0<arguments.length){hb=0;for(var mc=Array(arguments.length-0);hb<mc.length;)mc[hb]=arguments[hb+0],++hb;hb=new Pe(mc,0,null);}return Tb.call(this,hb)}function Tb(gb){gb=jV(gb);return lV(Sb,gb)}mb.F=0;mb.G=function(gb){gb=B(gb);return Tb(gb)};mb.g=
    Tb;return mb}()}(t,"~w ~w ",qb,ba,wa,ta,ob,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)})()(wa,ta);Sf(ob)?function(){var qb=Uf(ob)?"~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e":"~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e",pb="string"===typeof qb?IW(qb):qb;return function(xc,Sb,mb){return function(){function Tb(hb){var mc=null;if(0<arguments.length){mc=0;for(var of=Array(arguments.length-0);mc<of.length;)of[mc]=arguments[mc+0],++mc;mc=new Pe(of,0,null);}return gb.call(this,mc)}function gb(hb){hb=jV(hb);return lV(mb,hb)}Tb.F=
    0;Tb.G=function(hb){hb=B(hb);return gb(hb)};Tb.g=gb;return Tb}()}(t,qb,pb,ba,wa,ta,ob,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()(ob):aV(ob);}else eh(function(){var qb=IW("~w ~:i~@{~w~^ ~:_~}");return function(pb,xc,Sb){return function(){function mb(gb){var hb=null;if(0<arguments.length){hb=0;for(var mc=Array(arguments.length-0);hb<mc.length;)mc[hb]=arguments[hb+0],++hb;hb=new Pe(mc,0,null);}return Tb.call(this,hb)}function Tb(gb){gb=jV(gb);return lV(Sb,gb)}mb.F=0;mb.G=function(gb){gb=B(gb);return Tb(gb)};
    mb.g=Tb;return mb}()}(t,"~w ~:i~@{~w~^ ~:_~}",qb,T,Y,ia,0,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}(),v);QU();}finally{ZU=Y,YU=T;}}D(t)&&function(){var qb=IW("~_");return function(pb,xc,Sb){return function(){function mb(gb){var hb=null;if(0<arguments.length){hb=0;for(var mc=Array(arguments.length-0);hb<mc.length;)mc[hb]=arguments[hb+0],++hb;hb=new Pe(mc,0,null);}return Tb.call(this,hb)}function Tb(gb){gb=jV(gb);return lV(Sb,gb)}mb.F=0;mb.G=function(gb){gb=B(gb);return Tb(gb)};mb.g=Tb;return mb}()}(t,"~_",
    qb,y,E,H,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()();}else aV(v),D(t)&&function(){var qb=IW("~:_");return function(pb,xc,Sb){return function(){function mb(gb){var hb=null;if(0<arguments.length){hb=0;for(var mc=Array(arguments.length-0);hb<mc.length;)mc[hb]=arguments[hb+0],++hb;hb=new Pe(mc,0,null);}return Tb.call(this,hb)}function Tb(gb){gb=jV(gb);return lV(Sb,gb)}mb.F=0;mb.G=function(gb){gb=B(gb);return Tb(gb)};mb.g=Tb;return mb}()}(t,"~:_",qb,v,l,m,r,0,b,c,d,a,e,f,k,f,k)}()();t=D(t);}else break;QU();}finally{ZU=
    m,YU=l;}}}else aV(a);}var aX=function(){var a=IW("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=jV(d);return lV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}();
    function bX(a,b){B(a)&&(p(b)?function(){var c=IW(" ~_");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+0],++k;k=new Pe(l,0,null);}return e.call(this,k)}function e(f){f=jV(f);return lV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()():function(){var c=IW(" ~@_");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+
    0],++k;k=new Pe(l,0,null);}return e.call(this,k)}function e(f){f=jV(f);return lV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()(),function(){var c=IW("~{~w~^ ~_~}");return function(){function d(f){var k=null;if(0<arguments.length){k=0;for(var l=Array(arguments.length-0);k<l.length;)l[k]=arguments[k+0],++k;k=new Pe(l,0,null);}return e.call(this,k)}function e(f){f=jV(f);return lV(c,f)}d.F=0;d.G=function(f){f=B(f);return e(f)};d.g=e;return d}()}()(a));}
    function cX(a){B(a)&&function(){var b=IW(" ~_~{~w~^ ~_~}");return function(){function c(e){var f=null;if(0<arguments.length){f=0;for(var k=Array(arguments.length-0);f<k.length;)k[f]=arguments[f+0],++f;f=new Pe(k,0,null);}return d.call(this,f)}function d(e){e=jV(e);return lV(b,e)}c.F=0;c.G=function(e){e=B(e);return d(e)};c.g=d;return c}()}()(a);}
    function dX(a){if(D(a)){var b=B(a);a=C(b);var c=D(b);b=C(c);c=D(c);var d="string"===typeof C(c)?new Q(null,2,5,R,[C(c),D(c)],null):new Q(null,2,5,R,[null,c],null);c=J(d,0,null);d=J(d,1,null);var e=M(C(d))?new Q(null,2,5,R,[C(d),D(d)],null):new Q(null,2,5,R,[null,d],null);d=J(e,0,null);e=J(e,1,null);if(p(eV()))be(Cc,"#");else {var f=YU,k=ZU;YU+=1;ZU=0;try{PU("(",")"),function(){var l=IW("~w ~1I~@_~w");return function(){function m(t){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-
    0);v<y.length;)y[v]=arguments[v+0],++v;v=new Pe(y,0,null);}return r.call(this,v)}function r(t){t=jV(t);return lV(l,t)}m.F=0;m.G=function(t){t=B(t);return r(t)};m.g=r;return m}()}()(a,b),p(c)&&function(){var l=IW(" ~_~w");return function(){function m(t){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Pe(y,0,null);}return r.call(this,v)}function r(t){t=jV(t);return lV(l,t)}m.F=0;m.G=function(t){t=B(t);return r(t)};m.g=r;return m}()}()(c),
    p(d)&&function(){var l=IW(" ~_~w");return function(){function m(t){var v=null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Pe(y,0,null);}return r.call(this,v)}function r(t){t=jV(t);return lV(l,t)}m.F=0;m.G=function(t){t=B(t);return r(t)};m.g=r;return m}()}()(d),Uf(C(e))?bX(e,p(c)?c:d):cX(e),QU();}finally{ZU=k,YU=f;}}return null}return eX(a)}
    function fX(a){if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("[","]");for(var d=0;;){if(Sc(Gc)||d<Gc){if(B(a)){if(p(eV()))be(Cc,"#");else {var e=YU,f=ZU;YU+=1;ZU=0;try{PU(null,null),aV(C(a)),D(a)&&(be(Cc," "),fV(WH),aV(yf(a))),QU();}finally{ZU=f,YU=e;}}if(D(Qe(a))){be(Cc," ");fV($E);e=d+1;var k=D(Qe(a));d=e;a=k;continue}}}else be(Cc,"...");break}QU();}finally{ZU=c,YU=b;}}}
    function gX(a){var b=C(a);if(p(eV()))be(Cc,"#");else {var c=YU,d=ZU;YU+=1;ZU=0;try{PU("(",")"),D(a)&&Uf(yf(a))?(function(){var e=IW("~w ~1I~@_");return function(){function f(l){var m=null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Pe(r,0,null);}return k.call(this,m)}function k(l){l=jV(l);return lV(e,l)}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()}()(b),fX(yf(a)),function(){var e=IW(" ~_~{~w~^ ~_~}");return function(){function f(l){var m=
    null;if(0<arguments.length){m=0;for(var r=Array(arguments.length-0);m<r.length;)r[m]=arguments[m+0],++m;m=new Pe(r,0,null);}return k.call(this,m)}function k(l){l=jV(l);return lV(e,l)}f.F=0;f.G=function(l){l=B(l);return k(l)};f.g=k;return f}()}()(D(Qe(a)))):eX(a),QU();}finally{ZU=d,YU=c;}}return null}
    var hX=function(){var a=IW("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e");return function(){function b(d){var e=null;if(0<arguments.length){e=0;for(var f=Array(arguments.length-0);e<f.length;)f[e]=arguments[e+0],++e;e=new Pe(f,0,null);}return c.call(this,e)}function c(d){d=jV(d);return lV(a,d)}b.F=0;b.G=function(d){d=B(d);return c(d)};b.g=c;return b}()}(),iX=S;
    function eX(a){if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("(",")");gV(aE,1);for(var d=0,e=B(a);;){if(Sc(Gc)||d<Gc){if(e&&(aV(C(e)),D(e))){be(Cc," ");fV($E);a=d+1;var f=D(e);d=a;e=f;continue}}else be(Cc,"...");break}QU();}finally{ZU=c,YU=b;}}return null}
    var jX=function(a){return ii.gh(S,di(kg,G([function(){return function d(c){return new Lg(null,function(){for(;;){var e=B(c);if(e){if(Vf(e)){var f=qe(e),k=F(f),l=Pg(k);a:for(var m=0;;)if(m<k){var r=pd(f,m);r=new Q(null,2,5,R,[r,new Q(null,2,5,R,[Le.m(Kg(C(r))),yf(r)],null)],null);l.add(r);m+=1;}else {f=!0;break a}return f?Rg(Tg(l),d(re(e))):Rg(Tg(l),null)}l=C(e);return uf(new Q(null,2,5,R,[l,new Q(null,2,5,R,[Le.m(Kg(C(l))),yf(l)],null)],null),d(Qe(e)))}return null}},null,null)}(a)}()])))}(function(a){return ii.gh(S,
    Vh.gh(function(b){var c=J(b,0,null),d=J(b,1,null);var e=Hg(c);e=p(e)?e:lm(c);return Sc(e)?new Q(null,2,5,R,[Le.gh("clojure.core",Kg(c)),d],null):b},a))}(Wj([Em,Bm,op,vm,VI,Fr,ky,ME,ww,NE,gv,Gz,dx,Jm,OB,Dz,tF,wD,rH,xm,Wz,hH,Ot,ku,Vw,kA,sE,SI,ew,ss],[aX,function(a){var b=yf(a),c=C(Qe(Qe(a)));if(Uf(b)){a=iX;iX=A.gh(1,F(b))?Ff([C(b),"%"]):ii.gh(S,Vh.hh(function(d,e){return new Q(null,2,5,R,[d,["%",q.m(e)].join("")],null)},b,Ha(F(b)+1)));try{return function(){var d=IW("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e");
    return function(){function e(k){var l=null;if(0<arguments.length){l=0;for(var m=Array(arguments.length-0);l<m.length;)m[l]=arguments[l+0],++l;l=new Pe(m,0,null);}return f.call(this,l)}function f(k){k=jV(k);return lV(d,k)}e.F=0;e.G=function(k){k=B(k);return f(k)};e.g=f;return e}()}()(c)}finally{iX=a;}}else return eX(a)},gX,hX,function(a){if(3<F(a)){if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("(",")");gV(aE,1);eh(function(){var l=IW("~w ~@_~w ~@_~w ~_");return function(){function m(t){var v=
    null;if(0<arguments.length){v=0;for(var y=Array(arguments.length-0);v<y.length;)y[v]=arguments[v+0],++v;v=new Pe(y,0,null);}return r.call(this,v)}function r(t){t=jV(t);return lV(l,t)}m.F=0;m.G=function(t){t=B(t);return r(t)};m.g=r;return m}()}(),a);for(var d=0,e=B(Xh(3,a));;){if(Sc(Gc)||d<Gc){if(e){if(p(eV()))be(Cc,"#");else {a=YU;var f=ZU;YU+=1;ZU=0;try{PU(null,null),aV(C(e)),D(e)&&(be(Cc," "),fV(WH),aV(yf(e))),QU();}finally{ZU=f,YU=a;}}if(D(Qe(e))){be(Cc," ");fV($E);a=d+1;var k=D(Qe(e));d=a;e=k;continue}}}else be(Cc,
    "...");break}QU();}finally{ZU=c,YU=b;}}return null}return eX(a)},aX,dX,dX,gX,aX,gX,hX,hX,aX,hX,gX,gX,aX,gX,function(a){if(D(a)){var b=B(a);a=C(b);var c=D(b);b=C(c);c=D(c);var d="string"===typeof C(c)?new Q(null,2,5,R,[C(c),D(c)],null):new Q(null,2,5,R,[null,c],null);c=J(d,0,null);d=J(d,1,null);d=M(C(d))?new Q(null,2,5,R,[C(d),D(d)],null):new Q(null,2,5,R,[null,d],null);var e=J(d,0,null),f=J(d,1,null);if(p(eV()))be(Cc,"#");else {d=YU;var k=ZU;YU+=1;ZU=0;try{PU("(",")");(function(){var m=IW("~w ~1I~@_~w");
    return function(){function r(v){var y=null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Pe(E,0,null);}return t.call(this,y)}function t(v){v=jV(v);return lV(m,v)}r.F=0;r.G=function(v){v=B(v);return t(v)};r.g=t;return r}()})()(a,b);p(p(c)?c:p(e)?e:B(f))&&function(){var m=IW("~@:_");return function(){function r(v){var y=null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Pe(E,0,null);}return t.call(this,
    y)}function t(v){v=jV(v);return lV(m,v)}r.F=0;r.G=function(v){v=B(v);return t(v)};r.g=t;return r}()}()();p(c)&&hV(!0,'"~a"~:[~;~:@_~]',G([c,p(e)?e:B(f)]));p(e)&&function(){var m=IW("~w~:[~;~:@_~]");return function(){function r(v){var y=null;if(0<arguments.length){y=0;for(var E=Array(arguments.length-0);y<E.length;)E[y]=arguments[y+0],++y;y=new Pe(E,0,null);}return t.call(this,y)}function t(v){v=jV(v);return lV(m,v)}r.F=0;r.G=function(v){v=B(v);return t(v)};r.g=t;return r}()}()(e,B(f));for(a=f;;){$W(C(a));
    var l=D(a);if(l)b=l,fV($E),a=b;else break}QU();}finally{ZU=k,YU=d;}}return null}return aV(a)},gX,function(a){if(p(eV()))be(Cc,"#");else {var b=YU,c=ZU;YU+=1;ZU=0;try{PU("(",")");gV(aE,1);aV(C(a));if(D(a)){be(Cc," ");fV($E);for(var d=0,e=D(a);;){if(Sc(Gc)||d<Gc){if(e){if(p(eV()))be(Cc,"#");else {a=YU;var f=ZU;YU+=1;ZU=0;try{PU(null,null),aV(C(e)),D(e)&&(be(Cc," "),fV(WH),aV(yf(e))),QU();}finally{ZU=f,YU=a;}}if(D(Qe(e))){be(Cc," ");fV($E);a=d+1;var k=D(Qe(e));d=a;e=k;continue}}}else be(Cc,"...");break}}QU();}finally{ZU=
    c,YU=b;}}return null},gX,dX,dX,aX,aX,gX,gX,aX]))),kX,Zy=Nh(S),$y=Nh(S),Sz=Nh(S),cA=Nh(S),mA=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));kX=new cm(Le.gh("cljs.pprint","code-dispatch"),SW,mA,Zy,$y,Sz,cA);Zl(kX,CI,function(a){if(Sc(KW(a))){var b=jX.call(null,C(a));return p(b)?b.m?b.m(a):b.call(null,a):eX(a)}return null});Zl(kX,tu,function(a){var b=a.m?a.m(iX):a.call(null,iX);return p(b)?dU.g(G([b])):p(VU)?dU.g(G([Kg(a)])):eU.call(null,a)});Zl(kX,Qu,LW);Zl(kX,Ov,MW);Zl(kX,tA,OW);Zl(kX,MH,RW);
    Zl(kX,Gx,function(a){var b=q,c=b.m,d=Xc(a).name;var e=Wk(/^[^$]+\$[^$]+/,d);e=p(e)?PW.m?PW.m(e):PW.call(null,e):null;b=["#\x3c",c.call(b,p(e)?e:d),"@",q.m(fb(a)),": "].join("");if(p(eV()))be(Cc,"#");else {c=YU;d=ZU;YU+=1;ZU=0;try{PU(b,"\x3e");gV(aE,-(b.length-2));fV($E);var f=null!=a?a.I&1||h===a.Uh?!0:a.I?!1:Wc(fe,a):Wc(fe,a);var k=f?!ge(a):f;aV(k?Fz:u(a));QU();}finally{ZU=d,YU=c;}}return null});Zl(kX,null,eU);Zl(kX,dm,NW);SU=TW;var G_=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.local-node.core","process-response"),function(f){f=Ea(f);var k=x.gh(f,By);x.gh(f,Sv);return U.m(k)},e,a,b,c,d)}();G_.v(null,Uv,function(){return null});G_.v(null,Wp,function(){return null});G_.v(null,PI,function(){return null});
    G_.v(null,Fs,function(a){a=Ea(a);var b=x.gh(a,By),c=x.gh(a,Sv);Vs(uG,"gateway.local-node.core",38,new wl(function(){return new Q(null,3,5,R,["Sending message",c,"to local peer"],null)}),1139046103);return KK(gD.m(b),c)});G_.v(null,dm,function(a){return Vs(DA,"gateway.local-node.core",42,new wl(function(){return new Q(null,2,5,R,["Unable to process response",a],null)}),658386538)});function H_(a){this.ch=a;}H_.prototype.yf=function(){return JJ(this.ch)};
    H_.prototype.zf=function(a,b){return KK(this.ch,b)};H_.prototype.Fg=function(){return null};H_.prototype.Af=function(a,b){return KK(this.ch,new n(null,3,[Bv,Fs,hz,b,Sv,new n(null,1,[U,Iz],null)],null))};
    function I_(a,b,c){var d=Ea(c),e=x.gh(d,hz),f=x.gh(d,Sv),k=x.gh(d,Bv);x.gh(d,By);li.gh(a,new Q(null,2,5,R,[Hx,Wy],null));try{return A.gh(f,new n(null,1,[yv,1],null))?Vs(mD,"gateway.local-node.core",65,new wl(function(){return new Q(null,1,5,R,[function(){var m=new yc,r=Ec,t=Dc;Ec=!0;Dc=function(v){return m.append(v)};try{Nx(a);}finally{Dc=t,Ec=r;}return q.m(m)}()],null)}),1998574596):A.gh(k,Uv)?null:CY(b,a,c,e,f)}catch(m){if(m instanceof Error){var l=m;Vs(DA,"gateway.local-node.core",70,new wl(function(){return new Q(null,
    3,5,R,[l,"Error handling message",c],null)}),-1608163260);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K(null,e,is.m(f),jw.m(f),dL(l,"global.errors.failure"))],null)],null)}throw m;}}function J_(a,b){var c=jw.m(b);if(p(c))return a=DT.gh(a,c),p(a)?jD.m(a):null;a=jD.m(b);return p(a)?K.hh(a,ct,ct.m(b)):null}
    function K_(a,b,c){var d=new Th(null);try{Vs(iu,"gateway.local-node.core",89,new wl(function(){return new Q(null,2,5,R,["domain handler processing message",c],null)}),24254156);if(p(!1)){var e=Sv.m(c),f=U.m(e);Uh(d,J_(a,e));switch(f instanceof z?f.da:null){case "gateway.common.commands/source-removed":break;case "hello":p(!1)&&Vs(mD,"gateway.local-node.core",null,new wl(function(){return new Q(null,2,5,R,[JA,new n(null,2,[jD,u(d),JA,OK(e,new Q(null,2,5,R,[TB,"secret"],null))],null)],null)}),-1452379578);
    break;default:p(!1)&&Vs(mD,"gateway.local-node.core",null,new wl(function(){return new Q(null,2,5,R,[JA,new n(null,2,[jD,u(d),JA,e],null)],null)}),-33220266);}}var k=I_(a,b,c),l=J(k,0,null),m=J(k,1,null),r=p(l)?l:a,t=B(m);b=null;for(var v=f=0;;)if(v<f){var y=b.W(null,v);G_.m(y);p(!1)&&p(!1)&&Vs(mD,"gateway.local-node.core",null,new wl(function(ta,ob,qb,pb,xc,Sb,mb,Tb,gb,hb){return function(){return new Q(null,2,5,R,[JA,new n(null,2,[jD,u(hb),JA,Sv.m(xc)],null)],null)}}(t,b,f,v,y,k,l,m,r,d)),-1161757358);
    v+=1;}else {var E=B(t);if(E){var H=E;if(Vf(H)){var T=qe(H),Y=re(H);H=T;var ia=F(T);t=Y;b=H;f=ia;}else {var ba=C(H);G_.m(ba);p(!1)&&p(!1)&&Vs(mD,"gateway.local-node.core",null,new wl(function(ta,ob,qb,pb,xc,Sb,mb,Tb,gb,hb,mc,of){return function(){return new Q(null,2,5,R,[JA,new n(null,2,[jD,u(of),JA,Sv.m(xc)],null)],null)}}(t,b,f,v,ba,H,E,k,l,m,r,d)),-1914341119);t=D(H);b=null;f=0;}v=0;}else break}return r}catch(ta){if(ta instanceof Error){var wa=ta;Vs(DA,"gateway.local-node.core",107,new wl(function(){return new Q(null,
    3,5,R,[wa,"error handling message",c],null)}),-872671822);return a}throw ta;}}function L_(a){return ii.gh(S,Vh.gh(function(b){var c=yT(b);return new Q(null,2,5,R,[Vv.m(c),new n(null,2,[uq,b,mD,c],null)],null)},a))}
    function M_(a){var b=S,c=Ds.gh(b,2E4);Vs(mD,"gateway.local-node.core",120,new wl(function(){return new Q(null,2,5,R,["node buffer size:",c],null)}),-292298675);var d=IK(F_(c,function(l,m){return Vs(OH,"gateway.local-node.core",125,new wl(function(){return new Q(null,4,5,R,["the message",l,"is dropped. total dropped so far",m],null)}),1376980615)})),e=L_(a);Vs(uG,"gateway.local-node.core",128,new wl(function(){return new Q(null,1,5,R,[q.m(e)],null)}),595595316);zt.m(b);var f=XK(),k=IK(1);oK(function(){var l=
    function(){function r(t){var v=t[1];if(1===v){v=function(){return function(H,T){return zT(T,H)}}();var y=K.hh(hL(f),lz,e);y=K.hh(y,er,d);var E=mj(e);E=Vh.gh(uq,E);v=fd.hh(v,y,E);t[7]=v;t[2]=null;t[1]=2;return uz}return 2===v?EK(t,d):3===v?FK(t,t[2]):4===v?(y=t[8],v=t[2],t[8]=v,t[1]=p(null==v)?5:6,uz):5===v?(y=t[8],v=t[7],y=function(){return function(H,T){return AT(T,H)}}(),E=mj(e),E=Vh.gh(uq,E),v=fd.hh(y,v,E),t[2]=v,t[1]=7,uz):6===v?(y=t[8],v=t[7],v=K_(v,e,y),t[7]=v,t[2]=null,t[1]=2,uz):7===v?(t[2]=
    t[2],t[1]=3,uz):null}return function(){function t(E){for(;;){a:try{for(;;){var H=r(E);if(!P(H,uz)){var T=H;break a}}}catch(Y){T=Y;E[2]=T;if(B(E[4]))E[1]=C(E[4]);else throw T;T=uz;}if(!P(T,uz))return T}}function v(){var E=[null,null,null,null,null,null,null,null,null];E[0]=y;E[1]=1;return E}var y=null;y=function(E){switch(arguments.length){case 0:return v.call(this);case 1:return t.call(this,E)}throw Error("Invalid arity: "+arguments.length);};y.o=v;y.m=t;return y}()}(),m=function(){var r=l();r[6]=
    k;return r}();return DK(m)});return new H_(d)}var N_=cL("agm.peer-removed","Peer has been removed"),O_=cL("agm.method-removed","Method has been removed"),P_=cL("agm.errors.subscription.invalid_subscription","Trying to drop a subscription that wasnt established. Did you mean to return an error instead?");function Q_(a,b,c,d,e){return oL(a,new n(null,6,[uq,"agm",U,eD,jw,b,jv,e,Pu,c,Uw,d],null))}function R_(a,b,c,d){return oL(a,new n(null,5,[uq,"agm",U,OA,jw,b,Pu,c,Uw,d],null))}function S_(a,b,c,d){return oL(a,new n(null,5,[uq,"agm",U,Nu,is,b,jw,c,Nu,d],null))}function T_(a,b,c,d,e,f){b=new n(null,8,[uq,"agm",U,st,aA,b,jw,c,FI,d,vz,e,qE,Vv.m(f),eJ,tr.m(f)],null);return oL(a,b)}function oA(a,b,c,d,e,f,k){return oL(a,new n(null,8,[uq,"agm",U,JA,jw,b,aA,c,NI,d,ZD,e,Kq,f,wn,k],null))}
    function U_(a,b,c){return new n(null,6,[uq,"agm",U,Pw,aA,a,jw,b,qE,Vv.m(c),eJ,tr.m(c)],null)}function V_(a,b,c){var d=Ea(c);c=x.gh(d,Pu);var e=x.gh(d,FI),f=x.gh(d,kq);d=x.gh(d,Xr);jh.gh(kJ.m(a),kJ.m(b))&&Sc(PT.hh(fp,a,b))&&eL("agm.errors.invocation.failure","Unable to invoke methods across different users");p(li.gh(a,new Q(null,4,5,R,[fp,Uw,c,e],null)))||eL("agm.errors.invocation.failure",["Unable to find method with id ",q.m(e)," on server id ",q.m(c)," registered with this peer"].join(""));B(f)&&B(d)&&eL("agm.errors.invocation.failure","Cant use positional and by-name arguments at the same time");}
    function W_(a,b){if("string"===typeof a)return A.gh(a,b);var c=null!=b;return c?Vk(a,b):c}function X_(a,b){return fd.hh(function(c,d){return p(W_(d,b))?af(!0):!1},!1,a)}function Y_(a,b){return fd.hh(function(c,d){return p(W_(d,b))?af(!0):c},!1,Hz.m(a))}function Z_(a,b){a=py.m(a);return p(a)?fd.hh(function(c,d){return p(W_(d,b))?af(!0):c},!1,a):!0}function $_(a,b){return M(b)?jg(function(c,d,e){return p(Y_(a,d))?K.hh(c,d,"\x3cREMOVED\x3e"):p(Z_(a,d))?K.hh(c,d,e):K.hh(c,d,"\x3cREMOVED\x3e")},S,b):b}
    function a0(a,b){var c=fd.hh(function(d,e){var f=W_(tw.m(e),b);f=p(f)?zp.gh(e,!0):f;return p(f)?af(e):d},null,Uw.m(a));if(null!=c)return c;a=eH.m(a);switch(a instanceof z?a.da:null){case "whitelist":return new n(null,1,[kq,new n(null,1,[Hz,I],null)],null);case "blacklist":return null;default:return new n(null,1,[kq,new n(null,1,[Hz,I],null)],null)}}var b0=new n(null,1,[PF,null],null);function c0(){var a=null!=PF.m(b0);return a?li.gh(b0,new Q(null,2,5,R,[ho,MG],null)):a}function d0(a,b){return $_(kq.m(a),b)}function e0(a,b,c){a=PF.m(a);p(a)&&(a.hh?a.hh("interop",b,c):a.call(null,"interop",b,c));}
    function f0(a){if(null!=PF.m(b0)){var b=u(a);b=Ea(b);b=x.gh(b,Ss);var c=tw.m(b);b=li.gh(b0,new Q(null,2,5,R,[ho,ID],null));var d=RA.m(b);if(p(d)){if(p(d.m?d.m(c):d.call(null,c))){var e=cp.m(b);e0(b0,"invoke",K.hh(oi(u(a),kI,function(k){return p(e)?e.gh?e.gh(c,k):e.call(null,c,k):k}),Ss,c));}}else {var f=a0(or.m(b),c);p(f)&&e0(b0,"invoke",K.hh(oi(u(a),kI,function(k){return d0(f,k)}),Ss,c));}}}
    function g0(a){if(null!=PF.m(b0)){var b=u(a);b=Ea(b);b=x.gh(b,Ss);b=tw.m(b);var c=li.gh(b0,new Q(null,2,5,R,[ho,ID],null)),d=RA.m(c);p(d)?p(d.m?d.m(b):d.call(null,b))&&e0(b0,"yield",K.hh(u(a),Ss,b)):p(a0(or.m(c),b))&&e0(b0,"yield",K.hh(u(a),Ss,b));}}
    function h0(a){if(null!=PF.m(b0)){var b=u(a);b=Ea(b);b=x.gh(b,Ss);var c=tw.m(b);b=li.gh(b0,new Q(null,2,5,R,[ho,ID],null));var d=RA.m(b);if(p(d)){if(p(d.m?d.m(c):d.call(null,c))){var e=cp.m(b);e0(b0,"subscribe",K.hh(oi(u(a),kI,function(k){return p(e)?e.gh?e.gh(c,k):e.call(null,c,k):k}),Ss,c));}}else {var f=a0(or.m(b),c);p(f)&&e0(b0,"subscribe",K.hh(oi(u(a),kI,function(k){return d0(f,k)}),Ss,c));}}}
    function i0(a){if(null!=PF.m(b0)){var b=u(a);b=Ea(b);b=x.gh(b,Ss);b=tw.m(b);var c=li.gh(b0,new Q(null,2,5,R,[ho,ID],null)),d=RA.m(c);p(d)?p(d.m?d.m(b):d.call(null,b))&&e0(b0,"unsubscribe",K.hh(u(a),Ss,b)):p(a0(or.m(c),b))&&e0(b0,"unsubscribe",K.hh(u(a),Ss,b));}}
    function j0(a){if(null!=PF.m(b0)){var b=u(a);b=Ea(b);b=x.gh(b,Ss);var c=tw.m(b);b=li.gh(b0,new Q(null,2,5,R,[ho,ID],null));var d=RA.m(b);if(p(d)){if(p(d.m?d.m(c):d.call(null,c))){var e=cp.m(b);e0(b0,"event",K.hh(oi(u(a),wn,function(k){return p(e)?e.gh?e.gh(c,k):e.call(null,c,k):k}),Ss,c));}}else {var f=a0(or.m(b),c);p(f)&&e0(b0,"event",K.hh(oi(u(a),wn,function(k){return d0(f,k)}),Ss,c));}}}function k0(a,b){return new n(null,3,[U,PI,Cp,b,Wp,a],null)}Z(Jz,NG,NG);Z(Dq,EA,EA);Z(RH,O(wJ,O(hq,uI)),lT(O(hq,uI),ZS(kC,Vc,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,uI)],null),null),null));Z(PB,O(wJ,Iq),lT(Iq,M,null));Z(tz,O(wJ,Iq),lT(Iq,M,null));Z(hr,O(wJ,Iq),lT(Iq,M,null));
    Z(FC,O(rv,Up,O(ut,ir,new Q(null,2,5,R,[Dq,Jz],null),dA,new Q(null,4,5,R,[RH,PB,tz,hr],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,2,5,R,[Dq,Jz],null),dA,new Q(null,4,5,R,[RH,PB,tz,hr],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Dq,Jz],null),new Q(null,4,5,R,[RH,PB,tz,hr],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Pu)},function(a){return N(a,FI)}],null),function(a){return M(a)&&N(a,Pu)&&N(a,FI)},new Q(null,
    4,5,R,[kq,Xr,bv,ZH],null),new Q(null,2,5,R,[Dq,Jz],null),null,new Q(null,2,5,R,[Pu,FI],null),new Q(null,4,5,R,[RH,PB,tz,hr],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Pu)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI))],null),null]))],null),null));Z(DG,yo,Uc);
    Z(Cq,O(rv,Up,O(ut,ir,new Q(null,3,5,R,[DG,LD,ZB],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,3,5,R,[DG,LD,ZB],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[DG,LD,ZB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,aA)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[DG,LD,ZB],null),null,new Q(null,3,5,R,[aA,qE,eJ],null),
    I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null));Z(xF,EA,EA);
    Z(Qt,O(ut,ir,new Q(null,4,5,R,[DG,EA,Jz,xF],null),dA,new Q(null,4,5,R,[RH,PB,tz,hr],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[DG,EA,Jz,xF],null),new Q(null,4,5,R,[RH,PB,tz,hr],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,jw)},function(a){return N(a,FI)},function(a){return N(a,vz)}],null),function(a){return M(a)&&N(a,aA)&&N(a,jw)&&N(a,FI)&&N(a,vz)},new Q(null,4,5,R,[kq,Xr,bv,ZH],null),new Q(null,4,5,R,[DG,EA,Jz,
    xF],null),null,new Q(null,4,5,R,[aA,jw,FI,vz],null),new Q(null,4,5,R,[RH,PB,tz,hr],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,vz))],null),null])));
    Z(To,O(ut,ir,new Q(null,6,5,R,[DG,EA,Jz,xF,LD,ZB],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,6,5,R,[DG,EA,Jz,xF,LD,ZB],null),null,null,new Q(null,7,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,jw)},function(a){return N(a,FI)},function(a){return N(a,vz)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,aA)&&N(a,jw)&&N(a,FI)&&N(a,vz)&&N(a,qE)&&N(a,eJ)},I,new Q(null,6,5,R,[DG,EA,Jz,xF,LD,ZB],null),null,
    new Q(null,6,5,R,[aA,jw,FI,vz,qE,eJ],null),I,new Q(null,7,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,vz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null])));Z(fn,yo,Uc);
    Z(Uu,O(ut,ir,new Q(null,3,5,R,[DG,EA,fn],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[DG,EA,fn],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,jw)},function(a){return N(a,Is)}],null),function(a){return M(a)&&N(a,aA)&&N(a,jw)&&N(a,Is)},I,new Q(null,3,5,R,[DG,EA,fn],null),null,new Q(null,3,5,R,[aA,jw,Is],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Is))],null),null])));
    Z(qJ,O(ut,ir,new Q(null,4,5,R,[EA,DG,LD,ZB],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[EA,DG,LD,ZB],null),null,null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,jw)},function(a){return N(a,aA)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,jw)&&N(a,aA)&&N(a,qE)&&N(a,eJ)},I,new Q(null,4,5,R,[EA,DG,LD,ZB],null),null,new Q(null,4,5,R,[jw,aA,qE,eJ],null),I,new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,
    V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null])));Z(lG,fq,Rc);Z(Tm,cH,Yf);Z(FF,Iq,M);
    Z(CD,O(ut,ir,new Q(null,4,5,R,[EA,lG,Tm,FF],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[EA,lG,Tm,FF],null),null,null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,jw)},function(a){return N(a,ZD)},function(a){return N(a,Kq)},function(a){return N(a,wn)}],null),function(a){return M(a)&&N(a,jw)&&N(a,ZD)&&N(a,Kq)&&N(a,wn)},I,new Q(null,4,5,R,[EA,lG,Tm,FF],null),null,new Q(null,4,5,R,[jw,ZD,Kq,wn],null),I,new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,
    V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ZD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Kq)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn))],null),null])));
    Z(Bs,O(rv,CD,O(ut,ir,new Q(null,1,5,R,[DG],null))),XS(new Q(null,2,5,R,[CD,O(ut,ir,new Q(null,1,5,R,[DG],null))],null),new Q(null,2,5,R,[CD,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[DG],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,aA)}],null),function(a){return M(a)&&N(a,aA)},I,new Q(null,1,5,R,[DG],null),null,new Q(null,1,5,R,[aA],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA))],
    null),null]))],null),null));
    Z(ar,O(rv,CD,O(ut,ir,new Q(null,1,5,R,[fn],null))),XS(new Q(null,2,5,R,[CD,O(ut,ir,new Q(null,1,5,R,[fn],null))],null),new Q(null,2,5,R,[CD,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[fn],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Is)}],null),function(a){return M(a)&&N(a,Is)},I,new Q(null,1,5,R,[fn],null),null,new Q(null,1,5,R,[Is],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Is))],
    null),null]))],null),null));
    Z(jq,O(rv,Up,O(ut,ir,new Q(null,2,5,R,[Dq,Jz],null),dA,new Q(null,3,5,R,[RH,PB,hr],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,2,5,R,[Dq,Jz],null),dA,new Q(null,3,5,R,[RH,PB,hr],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Dq,Jz],null),new Q(null,3,5,R,[RH,PB,hr],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Pu)},function(a){return N(a,FI)}],null),function(a){return M(a)&&N(a,Pu)&&N(a,FI)},new Q(null,3,5,R,
    [kq,Xr,ZH],null),new Q(null,2,5,R,[Dq,Jz],null),null,new Q(null,2,5,R,[Pu,FI],null),new Q(null,3,5,R,[RH,PB,hr],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Pu)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI))],null),null]))],null),null));Z(zy,yo,Uc);
    Z(qw,O(ut,ir,new Q(null,4,5,R,[zy,xF,EA,Jz],null),dA,new Q(null,3,5,R,[RH,PB,hr],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,4,5,R,[zy,xF,EA,Jz],null),new Q(null,3,5,R,[RH,PB,hr],null),null,new Q(null,5,5,R,[function(a){return M(a)},function(a){return N(a,mu)},function(a){return N(a,vz)},function(a){return N(a,jw)},function(a){return N(a,FI)}],null),function(a){return M(a)&&N(a,mu)&&N(a,vz)&&N(a,jw)&&N(a,FI)},new Q(null,3,5,R,[kq,Xr,ZH],null),new Q(null,4,5,R,[zy,xF,EA,Jz],null),
    null,new Q(null,4,5,R,[mu,vz,jw,FI],null),new Q(null,3,5,R,[RH,PB,hr],null),new Q(null,5,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,mu)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,vz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,FI))],null),null])));Z(av,Iq,M);
    Z(qz,O(ut,ir,new Q(null,3,5,R,[zy,EA,av],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[zy,EA,av],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,mu)},function(a){return N(a,jw)},function(a){return N(a,Nu)}],null),function(a){return M(a)&&N(a,mu)&&N(a,jw)&&N(a,Nu)},I,new Q(null,3,5,R,[zy,EA,av],null),null,new Q(null,3,5,R,[mu,jw,Nu],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,mu)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,jw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Nu))],null),null])));function l0(a,b,c,d){return ni.A(a,new Q(null,4,5,R,[fp,vD,b,c],null),Lh(Bf,Ck),d)}function m0(a,b,c,d){return null==b?a:RK(a,new Q(null,4,5,R,[fp,vD,b,c],null),d)}function n0(a,b,c,d,e){var f=Ea(c);c=x.gh(f,ro);var k=x.gh(f,mJ);f=x.gh(f,FI);k=m0(OK(DT.gh(a,c),new Q(null,3,5,R,[fp,Yn,b],null)),k,d,b);a=NT(a,c,k);return GT(k)?new Q(null,2,5,R,[a,T_(hz.m(k),b,c,f,d,e)],null):new Q(null,2,5,R,[a,null],null)}
    function o0(a,b,c){var d=li.gh(b,new Q(null,2,5,R,[fp,my],null)),e=kJ.m(b);b=fd.hh(function(f,k){var l=J(k,0,null),m=J(k,1,null);k=J(f,0,null);f=J(f,1,null);m=n0(k,l,m,e,c);l=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(l)?l:k,Zf(m)||Uf(m)?fd.hh(Lh(Bf,I),f,m):null!=m?Lh(Bf,I)(f,m):f],null)},new Q(null,2,5,R,[a,I],null),d);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[a,b],null)}
    function p0(a,b,c){if(p(c0())){var d=kJ.m(b);c=B(c);for(var e=null,f=0,k=0;;)if(k<f){var l=e.W(null,k),m=C(l),r=yf(l),t=li.gh(b,new Q(null,4,5,R,[fp,Uw,d,FI.m(r)],null));i0(new wl(function(E,H,T,Y,ia,ba,wa){return function(){return new n(null,4,[aA,ia,zz,jD.m(a),ro,jD.m(b),Ss,wa],null)}}(c,e,f,k,m,r,t)));k+=1;}else if(r=B(c)){m=r;if(Vf(m))c=qe(m),k=re(m),e=c,f=F(c),c=k;else {l=C(m);t=C(l);var v=yf(l),y=li.gh(b,new Q(null,4,5,R,[fp,Uw,d,FI.m(v)],null));i0(new wl(function(E,H,T,Y,ia,ba,wa){return function(){return new n(null,
    4,[aA,ia,zz,jD.m(a),ro,jD.m(b),Ss,wa],null)}}(c,e,f,k,t,v,y)));c=D(m);e=null;f=0;}k=0;}else break}}function q0(a,b,c){return jg(function(d,e,f){return A.gh(b,ro.m(f))&&(Of(c)||N(c,FI.m(f)))?oi(d,Hr,function(k){return K.hh(k,e,f)}):oi(d,aD,function(k){return K.hh(k,e,f)})},S,a)}
    function r0(a,b,c,d,e){var f=kJ.m(c);d=q0(li.gh(b,new Q(null,2,5,R,[fp,my],null)),f,d);f=Ea(d);d=x.gh(f,Hr);var k=x.gh(f,aD);f=jg(function(l,m,r){return C(n0(l,m,r,kJ.m(b),e))},a,d);return B(d)?(p0(b,c,d),new Q(null,2,5,R,[OT(f,kJ.m(b),function(l){return B(k)?mi(l,new Q(null,2,5,R,[fp,my],null),k):pi(l,fp,Gf,my)}),tL(hz.m(b))?ji.gh(function(l){var m=hz.m(b);l=Cd(l);var r=kJ.m(b);return oL(m,U_(l,r,e))},d):null],null)):new Q(null,2,5,R,[a,null],null)}
    function s0(a,b,c){var d=Ea(c),e=x.gh(d,jw),f=x.gh(d,Pu),k=x.gh(d,aA),l=x.gh(d,FI),m=x.gh(d,kq),r=x.gh(d,Xr),t=x.gh(d,ZH);d=x.gh(d,bv);var v=DT.gh(b,f);if(p(v)){var y=mi(v,new Q(null,3,5,R,[fp,Yn,k],null),new n(null,2,[zz,e,FI,l],null));v=hz.m(y);var E=li.gh(a,new Q(null,4,5,R,[fp,Uw,f,l],null));h0(new wl(function(){return new n(null,5,[aA,k,zz,jD.m(a),ro,jD.m(y),Ss,E,kI,r],null)}));return new Q(null,2,5,R,[NT(b,f,y),tL(v)?new Q(null,1,5,R,[oL(v,Wj([kq,U,vz,aA,jw,ZH,uq,bv,Xr,FI],[m,fH,e,k,f,t,"agm",
    d,r,l]))],null):new Q(null,1,5,R,[qL(k0(YK(Hx.m(b)),e),new n(null,2,[U,Wp,Wp,Wp.m(v)],null),c)],null)],null)}throw hm(["Unable to find server with id ",q.m(f)].join(""),S);}
    function t0(a,b,c){var d=Ea(b),e=x.gh(d,is),f=x.gh(d,jw),k=x.gh(d,Pu),l=x.gh(d,FI),m=mi(FT(a,f,fp),new Q(null,3,5,R,[fp,my,c],null),new n(null,3,[ro,k,FI,l,is,e],null)),r=FT(a,k,fp),t=function(){var v=Kf(b);return null==v?null:Na.m(v)}();V_(m,r,b);p(t)&&Vs(OH,"gateway.domains.agm.subscriptions",176,new wl(function(){return new Q(null,13,5,R,["agm","peer",jD.m(m),"subscribes for method",l,"on server",jD.m(r),"with subscription",c,"using request",e,"with large payload",t],null)}),-685010149);Vs(mD,
    "GATEWAY_ACTION_LOG|agm|gateway.domains.agm.subscriptions",183,new wl(function(){return new Q(null,10,5,R,["peer",f,"subscribes for method",l,"on",k,"with subscription",c,"using request",e],null)}),681447257);return s0(m,NT(a,f,m),K.hh(b,aA,c))}
    function u0(a,b,c,d,e,f,k){if(p(b)){var l=new Q(null,3,5,R,[fp,my,d],null),m=li.gh(b,l),r=is.m(m);m=hz.m(b);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.subscriptions",214,new wl(function(){return new Q(null,8,5,R,["peer",c,"dropped/rejected subscription",d,"for request",r,"error?:",k],null)}),-1602375678);return new Q(null,2,5,R,[NT(a,c,OK(b,l)),tL(m)?p(k)?new Q(null,1,5,R,[rL.la("agm",m,r,c,e,f)],null):new Q(null,1,5,R,[oL(m,U_(d,c,e))],null):null],null)}return new Q(null,2,5,R,[a,null],null)}
    function v0(a,b,c,d,e){var f=DT.gh(a,b),k=li.gh(f,new Q(null,4,5,R,[fp,my,c,is],null));a=NT(a,b,mi(f,new Q(null,4,5,R,[fp,my,c,mJ],null),d));d=hz.m(f);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.subscriptions",235,new wl(function(){return new Q(null,6,5,R,["peer",b,"is accepted subscription",c,"for request",k],null)}),-225830741);return GT(f)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[oL(d,new n(null,5,[uq,"agm",U,Cz,is,k,jw,b,aA,c],null))],null)],null):new Q(null,2,5,R,[a,new Q(null,1,5,R,[qL(k0(YK(Hx.m(a)),
    jw.m(e)),new n(null,2,[U,Wp,Wp,Wp.m(d)],null),e)],null)],null)}
    function w0(a,b,c){var d=Ea(c),e=x.gh(d,aA),f=x.gh(d,jw);d=x.gh(d,Is);null==d&&eL("agm.errors.subscription.invalid_subscription","Invalid or missing stream id");var k=li.gh(b,new Q(null,3,5,R,[fp,Yn,e],null));return p(k)?(k=zz.m(k),v0(NT(a,f,l0(mi(b,new Q(null,4,5,R,[fp,Yn,e,mJ],null),d),d,k,e)),k,e,d,c)):Vs(uG,"gateway.domains.agm.subscriptions",260,new wl(function(){return new Q(null,3,5,R,["Subscription accept response",c,"for missing interest"],null)}),654535935)}
    function x0(a,b){var c=Ea(b),d=x.gh(c,aA),e=x.gh(c,jw);c=x.gh(c,AH);e=DT.hh(a,e,fp);if(p(e))return w0(a,e,b);Vs(OH,"gateway.domains.agm.subscriptions",270,new wl(function(){return new Q(null,3,5,R,["Subscription accept response",b,"from missing peer"],null)}),-690422257);return u0(a,DT.gh(a,c),c,d,cL("agm.errors.subscription.failure","Received a response from a missing server"),null,!0)}var y0,qA=Nh(S),zA=Nh(S),HA=Nh(S),KA=Nh(S),PA=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));
    y0=new cm(Le.gh("gateway.domains.agm.subscriptions","drop-interest-rq"),U,PA,qA,zA,HA,KA);y0.v(null,DA,function(){return RI});y0.v(null,JB,function(){return qJ});Z(xx,O(fo,hJ,U),PS(hJ,new Me(function(){return y0},hJ,Wj([xy,tw,JD,eo,px,bn,bz,wE,xv,hF],[tt,sx,"gateway/domains/agm/subscriptions.cljc",27,1,296,296,Re,null,p(y0)?y0.ld:null]))));
    function E0(a,b,c,d){var e=jw.m(c),f=x.gh(c,p(d)?is:aA),k=FT(a,e,fp),l=li.gh(k,new Q(null,3,5,R,[fp,Yn,f],null));if(p(l)){var m=zz.m(l),r=x.gh(l,mJ);l=DT.gh(a,m);var t=hz.m(l);return p(p(r)?r:d)?(k=new Q(null,2,5,R,[NT(a,e,m0(OK(k,new Q(null,3,5,R,[fp,Yn,f],null)),r,m,f)),I],null),b=J(k,0,null),k=J(k,1,null),f=u0(b,l,m,f,fL(c),ZH.m(c),d),d=J(f,0,null),f=J(f,1,null),f=new Q(null,2,5,R,[p(d)?d:b,Zf(f)||Uf(f)?fd.hh(Lh(Bf,I),k,f):null!=f?Lh(Bf,I)(k,f):k],null),d=J(f,0,null),f=J(f,1,null),c=p(p(l)?!tL(t):
    l)?new Q(null,2,5,R,[null,qL(k0(YK(Hx.m(a)),e),new n(null,2,[U,Wp,Wp,Wp.m(t)],null),c)],null):null,a=J(c,0,null),c=J(c,1,null),new Q(null,2,5,R,[p(a)?a:d,Zf(c)||Uf(c)?fd.hh(Lh(Bf,I),f,c):null!=c?Lh(Bf,I)(f,c):f],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.la("agm",b,f,e,P_,null)],null)],null)}return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.la("agm",b,f,e,cL("agm.errors.subscription.invalid_subscription","Trying to drop a non-existing subscription"),null)],null)],null)}
    function F0(a,b,c,d,e){var f=DT.gh(a,c);if(p(f)){var k=li.gh(f,new Q(null,3,5,R,[fp,Yn,d],null));if(p(k)){i0(new wl(function(){return new n(null,4,[aA,d,zz,jD.m(b),ro,jD.m(f),Ss,li.gh(f,new Q(null,4,5,R,[fp,Uw,c,FI.m(k)],null))],null)}));var l=kJ.m(b),m=hz.m(f);a=NT(a,c,m0(OK(f,new Q(null,3,5,R,[fp,Yn,d],null)),mJ.m(k),l,d));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[tL(m)?T_(m,d,c,FI.m(k),l,fL(e)):qL(k0(YK(Hx.m(a)),l),new n(null,2,[U,Wp,Wp,Wp.m(m)],null),e)],null)],null)}}return null}
    function G0(a,b,c,d,e){var f=FT(a,c,fp),k=new Q(null,3,5,R,[fp,my,d],null),l=li.gh(f,k);l=Ea(l);l=x.gh(l,ro);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.subscriptions",376,new wl(function(){return new Q(null,6,5,R,["peer",c,"unsubscribes subscription",d,"using request",e],null)}),-792152961);return p(l)?(a=NT(a,c,OK(f,k)),b=F0(a,f,l,d,b),p(b)?b:new Q(null,2,5,R,[a,I],null)):eL("agm.errors.subscription.invalid_subscription",["Unable to find subscription with id ",q.m(d)," on subscriber id ",
    q.m(c)].join(""))}
    function H0(a,b,c,d,e,f,k){if(p(c0())){var l=kJ.m(c),m=li.gh(c,new Q(null,2,5,R,[fp,Yn],null)),r=li.gh(c,new Q(null,3,5,R,[fp,Uw,l],null));a=B(a);for(var t=null,v=0,y=0;;)if(y<v){var E=t.W(null,y),H=x.gh(m,E),T=x.gh(r,FI.m(H));j0(new wl(function(ba,wa,ta,ob,qb,pb,xc){return function(){return new n(null,8,[aA,xc,zz,jD.m(b),ro,jD.m(c),Ss,pb,NI,d,TH,e,Kq,f,wn,k],null)}}(a,t,v,y,H,T,E)));y+=1;}else if(T=B(a)){H=T;if(Vf(H))a=qe(H),y=re(H),t=a,v=F(a),a=y;else {E=C(H);var Y=x.gh(m,E),ia=x.gh(r,FI.m(Y));
    j0(new wl(function(ba,wa,ta,ob,qb,pb,xc){return function(){return new n(null,8,[aA,xc,zz,jD.m(b),ro,jD.m(c),Ss,pb,NI,d,TH,e,Kq,f,wn,k],null)}}(a,t,v,y,Y,ia,E)));a=D(H);t=null;v=0;}y=0;}else break}}
    function I0(a,b){var c=Ea(b),d=x.gh(c,jw),e=x.gh(c,Is),f=x.gh(c,ZD),k=x.gh(c,Kq),l=x.gh(c,wn),m=function(){var v=Kf(b);return null==v?null:Na.m(v)}(),r=DT.hh(a,d,fp);c=li.gh(r,new Q(null,3,5,R,[fp,vD,e],null));var t=new Th(Ck);p(m)&&Vs(OH,"gateway.domains.agm.subscriptions",463,new wl(function(){return new Q(null,7,5,R,["agm","peer",jD.m(r),"publishes data on stream",e,"with large payload",m],null)}),2146839466);return new Q(null,2,5,R,[a,Uk(ei.gh(Tc,di(function(v){var y=J(v,0,null);v=J(v,1,null);
    var E=DT.gh(a,y),H=hz.m(E);if(tL(H))return H0(v,E,r,!1,f,k,l),Vh.gh(function(T){return oA(H,y,T,!1,f,k,l)},v);v=Wp.m(H);if(N(u(t),v))return null;t.Cc(null,Bf.gh(t.zb(null),v));return new Q(null,1,5,R,[qL(k0(YK(Hx.m(a)),d),new n(null,2,[U,Wp,Wp,v],null),b)],null)},G([c]))))],null)}
    function UA(a,b){var c=Ea(b),d=x.gh(c,jw),e=x.gh(c,aA),f=x.gh(c,ZD),k=x.gh(c,Kq);c=x.gh(c,wn);var l=function(){var H=Kf(b);return null==H?null:Na.m(H)}(),m=DT.hh(a,d,fp),r=li.gh(m,new Q(null,4,5,R,[fp,Yn,e,zz],null)),t=DT.gh(a,r);if(p(l)){r=li.gh(m,new Q(null,4,5,R,[fp,Yn,e,FI],null));var v=li.gh(m,new Q(null,5,5,R,[fp,Uw,d,r,tw],null));Vs(OH,"gateway.domains.agm.subscriptions",512,new wl(function(){return new Q(null,10,5,R,["agm","server",jD.m(m),"posts data on method/subscription",v,e,"to peer",
    jD.m(t),"with large payload",l],null)}),1957567913);}var y=hz.m(t);if(p(y)){var E=r=R;GT(t)?(H0(new Q(null,1,5,R,[e],null),t,m,!0,f,k,c),d=oA(y,kJ.m(t),e,!0,f,k,c)):d=qL(k0(YK(Hx.m(a)),d),new n(null,2,[U,Wp,Wp,Wp.m(y)],null),b);a=new Q(null,2,5,r,[a,new Q(null,1,5,E,[d],null)],null);}else a=null;return a}Z($s,O(hq,GD),ZS(GD,GD,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,GD)],null),null));
    Z(pG,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[$s],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[$s],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[$s],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Uw)}],null),function(a){return M(a)&&N(a,Uw)},I,new Q(null,1,5,R,[$s],null),null,new Q(null,1,5,R,[Uw],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uw))],
    null),null]))],null),null));Z(eE,O(hq,NG),ZS(NG,NG,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,NG)],null),null));
    Z(An,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[eE],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[eE],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[eE],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Uw)}],null),function(a){return M(a)&&N(a,Uw)},I,new Q(null,1,5,R,[eE],null),null,new Q(null,1,5,R,[Uw],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uw))],
    null),null]))],null),null));function J0(a){a=WK(a);var b=fS(os.m(a));return p(b)?K.hh(a,xu,b):a}function K0(a,b,c){a=xu.m(a);return p(a)?gS(a,b,c):!0}function L0(a,b,c){var d=DT.gh(a,c),e=new Q(null,3,5,R,[fp,Uw,b],null),f=ii.gh(Ck,Vh.gh(C,li.gh(d,e)));return B(f)?M0(a,b,d,e,f):new Q(null,2,5,R,[OT(a,c,function(k){return VK(OK(k,e),fp)}),null],null)}
    function M0(a,b,c,d,e){var f=DT.gh(a,b);e=fd.hh(function(k,l){var m=J(k,0,null);k=J(k,1,null);var r=Bf.gh(d,l);return p(li.gh(m,r))?new Q(null,2,5,R,[OK(m,r),Bf.gh(k,l)],null):new Q(null,2,5,R,[m,k],null)},new Q(null,2,5,R,[c,Ck],null),e);c=J(e,0,null);e=J(e,1,null);a=NT(a,kJ.m(c),VK(c,fp));if(Sc(B(e)))return new Q(null,2,5,R,[a,null],null);a=r0(a,c,f,e,O_);f=J(a,0,null);a=J(a,1,null);c=new Q(null,2,5,R,[f,GT(c)?R_(hz.m(c),kJ.m(c),b,Mi(e)):null],null);b=J(c,0,null);c=J(c,1,null);return new Q(null,
    2,5,R,[p(b)?b:f,Zf(c)||Uf(c)?fd.hh(Lh(Bf,I),a,c):null!=c?Lh(Bf,I)(a,c):a],null)}
    function N0(a,b){b=Ea(b);var c=x.gh(b,jw),d=x.gh(b,Uw),e=new Q(null,3,5,R,[fp,Uw,c],null);b=VK(fd.hh(function(k,l){var m=Bf.gh(e,l);return p(li.gh(k,m))?OK(k,m):eL("agm.errors.unregistration.failure",["Unable to unregister missing method ",q.m(l)].join(""))},ET(a,c),d),fp);var f=NT(a,c,b);b=ng(fi.m(function(k){return A.gh(c,kJ.m(k))}),lg(function(k,l){var m=J(k,0,null);k=J(k,1,null);var r=M0(m,c,l,e,d);l=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[p(l)?l:m,Zf(r)||Uf(r)?fd.hh(Lh(Bf,I),k,r):
    null!=r?Lh(Bf,I)(k,r):k],null)},kg),new Q(null,2,5,R,[f,I],null),RT(a,fp,b,!1));a=J(b,0,null);b=J(b,1,null);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.mthds",120,new wl(function(){return new Q(null,4,5,R,["peer",c,"un-registers methods",d],null)}),-1880900809);return new Q(null,2,5,R,[a,b],null)}
    function O0(a,b,c,d){var e=kJ.m(b),f=jD.m(b),k=kJ.m(d),l=jD.m(d),m=li.gh(d,new Q(null,3,5,R,[fp,Uw,e],null));m=ng(ei.m(function(r){return K0(r,f,l)}),lg(function(r,t){var v=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[K.hh(v,kJ.m(t),t),Bf.gh(r,Gf.gh(t,xu))],null)},kg),new Q(null,2,5,R,[m,I],null),c);c=J(m,0,null);m=J(m,1,null);return B(m)?new Q(null,2,5,R,[NT(a,k,mi(d,new Q(null,3,5,R,[fp,Uw,e],null),c)),GT(d)?Q_(hz.m(d),k,e,m,U.m(hz.m(b))):null],null):new Q(null,2,5,R,[a,null],null)}
    function P0(a,b){b=Ea(b);var c=x.gh(b,jw),d=x.gh(b,Uw),e=Vh.gh(J0,d),f=fd.hh(function(k,l){return mi(k,new Q(null,4,5,R,[fp,Uw,c,kJ.m(l)],null),l)},ET(a,c),e);b=NT(a,c,f);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.mthds",200,new wl(function(){return new Q(null,4,5,R,["peer",c,"registers methods",d],null)}),128458730);return fd.hh(function(k,l){var m=J(k,0,null);k=J(k,1,null);var r=O0(m,f,e,l);l=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[p(l)?l:m,Zf(r)||Uf(r)?fd.hh(Lh(Bf,I),k,r):null!=
    r?Lh(Bf,I)(k,r):k],null)},new Q(null,2,5,R,[b,I],null),RT(a,fp,f,!1))}function Q0(a,b,c){var d=jD.m(a),e=jD.m(c);return ng(ei.m(function(f){return K0(f,d,e)}),lg(function(f,k){return Bf.gh(f,K.hh(Gf.gh(k,xu),Pu,kJ.m(a)))},kg),I,b)}function R0(a,b,c){var d=Ea(b),e=x.gh(d,is),f=x.gh(d,jw),k=x.gh(d,Pu),l=x.gh(d,mu),m=x.gh(d,FI),r=x.gh(d,kq),t=x.gh(d,Xr);d=x.gh(d,ZH);var v=mi(c,new Q(null,3,5,R,[fp,Sw,l],null),new n(null,3,[Qr,f,FI,m,is,e],null)),y=!GT(v);c=R;e=NT(a,k,v);y?f=new Q(null,1,5,R,[qL(k0(YK(Hx.m(a)),f),new n(null,2,[U,Wp,Wp,li.gh(v,new Q(null,2,5,R,[hz,Wp],null))],null),b)],null):(a=R,b=hz.m(v),f=oL(b,Wj([kq,mu,U,vz,jw,ZH,uq,Xr,FI],[r,l,ID,f,k,d,"agm",t,m])),f=new Q(null,1,5,a,[f],null));return new Q(null,2,5,c,[e,f],
    null)}
    function S0(a,b,c,d,e){var f=Ea(b),k=x.gh(f,is),l=x.gh(f,jw),m=x.gh(f,Pu),r=x.gh(f,FI),t=function(){var E=Kf(b);return null==E?null:Na.m(E)}(),v=li.gh(d,new Q(null,4,5,R,[fp,Uw,m,r],null));p(t)&&Vs(OH,"gateway.domains.agm.calls",62,new wl(function(){return new Q(null,11,5,R,["agm","peer",jD.m(e),"calls method",tw.m(v),"on",jD.m(d),"using request",k,"with large payload",t],null)}),681891800);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.calls",67,new wl(function(){return new Q(null,8,5,R,["peer",
    l,"calls method",r,"on",m,"using request",k],null)}),741967573);var y=mi(e,new Q(null,3,5,R,[fp,eA,k],null),new n(null,3,[Yr,m,FI,r,mu,c],null));f0(new wl(function(){return new n(null,5,[is,k,Qr,jD.m(y),ro,jD.m(d),Ss,v,kI,Xr.m(b)],null)}));return R0(NT(a,l,y),K.hh(b,mu,c),A.gh(l,m)?y:d)}
    function T0(a,b,c,d){function e(m){return rL.K("agm",b,Cd(m),kJ.m(c),cL("agm.errors.invocation.failure","Peer has left while waiting for result"))}var f=kJ.m(d);d=Nl(function(m){return A.gh(Yr.m(Dd(m)),f)},li.gh(c,new Q(null,2,5,R,[fp,eA],null)));d=Ea(d);var k=x.gh(d,!0),l=x.gh(d,!1);return B(k)?new Q(null,2,5,R,[OT(a,kJ.m(c),function(m){return B(l)?mi(m,new Q(null,2,5,R,[fp,eA],null),ii.gh(S,l)):pi(m,fp,Gf,eA)}),GT(c)?ji.gh(e,k):null],null):new Q(null,2,5,R,[a,null],null)}
    function U0(a,b,c,d,e){var f=is.m(c),k=Qr.m(c),l=FI.m(c),m=function(){var T=DT.gh(a,k);return null==T?null:OK(T,new Q(null,3,5,R,[fp,eA,f],null))}();if(p(m)){var r=NT(a,k,m),t=DT.gh(r,b),v=li.gh(t,new Q(null,4,5,R,[fp,Uw,b,l],null)),y=mz.m(e),E=fC.m(e),H=function(){var T=Kf(d);return null==T?null:Na.m(T)}();if(GT(m)){if(p(y))return g0(new wl(function(){return new n(null,6,[is,is.m(c),Qr,jD.m(m),ro,jD.m(t),Ss,v,mz,!0,Nu,Nu.m(y)],null)})),p(H)&&Vs(OH,"gateway.domains.agm.calls",164,new wl(function(){return new Q(null,
    11,5,R,["agm","method",tw.m(v),"on server",jD.m(t),"yield success to",jD.m(m),"for request",f,"with large payload",H],null)}),-1234331707),Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.calls",170,new wl(function(){return new Q(null,4,5,R,["yield success to",k,"for request",f],null)}),-2061231507),new Q(null,2,5,R,[r,new Q(null,1,5,R,[S_(hz.m(m),f,k,Nu.m(y))],null)],null);g0(new wl(function(){return new n(null,6,[is,is.m(c),Qr,jD.m(m),ro,jD.m(t),Ss,v,mz,!1,Nu,xk(E,new Q(null,2,5,R,[eJ,qE],null))],
    null)}));Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.calls",182,new wl(function(){return new Q(null,4,5,R,["yield error to",k,"for request",f],null)}),-3601169);return new Q(null,2,5,R,[r,new Q(null,1,5,R,[rL.la("agm",hz.m(m),f,k,fL(E),ZH.m(E))],null)],null)}return new Q(null,2,5,R,[r,new Q(null,1,5,R,[qL(k0(YK(Hx.m(r)),b),new n(null,2,[U,Wp,Wp,li.gh(m,new Q(null,2,5,R,[hz,Wp],null))],null),d)],null)],null)}return null}
    function V0(a,b,c,d,e){var f=DT.gh(a,c),k=li.gh(f,new Q(null,3,5,R,[fp,Sw,b],null));return p(k)?(b=new Q(null,2,5,R,[NT(a,c,OK(f,new Q(null,3,5,R,[fp,Sw,b],null))),I],null),a=J(b,0,null),b=J(b,1,null),d=U0(a,c,k,d,e),c=J(d,0,null),d=J(d,1,null),new Q(null,2,5,R,[p(c)?c:a,Zf(d)||Uf(d)?fd.hh(Lh(Bf,I),b,d):null!=d?Lh(Bf,I)(b,d):b],null)):null}function W0(a,b,c,d,e,f){b=new n(null,6,[uq,"global",U,vv,is,b,jw,c,Rn,d,go,e],null);f=p(f)?K.hh(b,YH,f):b;return oL(a,f)}Z(Kz,yo,Uc);Z(tv,yo,Uc);Z(mC,cH,Yf);Z(Un,O(ut,ir,new Q(null,1,5,R,[mC],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[mC],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Fs)}],null),function(a){return M(a)&&N(a,Fs)},I,new Q(null,1,5,R,[mC],null),null,new Q(null,1,5,R,[Fs],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Fs))],null),null])));
    sT.v(null,QE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[iv,Rx,Un],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[iv,Rx,Un],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,ZA)},function(a){return N(a,jD)},function(a){return N(a,Lc)}],null),function(a){return M(a)&&N(a,ZA)&&N(a,jD)&&N(a,Lc)},I,new Q(null,3,5,R,[iv,Rx,Un],null),null,new Q(null,3,5,R,[ZA,jD,Lc],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ZA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Lc))],null),null]))],null),null)});Z(NF,EA,EA);
    sT.v(null,iE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[NF,Kz,tv],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[NF,Kz,tv],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,yJ)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,yJ)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[NF,Kz,tv],null),null,new Q(null,3,5,R,[yJ,qE,eJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,yJ)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});
    sT.v(null,OA,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,1,5,R,[eE],null),dA,new Q(null,2,5,R,[Kz,tv],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[eE],null),new Q(null,2,5,R,[Kz,tv],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Uw)}],null),function(a){return M(a)&&N(a,Uw)},new Q(null,2,5,R,[qE,eJ],null),new Q(null,1,5,R,[eE],null),null,new Q(null,1,5,R,[Uw],null),new Q(null,2,5,R,[Kz,tv],null),new Q(null,
    2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uw))],null),null]))],null),null)});Z(AG,new Ak(null,new n(null,4,[Uv,"null",PI,"null",Wp,"null",Fs,"null"],null),null),new Ak(null,new n(null,4,[Uv,null,PI,null,Wp,null,Fs,null],null),null));
    sT.v(null,eD,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[Dq,AG,lB],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Dq,AG,lB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Pu)},function(a){return N(a,jv)},function(a){return N(a,Uw)}],null),function(a){return M(a)&&N(a,Pu)&&N(a,jv)&&N(a,Uw)},I,new Q(null,3,5,R,[Dq,AG,lB],null),null,new Q(null,3,5,R,[Pu,jv,Uw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Pu)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jv)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uw))],null),null]))],null),null)});sT.v(null,fH,function(){return XS(new Q(null,2,5,R,[rs,Qt],null),new Q(null,2,5,R,[rs,Qt],null),null)});sT.v(null,st,function(){return XS(new Q(null,2,5,R,[rs,To],null),new Q(null,2,5,R,[rs,To],null),null)});sT.v(null,Ju,function(){return XS(new Q(null,2,5,R,[gG,FC],null),new Q(null,2,5,R,[gG,FC],null),null)});
    sT.v(null,Gr,function(){return XS(new Q(null,2,5,R,[gG,Uu],null),new Q(null,2,5,R,[gG,Uu],null),null)});
    sT.v(null,Cz,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,1,5,R,[DG],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[DG],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,aA)}],null),function(a){return M(a)&&N(a,aA)},I,new Q(null,1,5,R,[DG],null),null,new Q(null,1,5,R,[aA],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA))],null),null]))],null),
    null)});sT.v(null,JB,function(){return XS(new Q(null,2,5,R,[gG,qJ],null),new Q(null,2,5,R,[gG,qJ],null),null)});
    sT.v(null,Pw,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[DG,Kz,tv],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[DG,Kz,tv],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,aA)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[DG,Kz,tv],null),null,new Q(null,3,5,R,[aA,qE,eJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});sT.v(null,aw,function(){return XS(new Q(null,2,5,R,[gG,pG],null),new Q(null,2,5,R,[gG,pG],null),null)});sT.v(null,mt,function(){return XS(new Q(null,2,5,R,[gG,An],null),new Q(null,2,5,R,[gG,An],null),null)});sT.v(null,jx,function(){return XS(new Q(null,2,5,R,[gG,Bs],null),new Q(null,2,5,R,[gG,Bs],null),null)});
    sT.v(null,qG,function(){return XS(new Q(null,2,5,R,[gG,ar],null),new Q(null,2,5,R,[gG,ar],null),null)});Z(Tx,cH,Yf);
    sT.v(null,JA,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,5,5,R,[DG,Tx,lG,Tm,FF],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,5,5,R,[DG,Tx,lG,Tm,FF],null),null,null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,aA)},function(a){return N(a,NI)},function(a){return N(a,ZD)},function(a){return N(a,Kq)},function(a){return N(a,wn)}],null),function(a){return M(a)&&N(a,aA)&&N(a,NI)&&N(a,ZD)&&N(a,Kq)&&N(a,wn)},I,new Q(null,5,
    5,R,[DG,Tx,lG,Tm,FF],null),null,new Q(null,5,5,R,[aA,NI,ZD,Kq,wn],null),I,new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,aA)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,NI)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ZD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Kq)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn))],null),null]))],null),null)});sT.v(null,hw,function(){return XS(new Q(null,2,5,R,[gG,jq],null),new Q(null,2,5,R,[gG,jq],null),null)});
    sT.v(null,ID,function(){return XS(new Q(null,2,5,R,[gG,qw],null),new Q(null,2,5,R,[gG,qw],null),null)});sT.v(null,Jx,function(){return XS(new Q(null,2,5,R,[gG,qz],null),new Q(null,2,5,R,[gG,qz],null),null)});
    sT.v(null,Nu,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,1,5,R,[av],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[av],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Nu)}],null),function(a){return M(a)&&N(a,Nu)},I,new Q(null,1,5,R,[av],null),null,new Q(null,1,5,R,[Nu],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Nu))],null),null]))],null),
    null)});Z(Hv,yo,Uc);
    Z(qx,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[Rx],null),dA,new Q(null,1,5,R,[Hv],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[Rx],null),dA,new Q(null,1,5,R,[Hv],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[Rx],null),new Q(null,1,5,R,[Hv],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,jD)}],null),function(a){return M(a)&&N(a,jD)},new Q(null,1,5,R,[os],null),new Q(null,1,5,R,[Rx],null),null,new Q(null,1,5,R,[jD],
    null),new Q(null,1,5,R,[Hv],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD))],null),null]))],null),null));function X0(a,b,c){var d=FT(a,c,fp);return fd.hh(function(e,f){var k=J(e,0,null);J(e,1,null);var l=J(e,0,null);e=J(e,1,null);k=DT.gh(k,c);var m=jD.m(f),r=kJ.m(f),t=Cl(G([Vh.m(Pi),li.gh(f,new Q(null,3,5,R,[fp,Uw,r],null))])),v=kJ.m(k),y=GT(k),E=GT(f);m=y?Bf.gh(I,uL.la("agm",b,v,r,m,new n(null,1,[Fs,E],null))):I;r=E?Bf.gh(m,uL.la("agm",hz.m(f),r,v,jD.m(k),new n(null,1,[Fs,y],null))):m;k=O0(l,f,t,k);f=J(k,0,null);k=J(k,1,null);k=new Q(null,2,5,R,[f,p(k)?Bf.gh(r,k):r],null);f=J(k,0,null);k=J(k,1,null);
    return new Q(null,2,5,R,[p(f)?f:l,Zf(k)||Uf(k)?fd.hh(Lh(Bf,I),e,k):null!=k?Lh(Bf,I)(e,k):e],null)},new Q(null,2,5,R,[a,I],null),RT(a,fp,d,!1))}function Y0(a,b,c,d,e){e=fS(e);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.core",87,new wl(function(){return new Q(null,4,5,R,["peer",c,"joins with identity",d],null)}),-130194115);return X0(iL(a,c,fp,e),b,c)}
    function $0(a,b,c,d){var e=DT.gh(a,c),f=hz.m(e),k=function(){var m=new Q(null,2,5,R,[a,null],null),r=function(){var H=J(m,0,null),T=J(m,1,null),Y=T0(H,f,e,b),ia=J(Y,0,null);Y=J(Y,1,null);return new Q(null,2,5,R,[p(ia)?ia:H,Zf(Y)||Uf(Y)?fd.hh(Lh(Bf,I),T,Y):null!=Y?Lh(Bf,I)(T,Y):T],null)}(),t=function(){var H=J(r,0,null),T=J(r,1,null),Y=r0(H,e,b,null,N_),ia=J(Y,0,null);Y=J(Y,1,null);return new Q(null,2,5,R,[p(ia)?ia:H,Zf(Y)||Uf(Y)?fd.hh(Lh(Bf,I),T,Y):null!=Y?Lh(Bf,I)(T,Y):T],null)}(),v=J(t,0,null);
    t=J(t,1,null);var y=L0(v,kJ.m(b),c),E=J(y,0,null);y=J(y,1,null);return new Q(null,2,5,R,[p(E)?E:v,Zf(y)||Uf(y)?fd.hh(Lh(Bf,I),t,y):null!=y?Lh(Bf,I)(t,y):t],null)}(),l=J(k,0,null);k=J(k,1,null);return new Q(null,2,5,R,[l,tL(f)?Bf.gh(k,vL.K("agm",f,c,kJ.m(b),d)):k],null)}
    function a1(a,b,c){var d=kJ.m(b),e=ng(Vh.m(kJ),lg(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=$0(l,b,k,c);k=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(k)?k:l,Zf(m)||Uf(m)?fd.hh(Lh(Bf,I),f,m):null!=m?Lh(Bf,I)(f,m):f],null)},kg),o0(a,b,c),RT(a,fp,b,!1));a=J(e,0,null);e=J(e,1,null);Vs(mD,"GATEWAY_ACTION_LOG|agm|gateway.domains.agm.core",164,new wl(function(){return new Q(null,3,5,R,["peer",d,"leaves agm domain"],null)}),-1328637452);return new Q(null,2,5,R,[jL(a,d,fp),e],null)}
    function b1(a,b){Vs(uG,"gateway.domains.agm.core",199,new wl(function(){return new Q(null,1,5,R,["removing source from agm domain"],null)}),-1261336545);b=Bh(KT(a,b,fp));a=ng(Vh.m(kJ),lg(function(c,d){return jL(c,d,fp)},kg),a,b);a=fd.hh(function(c,d){var e=J(c,0,null);c=J(c,1,null);var f=a1(e,d,N_);d=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(d)?d:e,Zf(f)||Uf(f)?fd.hh(Lh(Bf,I),c,f):null!=f?Lh(Bf,I)(c,f):c],null)},new Q(null,2,5,R,[a,null],null),b);Vs(uG,"gateway.domains.agm.core",210,new wl(function(){return new Q(null,
    1,5,R,["removed source from agm domain"],null)}),1407940142);return a}function c1(a,b,c){c=Ea(c);var d=x.gh(c,jw);c=x.gh(c,is);var e=FT(a,d,fp);e=Mi(hi(Vh.gh(function(f){f=Ea(f);var k=x.gh(f,kJ),l=DT.gh(a,d);k=mj(li.gh(f,new Q(null,3,5,R,[fp,Uw,k],null)));return Q0(f,k,l)},ei.gh(GT,RT(a,fp,e,!1)))));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[oL(b,new n(null,4,[Uw,e,is,c,U,Uw,jw,d],null))],null)],null)}
    var d1=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.agm.core","handle-request"),function(f,k,l){return U.m(l)},e,a,b,c,d)}();
    d1.v(null,qH,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw),k=x.gh(d,jD);d=x.gh(d,os);if(p(kL(a,f,fp)))a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[sL.A("agm",b,e,f)],null)],null);else {d=Y0(a,b,f,k,d);k=J(d,0,null);d=J(d,1,null);var l=DT.gh(k,f),m=R,r=Bf.g;b=sL.A("agm",b,e,f);a=k0(YK(Hx.m(a)),f);c=K.hh(c,U,ds);c=p(YH.m(l))?K.hh(c,YH,YH.m(l)):c;a=new Q(null,2,5,m,[k,r.call(Bf,d,b,G([pL(a,c)]))],null);}}else k=Ea(c),c=x.gh(k,jw),f=x.gh(k,jD),k=x.gh(k,os),a=p(kL(a,c,fp))?null:Y0(a,b,c,f,k);
    return a});d1.v(null,IF,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=a1(a,ET(a,d),fL(c)),k=J(f,0,null);f=J(f,1,null);a=new Q(null,2,5,R,[k,Bf.g(f,sL.A("agm",b,e,d),G([pL(k0(YK(Hx.m(a)),d),K.hh(c,U,Yt))]))],null);}else b=Ea(c),b=x.gh(b,jw),b=DT.gh(a,b),a=p(b)?a1(a,b,fL(c)):null;return a});
    d1.v(null,aw,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);d=x.gh(d,Uw);var k=P0(a,c);a=J(k,0,null);k=J(k,1,null);b=new Q(null,2,5,R,[a,Bf.g(k,Q_(b,f,f,d,Fs),G([sL.A("agm",b,e,f),pL(k0(YK(Hx.m(a)),f),c)]))],null);}else b=P0(a,c);return b});d1.v(null,mt,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);d=x.gh(d,Uw);var k=N0(a,c),l=J(k,0,null);k=J(k,1,null);a=new Q(null,2,5,R,[l,Bf.g(k,R_(b,f,f,d),G([sL.A("agm",b,e,f),pL(k0(YK(Hx.m(a)),f),c)]))],null);}else a=N0(a,c);return a});
    d1.v(null,hw,function(a,b,c){if(tL(b)){b=Ea(c);x.gh(b,is);var d=x.gh(b,jw);b=x.gh(b,Pu);b=FT(a,b,fp);d=FT(a,d,fp);var e=ZK(Hx.m(a)),f=J(e,0,null);e=J(e,1,null);V_(d,b,c);a=S0(K.hh(a,Hx,f),c,e,b,d);}else f=Ea(c),x.gh(f,is),b=x.gh(f,jw),d=x.gh(f,Pu),f=x.gh(f,mu),d=DT.hh(a,d,fp),a=GT(d)?S0(a,c,f,d,FT(a,b,fp)):null;return a});d1.v(null,Jx,function(a,b,c){tL(b);var d=Ea(c);b=x.gh(d,mu);d=x.gh(d,jw);FT(a,d,fp);return V0(a,b,d,c,new n(null,1,[mz,c],null))});
    d1.v(null,Ju,function(a,b,c){if(tL(b)){var d=ZK(Hx.m(a));b=J(d,0,null);d=J(d,1,null);a=t0(K.hh(a,Hx,b),c,d);}else d=Ea(c),b=x.gh(d,aA),d=x.gh(d,Pu),a=p(DT.gh(a,d))?t0(a,c,b):null;return a});d1.v(null,aH,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);d=x.gh(d,aA);c=G0(a,c,f,d,e);a=J(c,0,null);c=J(c,1,null);a=new Q(null,2,5,R,[a,Bf.gh(c,sL.A("agm",b,e,f))],null);}else f=Ea(c),b=x.gh(f,is),e=x.gh(f,jw),f=x.gh(f,aA),a=G0(a,c,e,f,b);return a});
    d1.v(null,JB,function(a,b,c){return E0(a,b,c,!1)});d1.v(null,Gr,function(a,b,c){tL(b)?(b=Ea(c),x.gh(b,aA),b=x.gh(b,jw),b=FT(a,b,fp),a=w0(a,b,c)):a=x0(a,c);return a});d1.v(null,qG,function(a,b,c){return I0(a,c)});d1.v(null,jx,function(a,b,c){return UA(a,c)});d1.v(null,DA,function(a,b,c){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);ET(a,d);e=V0(a,e,d,c,new n(null,1,[fC,c],null));return p(e)?e:E0(a,b,c,!0)});d1.v(null,Iz,function(a,b){return b1(a,b)});d1.v(null,Vz,function(a,b,c){return c1(a,b,c)});
    d1.v(null,dm,function(a,b,c){Vs(DA,"gateway.domains.agm.core",304,new wl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),-30280511);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("agm",b,is.gh(c,-1),jw.m(c),gL("agm.errors.unhandled_message",["Unhandled message ",q.m(c)].join("")))],null)],null)});
    function e1(a,b){var c=Ea(b),d=x.gh(c,hz);c=x.gh(c,Sv);try{return d1.hh(a,d,c)}catch(f){var e=f;p(jm(e))||Vs(DA,"gateway.domains.agm.core",321,new wl(function(){return new Q(null,3,5,R,[e,"Error handling request",b],null)}),-1727101870);return tL(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("agm",d,is.m(c),jw.m(c),dL(e,"agm.errors.failure"))],null)],null):null}}function f1(){}f1.prototype.Yc=function(){return new n(null,3,[Vv,"agm",Pn,"",In,1],null)};f1.prototype.Zc=function(a,b){return b};
    f1.prototype.Wc=function(a,b){return b};f1.prototype.Xc=function(a,b,c){return e1(b,c)};var g1=cL("activity.peer-removed","Peer has been removed"),h1=cL("activity.destroyed","Activity destroyed");function aB(a,b,c){return new n(null,6,[uq,"activity",U,vG,jw,a,Yy,b,qE,Vv.m(c),eJ,tr.m(c)],null)}function j1(a,b){return new n(null,4,[uq,"activity",U,Ap,jw,a,ZE,b],null)}function k1(a,b,c,d){return oL(a,new n(null,5,[uq,"activity",U,rr,is,b,jw,c,Zr,d],null))}var l1=function l1(a){return ii.gh(S,Vh.gh(function(c){var d=J(c,0,null);c=J(c,1,null);return new Q(null,2,5,R,[d,oi(oi(c,ZH,wn),SC,l1)],null)},a))};function m1(a,b){a=DT.gh(a,b);return new n(null,3,[jw,b,tw,Ru.m(a),U,DH.m(a)],null)}
    function rB(a,b,c,d){var e=SC.m(c),f=Ru.m(b),k=DH.m(b);a=Wj([fs,jn,U,jw,pE,RB,uq,Bt,Zr,jA],[ji.gh(Ih(m1,a),tG.m(c)),jn.m(c),Ox,kJ.m(b),U.m(c),d,"activity",Yo.m(c),kJ.m(c),m1(a,jA.m(c))]);f=p(f)?K.hh(a,Ru,f):a;k=p(k)?K.hh(f,DH,k):f;return p(e)?K.hh(k,SC,l1(e)):k}
    var o1=function o1(a){switch(arguments.length){case 4:return o1.A(arguments[0],arguments[1],arguments[2],arguments[3]);case 3:return o1.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};o1.A=function(a,b,c,d){return oL(b,o1.hh(a,c,d))};
    o1.hh=function(a,b,c){var d=SC.m(c);a=Wj([fs,jn,U,jw,pE,uq,Bt,Zr,jA],[ji.gh(Ih(m1,a),VT(fs.m(c),tG.m(c))),jn.m(c),VH,b,U.m(c),"activity",Yo.m(c),kJ.m(c),m1(a,jA.m(c))]);return p(d)?K.hh(a,SC,l1(d)):a};o1.F=4;var p1=Ih(sL,"activity"),q1=Ih(rL,"activity");function r1(a,b,c){return fd.hh(function(d,e){e=new Q(null,2,5,R,[VF,e],null);return mi(d,e,Bf.gh(li.hh(d,e,I),c))},a,b)}function s1(a,b,c){return p(function(){var d=B(b);return d?c:d}())?fd.hh(function(d,e){e=new Q(null,2,5,R,[VF,e],null);var f=TK(c,li.hh(d,e,null));return B(f)?mi(d,e,f):OK(d,e)},a,b):a}function t1(a,b){return p(b)?li.gh(a,new Q(null,2,5,R,[vs,b],null)):null}function u1(a,b,c){return p(b)?mi(a,new Q(null,2,5,R,[vs,b],null),c):a}
    function v1(a,b){return li.gh(a,new Q(null,2,5,R,[Vr,b],null))}function w1(a,b,c){return fd.hh(function(d,e){return mi(d,new Q(null,3,5,R,[Vr,b,tw.m(e)],null),e)},a,c)}function x1(a,b,c){return fd.hh(function(d,e){return OK(d,new Q(null,3,5,R,[Vr,b,e],null))},a,c)}function y1(a,b){return VT(li.gh(a,new Q(null,2,5,R,[BF,b],null)),li.gh(a,new Q(null,2,5,R,[BF,sC],null)))}function z1(a,b,c){return ni.A(a,new Q(null,2,5,R,[BF,c],null),Lh(Bf,Ck),b)}
    function A1(a,b,c){return ni.A(a,new Q(null,2,5,R,[BF,c],null),Nf,b)}function B1(a,b){return p(b)?(a=t1(a,b),p(a)?a:eL("activity.errors.invalid_activity",["Unable to find activity with id ",q.m(b)].join(""))):null}function C1(a,b){return mi(a,new Q(null,2,5,R,[Zn,kJ.m(b)],null),b)}function D1(a,b){return p(b)?li.gh(a,new Q(null,2,5,R,[Zn,b],null)):null}function E1(a,b,c){if(p(p(b)?c:b)){var d=x.gh(b,nD);return N(d,c)?a:mi(a,new Q(null,2,5,R,[Zn,kJ.m(b)],null),pi(b,nD,Lh(Bf,Ck),c))}return a}function F1(a,b,c){var d=pi(b,nD,Nf,c);c=A.gh(c,jA.m(d))?Gf.gh(d,jA):d;return new Q(null,2,5,R,[mi(a,new Q(null,2,5,R,[Zn,kJ.m(b)],null),c),c],null)}
    var G1=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.global.state","apply-command"),function(f,k){return C(k)},e,a,b,c,d)}();G1.v(null,Hr,function(a,b){J(b,0,null);b=J(b,1,null);return B(b)?fh(Gf,a,b):a});G1.v(null,Lv,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?jg(K,a,b):a});
    G1.v(null,wA,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?jg(function(c,d,e){return oi(c,d,function(f){return Uf(e)||Zf(e)||Uf(f)||Zf(f)?e:Rf(e)&&Rf(f)?vk.g(G([f,e])):e})},a,b):a});G1.v(null,wq,function(a,b){J(b,0,null);b=J(b,1,null);return p(b)?b:a});G1.v(null,dm,function(a,b){var c=J(b,0,null),d=J(b,1,null);Vs(OH,"gateway.domains.global.state",101,new wl(function(){return new Q(null,4,5,R,["ignoring unknown context delta command",c,"with payload",d],null)}),-1927171050);return a});function H1(a,b,c){var d=Nl(DH,c);return r1(NT(a,kJ.m(b),ni.hh(b,new Q(null,2,5,R,[Yx,VF],null),Lh(function(e){return jg(function(f,k,l){return K.hh(f,k,C(l))},e,d)},S))),lj(d),kJ.m(b))}function I1(a,b,c){return ji.gh(function(d){var e=hz.m(d);d=kJ.m(d);var f=kJ.m(b);return oL(e,new n(null,5,[uq,"activity",U,zH,jw,d,hA,f,VF,c],null))},RT(a,Yx,b,!1))}
    function J1(a,b,c,d){var e=kJ.m(b);return ki(Tc,Vh.gh(function(f){if(p(p(d)?d:jh.gh(e,kJ.m(f)))){var k=hz.m(f);f=kJ.m(f);var l=Mi(c);k=oL(k,new n(null,5,[uq,"activity",U,pI,jw,f,hA,e,$w,l],null));}else k=null;return k},RT(a,Yx,b,!1)))}var K1=function K1(a){switch(arguments.length){case 2:return K1.gh(arguments[0],arguments[1]);case 3:return K1.hh(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    K1.gh=function(a,b){return ki(Tc,Vh.gh(Jh(K1,a,b),ei.gh(Jh(PT,Yx,b),Vh.gh(Ih(DT,a),Ek(hi(mj(x.gh(a,VF))))))))};K1.hh=function(a,b,c){var d=mj(li.gh(c,new Q(null,2,5,R,[Yx,VF],null)));p(d)?(a=hz.m(b),b=kJ.m(b),c=kJ.m(c),d=Mi(d),a=oL(a,new n(null,5,[uq,"activity",U,zH,jw,b,hA,c,VF,d],null))):a=null;return a};K1.F=3;
    function L1(a,b){b=DH.m(b);p(li.gh(a,new Q(null,3,5,R,[Yx,VF,b],null)))&&eL("activity.errors.factory_already_registered",["Factory for type ",q.m(b)," is already registered by this peer"].join(""));}function M1(a,b){return UK(function(c){return A.gh(kJ.m(c),b)},mj(a))}
    function N1(a,b){var c=li.gh(a,new Q(null,2,5,R,[Yx,VF],null));b=fd.hh(function(d,e){var f=J(d,0,null);d=J(d,1,null);e=M1(c,e);return p(e)?new Q(null,2,5,R,[OK(f,new Q(null,3,5,R,[Yx,VF,DH.m(e)],null)),Bf.gh(d,e)],null):new Q(null,2,5,R,[f,d],null)},new Q(null,2,5,R,[a,Ck],null),b);a=J(b,0,null);b=J(b,1,null);return new Q(null,2,5,R,[VK(a,Yx),b],null)}
    function O1(a,b,c,d,e,f,k,l){f=p(f)?K.hh(S,Tr,new n(null,4,[kJ,kJ.m(f),U,U.m(f),Bt,kJ.m(k),SF,wn.m(k)],null)):S;l=p(l)?K.hh(f,Ru,l):f;f=hz.m(a);a=kJ.m(a);k=kJ.m(b);b=vk.g(G([IH.m(b),c]));return oL(f,vk.g(G([new n(null,7,[uq,"activity",U,Lr,is,e,jw,a,bx,k,IG,d,IH,b],null),l])))}function P1(a,b,c){var d=DT.gh(a,jw.m(c));return p(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[q1(hz.m(d),is.m(c),kJ.m(d),b)],null)],null):new Q(null,2,5,R,[a,null],null)}
    function Q1(a,b,c){a=DT.gh(a,p(b)?b:C(li.gh(a,new Q(null,2,5,R,[VF,c],null))));b=li.gh(a,new Q(null,3,5,R,[Yx,VF,c],null));return p(b)?new Q(null,2,5,R,[a,b],null):eL("activity.errors.missing_factory",["Unable to find factory owner for type ",q.m(c)].join(""))}
    function R1(a,b,c,d,e,f,k){var l=Q1(a,null,U.m(c)),m=J(l,0,null);l=J(l,1,null);var r=ET(a,b),t=ZK(Hx.m(a));b=J(t,0,null);t=J(t,1,null);f=new n(null,4,[U,Tr,kJ,t,DH,U.m(c),Tr,new n(null,2,[kJ,kJ.m(d),uy,f],null)],null);c=p(tw.m(c))?K.hh(f,Ru,tw.m(c)):f;f=jD.m(r);f=l_(a,f,c);a=lL(K.hh(a,Hx,b),t,c);return new n(null,3,[Nz,a,au,new Q(null,1,5,R,[O1(m,l,k,f,t,d,e,null)],null),PG,t],null)}function S1(a){return mj(li.gh(a,new Q(null,1,5,R,[Zn],null)))}
    function T1(a,b,c){var d=function(){var k=null==c?null:jD.m(c);return null==k?null:ct.m(k)}(),e=function(){var k=null==c?null:YH.m(c);return null==k?null:ko.m(k)}();a=mj(Zn.m(a));var f=fd.hh(function(k,l){if(k=A.gh(b,tw.m(l))){k=A;var m=k.gh;var r=null==l?null:jD.m(l);r=null==r?null:ct.m(r);k=m.call(k,d,r);}return k?af(l):null},null,a);return p(f)?f:fd.hh(function(k,l){return p(function(){var m=A.gh(b,tw.m(l));if(m){if(p(e))return e;m=null==l?null:YH.m(l);return null==m?null:ko.m(m)}return m}())?af(l):
    null},null,a)}function U1(a,b){a=li.gh(a,new Q(null,2,5,R,[Zn,b],null));if(p(a))return a;throw hm(["Unable to find context with id ",q.m(b)].join(""),S);}function V1(a,b,c){if(p(p(b)?c:b)){var d=x.gh(b,nD);return N(d,c)?a:mi(a,new Q(null,2,5,R,[Zn,kJ.m(b)],null),pi(b,nD,Lh(Bf,Ck),c))}return a}var IB=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.common.context.state","apply-delta-cmd"),function(f,k){return C(k)},e,a,b,c,d)}();
    IB.v(null,Hr,function(a,b){J(b,0,null);b=J(b,1,null);return B(b)?fh(Gf,a,b):a});IB.v(null,Lv,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?jg(K,a,b):a});IB.v(null,wA,function(a,b){J(b,0,null);b=J(b,1,null);return null!=b?jg(function(c,d,e){return oi(c,d,function(f){return Uf(e)&&Uf(f)?e:Rf(e)&&Rf(f)?vk.g(G([f,e])):e})},a,b):a});IB.v(null,wq,function(a,b){J(b,0,null);b=J(b,1,null);return p(b)?b:a});
    var W1=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.common.context.state","apply-command"),function(f,k){return Jg.m(U.m(k))},e,a,b,c,d)}(),dC=function dC(a,b,c){var e=B(b);b=C(e);var f=D(e);if(null==b)a=c;else if(f){e=K.hh;var k=x.gh(a,b);k=null!=k&&M(k)?k:S;c=dC.hh?dC.hh(k,f,c):dC.call(null,k,f,c);a=e.call(K,a,b,c);}else a=K.hh(a,b,c);return a};
    W1.v(null,tA,function(a,b){var c=Ea(b);b=x.gh(c,Xa);c=x.gh(c,Mb);a=p(a)?a:S;c=dc(null==c?"":String(c))?null:OL(c,/\./,0);return dC(a,c,b)});W1.v(null,Wa,function(a,b){b=Ea(b);b=x.gh(b,Mb);b=dc(null==b?"":String(b))?null:OL(b,/\./,0);return null==b?S:OK.g(a,b,G([new n(null,1,[Ya,!0],null)]))});IB.v(null,Sa,function(a,b){J(b,0,null);b=J(b,1,null);return fd.hh(function(c,d){return W1.gh(c,WK(d))},a,b)});
    IB.v(null,dm,function(a,b){var c=J(b,0,null),d=J(b,1,null);Vs(OH,"gateway.common.context.state",154,new wl(function(){return new Q(null,4,5,R,["ignoring unknown context delta command",c,"with payload",d],null)}),-1055095478);return a});function X1(a,b,c,d){var e=kJ.m(b),f=new Q(null,3,5,R,[Zn,e,wn],null),k=fd,l=k.hh;b=wn.m(b);return mi(mi(a,f,l.call(k,IB,p(b)?b:S,c)),new Q(null,3,5,R,[Zn,e,In],null),d)}
    function Y1(a,b,c,d,e,f,k){var l=new n(null,2,[ub,0,Va,(new Date).getTime()],null),m=jD.m(a),r=YH.m(a);a=Wj([Xs,jD,Rb,tw,cz,kJ,Uz,nD,In,wn],[f,m,kJ.m(a),b,e,k,d,Ck,l,c]);return p(r)?K.hh(a,YH,r):a}function Z1(a,b,c,d,e,f,k){this.id=a;this.type=b;this.ac=c;this.bb=d;this.$=e;this.j=f;this.B=k;this.h=2230716170;this.I=139264;}g=Z1.prototype;g.ia=function(a,b){return this.M(null,b,null)};g.M=function(a,b,c){switch(b instanceof z?b.da:null){case "id":return this.id;case "type":return this.type;case "context-id":return this.ac;case "initiator":return this.bb;default:return x.hh(this.j,b,c)}};
    g.Aa=function(a,b,c){return fd.hh(function(d,e){var f=J(e,0,null);e=J(e,1,null);return b.hh?b.hh(d,f,e):b.call(null,d,f,e)},c,this)};g.S=function(a,b,c){return Zk(b,function(d){return Zk(b,gl,""," ","",c,d)},"#gateway.domains.activity.activity.Activity{",", ","}",c,Wg.gh(new Q(null,4,5,R,[new Q(null,2,5,R,[kJ,this.id],null),new Q(null,2,5,R,[U,this.type],null),new Q(null,2,5,R,[Yo,this.ac],null),new Q(null,2,5,R,[jn,this.bb],null)],null),this.j))};
    g.ua=function(){return new fj(this,4,new Q(null,4,5,R,[kJ,U,Yo,jn],null),p(this.j)?ye(this.j):lh())};g.N=function(){return this.$};g.X=function(){return 4+F(this.j)};g.Z=function(){var a=this.B;return null!=a?a:this.B=a=246370226^Xe(this)};g.Y=function(a,b){return null!=b&&this.constructor===b.constructor&&A.gh(this.id,b.id)&&A.gh(this.type,b.type)&&A.gh(this.ac,b.ac)&&A.gh(this.bb,b.bb)&&A.gh(this.j,b.j)};
    g.Ka=function(a,b){return N(new Ak(null,new n(null,4,[jn,null,U,null,kJ,null,Yo,null],null),null),b)?Gf.gh(Od(ii.gh(S,this),this.$),b):new Z1(this.id,this.type,this.ac,this.bb,this.$,kh(Gf.gh(this.j,b)),null)};g.La=function(a,b){switch(b instanceof z?b.da:null){case "id":case "type":case "context-id":case "initiator":return !0;default:return N(this.j,b)}};
    g.fa=function(a,b,c){return p(P.gh?P.gh(kJ,b):P.call(null,kJ,b))?new Z1(c,this.type,this.ac,this.bb,this.$,this.j,null):p(P.gh?P.gh(U,b):P.call(null,U,b))?new Z1(this.id,c,this.ac,this.bb,this.$,this.j,null):p(P.gh?P.gh(Yo,b):P.call(null,Yo,b))?new Z1(this.id,this.type,c,this.bb,this.$,this.j,null):p(P.gh?P.gh(jn,b):P.call(null,jn,b))?new Z1(this.id,this.type,this.ac,c,this.$,this.j,null):new Z1(this.id,this.type,this.ac,this.bb,this.$,K.hh(this.j,b,c),null)};
    g.bi=function(){return B(Wg.gh(new Q(null,4,5,R,[new Fi(kJ,this.id),new Fi(U,this.type),new Fi(Yo,this.ac),new Fi(jn,this.bb)],null),this.j))};g.O=function(a,b){return new Z1(this.id,this.type,this.ac,this.bb,b,this.j,this.B)};g.ga=function(a,b){return Uf(b)?this.fa(null,pd(b,0),pd(b,1)):fd.hh(nd,this,b)};
    function a2(a,b,c){var d=$K(Hx.m(a)),e=J(d,0,null);d=J(d,1,null);c=Y1(c,d,Wq.m(b),Tr,cz.m(b),Xs.m(b),d);var f=Qq.gh(e,1);var k=["a-",q.m(Wy.m(e)),"-",q.m(f)].join("");f=new Q(null,2,5,R,[K.hh(e,Qq,f+1),k],null);e=J(f,0,null);f=J(f,1,null);k=K.hh;var l=pE.m(b),m=jw.m(b);b=k.call(K,new Z1(f,l,d,m,null,null,null),en,b);return new Q(null,3,5,R,[K.hh(a,Hx,e),b,c],null)}function b2(a,b,c){return ii.hh(I,Hh.gh(ei.m(function(d){return A.gh(b,li.gh(d,new Q(null,2,5,R,[jD,ct],null)))}),Vh.m(function(d){var e=hz.m(d);d=kJ.m(d);return oL(e,j1(d,c))})),HT(a,Yx))}function c2(a,b,c){return ii.hh(I,Hh.gh(ei.m(function(d){return A.gh(b,li.gh(d,new Q(null,2,5,R,[jD,ct],null)))}),Vh.m(function(d){var e=hz.m(d);d=kJ.m(d);return oL(e,new n(null,4,[uq,"activity",U,nF,jw,d,ZE,c],null))})),HT(a,Yx))}
    function e2(a,b,c){a=x.gh(v1(a,li.gh(b,new Q(null,2,5,R,[jD,ct],null))),c);return p(a)?a:eL("activity.errors.missing_type",["Unable to find activity type ",q.m(c)].join(""))}function f2(a,b){var c=IH.m(a);return vk.g(G([c,x.gh(b,new n(null,1,[U,U.m(a)],null)),x.gh(b,new n(null,2,[U,U.m(a),tw,tw.m(a)],null))]))}
    function g2(a,b,c,d,e){a=Ea(a);var f=x.gh(a,Nz),k=x.gh(a,Tr);b=R1(f,c,b,k,d,!0,f2(b,e));return PK(QK(K.hh(a,Nz,Nz.m(b)),new Q(null,1,5,R,[au],null),au.m(b)),new Q(null,2,5,R,[Tr,WB],null),G([PG.m(b)]))}
    function h2(a,b,c,d,e){a=Ea(a);x.gh(a,Nz);var f=x.gh(a,Tr);return fd.hh(function(k,l){try{var m=R1(Nz.m(k),c,l,Tr.m(k),d,!1,f2(l,e)),r=Ea(m),t=x.gh(r,Nz),v=x.gh(r,au),y=x.gh(r,PG);return PK(QK(K.hh(k,Nz,t),new Q(null,1,5,R,[au],null),v),new Q(null,2,5,R,[Tr,WB],null),G([y]))}catch(H){var E=H;Vs(OH,"gateway.domains.activity.activities",157,new wl(function(){return new Q(null,5,5,R,[E,"Unable to create helper type",l,"for activity",kJ.m(f)],null)}),789428064);return k}},a,b)}
    function i2(a,b,c,d){var e=Ea(c),f=x.gh(e,is);e=x.gh(e,jw);var k=FT(a,e,Yx),l=pE.m(c),m=e2(a,k,l);d=ii.gh(S,Vh.gh(function(t){return new Q(null,2,5,R,[xk(t,new Q(null,2,5,R,[U,tw],null)),IH.m(t)],null)},d));var r=mx.m(c);p(p(r)?!Of(d):r)&&eL("activity.errors.activity_is_child","Cannot specify types override and custom configuration at the same time");a=a2(a,c,k);c=J(a,0,null);k=J(a,1,null);a=J(a,2,null);b=h2(g2(new n(null,3,[Nz,c,au,new Q(null,1,5,R,[k1(b,f,e,kJ.m(k))],null),Tr,k],null),function(){var t=
    nH.m(r);return p(t)?t:nH.m(m)}(),e,a,d),function(){var t=XF.m(r);return p(t)?t:XF.m(m)}(),e,a,d);e=Ea(b);f=x.gh(e,Nz);b=x.gh(e,au);e=x.gh(e,Tr);f=u1(C1(f,a),kJ.m(e),e);return new Q(null,2,5,R,[f,b],null)}function j2(a,b,c){var d=kJ.m(c);return N(tG.m(a),d)||N(fs.m(a),d)||A.gh(jA.m(a),d)?!0:PT.la(jD.m(b),cz.m(a),li.gh(b,new Q(null,2,5,R,[YH,ko],null)),jD.m(c),null,li.gh(c,new Q(null,2,5,R,[YH,ko],null)))}
    function k2(a,b,c){var d=jA.m(b),e=tG.m(b);return ji.gh(function(f){var k=hz.m(f);return oL(k,rB(a,f,b,c))},ei.gh(Tc,Vh.gh(function(f){return DT.gh(a,f)},Bf.gh(e,d))))}function m2(a,b,c,d){var e=ei.gh,f=Jh(j2,c,d),k=Vh.gh,l=Ih(DT,a),m=fi.gh;b=Ih(A,b);a=y1(a,U.m(c));p(!0)?(d=kJ.m(d),c=WT(Dk([d]),x.hh(c,fs,Ck),G([x.gh(c,tG)]))):c=null;return e.call(ei,f,k.call(Vh,l,m.call(fi,b,VT(a,c))))}
    function n2(a,b){var c=U.m(b),d=DT.gh(a,jA.m(b));return ji.gh(function(e){return o1.A(a,hz.m(e),kJ.m(e),b)},ei.gh(function(e){return j2(b,d,e)},Vh.gh(Ih(DT,a),y1(a,c))))}function o2(a,b,c,d){return p(Fo.m(b))?(c=DT.gh(a,c),ji.gh(function(e){var f=hz.m(e);e=kJ.m(e);var k=kJ.m(b);e=new n(null,6,[uq,"activity",U,Cw,jw,e,Zr,k,qE,Vv.m(d),eJ,tr.m(d)],null);return oL(f,e)},m2(a,null,b,c))):null}
    function p2(a,b,c){if(p(Fo.m(b))){var d=kJ.m(c);return ji.gh(function(e){var f=hz.m(e),k=kJ.m(e),l=kJ.m(b),m=Ru.m(c);e=DH.m(c);k=new n(null,5,[uq,"activity",U,iF,jw,k,Zr,l,hA,kJ.m(c)],null);m=p(m)?K.hh(k,Ru,m):k;e=p(e)?K.hh(m,DH,e):m;return oL(f,e)},m2(a,d,b,c))}return null}
    function q2(a,b,c,d){var e=kJ.m(b);return ji.gh(function(f){var k=hz.m(f),l=kJ.m(f),m=kJ.m(c);f=Ru.m(b);l=new n(null,6,[uq,"activity",U,VC,jw,l,Zr,m,nv,kJ.m(b),Gy,DH.m(b)],null);f=p(f)?K.hh(l,Vx,f):l;return oL(k,f)},m2(a,e,c,d))}function r2(a,b,c,d){var e=DT.gh(a,jA.m(c));return ji.gh(function(f){var k=hz.m(f);f=kJ.m(f);var l=kJ.m(c);f=new n(null,7,[uq,"activity",U,kn,jw,f,Zr,l,hu,b,qE,Vv.m(d),eJ,tr.m(d)],null);return oL(k,f)},m2(a,b,c,e))}
    function s2(a,b,c){var d=kJ.m(c),e=Yo.m(b);e=D1(a,e);b=pi(b,tG,Lh(Bf,Ck),d);if(p(Fo.m(b))){var f=jA.m(b),k=DT.gh(a,f);f=Bf.gh;k=q2(a,c,b,k);var l=hz.m(c),m=wn.m(e);c=oL(l,rB(a,c,b,m));c=f.call(Bf,k,c);}else c=null;return new n(null,3,[Nz,E1(a,e,d),Tr,b,au,c],null)}function t2(a){return VK(OK(OK(a,new Q(null,2,5,R,[Yx,YI],null)),new Q(null,2,5,R,[Yx,jA],null)),Yx)}
    function u2(a,b,c){return fd.hh(function(d,e){var f=J(d,0,null);d=J(d,1,null);var k=DT.gh(f,e);if(p(k)){var l=R;f=NT(f,e,t2(k));var m=Bf.gh;k=hz.m(k);e=oL(k,aB(e,null,c));e=new Q(null,2,5,l,[f,m.call(Bf,d,e)],null);}else e=new Q(null,2,5,R,[f,d],null);return e},new Q(null,2,5,R,[a,I],null),b)}function v2(a,b){return fd.hh(function(c,d){return C(mL(c,d))},a,WB.m(b))}
    function w2(a,b,c){var d=en.m(b),e=jA.m(b);kJ.m(b);var f=R;a=v2(a,b);var k=kJ.m(b);a=OK(a,new Q(null,2,5,R,[vs,k],null));k=Yo.m(b);a=OK(a,new Q(null,2,5,R,[Zn,k],null));a=new Q(null,2,5,f,[a,null],null);f=J(a,0,null);a=J(a,1,null);var l=u2(f,WT(Dk([e]),fs.m(b),G([tG.m(b)])),c);k=J(l,0,null);l=J(l,1,null);a=new Q(null,2,5,R,[p(k)?k:f,Zf(l)||Uf(l)?fd.hh(Lh(Bf,I),a,l):null!=l?Lh(Bf,I)(a,l):a],null);f=J(a,0,null);a=J(a,1,null);e=new Q(null,2,5,R,[f,o2(f,b,e,c)],null);b=J(e,0,null);e=J(e,1,null);e=new Q(null,
    2,5,R,[p(b)?b:f,Zf(e)||Uf(e)?fd.hh(Lh(Bf,I),a,e):null!=e?Lh(Bf,I)(a,e):a],null);b=J(e,0,null);e=J(e,1,null);f=p(d)?DT.gh(b,jw.m(d)):d;return p(f)?new Q(null,2,5,R,[b,Bf.gh(e,q1(hz.m(f),is.m(d),jw.m(d),c))],null):new Q(null,2,5,R,[b,e],null)}function x2(a,b){p(uy.m(b))?(b=t1(a,kJ.m(b)),a=w2(a,b,cL("activity.errors.owner_creation","Activity owner cannot be created"))):a=new Q(null,2,5,R,[a,null],null);return a}function y2(a,b){var c=p(fs.m(a))?pi(a,fs,Nf,b):a;return p(tG.m(a))?pi(c,tG,Nf,b):c}
    function z2(a,b,c,d){Vs(uG,"gateway.domains.activity.activities",563,new wl(function(){return new Q(null,5,5,R,["a participant",kJ.m(c),"of activity",kJ.m(b),"has left"],null)}),1792100866);var e=kJ.m(c),f=y2(b,e),k=kJ.m(f);d=r2(a,e,f,d);return new n(null,3,[Nz,C(F1(u1(NT(a,e,t2(c)),k,f),D1(a,Yo.m(f)),e)),Tr,f,au,d],null)}
    function A2(a,b,c,d,e){var f=kJ.m(c);Vs(uG,"gateway.domains.activity.activities",583,new wl(function(){return new Q(null,5,5,R,["the owner",f,"of activity",kJ.m(b),"has left"],null)}),84038429);if(p(e))return w2(NT(a,f,t2(c)),b,d);a=z2(a,b,c,d);c=Ea(a);a=x.gh(c,Nz);c=x.gh(c,au);return new Q(null,2,5,R,[a,c],null)}
    function B2(a,b,c,d,e,f){a=B(e)?fd.hh(function(k,l){return f.hh?f.hh(k,d,l):f.call(null,k,d,l)},a,fi.gh(Pc,e)):f.hh?f.hh(a,d,sC):f.call(null,a,d,sC);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[p1(b,c,d)],null)],null)}function C2(a,b,c){c=Ea(c);var d=x.gh(c,is),e=x.gh(c,jw),f=x.gh(c,ip);c=FT(a,e,Yx);b=B2(a,b,d,e,f,z1);a=J(b,0,null);b=J(b,1,null);d=ei.gh(Fo,mj(x.gh(a,vs)));return new Q(null,2,5,R,[a,ii.gh(b,ji.gh(Kh(o1,a,hz.m(c),kJ.m(c)),B(f)?ei.gh(function(k){return N(f,U.m(k))},d):d))],null)}function D2(a,b,c,d,e){return oL(b,new n(null,5,[uq,a,U,$t,is,c,jw,d,Bt,e],null))}function xC(a,b,c,d,e,f){return oL(b,new n(null,6,[uq,a,U,hy,is,c,jw,d,Bt,e,wn,f],null))}function E2(a,b,c,d,e){return oL(b,new n(null,6,[uq,a,U,HE,jw,c,Bt,d,qE,Vv.m(e),eJ,tr.m(e)],null))}function F2(a){return [q.m(a),".errors.not_authorized"].join("")}function G2(a){return gL([q.m(a),".destroyed"].join(""),"Context destroyed explicitly")}function H2(a){return gL([q.m(a),".peer-left"].join(""),"Context destroyed because its owner/last peer left")}function I2(a){return [q.m(a),".errors.failure"].join("")}Z(uB,yo,Uc);
    Z(ps,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[Rx],null),dA,new Q(null,1,5,R,[uB],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[Rx],null),dA,new Q(null,1,5,R,[uB],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[Rx],null),new Q(null,1,5,R,[uB],null),null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,jD)}],null),function(a){return M(a)&&N(a,jD)},new Q(null,1,5,R,[os],null),new Q(null,1,5,R,[Rx],null),null,new Q(null,1,5,R,[jD],
    null),new Q(null,1,5,R,[uB],null),new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD))],null),null]))],null),null));Z(lJ,yp,yp);Z(wI,O(hq,yo),ZS(Qy,Uc,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,yo)],null),null));Z(YB,Iq,M);Z(mo,Iq,M);Z(gC,Iq,M);Z(Ja,new Ak(null,new n(null,2,[Wa,"null",tA,"null"],null),null),new Ak(null,new n(null,2,[Wa,null,tA,null],null),null));Z(Nb,yo,Uc);Z(Qb,uI,Vc);
    Z(vb,O(ut,ir,new Q(null,2,5,R,[Ja,Nb],null),dA,new Q(null,1,5,R,[Qb],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Ja,Nb],null),new Q(null,1,5,R,[Qb],null),null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,Mb)}],null),function(a){return M(a)&&N(a,U)&&N(a,Mb)},new Q(null,1,5,R,[Xa],null),new Q(null,2,5,R,[Ja,Nb],null),null,new Q(null,2,5,R,[U,Mb],null),new Q(null,1,5,R,[Qb],null),new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Mb))],null),null])));Z(Lb,O(hq,vb,Ns,TF,oC,I),ZS(vb,vb,new n(null,6,[oC,I,Xn,TF,IC,function(a){return Uf(a)},Ns,Uf,oy,!0,GH,O(hq,vb,oC,I,Ns,TF)],null),null));
    Z(rx,O(ut,dA,new Q(null,5,5,R,[wI,YB,mo,gC,Lb],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,5,5,R,[wI,YB,mo,gC,Lb],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,5,5,R,[Hr,Lv,wA,wq,Sa],null),I,null,I,new Q(null,5,5,R,[wI,YB,mo,gC,Lb],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));
    Z(cr,O(rv,Up,O(ut,ir,new Q(null,2,5,R,[lJ,rx],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,2,5,R,[lJ,rx],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[lJ,rx],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,jo)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,jo)},I,new Q(null,2,5,R,[lJ,rx],null),null,new Q(null,2,5,R,[Bt,jo],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jo))],null),null]))],null),null));Z(yz,O(W,new Q(null,1,5,R,[V],null),O(Gq,Zm,O(Vp,V))),function(a){return KS(Zm,Jg.m(a))});Z(Pr,O(wJ,yo),lT(yo,Uc,null));Z(cE,O(wJ,yo),lT(yo,Uc,null));
    Z(EB,O(rv,Up,O(ut,ir,new Q(null,3,5,R,[Ty,EI,yz],null),dA,new Q(null,3,5,R,[TC,Pr,cE],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,3,5,R,[Ty,EI,yz],null),dA,new Q(null,3,5,R,[TC,Pr,cE],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Ty,EI,yz],null),new Q(null,3,5,R,[TC,Pr,cE],null),null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,tw)},function(a){return N(a,wn)},function(a){return N(a,Uz)}],null),function(a){return M(a)&&
    N(a,tw)&&N(a,wn)&&N(a,Uz)},new Q(null,3,5,R,[In,cz,Xs],null),new Q(null,3,5,R,[Ty,EI,yz],null),null,new Q(null,3,5,R,[tw,wn,Uz],null),new Q(null,3,5,R,[TC,Pr,cE],null),new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uz))],null),null]))],null),null));Z(lJ,yp,yp);
    Z(DC,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[lJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[lJ],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));
    Z(bu,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[lJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[lJ],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));
    Z(Rp,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[lJ],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[lJ],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[lJ],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));Z(pF,yo,Uc);Z(rw,yo,Uc);Z(YD,EA,EA);
    sT.v(null,KB,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[YD,wt,rx],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[YD,wt,rx],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,yE)},function(a){return N(a,Bt)},function(a){return N(a,jo)}],null),function(a){return M(a)&&N(a,yE)&&N(a,Bt)&&N(a,jo)},I,new Q(null,3,5,R,[YD,wt,rx],null),null,new Q(null,3,5,R,[yE,Bt,jo],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,yE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jo))],null),null]))],null),null)});sT.v(null,jJ,function(){return XS(new Q(null,2,5,R,[gG,cr],null),new Q(null,2,5,R,[gG,cr],null),null)});
    sT.v(null,$t,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,1,5,R,[wt],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[wt],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[wt],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],null),null]))],null),
    null)});Z(jH,EA,EA);Z(wt,yp,yp);
    sT.v(null,mn,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[jH,wt,Ty],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[jH,wt,Ty],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Tp)},function(a){return N(a,Bt)},function(a){return N(a,tw)}],null),function(a){return M(a)&&N(a,Tp)&&N(a,Bt)&&N(a,tw)},I,new Q(null,3,5,R,[jH,wt,Ty],null),null,new Q(null,3,5,R,[Tp,Bt,tw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Tp)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw))],null),null]))],null),null)});
    sT.v(null,hy,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,2,5,R,[wt,EI],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[wt,EI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,wn)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,wn)},I,new Q(null,2,5,R,[wt,EI],null),null,new Q(null,2,5,R,[Bt,wn],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn))],null),null]))],null),null)});
    sT.v(null,HE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[wt,pF,rw],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[wt,pF,rw],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[wt,pF,rw],null),null,new Q(null,3,5,R,[Bt,qE,eJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});sT.v(null,Lu,function(){return XS(new Q(null,2,5,R,[gG,EB],null),new Q(null,2,5,R,[gG,EB],null),null)});sT.v(null,Rt,function(){return XS(new Q(null,2,5,R,[gG,Rp],null),new Q(null,2,5,R,[gG,Rp],null),null)});sT.v(null,Lw,function(){return XS(new Q(null,2,5,R,[gG,DC],null),new Q(null,2,5,R,[gG,DC],null),null)});
    sT.v(null,Xw,function(){return XS(new Q(null,2,5,R,[gG,bu],null),new Q(null,2,5,R,[gG,bu],null),null)});function J2(a,b){a=In.m(a);b=In.m(b);return ub.m(a)>ub.m(b)||A.gh(ub.m(a),ub.m(b))&&Va.m(a)>=Va.m(b)}function zC(a,b,c){var d=Uz.m(a);return function(){var e=A.gh(kJ.m(b),Rb.m(a));if(e)return e;if(A.gh(d,Tr))return N(nD.m(a),kJ.m(b));if((e=A.gh(kJ.m(b),Rb.m(a)))||(e=A.gh(kJ.m(b),jA.m(a))))return e;if(Sc(c))return gS(Xs.m(a),jD.m(a),jD.m(b));e=Xs.m(a);return p(e)?gS(Xs.m(a),jD.m(a),jD.m(b)):e}()}
    function L2(a,b,c){A.gh(Uz.m(b),Tr)&&eL(F2(a),"Activity contexts cannot be explicitly destroyed");var d=A.gh(Uz.m(b),Hw);var e=d&&A.gh(jA.m(b),kJ.m(c));b=e?e:(d=!d)?zC(b,c,!1):d;p(b)||eL(F2(a),"Not authorized to destroy context");}function M2(a,b){var c=A.gh(kJ.m(b),Rb.m(a));if(c||(c=A.gh(kJ.m(b),jA.m(a))))return c;c=gS(cz.m(a),jD.m(a),jD.m(b));return p(c)?c:zC(a,b,!0)}function N2(a,b){var c=GT(a);return c?(c=jh.gh(Uz.m(b),Tr))?M2(b,a):c:c}
    function O2(a,b,c){p(M2(b,c))||eL(F2(a),"Not authorized to read context");}function P2(a){return p(li.gh(a,new Q(null,2,5,R,[YH,lu],null)))?"global":"context"}function Q2(a,b,c,d,e){var f=kJ.m(b);a=X1(a,b,d,e);return new Q(null,2,5,R,[a,ji.gh(function(k){var l=P2(k),m=hz.m(k);k=kJ.m(k);return oL(m,new n(null,6,[uq,l,U,KB,jw,k,yE,c,Bt,f,jo,d],null))},ei.gh(GT,Vh.gh(Ih(DT,a),fi.gh(Ih(A,c),nD.m(b)))))],null)}
    function R2(a,b){var c=Ea(b);x.gh(c,is);var d=x.gh(c,jw),e=x.gh(c,tw);c=x.gh(c,jo);try{var f=ET(a,d),k=T1(a,e,f);if(p(k))return p(function(){var m=zC(k,f,!1);return p(m)?J2(b,k):m}())?Q2(a,k,d,WK(c),In.m(b)):new Q(null,2,5,R,[a,null],null);Vs(OH,"gateway.common.context.ops",156,new wl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),-1503609143);return new Q(null,2,5,R,[a,null],null)}catch(m){var l=m;Vs(DA,"gateway.common.context.ops",160,new wl(function(){return new Q(null,
    2,5,R,[l,"error performing remote context update"],null)}),-2070008537);return new Q(null,2,5,R,[a,null],null)}}
    function T2(a,b,c,d){if(tL(c)){var e=Ea(d),f=x.gh(e,is),k=x.gh(e,jw),l=x.gh(e,Bt);e=x.gh(e,jo);try{var m=ET(b,k),r=U1(b,l),t=In.gh(r,new n(null,1,[ub,0],null));var v=K.hh(oi(t,ub,Ze),Va,(new Date).getTime());p(zC(r,m,!1))||eL(F2(a),"Not authorized to update context");var y=Q2(b,r,k,WK(e),v),E=J(y,0,null),H=J(y,1,null),T=new Q(null,2,5,R,[E,new Q(null,2,5,R,[sL.A(a,c,f,k),pL(k0(YK(Hx.m(b)),k),K.g(d,U,jJ,G([In,v,tw,tw.m(r)])))],null)],null),Y=J(T,0,null),ia=J(T,1,null);var ba=new Q(null,2,5,R,[p(Y)?
    Y:E,Zf(ia)||Uf(ia)?fd.hh(Lh(Bf,I),H,ia):null!=ia?Lh(Bf,I)(H,ia):H],null);}catch(wa){ba=new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(a,c,f,k,dL(wa,I2(a)))],null)],null);}}else ba=R2(b,d);return ba}function U2(a){if(a instanceof z)return a;switch(a){case "ownership":return Hw;case "ref-counted":return Do;case "retained":return UH;default:return null}}
    function V2(a,b,c,d){d=Ea(d);var e=x.gh(d,tw),f=x.gh(d,wn),k=x.gh(d,Uz),l=x.gh(d,cz),m=x.gh(d,Xs),r=x.gh(d,jw),t=$K(Hx.m(a));d=J(t,0,null);t=J(t,1,null);b=K.g(Y1(b,e,f,k,l,m,t),nD,Dk([r]),G([Ym,c]));b=A.gh(k,Hw)?K.hh(b,jA,r):b;c=R;a=K.hh(a,Hx,d);a=mi(a,new Q(null,2,5,R,[Zn,kJ.m(b)],null),b);return new Q(null,2,5,c,[a,b],null)}
    function W2(a,b,c,d,e,f){Vs(mD,"GATEWAY_ACTION_LOG|context|gateway.common.context.ops",240,new wl(function(){return new Q(null,6,5,R,["peer",f,"subscribes for context",tw.m(e),"using request",d],null)}),-668149537);b=V1(b,e,f);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[xC(a,c,d,f,kJ.m(e),wn.m(e))],null)],null)}
    function HC(a,b,c){c=Ea(c);x.gh(c,is);var d=x.gh(c,jw),e=x.gh(c,tw);try{var f=ET(b,d),k=T1(b,e,f);if(p(k))return O2(a,k,f),new Q(null,2,5,R,[V1(b,k,d),null],null);Vs(OH,"gateway.common.context.ops",257,new wl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),-1524519900);return new Q(null,2,5,R,[b,null],null)}catch(l){return new Q(null,2,5,R,[b,null],null)}}
    function X2(a,b,c,d){if(tL(c)){var e=Ea(d),f=x.gh(e,is),k=x.gh(e,jw);e=x.gh(e,Bt);try{var l=ET(b,k),m=U1(b,e),r=Ih(W2,a);O2(a,m,l);var t=new Q(null,2,5,R,[b,null],null),v=J(t,0,null),y=J(t,1,null),E=r(v,c,f,m,k),H=J(E,0,null),T=J(E,1,null);var Y=new Q(null,2,5,R,[p(H)?H:v,Zf(T)||Uf(T)?fd.hh(Lh(Bf,I),y,T):null!=T?Lh(Bf,I)(y,T):y],null);var ia=J(Y,0,null),ba=J(Y,1,null),wa=new Q(null,2,5,R,[null,pL(k0(YK(Hx.m(b)),k),K.g(d,U,Lw,G([tw,tw.m(m)])))],null),ta=J(wa,0,null),ob=J(wa,1,null);var qb=new Q(null,
    2,5,R,[p(ta)?ta:ia,Zf(ob)||Uf(ob)?fd.hh(Lh(Bf,I),ba,ob):null!=ob?Lh(Bf,I)(ba,ob):ba],null);}catch(pb){qb=new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(a,c,f,k,dL(pb,I2(a)))],null)],null);}}else qb=HC(a,b,d);return qb}function Y2(a,b,c){var d=tw.m(b),e=kJ.m(b),f=kJ.m(c);return ii.hh(I,Hh.hh(ei.m(GT),ei.m(Ih(M2,b)),Vh.m(function(k){var l=P2(k),m=hz.m(k);k=kJ.m(k);return oL(m,new n(null,6,[uq,l,U,mn,jw,k,Tp,f,Bt,e,tw,d],null))})),RT(a,bt,c,!0))}
    function Z2(a,b,c){var d=kJ.m(a);return ii.hh(I,Hh.hh(ei.m(GT),ei.m(Ih(M2,a)),Vh.m(function(e){return E2(P2(e),hz.m(e),kJ.m(e),d,c)})),b)}function $2(a,b){var c=fS(cz.m(b)),d=fS(Xs.m(b)),e=U2(Uz.m(b));p(e)||eL([q.m(a),".errors.bad_lifetime"].join(""),["Bad lifetime value ",q.m(e)].join(""));return vk.g(G([b,new n(null,3,[cz,c,Xs,d,Uz,e],null)]))}
    function a3(a,b,c,d){var e=Ea(d),f=x.gh(e,is),k=x.gh(e,jw),l=x.gh(e,tw);try{var m=ET(b,k),r=T1(b,l,m);if(p(r))return O2(a,r,m),W2(a,b,c,f,r,k);var t=V2(b,m,!0,$2(a,d)),v=J(t,0,null),y=J(t,1,null);Vs(mD,"GATEWAY_ACTION_LOG|context|gateway.common.context.ops",380,new wl(function(){return new Q(null,6,5,R,["peer",k,"creates context",l,"using request",f],null)}),125667686);return new Q(null,2,5,R,[v,Bf.g(Y2(v,y,m),D2(a,c,f,k,kJ.m(y)),G([pL(k0(YK(Hx.m(b)),k),K.g(d,U,Lu,G([In,In.m(y)])))]))],null)}catch(H){var E=
    H;Vs(DA,"gateway.common.context.ops",389,new wl(function(){return new Q(null,2,5,R,[E,"error"],null)}),950991977);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(a,c,f,k,dL(E,I2(a)))],null)],null)}}
    function b3(a,b,c,d){if(tL(c))var e=a3(a,b,c,d);else {var f=Ea(d);x.gh(f,is);c=x.gh(f,jw);f=x.gh(f,tw);try{var k=ET(b,c),l=T1(b,f,k);if(p(l))O2(a,l,k),e=J2(d,l)?Q2(b,l,c,new n(null,1,[wq,wn.m(d)],null),In.m(d)):new Q(null,2,5,R,[b,null],null);else {var m=V2(b,k,!1,$2(a,d)),r=J(m,0,null),t=J(m,1,null);e=new Q(null,2,5,R,[r,Y2(r,t,k)],null);}}catch(v){e=new Q(null,2,5,R,[b,null],null);}}return e}
    function c3(a,b,c,d){Vs(mD,"GATEWAY_ACTION_LOG|context|gateway.common.context.ops",419,new wl(function(){return new Q(null,5,5,R,["context",tw.m(c),"is destroyed","with reason",d],null)}),-179222823);var e=kJ.m(c),f=nD.m(c);return new Q(null,2,5,R,[OK(b,new Q(null,2,5,R,[Zn,e],null)),fd.hh(Bf,ji.gh(function(k){return E2(a,hz.m(k),kJ.m(k),e,d)},ei.gh(GT,Vh.gh(Ih(DT,b),f))),Z2(c,Cl(G([fi.gh(function(k){return x.gh(f,kJ.m(k))},HT(b,bt))])),d))],null)}
    function JC(a,b,c){c=Ea(c);var d=x.gh(c,jw),e=x.gh(c,tw);try{var f=ET(b,d),k=T1(b,e,f);if(p(k))return L2(a,k,f),c3(a,b,k,G2(a));Vs(OH,"gateway.common.context.ops",446,new wl(function(){return new Q(null,2,5,R,["unable to find remote context",e],null)}),-780547146);return new Q(null,2,5,R,[b,null],null)}catch(l){return new Q(null,2,5,R,[b,null],null)}}
    function d3(a,b,c,d){if(tL(c)){var e=Ea(d),f=x.gh(e,is),k=x.gh(e,jw);e=x.gh(e,Bt);try{var l=ET(b,k),m=U1(b,e);L2(a,m,l);var r=c3(a,b,m,G2(a)),t=J(r,0,null),v=J(r,1,null),y=new Q(null,2,5,R,[null,new Q(null,2,5,R,[sL.A(a,c,f,k),pL(k0(YK(Hx.m(b)),k),K.g(d,U,Rt,G([tw,tw.m(m)])))],null)],null),E=J(y,0,null),H=J(y,1,null);var T=new Q(null,2,5,R,[p(E)?E:t,Zf(H)||Uf(H)?fd.hh(Lh(Bf,I),v,H):null!=H?Lh(Bf,I)(v,H):v],null);}catch(Y){T=new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(a,c,f,k,dL(Y,I2(a)))],null)],null);}}else T=
    JC(a,b,d);return T}var e3=function e3(a){switch(arguments.length){case 3:return e3.hh(arguments[0],arguments[1],arguments[2]);case 4:return e3.A(arguments[0],arguments[1],arguments[2],arguments[3]);default:throw Error(["Invalid arity: ",q.m(arguments.length)].join(""));}};
    e3.hh=function(a,b,c){var d=kJ.m(c),e=Ih(e3,a);return fd.hh(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=e(l,d,k);k=J(m,0,null);m=J(m,1,null);return new Q(null,2,5,R,[p(k)?k:l,Zf(m)||Uf(m)?fd.hh(Lh(Bf,I),f,m):null!=m?Lh(Bf,I)(f,m):f],null)},new Q(null,2,5,R,[b,I],null),S1(b))};
    e3.A=function(a,b,c,d){if(N(nD.m(d),c)){var e=pi(d,nD,Nf,c);c=A.gh(c,jA.m(e))?Gf.gh(e,jA):e;d=new Q(null,2,5,R,[mi(b,new Q(null,2,5,R,[Zn,kJ.m(d)],null),c),c],null);b=J(d,0,null);d=J(d,1,null);a:switch(c=Uz.m(d),c instanceof z?c.da:null){case "ownership":c=null==jA.m(d);break a;case "ref-counted":c=Of(nD.m(d));break a;default:c=!1;}return p(c)?c3(a,b,d,H2(a)):new Q(null,2,5,R,[b,null],null)}return new Q(null,2,5,R,[b,null],null)};e3.F=4;
    function $C(a,b,c){var d=Ea(c);x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,tw);try{var k=ET(b,e),l=T1(b,f,k);if(p(l))return e3.A(a,b,e,l);Vs(OH,"gateway.common.context.ops",517,new wl(function(){return new Q(null,2,5,R,["unable to find remote context",f],null)}),-698967398);return new Q(null,2,5,R,[b,null],null)}catch(r){var m=r;Vs(OH,"gateway.common.context.ops",521,new wl(function(){return new Q(null,3,5,R,[m,"unable to process remote unsubscribe",c],null)}),357434830);return new Q(null,2,5,R,[b,null],
    null)}}
    function f3(a,b,c,d){if(tL(c)){var e=Ea(d),f=x.gh(e,is),k=x.gh(e,jw);e=x.gh(e,Bt);try{ET(b,k);var l=U1(b,e),m=e3.A(a,b,k,l),r=J(m,0,null),t=J(m,1,null),v=new Q(null,2,5,R,[null,new Q(null,2,5,R,[sL.A(a,c,f,k),pL(k0(YK(Hx.m(b)),k),K.g(d,U,Xw,G([tw,tw.m(l)])))],null)],null),y=J(v,0,null),E=J(v,1,null);var H=new Q(null,2,5,R,[p(y)?y:r,Zf(E)||Uf(E)?fd.hh(Lh(Bf,I),t,E):null!=E?Lh(Bf,I)(t,E):t],null);}catch(T){H=new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K(a,c,f,k,dL(T,I2(a)))],null)],null);}}else H=$C(a,b,
    d);return H}function g3(a,b,c){var d=hz.m(c),e=kJ.m(c);return Vh.gh(function(f){var k=jA.m(f),l=kJ.m(f);f=tw.m(f);return oL(d,new n(null,6,[uq,a,U,mn,jw,e,Tp,k,Bt,l,tw,f],null))},ei.gh(Ih(N2,c),S1(b)))}function h3(a,b){a=DT.gh(a,jw.m(Sv.m(b)));return p(a)?Sc(lu.m(YH.m(a))):null}var i3=Ih(T2,"activity");function lD(a){a=1E3*li.hh(a,new Q(null,2,5,R,[TB,$v],null),0);return 0<a?a:k_}function j3(a,b){var c=mL(a,is.m(b));a=J(c,0,null);var d=J(c,1,null);if(p(d))switch(c=U.m(d),c instanceof z?c.da:null){case "activity":return b=Tr.m(d),p(b)?x2(a,b):null;case "create-peer":return P1(a,fL(b),en.m(d));default:return Vs(DA,"gateway.domains.activity.core",37,new wl(function(){return new Q(null,2,5,R,["Unable to handle error for an unknown incoming request type",U.m(d)],null)}),-1586907595)}else return null}var k3=Jh(TT,"activity",Yx);
    function l3(a,b,c,d){var e=new Q(null,2,5,R,[a,null],null),f=function(){var m=J(e,0,null),r=J(e,1,null);var t=li.gh(b,new Q(null,2,5,R,[Yx,YI],null)),v=t1(m,t);if(p(v)){t=jA.m(v);var y=kJ.m(b);var E=N(Ts.m(v),y);v=E?pi(v,Ts,Lh(Nf,Ck),y):v;A.gh(t,y)?y=A2(m,v,b,c,!E):(t=z2(m,v,b,c),y=Ea(t),t=x.gh(y,Nz),y=x.gh(y,au),y=new Q(null,2,5,R,[t,y],null));}else y=null;t=J(y,0,null);y=J(y,1,null);return new Q(null,2,5,R,[p(t)?t:m,Zf(y)||Uf(y)?fd.hh(Lh(Bf,I),r,y):null!=y?Lh(Bf,I)(r,y):r],null)}(),k=function(){var m=
    J(f,0,null),r=J(f,1,null),t=mj(li.gh(b,new Q(null,2,5,R,[Yx,VF],null)));var v=p(t)?new Q(null,2,5,R,[s1(m,Vh.gh(DH,t),kJ.m(b)),J1(m,b,Vh.gh(kJ,t),!1)],null):null;t=J(v,0,null);v=J(v,1,null);return new Q(null,2,5,R,[p(t)?t:m,Zf(v)||Uf(v)?fd.hh(Lh(Bf,I),r,v):null!=v?Lh(Bf,I)(r,v):r],null)}();a=J(k,0,null);k=J(k,1,null);var l=k3(a,b,c,d);d=J(l,0,null);l=J(l,1,null);return new Q(null,2,5,R,[p(d)?d:a,Zf(l)||Uf(l)?fd.hh(Lh(Bf,I),k,l):null!=l?Lh(Bf,I)(k,l):k],null)}
    function m3(a,b){b=KT(a,b,Yx);a=ng(Vh.m(kJ),lg(function(c,d){return jL(c,d,Yx)},kg),a,b);return fd.hh(function(c,d){var e=J(c,0,null);c=J(c,1,null);var f=l3(e,d,g1,!0);d=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(d)?d:e,Zf(f)||Uf(f)?fd.hh(Lh(Bf,I),c,f):null!=f?Lh(Bf,I)(c,f):c],null)},new Q(null,2,5,R,[a,null],null),b)}
    var n3=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.activity.core","handle-request"),function(f,k,l){return U.m(l)},e,a,b,c,d)}();
    n3.v(null,qH,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw);d=x.gh(d,os);if(p(kL(a,e,Yx)))b=new Q(null,2,5,R,[a,new Q(null,1,5,R,[p1(b,c,e)],null)],null);else {d=fS(d);d=iL(a,e,Yx,d);a=DT.gh(d,e);b:{var f=XG.m(a);if(p(f)){var k=Ru.m(f),l=DH.m(f);k=p(k)?K.hh(a,Ru,k):a;l=p(l)?K.hh(k,DH,l):k;k=U.m(f);k=k instanceof z?k.da:null;switch(k){case "activity":k=li.gh(f,new Q(null,2,5,R,[Tr,kJ],null));var m=t1(d,k);if(p(m)){var r=kJ.m(l),t=li.gh(f,new Q(null,2,5,R,[Tr,uy],null)),v=D1(d,Yo.m(m));m=
    PK(m,new Q(null,1,5,R,[fs],null),G([r]));t=p(t)?K.hh(m,jA,kJ.m(l)):m;t=RK(t,new Q(null,1,5,R,[WB],null),kJ.m(f));d=E1(NT(u1(d,k,t),r,mi(mi(l,new Q(null,2,5,R,[Yx,YI],null),k),new Q(null,2,5,R,[Yx,vE],null),vE.m(f))),v,r);}break b;case "create-peer":d=NT(d,kJ.m(l),l);break b;default:throw Error(["No matching clause: ",q.m(k)].join(""));}}}f=Bf.gh;k=l=ii.gh;r=ST("activity",Yx,d,b,a);v=Ek(mj(v1(d,li.gh(a,new Q(null,2,5,R,[jD,ct],null)))));if(B(v)){t=R;m=hz.m(a);var y=kJ.m(a);v=new Q(null,1,5,t,[oL(m,
    j1(y,v))],null);}else v=null;b=f.call(Bf,l.call(ii,k.call(ii,r,v),K1.gh(d,a)),p1(b,c,e));b=new Q(null,2,5,R,[d,b],null);}return b});n3.v(null,IF,function(a,b,c){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=FT(a,d,Yx);c=l3(a,f,fL(c),!1);a=J(c,0,null);c=J(c,1,null);e=new Q(null,2,5,R,[null,p1(b,e,d)],null);b=J(e,0,null);e=J(e,1,null);return new Q(null,2,5,R,[p(b)?b:a,Zf(e)||Uf(e)?fd.hh(Lh(Bf,I),c,e):null!=e?Lh(Bf,I)(c,e):c],null)});
    n3.v(null,yl,function(a,b,c){c=jw.m(c);c=DT.gh(a,c);var d=li.gh(c,new Q(null,2,5,R,[Yx,YI],null));if(p(d)){var e=kJ.m(c),f=t1(a,d);if(p(f)){var k=A.gh(jA.m(f),e);b=k?f:pi(f,tG,Lh(Bf,Ck),e);b=RK(b,new Q(null,1,5,R,[fs],null),e);if(k){e=Yo.m(b);e=wn.m(D1(a,e));k=kJ.m(c);f=li.gh(c,new Q(null,2,5,R,[Yx,vE],null));b=Gf.gh(K.g(b,jA,k,G([Fo,!0])),en);k=u1(NT(a,k,mi(c,new Q(null,2,5,R,[Yx,YI],null),kJ.m(b))),kJ.m(b),b);if(p(f)){f=ii.gh;var l=R,m=hz.m(c);e=oL(m,rB(a,c,b,e));a=f.call(ii,new Q(null,1,5,l,[e],
    null),p2(a,b,c));}else a=ii.gh(k2(a,b,e),n2(a,b));a=new n(null,3,[Nz,k,Tr,b,au,a],null);}else a=s2(a,b,c);b=Ea(a);a=x.gh(b,Nz);c=x.gh(b,Tr);b=x.gh(b,au);a=new Q(null,2,5,R,[u1(a,d,c),b],null);}else a=new Q(null,2,5,R,[NT(a,e,t2(c)),new Q(null,1,5,R,[oL(b,aB(e,null,h1))],null)],null);}else f=li.gh(c,new Q(null,2,5,R,[XG,en],null)),p(f)?(d=jw.m(f),k=DT.gh(a,d),e=b=R,k=hz.m(k),f=is.m(f),c=kJ.m(c),a=new Q(null,2,5,b,[a,new Q(null,1,5,e,[oL(k,new n(null,5,[uq,"activity",U,vw,is,f,jw,d,bC,c],null))],null)],
    null)):a=eL("activity.errors.invalid_peer",["Unable to find originating request for a ready message from peer ",q.m(kJ.m(c))].join(""));return a});function o3(a){return oi(oi(a,nH,WK),XF,Ih(ji,WK))}function p3(a){return ji.gh(function(b){return o3(xk(WK(b),new Q(null,4,5,R,[tw,nH,XF,Mz],null)))},a)}
    n3.v(null,Jv,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw);d=x.gh(d,ZE);d=p3(d);var f=FT(a,e,Yx),k=li.gh(f,new Q(null,2,5,R,[jD,ct],null));return p(k)?new Q(null,2,5,R,[w1(a,k,d),Bf.gh(b2(a,k,d),p1(b,c,e))],null):new Q(null,2,5,R,[a,new Q(null,1,5,R,[q1(b,c,e,gL("activity.errors.registration.failure",["Registering peer is missing an user in its identity",q.m(jD.m(f))].join("")))],null)],null)});
    n3.v(null,kD,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,ZE),k=FT(a,e,Yx);d=li.gh(k,new Q(null,2,5,R,[jD,ct],null));p(d)?(f=Ek(f),f=Ek(ei.gh(f,lj(v1(a,d)))),a=new Q(null,2,5,R,[x1(a,d,f),Bf.gh(c2(a,d,f),p1(b,c,e))],null)):a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[q1(b,c,e,gL("activity.errors.registration.failure",["Removing peer is missing an user in its identity",q.m(jD.m(k))].join("")))],null)],null);return a});
    n3.v(null,Zu,function(a,b,c,d){var e=k_;k_=lD(d);try{var f=Gf.gh(c,IH);var k=p(mx.m(c))?oi(f,mx,Hh.gh(o3,WK)):f;return i2(a,b,k,Vh.gh(WK,IH.m(c)))}finally{k_=e;}});
    n3.v(null,KI,function(a,b,c){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw),k=x.gh(d,Zr);d=FT(a,f,Yx);k=B1(a,k);var l=kJ.m(d);N(tG.m(k),l)||N(fs.m(k),l)||A.gh(jA.m(k),l)?d=!0:(l=DT.gh(a,jA.m(k)),d=PT.la(jD.m(l),Xs.m(k),!1,jD.m(d),null,!1));p(d)?(c=w2(a,k,fL(c)),a=J(c,0,null),c=J(c,1,null),e=new Q(null,2,5,R,[null,p1(b,e,f)],null),b=J(e,0,null),e=J(e,1,null),b=new Q(null,2,5,R,[p(b)?b:a,Zf(e)||Uf(e)?fd.hh(Lh(Bf,I),c,e):null!=e?Lh(Bf,I)(c,e):c],null)):b=new Q(null,2,5,R,[a,q1(b,e,f,cL("activity.errors.not_authorized",
    "Not authorized to destroy activity"))],null);return b});n3.v(null,Ju,function(a,b,c){return C2(a,b,c)});n3.v(null,aH,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw);d=x.gh(d,ip);FT(a,e,Yx);return B2(a,b,c,e,d,A1)});
    n3.v(null,Tz,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,GB),k=x.gh(d,Zr),l=x.gh(d,DH),m=x.gh(d,Ru);FT(a,e,Yx);d=B1(a,k);f=vk.g(G([FT(a,f,Yx),ii.gh(S,ei.gh(yf,new n(null,2,[Ru,m,DH,l],null)))]));m=Yx.m(f);l=YI.m(m);m=jA.m(m);l=t1(a,p(l)?l:m);A.gh(kJ.m(l),k)?b=new Q(null,2,5,R,[a,new Q(null,1,5,R,[p1(b,c,e)],null)],null):p(l)?b=eL("activity.errors.activity_is_child",["Peer is already in activity ",q.m(kJ.m(l))].join("")):(k=kJ.m(d),l=kJ.m(f),a=s2(a,d,f),m=Ea(a),a=x.gh(m,Nz),
    d=x.gh(m,Tr),m=x.gh(m,au),a=new n(null,3,[Nz,NT(u1(a,k,d),l,mi(f,new Q(null,2,5,R,[Yx,YI],null),k)),Tr,d,au,m],null),f=Ea(a),a=x.gh(f,Nz),f=x.gh(f,au),b=new Q(null,2,5,R,[a,Bf.gh(f,p1(b,c,e))],null));return b});
    n3.v(null,zu,function(a,b,c){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=FT(a,d,Yx),k=li.gh(f,new Q(null,2,5,R,[Yx,YI],null));k=t1(a,k);var l=jA.m(k);p(k)||eL("activity.errors.not_a_member","Not a member of an activity");c=fL(c);A.gh(l,d)?c=A2(a,k,f,c,!0):(a=z2(a,k,f,c),c=Ea(a),a=x.gh(c,Nz),c=x.gh(c,au),c=new Q(null,2,5,R,[a,c],null));a=J(c,0,null);c=J(c,1,null);e=new Q(null,2,5,R,[null,p1(b,e,d)],null);b=J(e,0,null);e=J(e,1,null);return new Q(null,2,5,R,[p(b)?b:a,Zf(e)||Uf(e)?fd.hh(Lh(Bf,I),c,e):
    null!=e?Lh(Bf,I)(c,e):c],null)});n3.v(null,Hs,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,VF);d=FT(a,e,Yx);f=Vh.gh(bO,f);for(var k=B(f),l=null,m=0,r=0;;)if(r<m){var t=l.W(null,r);L1(d,t);r+=1;}else if(k=B(k))l=k,Vf(l)?(k=qe(l),r=re(l),l=k,m=F(k),k=r):(k=C(l),L1(d,k),k=D(l),l=null,m=0),r=0;else break;a=H1(a,d,f);return new Q(null,2,5,R,[a,Bf.gh(I1(a,d,f),p1(b,c,e))],null)});
    n3.v(null,Cv,function(a,b,c){var d=Ea(c);c=x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,$w);d=FT(a,e,Yx);var k=N1(d,f);f=J(k,0,null);k=J(k,1,null);a=s1(NT(a,e,f),Vh.gh(DH,k),e);b=Bf.gh(J1(a,d,ji.gh(kJ,k),!0),p1(b,c,e));return new Q(null,2,5,R,[a,b],null)});
    n3.v(null,wB,function(a,b,c,d){var e=k_;k_=lD(d);try{var f=Ea(c),k=x.gh(f,is),l=x.gh(f,jw),m=x.gh(f,hA),r=x.gh(f,DH),t=x.gh(f,Ru),v=x.gh(f,Zr);FT(a,l,Yx);var y=p(v)?B1(a,v):null,E=p(t)?t:r,H=IH.m(c),T=Q1(a,m,r),Y=J(T,0,null),ia=J(T,1,null),ba=ET(a,l),wa=ZK(Hx.m(a)),ta=J(wa,0,null),ob=J(wa,1,null),qb=xk(c,new Q(null,2,5,R,[is,jw],null)),pb=new n(null,4,[U,wB,kJ,ob,DH,r,en,qb],null);var xc=p(E)?K.hh(pb,Ru,E):pb;var Sb=jD.m(ba);var mb=l_(a,Sb,xc);var Tb=lL(K.hh(a,Hx,ta),ob,xc);var gb=new n(null,3,[Nz,
    Tb,au,new Q(null,1,5,R,[O1(Y,ia,H,mb,ob,y,D1(a,Yo.m(y)),E)],null),PG,ob],null);return new Q(null,2,5,R,[Nz.m(gb),Bf.gh(au.m(gb),p1(b,k,l))],null)}finally{k_=e;}});n3.v(null,$o,function(a,b,c){var d=Ea(c);b=x.gh(d,is);var e=x.gh(d,jw),f=x.gh(d,La);FT(a,e,Yx);var k=ET(a,f),l=d=R;k=hz.m(k);c=fL(c);c=oL(k,aB(f,e,c));return new Q(null,2,5,d,[a,new Q(null,2,5,l,[c,p1(b,e)],null)],null)});n3.v(null,DA,function(a,b,c){return j3(a,c)});
    n3.v(null,vE,function(a,b,c,d){var e=k_;k_=lD(d);try{var f=Ea(c),k=x.gh(f,is),l=x.gh(f,jw),m=ET(a,l),r=li.gh(m,new Q(null,2,5,R,[Yx,YI],null)),t=t1(a,r),v=ZK(Hx.m(a)),y=J(v,0,null),E=J(v,1,null),H=new n(null,5,[U,Tr,kJ,E,DH,DH.m(m),Tr,new n(null,2,[kJ,kJ.m(t),uy,A.gh(kJ.m(m),jA.m(t))],null),vE,!0],null);var T=p(Ru.m(m))?K.hh(H,Ru,Ru.m(m)):H;var Y=lL(K.hh(a,Hx,y),E,T);c=R;var ia=p(r)?u1(Y,r,pi(t,Ts,Lh(Bf,Ck),l)):Y;r=R;var ba=jD.m(m);var wa=l_(a,ba,T);return new Q(null,2,5,c,[ia,new Q(null,1,5,r,[oL(b,
    new n(null,5,[uq,"activity",U,Yp,is,k,jw,l,Yp,wa],null))],null)],null)}finally{k_=e;}});n3.v(null,jJ,function(a,b,c){return i3(a,b,c)});n3.v(null,Iz,function(a,b){return m3(a,b)});n3.v(null,dm,function(a,b,c){Vs(DA,"gateway.domains.activity.core",251,new wl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),1704491653);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[q1(b,is.gh(c,-1),jw.m(c),gL("activity.errors.unhandled_message",["Unhandled message ",q.m(c)].join("")))],null)],null)});
    function q3(){this.lh=null;}q3.prototype.Yc=function(){return new n(null,3,[Vv,"activity",Pn,"",In,2],null)};q3.prototype.Zc=function(a,b){return b};q3.prototype.Wc=function(a,b){return b};
    q3.prototype.Xc=function(a,b,c){var d=Ea(c);a=x.gh(d,hz);d=x.gh(d,Sv);U.m(d);try{return n3.A(b,a,d,this.lh)}catch(f){var e=f;p(jm(e))||Vs(DA,"gateway.domains.activity.core",275,new wl(function(){return new Q(null,3,5,R,[e,"Error handling request",c],null)}),1774069844);return tL(a)?new Q(null,2,5,R,[b,new Q(null,1,5,R,[q1(a,is.m(d),jw.m(d),dL(e,"activity.errors.failure"))],null)],null):null}};Z(dB,O(W,new Q(null,1,5,R,[V],null),O(Gq,DI,O(aC,V))),function(a){return KS(DI,bO(a))});
    Z(az,O(ut,ir,new Q(null,3,5,R,[DF,Rx,dB],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[DF,Rx,dB],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,is)},function(a){return N(a,jD)},function(a){return N(a,TB)}],null),function(a){return M(a)&&N(a,is)&&N(a,jD)&&N(a,TB)},I,new Q(null,3,5,R,[DF,Rx,dB],null),null,new Q(null,3,5,R,[is,jD,TB],null),I,new Q(null,4,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,is)),
    O(W,new Q(null,1,5,R,[V],null),O(fG,V,jD)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,TB))],null),null])));Z(St,CA,CA);
    Z(fu,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[St],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[St],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[St],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,vo)}],null),function(a){return M(a)&&N(a,vo)},I,new Q(null,1,5,R,[St],null),null,new Q(null,1,5,R,[vo],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,vo))],
    null),null]))],null),null));
    Z(Xp,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[St],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[St],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[St],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,vo)}],null),function(a){return M(a)&&N(a,vo)},I,new Q(null,1,5,R,[St],null),null,new Q(null,1,5,R,[vo],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,vo))],
    null),null]))],null),null));Z(np,O(W,new Q(null,1,5,R,[V],null),O(Gq,Zm,O(Vp,V))),function(a){return KS(Zm,Jg.m(a))});Z(Ey,O(wJ,yo),lT(yo,Uc,null));Z(Go,O(wJ,yo),lT(yo,Uc,null));
    Z(zF,O(rv,Up,O(ut,ir,new Q(null,5,5,R,[Ty,EI,np,Ey,Go],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,5,5,R,[Ty,EI,np,Ey,Go],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,5,5,R,[Ty,EI,np,Ey,Go],null),null,null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,tw)},function(a){return N(a,wn)},function(a){return N(a,Uz)},function(a){return N(a,cz)},function(a){return N(a,Xs)}],null),function(a){return M(a)&&N(a,tw)&&N(a,wn)&&N(a,Uz)&&
    N(a,cz)&&N(a,Xs)},I,new Q(null,5,5,R,[Ty,EI,np,Ey,Go],null),null,new Q(null,5,5,R,[tw,wn,Uz,cz,Xs],null),I,new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Uz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,cz)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Xs))],null),null]))],null),null));Z(Uo,yp,yp);
    Z(AF,O(hq,yo),ZS(Qy,Uc,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,yo)],null),null));Z(ox,Iq,M);Z(GE,Iq,M);Z(ys,Iq,M);
    Z(QF,O(ut,dA,new Q(null,4,5,R,[AF,ox,GE,ys],null)),OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[null,new Q(null,4,5,R,[AF,ox,GE,ys],null),null,new Q(null,1,5,R,[function(a){return M(a)}],null),function(a){return M(a)},new Q(null,4,5,R,[Hr,Lv,wA,wq],null),I,null,I,new Q(null,4,5,R,[AF,ox,GE,ys],null),new Q(null,1,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V))],null),null])));
    Z(pr,O(rv,Up,O(ut,ir,new Q(null,2,5,R,[Uo,QF],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,2,5,R,[Uo,QF],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Uo,QF],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,jo)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,jo)},I,new Q(null,2,5,R,[Uo,QF],null),null,new Q(null,2,5,R,[Bt,jo],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),
    O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jo))],null),null]))],null),null));
    Z(eu,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[Uo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[Uo],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));
    Z(iJ,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[Uo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[Uo],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));
    Z(qs,O(rv,Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))),XS(new Q(null,2,5,R,[Up,O(ut,ir,new Q(null,1,5,R,[Uo],null))],null),new Q(null,2,5,R,[Up,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[Uo],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[Uo],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],
    null),null]))],null),null));Z(nB,yo,Uc);Z(qq,yo,Uc);sT.v(null,uH,function(){return XS(new Q(null,2,5,R,[gG,az],null),new Q(null,2,5,R,[gG,az],null),null)});sT.v(null,ds,function(){return XS(new Q(null,2,5,R,[gG,fu],null),new Q(null,2,5,R,[gG,fu],null),null)});sT.v(null,Yt,function(){return XS(new Q(null,2,5,R,[gG,Xp],null),new Q(null,2,5,R,[gG,Xp],null),null)});Z(gz,Rx,Rx);
    sT.v(null,uC,function(){return OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,5,5,R,[kE,DF,gz,Ws,br],null),new Q(null,1,5,R,[bB],null),null,new Q(null,6,5,R,[function(a){return M(a)},function(a){return N(a,U)},function(a){return N(a,is)},function(a){return N(a,Rv)},function(a){return N(a,ct)},function(a){return N(a,Gs)}],null),function(a){return M(a)&&N(a,U)&&N(a,is)&&N(a,Rv)&&N(a,ct)&&N(a,Gs)},new Q(null,1,5,R,[Cu],null),new Q(null,5,5,R,[kE,DF,gz,Ws,br],null),null,new Q(null,5,5,R,[U,is,
    Rv,ct,Gs],null),new Q(null,1,5,R,[bB],null),new Q(null,6,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,U)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,is)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Rv)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,ct)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Gs))],null),null]))});Z(Qw,O(hq,Xx),ZS(Xx,Xx,new n(null,4,[Xn,null,IC,function(a){return Pf(a)},oy,!0,GH,O(hq,Xx)],null),null));Z(pv,Rx,Rx);
    sT.v(null,vv,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,2,5,R,[Qw,pv],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[Qw,pv],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Rn)},function(a){return N(a,go)}],null),function(a){return M(a)&&N(a,Rn)&&N(a,go)},I,new Q(null,2,5,R,[Qw,pv],null),null,new Q(null,2,5,R,[Rn,go],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(fG,V,Rn)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,go))],null),null]))],null),null)});
    sT.v(null,$t,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,1,5,R,[eC],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,1,5,R,[eC],null),null,null,new Q(null,2,5,R,[function(a){return M(a)},function(a){return N(a,Bt)}],null),function(a){return M(a)&&N(a,Bt)},I,new Q(null,1,5,R,[eC],null),null,new Q(null,1,5,R,[Bt],null),I,new Q(null,2,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt))],null),null]))],null),
    null)});Z(Xm,EA,EA);Z(eC,yp,yp);
    sT.v(null,mn,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[Xm,eC,Ty],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Xm,eC,Ty],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Tp)},function(a){return N(a,Bt)},function(a){return N(a,tw)}],null),function(a){return M(a)&&N(a,Tp)&&N(a,Bt)&&N(a,tw)},I,new Q(null,3,5,R,[Xm,eC,Ty],null),null,new Q(null,3,5,R,[Tp,Bt,tw],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Tp)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,tw))],null),null]))],null),null)});
    sT.v(null,hy,function(){return XS(new Q(null,2,5,R,[ov,O(ut,ir,new Q(null,2,5,R,[eC,EI],null))],null),new Q(null,2,5,R,[ov,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,2,5,R,[eC,EI],null),null,null,new Q(null,3,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,wn)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,wn)},I,new Q(null,2,5,R,[eC,EI],null),null,new Q(null,2,5,R,[Bt,wn],null),I,new Q(null,3,5,R,[O(W,new Q(null,1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,
    1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,wn))],null),null]))],null),null)});Z(Sp,EA,EA);
    sT.v(null,KB,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[Sp,eC,QF],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[Sp,eC,QF],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,yE)},function(a){return N(a,Bt)},function(a){return N(a,jo)}],null),function(a){return M(a)&&N(a,yE)&&N(a,Bt)&&N(a,jo)},I,new Q(null,3,5,R,[Sp,eC,QF],null),null,new Q(null,3,5,R,[yE,Bt,jo],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,yE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,jo))],null),null]))],null),null)});
    sT.v(null,HE,function(){return XS(new Q(null,2,5,R,[rs,O(ut,ir,new Q(null,3,5,R,[eC,nB,qq],null))],null),new Q(null,2,5,R,[rs,OS(Wj([ir,dA,RE,Tt,nt,cx,wG,Hu,JI,GF,CE,dJ],[new Q(null,3,5,R,[eC,nB,qq],null),null,null,new Q(null,4,5,R,[function(a){return M(a)},function(a){return N(a,Bt)},function(a){return N(a,qE)},function(a){return N(a,eJ)}],null),function(a){return M(a)&&N(a,Bt)&&N(a,qE)&&N(a,eJ)},I,new Q(null,3,5,R,[eC,nB,qq],null),null,new Q(null,3,5,R,[Bt,qE,eJ],null),I,new Q(null,4,5,R,[O(W,new Q(null,
    1,5,R,[V],null),O(Iq,V)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,Bt)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,qE)),O(W,new Q(null,1,5,R,[V],null),O(fG,V,eJ))],null),null]))],null),null)});function r3(a,b,c){c=NC.m(c);return p(c)?F(li.gh(a,new Q(null,2,5,R,[uv,p(b)?b:My],null)))>=c:null}function s3(a,b){return jg(function(c,d,e){return K.hh(c,d,A.gh("?",e)?b:e)},S,a)}
    function t3(a,b,c){function d(r,t){return rL.K("global",b,f,k,cL(r,t))}var e=Ea(c),f=x.gh(e,is),k=x.gh(e,jw);e=x.gh(e,vo);var l=jD.m(DT.gh(a,k));if(p(l)){var m=nL(a,e);return p(m)?BT(m,a,new n(null,3,[Bv,Fs,hz,b,Sv,K.hh(K.hh(c,jD,l),U,qH)],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[d("global.errors.invalid_domain",["Unable to join missing domain ",q.m(e)].join(""))],null)],null)}return new Q(null,2,5,R,[a,new Q(null,1,5,R,[d("global.errors.invalid_peer",["Unable to find peer with id ",q.m(k)].join(""))],
    null)],null)}function u3(a,b,c){return t3(a,b,c)}
    function w3(a,b,c,d,e){var f=Ea(c),k=x.gh(f,is),l=x.gh(f,Rv),m=x.gh(f,aI),r=x.gh(f,ct),t=x.gh(f,Cu),v=x.gh(f,YH);f=XI.m(d);a=mL(a,kJ.m(m));var y=J(a,0,null);J(a,1,null);var E=function(){var mc=vk.g(G([new n(null,1,[Zx,Yu(Qs.m(b),rn.m(e))],null),wZ(l),xk(c,new Q(null,2,5,R,[ct,Gs],null))]));if(p(cD.m(c))){var of=cD.m(c);of=ct.m(of);mc=p(of)?K.hh(mc,ct,of):mc;}return mc}(),H=p(gp.m(E))?new Q(null,2,5,R,[E,y],null):function(){var mc=Hx.m(y);var of=Qq.gh(mc,1);var hv=["i-",q.m(Wy.m(mc)),"-",q.m(of)].join("");
    of=new Q(null,2,5,R,[K.hh(mc,Qq,of+1),hv],null);mc=J(of,0,null);of=J(of,1,null);return new Q(null,2,5,R,[K.hh(E,gp,of),K.hh(y,Hx,mc)],null)}();a=J(H,0,null);H=J(H,1,null);v=K.hh(v,lu,!0);try{var T=li.gh(H,new Q(null,2,5,R,[ru,a],null));p(T)&&eL("global.errors.already_seen","Hello already received once");yZ(a);p(r3(H,r,f))&&eL("global.errors.limits_exceeded","Maximum number of peers per user have been reached");var Y=aL(Hx.m(H)),ia=J(Y,0,null),ba=J(Y,1,null),wa=s3(a,ba),ta=LT(K.hh(H,Hx,ia),b,ba,wa,
    m,v),ob=J(ta,0,null),qb=J(ta,1,null),pb=W0(b,k,kJ.m(qb),Vh.gh(mD,mj(lz.m(ob))),wa,vk.g(G([function(){var mc=mD.m(d);return p(mc)?new n(null,1,[mD,mc],null):null}(),p(t)?new n(null,1,[Cu,t],null):null])));p(null)&&vY(bF,"global/peer-count",F(Cn.m(ob)));var xc=new Q(null,2,5,R,[ob,new Q(null,1,5,R,[pb],null)],null),Sb=J(xc,0,null),mb=J(xc,1,null),Tb=u3(Sb,b,new n(null,6,[is,k,jw,kJ.m(qb),jD,wa,YH,v,vo,"context",uq,"global"],null)),gb=J(Tb,0,null),hb=J(Tb,1,null);return new Q(null,2,5,R,[p(gb)?gb:Sb,
    Zf(hb)||Uf(hb)?fd.hh(Lh(Bf,I),mb,hb):null!=hb?Lh(Bf,I)(mb,hb):mb],null)}catch(mc){return m=mc,tL(b)?new Q(null,2,5,R,[H,new Q(null,1,5,R,[rL.K("global",b,k,null,dL(m,"global.errors.failure"))],null)],null):null}}
    function x3(a,b,c){Vs(uG,"gateway.domains.global.core",230,new wl(function(){return new Q(null,1,5,R,["removing source from global domain"],null)}),-775341687);var d=li.gh(a,new Q(null,2,5,R,[Hx,Wy],null));a=fd.hh(function(f,k){var l=J(f,0,null);f=J(f,1,null);var m=new Q(null,2,5,R,[MT(l,k),null],null),r=J(m,0,null);m=J(m,1,null);f=new Q(null,2,5,R,[p(r)?r:l,Zf(m)||Uf(m)?fd.hh(Lh(Bf,I),f,m):null!=m?Lh(Bf,I)(f,m):f],null);l=J(f,0,null);f=J(f,1,null);r=new Q(null,2,5,R,[null,tL(b)?pL(new n(null,3,[U,
    PI,Cp,kJ.m(k),Wp,d],null),c):null],null);k=J(r,0,null);r=J(r,1,null);return new Q(null,2,5,R,[p(k)?k:l,Zf(r)||Uf(r)?fd.hh(Lh(Bf,I),f,r):null!=r?Lh(Bf,I)(f,r):f],null)},new Q(null,2,5,R,[a,null],null),JT(a,b));var e=J(a,0,null);J(a,1,null);Vs(uG,"gateway.domains.global.core",243,new wl(function(){return new Q(null,1,5,R,["removed source from global domain"],null)}),-1564914774);p(null)&&vY(bF,"global/peer-count",F(Cn.m(e)));return a}
    function y3(a,b,c,d,e){c=Ea(c);var f=x.gh(c,is),k=x.gh(c,jD);c=x.gh(c,TB);c=bO(c);var l=Jg.m(fI.gh(c,dm.m(d)));d=li.gh(d,new Q(null,2,5,R,[mw,l],null));return p(d)?(gZ(hZ(gZ(lZ(d,new n(null,4,[is,f,Rv,k,TB,c,nn,nn.m(a)],null)),function(m){return oi(m,U,function(r){switch(r instanceof z?r.da:null){case "success":return uC;case "continue":return zE;default:return r}})}),function(m){return K.hh(jm(m),U,OE)}),function(m){return KK(e,new n(null,3,[Bv,Fs,hz,b,Sv,K.g(m,is,f,G([Rv,k]))],null))}),new Q(null,
    2,5,R,[a,null],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("global",b,f,null,gL("global.errors.authentication.failure",["Requested authentication provider ",q.m(l)," is not available"].join("")))],null)],null)}
    var z3=Ih(T2,"global"),A3=Ih(b3,"global"),B3=Ih(d3,"global"),C3=Ih(X2,"global"),D3=Ih(f3,"global"),E3=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.global.core","handle-request"),function(f,k,l){return U.m(l)},e,a,b,c,d)}();E3.v(null,uH,function(a,b,c,d){return y3(a,b,c,d,er.m(a))});
    E3.v(null,ds,function(a,b,c){if(tL(b))b=t3(a,b,c);else {var d=Ea(c),e=x.gh(d,jw),f=x.gh(d,vo);d=x.gh(d,YH);f=nL(a,f);p(f)?(a=LT(a,b,e,jD.m(c),null,d),e=J(a,0,null),J(a,1,null),b=BT(f,e,new n(null,3,[Bv,Uv,hz,b,Sv,K.hh(c,U,qH)],null))):b=null;}return b});
    E3.v(null,Yt,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);d=x.gh(d,vo);if(p(DT.gh(a,f))){var k=nL(a,d);a=p(k)?BT(k,a,new n(null,3,[Bv,Fs,hz,b,Sv,K.hh(c,U,IF)],null)):new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("global",b,e,f,gL("global.errors.invalid_domain",["Unable to leave missing domain ",q.m(d)].join("")))],null)],null);}else a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("global",b,e,f,gL("global.errors.invalid_peer",["Unable to find peer with id ",q.m(f)].join("")))],null)],
    null);}else f=Ea(c),e=x.gh(f,jw),f=x.gh(f,vo),p(DT.gh(a,e))?(e=nL(a,f),a=p(e)?BT(e,a,new n(null,3,[Bv,Fs,hz,b,Sv,K.hh(c,U,IF)],null)):null):a=null;return a});E3.v(null,uC,function(a,b,c,d,e,f){return w3(a,b,c,e,f)});E3.v(null,OE,function(a,b,c){var d=Ea(c);c=x.gh(d,tr);d=x.gh(d,is);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("global",b,d,null,cL("global.errors.authentication.failure",c))],null)],null)});
    E3.v(null,zE,function(a,b,c){var d=Ea(c);c=x.gh(d,is);d=x.gh(d,TB);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[oL(b,new n(null,4,[uq,"global",U,KC,is,c,TB,d],null))],null)],null)});E3.v(null,Lu,function(a,b,c){return A3(a,b,c)});E3.v(null,jJ,function(a,b,c){return z3(a,b,c)});E3.v(null,Lw,function(a,b,c){return C3(a,b,c)});E3.v(null,Xw,function(a,b,c){return D3(a,b,c)});E3.v(null,Rt,function(a,b,c){return B3(a,b,c)});E3.v(null,WI,function(a){return new Q(null,1,5,R,[a],null)});
    E3.v(null,Iz,function(a,b,c){return x3(a,b,c)});E3.v(null,po,function(a,b,c,d,e){d=Ea(c);c=x.gh(d,is);d=x.gh(d,jw);var f=ET(a,d),k=R,l=R;a:{var m=k_;k_=lD(e);try{var r=jD.m(f),t=NK()+k_,v=new n(null,2,[U,TB,ct,ct.m(r)],null);var y=p(t)?K.hh(v,WC,sg(t,1E3)):v;var E=j_(y,nn.m(a));break a}finally{k_=m;}E=void 0;}return new Q(null,2,5,k,[a,new Q(null,1,5,l,[oL(b,new n(null,5,[uq,"global",U,Yp,is,c,jw,d,Yp,E],null))],null)],null)});
    E3.v(null,dm,function(a,b,c){Vs(DA,"gateway.domains.global.core",410,new wl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),-773255985);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("global",b,is.gh(c,-1),jw.m(c),gL("global.errors.unhandled_message",["Unhandled message ",q.m(c)].join("")))],null)],null)});
    function F3(a,b,c,d,e){var f=Ea(e),k=x.gh(f,hz);f=x.gh(f,Sv);try{return E3.la(d,k,f,a,b,c)}catch(m){if(m instanceof Error){var l=m;p(jm(l))||Vs(DA,"gateway.domains.global.core",426,new wl(function(){return new Q(null,3,5,R,[l,"Error processing message",e],null)}),-134510176);return new Q(null,2,5,R,[d,new Q(null,1,5,R,[rL.K("global",k,is.gh(f,-1),jw.m(f),dL(l,"global.errors.failure"))],null)],null)}throw m;}}
    function G3(a){this.Pe=new n(null,1,[rn,"127.0.0.1"],null);this.Zf=a;this.configuration=null;}G3.prototype.Yc=function(){return new n(null,3,[Vv,"global",Pn,"",In,1],null)};G3.prototype.Zc=function(a,b){return b};G3.prototype.Wc=function(a,b){return b};G3.prototype.Xc=function(a,b,c){return F3(this.Zf,this.configuration,this.Pe,b,c)};function H3(a,b){return jg(function(c,d,e){c=x.gh(b,d);return Sc(W_(e,c))?af(!1):!0},!0,a)}function I3(a,b,c){var d=fd.hh(function(e,f){return p(H3(PF.m(f),b))?p(X_(li.gh(f,new Q(null,2,5,R,[Vm,Hz],null)),c))?af(!1):p(e)?e:X_(li.gh(f,new Q(null,2,5,R,[Vm,py],null)),c):e},null,wH.m(a));if(null!=d)return d;a=eH.m(a);switch(a instanceof z?a.da:null){case "whitelist":return !0;case "blacklist":return !1;default:return !0}}function J3(a){if(null!=a&&null!=a.Cg)a=a.Cg(a);else {var b=J3[cb(null==a?null:a)];if(null!=b)a=b.m?b.m(a):b.call(null,a);else if(b=J3._,null!=b)a=b.m?b.m(a):b.call(null,a);else throw Yc("Repository.start!",a);}return a}function K3(a){if(null!=a&&null!=a.Dg)a.Dg(a);else {var b=K3[cb(null==a?null:a)];if(null!=b)b.m?b.m(a):b.call(null,a);else if(b=K3._,null!=b)b.m?b.m(a):b.call(null,a);else throw Yc("Repository.stop!",a);}}
    function L3(a,b){if(null!=a&&null!=a.Ag)a=a.Ag(a,b);else {var c=L3[cb(null==a?null:a)];if(null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else if(c=L3._,null!=c)a=c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Repository.add!",a);}return a}function M3(a,b){if(null!=a&&null!=a.Bg)a.Bg(a,b);else {var c=M3[cb(null==a?null:a)];if(null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else if(c=M3._,null!=c)c.gh?c.gh(a,b):c.call(null,a,b);else throw Yc("Repository.publish!",a);}}
    function N3(a,b){if(null!=a&&null!=a.Eg)a=a.Eg(a,b,null);else {var c=N3[cb(null==a?null:a)];if(null!=c)a=c.hh?c.hh(a,b,null):c.call(null,a,b,null);else if(c=N3._,null!=c)a=c.hh?c.hh(a,b,null):c.call(null,a,b,null);else throw Yc("RepositoryFactory.repository",a);}return a}var O3=new Ak(null,new n(null,3,[fJ,null,Zq,null,gp,null],null),null);function P3(a){var b=Dh(function(c){var d=!N(a,c);return d?c:d},O3);p(b)&&eL("metrics.errors.bad_identity",["Repository is missing required ",q.m(b)," property"].join(""));}
    function R3(a,b){var c=kJ.m(b);b=li.gh(b,new Q(null,2,5,R,[jE,rz],null));if(B(b)){Vs(mD,"gateway.domains.metrics.core",72,new wl(function(){return new Q(null,2,5,R,["stopping metrics publishing for peer",c],null)}),611227709);b=B(b);for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);K3(k);f+=1;}else if(b=B(b))d=b,Vf(d)?(b=qe(d),f=re(d),d=b,e=F(b),b=f):(b=C(d),K3(b),b=D(d),d=null,e=0),f=0;else break}return jL(a,c,jE)}
    function S3(a,b,c){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=ET(a,d);a=R3(a,f,fL(c));return new Q(null,2,5,R,[a,new Q(null,1,5,R,[sL.A("metrics",b,e,d)],null)],null)}function T3(a){return jg(function(b,c,d){return K.hh(b,c,U3.m?U3.m(d):U3.call(null,d))},S,a)}function U3(a){return jg(function(b,c,d){c=Jg.m(c);return K.hh(b,c,A.gh(c,Kt)?T3(d):d)},S,a)}
    function V3(a,b,c){var d=li.gh(c,new Q(null,2,5,R,[jE,rz],null));if(p(d))return new Q(null,2,5,R,[a,d],null);d=kJ.m(c);var e=li.gh(c,new Q(null,2,5,R,[jE,eB],null));b=Uk(Vh.gh(function(f){return J3(N3(f,e))},b));return new Q(null,2,5,R,[mi(a,new Q(null,4,5,R,[Cn,d,jE,rz],null),b),b],null)}
    function W3(a,b,c,d){var e=Ea(b);b=x.gh(e,jw);e=x.gh(e,Vm);var f=ET(a,b),k=li.gh(f,new Q(null,2,5,R,[jE,eB],null)),l=ei.gh(function(m){return I3(d,k,tw.m(m))},Vh.gh(U3,e));return B(l)?(Vs(uG,"gateway.domains.metrics.core",130,new wl(function(){return new Q(null,4,5,R,["publisher",k,"adding metrics",Vh.gh(tw,l)],null)}),-638365148),c=V3(a,c,f),a=J(c,0,null),c=J(c,1,null),B(c)?new Q(null,2,5,R,[mi(a,new Q(null,4,5,R,[Cn,b,jE,rz],null),Uk(Vh.gh(function(m){return L3(m,l)},c))),null],null):null):null}
    function X3(a,b,c){var d=Ea(b);b=x.gh(d,jw);d=x.gh(d,iA);b=ET(a,b);var e=li.gh(b,new Q(null,2,5,R,[jE,eB],null));a=ei.gh(function(m){return I3(c,e,tw.m(m))},Vh.gh(WK,d));if(B(a))if(b=li.gh(b,new Q(null,2,5,R,[jE,rz],null)),p(b)){b=B(b);d=null;for(var f=0,k=0;;)if(k<f){var l=d.W(null,k);M3(l,a);k+=1;}else if(b=B(b))d=b,Vf(d)?(b=qe(d),f=re(d),d=b,l=F(b),b=f,f=l):(l=C(d),M3(l,a),b=D(d),d=null,f=0),k=0;else return null}else return null;else return null}
    function Y3(a,b){Vs(uG,"gateway.domains.metrics.core",154,new wl(function(){return new Q(null,2,5,R,["removing source",b],null)}),46785780);a=fd.hh(function(c,d){return R3(c,d)},a,KT(a,b,jE));return new Q(null,2,5,R,[a,null],null)}
    var Z3=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.metrics.core","handle-request"),function(){function f(k,l,m,r){if(3<arguments.length)for(var t=0,v=Array(arguments.length-3);t<v.length;)v[t]=arguments[t+3],++t;return U.m(m)}f.F=3;f.G=function(k){C(k);k=D(k);C(k);k=D(k);var l=C(k);Qe(k);return U.m(l)};f.g=function(k,l,m){return U.m(m)};return f}(),e,a,b,c,d)}();
    Z3.v(null,qH,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Pe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){f=Ea(f);var k=x.gh(f,nI);var l=Ea(e);e=x.gh(l,is);f=x.gh(l,jw);var m=x.gh(l,jD);l=x.gh(l,YH);var r=vk.g;var t=Zx.m(m);p(t)||(t=Yu(Qs.m(d),rn.m(k)),t=p(t)?t:"127.0.0.1");k=new n(null,6,[Zx,t,Qn,Qn.m(k),Jo,(new Date).getTime(),Qz,Qz.m(k),Zq,Zq.m(m),fJ,Mr.m(m)],null);k=r.call(vk,G([k,
    WK(l),WK(m)]));p(kL(c,f,jE))?d=new Q(null,2,5,R,[c,new Q(null,1,5,R,[sL.A("metrics",d,e,f)],null)],null):(P3(k),c=mi(iL(c,f,jE,null),new Q(null,4,5,R,[Cn,f,jE,eB],null),k),d=new Q(null,2,5,R,[c,new Q(null,1,5,R,[sL.A("metrics",d,e,f)],null)],null));return d}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Qe(c);return b(d,e,f,c)};a.g=b;return a}());
    Z3.v(null,IF,function(){function a(b,c,d,e){if(3<arguments.length)for(var f=0,k=Array(arguments.length-3);f<k.length;)k[f]=arguments[f+3],++f;return S3(b,c,d)}a.F=3;a.G=function(b){var c=C(b);b=D(b);var d=C(b);b=D(b);var e=C(b);Qe(b);return S3(c,d,e)};a.g=function(b,c,d){return S3(b,c,d)};return a}());
    Z3.v(null,Iz,function(){function a(b,c,d,e){if(3<arguments.length)for(var f=0,k=Array(arguments.length-3);f<k.length;)k[f]=arguments[f+3],++f;return Y3(b,c)}a.F=3;a.G=function(b){var c=C(b);b=D(b);var d=C(b);b=D(b);C(b);Qe(b);return Y3(c,d)};a.g=function(b,c){return Y3(b,c)};return a}());
    Z3.v(null,nE,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Pe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){f=Ea(f);d=x.gh(f,hn);f=x.gh(f,or);return W3(c,e,d,f)}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Qe(c);return b(d,e,f,c)};a.g=b;return a}());
    Z3.v(null,qG,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Pe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e,f){d=Ea(f);d=x.gh(d,or);return X3(c,e,d)}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Qe(c);return b(d,e,f,c)};a.g=b;return a}());
    Z3.v(null,dm,function(){function a(c,d,e,f){var k=null;if(3<arguments.length){k=0;for(var l=Array(arguments.length-3);k<l.length;)l[k]=arguments[k+3],++k;k=new Pe(l,0,null);}return b.call(this,c,d,e,k)}function b(c,d,e){Vs(DA,"gateway.domains.metrics.core",185,new wl(function(){return new Q(null,2,5,R,["Unhandled message",e],null)}),-926970595);return new Q(null,2,5,R,[c,new Q(null,1,5,R,[rL.K("metrics",d,is.gh(e,-1),jw.m(e),gL("metrics.errors.unhandled_message",["Unhandled message ",q.m(e)].join("")))],
    null)],null)}a.F=3;a.G=function(c){var d=C(c);c=D(c);var e=C(c);c=D(c);var f=C(c);c=Qe(c);return b(d,e,f)};a.g=b;return a}());function $3(a){this.Pe=a;this.filters=this.Ah=null;}$3.prototype.Yc=function(){return new n(null,3,[Vv,"metrics",Pn,"",In,1],null)};$3.prototype.Zc=function(a,b){return b};$3.prototype.Wc=function(a,b){return fd.hh(function(c,d){return R3(c,d)},b,HT(b,jE))};
    $3.prototype.Xc=function(a,b,c){var d=Ea(c);a=x.gh(d,hz);d=x.gh(d,Sv);try{return Z3.Xa(b,a,d,nI,this.Pe,hn,this.Ah,or,this.filters)}catch(f){var e=f;p(jm(e))||Vs(DA,"gateway.domains.metrics.core",218,new wl(function(){return new Q(null,3,5,R,[e,"Error processing message",c],null)}),1788261917);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K("metrics",a,is.m(d),jw.m(d),dL(e,"metrics.errors.failure"))],null)],null)}};
    function a4(){var a=b4;Vs(uG,"gateway.domains.metrics.core",228,new wl(function(){return new Q(null,2,5,R,["initializing metrics domain with filters",null],null)}),515786628);return new $3(a)}function c4(a,b){Vs(uG,"gateway.domains.bus.core",53,new wl(function(){return new Q(null,2,5,R,["removing source",b],null)}),1782301026);a=fd.hh(function(c,d){return jL(c,Cp.m(d),Hq)},a,KT(a,b,Hq));return new Q(null,2,5,R,[a,null],null)}function d4(a){return di(function(b){var c=J(b,0,null);b=J(b,1,null);return Vh.hh(function(d,e){return new n(null,2,[PI,d,$I,e],null)},AO(c),b)},G([Vh.gh(function(b){return new Q(null,2,5,R,[b,li.gh(b,new Q(null,2,5,R,[Hq,my],null))],null)},a)]))}
    function e4(a,b,c){J(c,0,null);c=J(c,1,null);var d=Ea(c),e=x.gh(d,Wo);d=x.gh(d,kF);a=p(d)?Vk(d,a):A.gh(e,a);p(a)?(a=FH.m(c),b=Sc(a)||Sc(b)||A.gh(a,b)):b=a;return b}function f4(a,b){var c=jD.m(b);return jg(function(d,e,f){return A.gh(x.gh(c,e),f)?!0:af(!1)},!0,a)}
    function g4(a,b,c){var d=wn.m(b);if(p(d)){var e=Ea(b),f=x.gh(e,Wo),k=x.gh(e,sH),l=x.gh(e,jw);e=x.gh(e,qC);var m=Jh(e4,f,k);f=Ih(f4,wZ(e));var r=jD.m(c),t=new Th(Ck);c=fd.hh(function(v,y){y=Ea(y);var E=x.gh(y,PI),H=x.gh(y,$I);y=hz.m(E);E=kJ.m(E);tL(y)?(H=C(H),y=oL(y,new n(null,6,[uq,"bus",U,JA,jw,E,aA,H,zB,r,wn,d],null))):A.gh(l,E)?y=null:(y=Wp.m(y),N(u(t),y)?y=null:(t.Cc(null,Bf.gh(t.zb(null),y)),y=qL(k0(YK(Hx.m(a)),l),new n(null,2,[U,Wp,Wp,y],null),b)));return p(y)?Bf.gh(v,y):v},I,ei.gh(function(v){return m($I.m(v))},
    d4(ei.gh(f,RT(a,Hq,c,!0)))));return new Q(null,2,5,R,[a,c],null)}return null}
    function h4(a,b,c,d){var e=Ea(b),f=x.gh(e,Wo),k=x.gh(e,sH),l=x.gh(e,is);e=x.gh(e,jw);var m=hz.m(d),r=new Q(null,3,5,R,[Hq,my,c],null);k=new n(null,2,[Wo,f,FH,k],null);f=-1!=f.indexOf("\x3e")||-1!=f.indexOf("*")?K.hh(k,kF,Yk(LL(LL(LL(f,".","\\."),"*","[a-zA-Z_0-9]+"),"\x3e",".*"))):k;d=mi(d,r,f);return new Q(null,2,5,R,[NT(a,e,d),tL(m)?new Q(null,2,5,R,[oL(m,new n(null,5,[uq,"bus",U,Cz,is,l,jw,e,aA,c],null)),pL(k0(YK(Hx.m(a)),e),K.hh(b,aA,c))],null):null],null)}
    function i4(a,b,c){var d=Ea(b),e=x.gh(d,is),f=x.gh(d,jw),k=x.gh(d,aA);d=hz.m(c);c=ni.A(c,new Q(null,2,5,R,[Hq,my],null),Gf,k);return new Q(null,2,5,R,[NT(a,f,c),tL(d)?new Q(null,2,5,R,[sL.A("bus",d,e,f),pL(k0(YK(Hx.m(a)),f),b)],null):null],null)}var j4=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.bus.core","handle-request"),function(f,k,l){return U.m(l)},e,a,b,c,d)}();
    j4.v(null,qH,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);x.gh(d,jD);d=x.gh(d,os);if(p(kL(a,f,Hq)))a=new Q(null,2,5,R,[a,new Q(null,1,5,R,[sL.A("bus",b,e,f)],null)],null);else {d=iL(a,f,Hq,fS(d));var k=DT.gh(d,f),l=R,m=R;b=sL.A("bus",b,e,f);a=k0(YK(Hx.m(a)),f);c=K.hh(c,U,ds);c=p(YH.m(k))?K.hh(c,YH,YH.m(k)):c;a=new Q(null,2,5,l,[d,new Q(null,2,5,m,[b,pL(a,c)],null)],null);}}else d=Ea(c),c=x.gh(d,jw),d=x.gh(d,os),a=p(kL(a,c,Hq))?null:new Q(null,2,5,R,[iL(a,c,Hq,fS(d)),null],null);return a});
    j4.v(null,IF,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=jL(a,d,Hq);a=new Q(null,2,5,R,[f,new Q(null,2,5,R,[sL.A("bus",b,e,d),pL(k0(YK(Hx.m(a)),d),K.hh(c,U,Yt))],null)],null);}else b=Ea(c),b=x.gh(b,jw),c=DT.gh(a,b),a=p(c)?new Q(null,2,5,R,[jL(a,b,Hq),null],null):null;return a});j4.v(null,qG,function(a,b,c){tL(b)?(b=jw.m(c),b=ET(a,b),a=p(b)?g4(a,c,b):null):(b=jw.m(c),b=DT.gh(a,b),a=p(b)?g4(a,c,b):null);return a});
    j4.v(null,Ju,function(a,b,c){if(tL(b)){var d=ZK(Hx.m(a));b=J(d,0,null);d=J(d,1,null);var e=jw.m(c);e=FT(a,e,Hq);a=h4(K.hh(a,Hx,b),c,d,e);}else d=Ea(c),b=x.gh(d,aA),d=x.gh(d,jw),d=DT.hh(a,d,Hq),a=p(d)?h4(a,c,b,d):null;return a});j4.v(null,aH,function(a,b,c){tL(b)?(b=FT(a,jw.m(c),Hq),a=i4(a,c,b)):(b=DT.gh(a,jw.m(c)),a=p(b)?i4(a,c,b):null);return a});j4.v(null,Iz,function(a,b){return c4(a,b)});
    j4.v(null,dm,function(a,b,c){Vs(DA,"gateway.domains.bus.core",306,new wl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),261430072);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[rL.K("bus",b,is.gh(c,-1),jw.m(c),gL("bus.errors.unhandled_message",["Unhandled message ",q.m(c)].join("")))],null)],null)});function k4(){}k4.prototype.Yc=function(){return new n(null,3,[Vv,"bus",Pn,"",In,1],null)};k4.prototype.Zc=function(a,b){return b};k4.prototype.Wc=function(a,b){return b};
    k4.prototype.Xc=function(a,b,c){var d=Ea(c);a=x.gh(d,hz);d=x.gh(d,Sv);try{return j4.hh(b,a,d)}catch(f){var e=f;p(jm(e))||Vs(DA,"gateway.domains.bus.core",342,new wl(function(){return new Q(null,3,5,R,[e,"Error processing message",c],null)}),-159101908);return new Q(null,2,5,R,[b,new Q(null,1,5,R,[rL.K("bus",a,is.m(d),jw.m(d),dL(e,"bus.errors.failure"))],null)],null)}};H2("context");var l4=cL("context.peer-removed","Peer has been removed");var m4=Ih(sL,"context"),n4=Ih(rL,"context");var o4=Ih(T2,"context"),p4=Ih(b3,"context"),q4=Ih(d3,"context"),r4=Ih(X2,"context"),s4=Ih(f3,"context"),t4=Ih(function(a,b,c,d,e){var f=Ih(e3,a);b=TT(a,bt,b,c,d,e);a=J(b,0,null);b=J(b,1,null);b=ei.gh(Ih(h3,a),b);b=new Q(null,2,5,R,[a,b],null);a=J(b,0,null);b=J(b,1,null);f=f(a,c);c=J(f,0,null);f=J(f,1,null);return new Q(null,2,5,R,[p(c)?c:a,Zf(f)||Uf(f)?fd.hh(Lh(Bf,I),b,f):null!=f?Lh(Bf,I)(b,f):b],null)},"context");
    function u4(a,b,c,d){var e=FT(a,c,bt),f=function(){var k=ei.gh(Ih(h3,a),ST("context",bt,a,b,e));return p(d)?fi.gh(function(l){return A.gh(c,ZA.m(Sv.m(l)))},k):k}();return Mi(Wg.gh(f,Sc(d)?g3(P2(e),a,e):Re))}function v4(a,b,c,d,e){var f=fS(d);d=function(){var k=iL(a,c,bt,f);return p(e)?OT(k,c,function(l){return OK(l,new Q(null,2,5,R,[YH,lu],null))}):k}();return new Q(null,2,5,R,[d,u4(d,b,c,e)],null)}
    function w4(a,b,c){var d=Ea(c),e=x.gh(d,is),f=x.gh(d,jw);x.gh(d,jD);d=x.gh(d,os);var k=li.gh(c,new Q(null,2,5,R,[YH,lu],null)),l=function(){var v=DT.gh(a,f);v=null==v?null:YH.m(v);return null==v?null:lu.m(v)}(),m=kL(a,f,bt);if(p(p(m)?Sc(l):m))return new Q(null,2,5,R,[a,new Q(null,1,5,R,[m4(b,e,f)],null)],null);d=v4(a,b,f,d,p(m)?l:m);l=J(d,0,null);var r=J(d,1,null),t=DT.gh(l,f);return new Q(null,2,5,R,[l,function(){var v=Bf.gh,y=k0(YK(Hx.m(a)),f);var E=K.hh(c,U,ds);E=p(YH.m(t))?K.hh(E,YH,YH.m(t)):
    E;v=v.call(Bf,r,pL(y,E));return Sc(k)?Bf.gh(v,m4(b,e,f)):v}()],null)}function oD(a,b,c){c=Ea(c);var d=x.gh(c,jw);x.gh(c,jD);c=x.gh(c,os);var e=function(){var f=DT.gh(a,d);f=null==f?null:YH.m(f);return null==f?null:lu.m(f)}();return p(function(){var f=Sc(e);return f?kL(a,d,bt):f}())?null:v4(a,b,d,c,e)}
    function x4(a,b){Vs(uG,"gateway.domains.context.core",124,new wl(function(){return new Q(null,1,5,R,["removing source from the context domain"],null)}),728550627);b=Bh(KT(a,b,bt));a=ng(Vh.m(kJ),lg(function(d,e){return jL(d,e,bt)},kg),a,b);var c=new n(null,6,[is,null,uq,"global",U,Yt,vo,"context",qE,l4.uri,eJ,l4.message],null);a=fd.hh(function(d,e){var f=J(d,0,null);d=J(d,1,null);var k=t4(f,e,l4,!0),l=J(k,0,null);k=J(k,1,null);d=new Q(null,2,5,R,[p(l)?l:f,Zf(k)||Uf(k)?fd.hh(Lh(Bf,I),d,k):null!=k?Lh(Bf,
    I)(d,k):d],null);f=J(d,0,null);d=J(d,1,null);l=new Q(null,2,5,R,[f,pL(k0(YK(Hx.m(f)),kJ.m(e)),K.hh(c,jw,kJ.m(e)))],null);e=J(l,0,null);l=J(l,1,null);return new Q(null,2,5,R,[p(e)?e:f,Zf(l)||Uf(l)?fd.hh(Lh(Bf,I),d,l):null!=l?Lh(Bf,I)(d,l):d],null)},new Q(null,2,5,R,[a,null],null),b);Vs(uG,"gateway.domains.context.core",144,new wl(function(){return new Q(null,1,5,R,["removed source from context domain"],null)}),-1637865544);return a}
    var y4=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.domains.context.core","handle-request"),function(f,k,l){return U.m(l)},e,a,b,c,d)}();y4.v(null,qH,function(a,b,c){return tL(b)?w4(a,b,c):oD(a,b,c)});
    y4.v(null,IF,function(a,b,c){if(tL(b)){var d=Ea(c),e=x.gh(d,is);d=x.gh(d,jw);var f=t4(a,ET(a,d),fL(c),!1),k=J(f,0,null);f=J(f,1,null);a=new Q(null,2,5,R,[k,Bf.g(f,m4(b,e,d),G([pL(k0(YK(Hx.m(a)),d),K.hh(c,U,Yt))]))],null);}else b=Ea(c),b=x.gh(b,jw),b=DT.gh(a,b),a=p(b)?t4(a,b,fL(c),!1):null;return a});y4.v(null,Lu,function(a,b,c){return p4(a,b,c)});y4.v(null,jJ,function(a,b,c){return o4(a,b,c)});y4.v(null,Lw,function(a,b,c){return r4(a,b,c)});y4.v(null,Xw,function(a,b,c){return s4(a,b,c)});
    y4.v(null,Rt,function(a,b,c){return q4(a,b,c)});y4.v(null,Iz,function(a,b){return x4(a,b)});y4.v(null,dm,function(a,b,c){Vs(DA,"gateway.domains.context.core",209,new wl(function(){return new Q(null,2,5,R,["Unhandled message",c],null)}),1864664595);return new Q(null,2,5,R,[a,new Q(null,1,5,R,[n4(b,is.gh(c,-1),jw.m(c),gL([q.m("context"),".errors.unhandled_message"].join(""),["Unhandled message ",q.m(c)].join("")))],null)],null)});
    function z4(a,b){var c=Ea(b),d=x.gh(c,hz);c=x.gh(c,Sv);try{return y4.hh(a,d,c)}catch(f){var e=f;p(jm(e))||Vs(DA,"gateway.domains.context.core",226,new wl(function(){return new Q(null,3,5,R,[e,"Error handling request",b],null)}),-856009347);return tL(d)?new Q(null,2,5,R,[a,new Q(null,1,5,R,[n4(d,is.m(c),jw.m(c),dL(e,"context.errors.failure"))],null)],null):null}}function A4(){}A4.prototype.Yc=function(){return new n(null,3,[Vv,"context",Pn,"",In,2],null)};A4.prototype.Zc=function(a,b){return b};
    A4.prototype.Wc=function(a,b){return b};A4.prototype.Xc=function(a,b,c){return z4(b,c)};var B4=function(){var a=Nh(S),b=Nh(S),c=Nh(S),d=Nh(S),e=x.hh(S,gu,Pl.o?Pl.o():Pl.call(null));return new cm(Le.gh("gateway.basic-auth.core","authenticate"),function(f){return li.gh(f,new Q(null,2,5,R,[TB,Ss],null))},e,a,b,c,d)}();B4.v(null,"secret",function(a,b,c){return gZ(nZ(a),function(d){var e=j_(new n(null,2,[ct,ct.m(d),WC,sg(NK()+c,1E3)],null),b);return K.hh(d,Cu,e)})});
    B4.v(null,"access-token",function(a,b){try{var c=li.gh(a,new Q(null,2,5,R,[TB,Yp],null)),d=ct.m(i_.hh(c,b,new n(null,1,[RD,sg(NK(),1E3)],null)));return dZ.resolve(new n(null,4,[U,mz,Gs,d,ct,d,Cu,c],null))}catch(f){var e=f;Vs(uG,"gateway.basic-auth.core",37,new wl(function(){return new Q(null,2,5,R,[e,"Error processing access token authentication request"],null)}),-177353251);return dZ.reject(hm(km(e),new n(null,2,[U,fC,tr,["Invalid or expired token: ",q.m(km(e))].join("")],null)))}});
    B4.v(null,dm,function(a){a=li.gh(a,new Q(null,2,5,R,[TB,Ss],null));var b=["Unknown authentication method ",q.m(a)].join("");Vs(uG,"gateway.basic-auth.core",44,new wl(function(){return new Q(null,1,5,R,[b],null)}),-2007853334);return dZ.reject(hm(b,new n(null,2,[U,fC,tr,b],null)))});function C4(a,b){this.Gh=a;this.Ih=b;}C4.prototype.Re=function(a,b){return B4.hh(b,this.Gh,this.Ih)};function D4(a,b){return new C4(a,b)}
    function sD(){var a=S;Vs(mD,"gateway.basic-auth.core",57,new wl(function(){return new Q(null,2,5,R,["creating basic authenticator with configuration",a],null)}),-1124978956);return C_(a,D4(XK(),1E3*Rq.gh(a,6E4)))}var F4={},G4={},tD;(function(a){return hY(function(b){return K.hh(b,zI,a)})})(mD);var b4=new n(null,1,[Jo,(new Date).getTime()],null);function I4(a){return new n(null,6,[Fu,!0,oB,!1,zI,null,$B,null,wr,Zw,jI,function(b){b={time:vC.m(b),level:Kg($m.m(b)),namespace:vq.m(b),file:Kv.m(b),line:gF.m(b),stacktrace:$A.m(b),message:Al(ax.m(b)),output:Al(Lx.m(b))};return a.m?a.m(b):a.call(null,b)}],null)}
    sb("gateway_web.core.configure_logging",function(a){a=Ll(a,G([Ml,!0]));var b=new n(null,2,[$m,mD,BG,new n(null,1,[OI,bY.m?bY.m(S):bY.call(null,S)],null)],null);b=p($m.m(a))?K.hh(b,$m,Jg.m($m.m(a))):b;b=p(py.m(a))?K.hh(b,Fw,py.m(a)):b;b=p(Hz.m(a))?K.hh(b,sn,Hz.m(a)):b;a=p(xw.m(a))?mi(b,new Q(null,2,5,R,[BG,OI],null),I4(xw.m(a))):b;return iY(a)});
    function J4(a){a=li.gh(a,new Q(null,2,5,R,[TB,iy],null));return p(a)?(Vs(mD,"gateway-web.core",65,new wl(function(){return new Q(null,1,5,R,["will be using custom JS authenticator"],null)}),750253119),new n(null,2,[dm,zD,mw,new n(null,1,[zD,C_(S,new E5(a))],null)],null)):new n(null,2,[dm,zD,mw,new n(null,1,[zD,sD()],null)],null)}
    var K4=function K4(a,b,c,d,e){return p(function(){var k=u(a);return p(k)?0<e:k}())?(KY(c,d,(new Date).getTime()-1E3*e),Qh.gh(b,function(){return $Y(function(){return K4.K?K4.K(a,b,c,d,e):K4.call(null,a,b,c,d,e)})})):null};
    function L4(a){var b=Ux.m(u(a));Vs(mD,"gateway-web.core",82,new wl(function(){return new Q(null,2,5,R,["starting gateway with configuration",b],null)}),-2004713624);Qh.gh(a,function(c){var d=J4(b),e=new Q(null,6,5,R,[new f1,new q3,new G3(d),new k4,new A4,a4()],null);e=M_(e);var f=Nh(S),k=Nh(null),l=Nh(!0),m=li.hh(b,new Q(null,2,5,R,[gE,AD],null),60);0<m&&(Vs(mD,"gateway-web.core",97,new wl(function(){return new Q(null,3,5,R,["clients inactive for",m,"will be scavenged"],null)}),-713067475),K4(l,k,
    f,e,m));return K.g(c,CH,l,G([iq,d,Wp,e,gE,f,LA,k]))});}
    function M4(a){Vs(mD,"gateway-web.core",115,new wl(function(){return new Q(null,1,5,R,["stopping gateway"],null)}),-1411520906);Qh.gh(a,function(b){Qh.gh(CH.m(b),Gh(!1));var c=LA.m(b);c=null==c?null:u(c);null!=c&&UY(c);c=Wp.m(b);null!=c&&wY(c);c=iq.m(b);if(null!=c)a:{c=B(mj(mw.m(c)));for(var d=null,e=0,f=0;;)if(f<e){var k=d.W(null,f);mZ(k);f+=1;}else if(c=B(c))d=c,Vf(d)?(c=qe(d),e=re(d),d=c,k=F(c),c=e,e=k):(k=C(d),mZ(k),c=D(d),d=null,e=0),f=0;else break a}return new n(null,1,[Ux,Ux.m(b)],null)});}
    sb("gateway_web.core.create",function(a){var b=Nh(new n(null,1,[Ux,bO(uZ(a))],null));if("undefined"===typeof F4||"undefined"===typeof G4||"undefined"===typeof tD)tD=function(c,d,e){this.rg=c;this.qd=d;this.ri=e;this.h=393216;this.I=0;},tD.prototype.O=function(c,d){return new tD(this.rg,this.qd,d)},tD.prototype.N=function(){return this.ri},tD.prototype.start=function(){var c=this,d=this;return new Promise(function(e){L4(c.qd);return e.m?e.m(d):e.call(null,d)})},tD.prototype.stop=function(){var c=this,
    d=this;return new Promise(function(e){M4(c.qd);return e.m?e.m(d):e.call(null,d)})},tD.prototype.connect=function(c){return QY(this.qd,c)},tD.Ia=!0,tD.Da="gateway-web.core/t_gateway_web$core24040",tD.Ja=function(c){return be(c,"gateway-web.core/t_gateway_web$core24040")};return new tD(a,b,S)});
    }).call(commonjsGlobal);

    class Gateway {
        constructor() {
            this.configureLogging = window.gateway_web.core.configure_logging;
            this.create = window.gateway_web.core.create;
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (config === null || config === void 0 ? void 0 : config.logging) {
                    this.configureLogging({
                        level: config.logging.level,
                        appender: config.logging.appender
                    });
                }
                this._gatewayWebInstance = this.create({ clients: { inactive_seconds: 0 } });
                yield this._gatewayWebInstance.start();
            });
        }
        connectClient(clientPort) {
            return __awaiter(this, void 0, void 0, function* () {
                const client = yield this._gatewayWebInstance.connect((_, message) => clientPort.postMessage(message));
                return client;
            });
        }
        connectExtClient(port, removeFromPlatform) {
            return __awaiter(this, void 0, void 0, function* () {
                const client = yield this._gatewayWebInstance.connect((_, message) => port.postMessage({ glue42ExtInc: message }));
                port.onMessage.addListener((message) => {
                    var _a;
                    const coreData = (_a = message === null || message === void 0 ? void 0 : message.glue42ExtOut) === null || _a === void 0 ? void 0 : _a.glue42core;
                    if (coreData && coreData.type === Glue42CoreMessageTypes$1.clientUnload.name) {
                        client.disconnect();
                        port.disconnect();
                        if (removeFromPlatform) {
                            removeFromPlatform(coreData.data.clientId, true);
                        }
                        return;
                    }
                    if (message.glue42ExtOut && !coreData) {
                        const msg = message.glue42ExtOut;
                        client.send(msg);
                        return;
                    }
                });
            });
        }
        setupInternalClient(clientPort) {
            return __awaiter(this, void 0, void 0, function* () {
                let client;
                clientPort.onmessage = (event) => __awaiter(this, void 0, void 0, function* () {
                    var _a;
                    const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                    if (data && data.type === Glue42CoreMessageTypes$1.gatewayInternalConnect.name) {
                        client = yield this.handleInternalGatewayConnectionRequest(clientPort);
                        return;
                    }
                    if (!client || clientPort.closed) {
                        return;
                    }
                    if (data && data.type === Glue42CoreMessageTypes$1.gatewayDisconnect.name) {
                        clientPort.closed = true;
                        client === null || client === void 0 ? void 0 : client.disconnect();
                        return;
                    }
                    client === null || client === void 0 ? void 0 : client.send(event.data);
                });
            });
        }
        handleInternalGatewayConnectionRequest(clientPort) {
            return __awaiter(this, void 0, void 0, function* () {
                clientPort.closed = false;
                try {
                    const client = yield this._gatewayWebInstance.connect((_, message) => clientPort.postMessage(message));
                    clientPort.postMessage({
                        glue42core: {
                            type: Glue42CoreMessageTypes$1.gatewayInternalConnect.name,
                            success: true
                        }
                    });
                    return client;
                }
                catch (err) {
                    const stringError = typeof err === "string" ? err : JSON.stringify(err.message);
                    clientPort.postMessage({
                        glue42core: {
                            type: Glue42CoreMessageTypes$1.gatewayInternalConnect.name,
                            error: stringError
                        }
                    });
                    return;
                }
            });
        }
    }

    class PlatformLogger {
        setLogger(logger) {
            this._logger = logger;
        }
        get(subSystem) {
            if (!this._logger) {
                return;
            }
            return this._logger.subLogger(subSystem);
        }
    }
    var logger = new PlatformLogger();

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed$2 = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue$2() {
        seed$2 = (seed$2 * 9301 + 49297) % 233280;
        return seed$2/(233280.0);
    }

    function setSeed$3(_seed_) {
        seed$2 = _seed_;
    }

    var randomFromSeed$2 = {
        nextValue: getNextValue$2,
        seed: setSeed$3
    };

    var ORIGINAL$2 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet$2;
    var previousSeed$2;

    var shuffled$2;

    function reset$2() {
        shuffled$2 = false;
    }

    function setCharacters$2(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet$2 !== ORIGINAL$2) {
                alphabet$2 = ORIGINAL$2;
                reset$2();
            }
            return;
        }

        if (_alphabet_ === alphabet$2) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL$2.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$2.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$2.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet$2 = _alphabet_;
        reset$2();
    }

    function characters$2(_alphabet_) {
        setCharacters$2(_alphabet_);
        return alphabet$2;
    }

    function setSeed$4(seed) {
        randomFromSeed$2.seed(seed);
        if (previousSeed$2 !== seed) {
            reset$2();
            previousSeed$2 = seed;
        }
    }

    function shuffle$2() {
        if (!alphabet$2) {
            setCharacters$2(ORIGINAL$2);
        }

        var sourceArray = alphabet$2.split('');
        var targetArray = [];
        var r = randomFromSeed$2.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed$2.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled$2() {
        if (shuffled$2) {
            return shuffled$2;
        }
        shuffled$2 = shuffle$2();
        return shuffled$2;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup$2(index) {
        var alphabetShuffled = getShuffled$2();
        return alphabetShuffled[index];
    }

    function get$1 () {
      return alphabet$2 || ORIGINAL$2;
    }

    var alphabet_1$2 = {
        get: get$1,
        characters: characters$2,
        seed: setSeed$4,
        lookup: lookup$2,
        shuffled: getShuffled$2
    };

    var crypto$2 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    var randomByte$2;

    if (!crypto$2 || !crypto$2.getRandomValues) {
        randomByte$2 = function(size) {
            var bytes = [];
            for (var i = 0; i < size; i++) {
                bytes.push(Math.floor(Math.random() * 256));
            }
            return bytes;
        };
    } else {
        randomByte$2 = function(size) {
            return crypto$2.getRandomValues(new Uint8Array(size));
        };
    }

    var randomByteBrowser$2 = randomByte$2;

    // This file replaces `format.js` in bundlers like webpack or Rollup,
    // according to `browser` config in `package.json`.

    var format_browser$1 = function (random, alphabet, size) {
      // We can’t use bytes bigger than the alphabet. To make bytes values closer
      // to the alphabet, we apply bitmask on them. We look for the closest
      // `2 ** x - 1` number, which will be bigger than alphabet size. If we have
      // 30 symbols in the alphabet, we will take 31 (00011111).
      // We do not use faster Math.clz32, because it is not available in browsers.
      var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
      // Bitmask is not a perfect solution (in our example it will pass 31 bytes,
      // which is bigger than the alphabet). As a result, we will need more bytes,
      // than ID size, because we will refuse bytes bigger than the alphabet.

      // Every hardware random generator call is costly,
      // because we need to wait for entropy collection. This is why often it will
      // be faster to ask for few extra bytes in advance, to avoid additional calls.

      // Here we calculate how many random bytes should we call in advance.
      // It depends on ID length, mask / alphabet size and magic number 1.6
      // (which was selected according benchmarks).

      // -~f => Math.ceil(f) if n is float number
      // -~i => i + 1 if n is integer number
      var step = -~(1.6 * mask * size / alphabet.length);
      var id = '';

      while (true) {
        var bytes = random(step);
        // Compact alternative for `for (var i = 0; i < step; i++)`
        var i = step;
        while (i--) {
          // If random byte is bigger than alphabet even after bitmask,
          // we refuse it by `|| ''`.
          id += alphabet[bytes[i] & mask] || '';
          // More compact than `id.length + 1 === size`
          if (id.length === +size) return id
        }
      }
    };

    function generate$1(number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + format_browser$1(randomByteBrowser$2, alphabet_1$2.get(), 1);
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var generate_1$1 = generate$1;

    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME$1 = 1567752802062;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version$3 = 7;

    // Counter is used when shortid is called multiple times in one second.
    var counter$1;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds$1;

    /**
     * Generate unique id
     * Returns string id
     */
    function build$1(clusterWorkerId) {
        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME$1) * 0.001);

        if (seconds === previousSeconds$1) {
            counter$1++;
        } else {
            counter$1 = 0;
            previousSeconds$1 = seconds;
        }

        str = str + generate_1$1(version$3);
        str = str + generate_1$1(clusterWorkerId);
        if (counter$1 > 0) {
            str = str + generate_1$1(counter$1);
        }
        str = str + generate_1$1(seconds);
        return str;
    }

    var build_1$1 = build$1;

    function isShortId$2(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var nonAlphabetic = new RegExp('[^' +
          alphabet_1$2.get().replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&') +
        ']');
        return !nonAlphabetic.test(id);
    }

    var isValid$2 = isShortId$2;

    var lib$3 = createCommonjsModule$2(function (module) {





    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1$2.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1$2.characters(newCharacters);
        }

        return alphabet_1$2.shuffled();
    }

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {
      return build_1$1(clusterWorkerId);
    }

    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.isValid = isValid$2;
    });

    var shortid$2 = lib$3;

    class PlatformController {
        constructor(domainsController, glueController, portsBridge, stateController, serviceWorkerController, preferredConnectionController, interceptionController, pluginsController) {
            this.domainsController = domainsController;
            this.glueController = glueController;
            this.portsBridge = portsBridge;
            this.stateController = stateController;
            this.serviceWorkerController = serviceWorkerController;
            this.preferredConnectionController = preferredConnectionController;
            this.interceptionController = interceptionController;
            this.pluginsController = pluginsController;
        }
        get logger() {
            return logger.get("main.web.platform");
        }
        get ctxTrackingGlue() {
            return this.glueController.contextsTrackingGlue;
        }
        get systemGlue() {
            return this.glueController.systemGlue;
        }
        get platformApi() {
            return this._platformApi;
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                yield this.portsBridge.configure(config);
                this.portsBridge.onClientUnloaded(this.handleClientUnloaded.bind(this));
                yield this.glueController.start(config);
                yield Promise.all([
                    this.glueController.createPlatformSystemMethod(this.handleClientMessage.bind(this)),
                    this.glueController.createPlatformSystemStream()
                ]);
                this.stateController.start();
                yield this.domainsController.startAllDomains(config);
                yield this.glueController.initClientGlue(config === null || config === void 0 ? void 0 : config.glue, config === null || config === void 0 ? void 0 : config.glueFactory, (_a = config === null || config === void 0 ? void 0 : config.workspaces) === null || _a === void 0 ? void 0 : _a.isFrame);
                yield this.serviceWorkerController.connect(config);
                this._platformApi = this.buildPlatformApi(config);
                yield this.pluginsController.startCorePlus(config);
                yield this.pluginsController.start({
                    platformConfig: config,
                    plugins: (_b = config.plugins) === null || _b === void 0 ? void 0 : _b.definitions,
                    api: this.platformApi,
                    handlePluginMessage: this.handlePluginMessage.bind(this)
                });
                if (config.connection.preferred) {
                    yield this.preferredConnectionController.start(config.connection.preferred);
                }
                this.serviceWorkerController.notifyReady();
                this.portsBridge.start();
            });
        }
        getClientGlue() {
            return this.glueController.clientGlue;
        }
        handleClientMessage(args, caller, success, error) {
            this.processControllerCommand(args, "client", caller.instance)
                .then((result) => success(result))
                .catch((err) => error(err));
        }
        handlePluginMessage(args, pluginName) {
            return __awaiter(this, void 0, void 0, function* () {
                return this.processControllerCommand(args, "plugin", pluginName);
            });
        }
        processControllerCommand(args, callerType, callerId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    this.domainsController.validateDomain(args.domain);
                }
                catch (error) {
                    const errString = JSON.stringify(error);
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`rejecting execution of a command issued by a ${callerType}: ${callerId}, because of a domain validation error: ${errString}`);
                    throw new Error(`Cannot execute this platform control, because of domain validation error: ${errString}`);
                }
                const controlMessage = Object.assign({}, args, {
                    commandId: shortid$2.generate(),
                    callerId, callerType
                });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${controlMessage.commandId}] received a command for a valid domain: ${args.domain} from ${callerType}: ${callerId}, forwarding to the appropriate controller`);
                try {
                    const result = yield this.executeCommand(controlMessage);
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${controlMessage.commandId}] this command was executed successfully, sending the result to the caller.`);
                    return result;
                }
                catch (error) {
                    const stringError = typeof error === "string" ? error : JSON.stringify(error.message);
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${controlMessage.commandId}] this command's execution was rejected, reason: ${stringError}`);
                    throw new Error(`The platform rejected operation ${controlMessage.operation} for domain: ${args.domain} with reason: ${stringError}`);
                }
            });
        }
        handleClientUnloaded(client) {
            this.domainsController.notifyDomainsClientUnloaded(client);
        }
        executeCommand(controlMessage) {
            var _a, _b;
            const interceptor = this.interceptionController.getOperationInterceptor({ domain: controlMessage.domain, operation: controlMessage.operation });
            if (interceptor && !((_a = controlMessage.settings) === null || _a === void 0 ? void 0 : _a.skipInterception)) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${controlMessage.commandId}] The operation is being intercepted and executed by: ${interceptor.name}`);
                return interceptor.intercept(controlMessage);
            }
            return this.domainsController.executeControlMessage(controlMessage);
        }
        buildPlatformApi(config) {
            return {
                version: this.glueController.platformVersion,
                corePlus: config.corePlus ? { version: config.corePlus.version } : undefined,
                contextTrackGlue: this.ctxTrackingGlue,
                systemGlue: this.systemGlue,
                connectExtClient: (client, port) => {
                    return this.connectExtClient(client, port);
                },
                onSystemReconnect: (callback) => {
                    return this.onSystemReconnect(callback);
                }
            };
        }
        connectExtClient(client, port) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.portsBridge.handleExtConnectionRequest(client, port);
            });
        }
        onSystemReconnect(callback) {
            return this.preferredConnectionController.onReconnect(callback);
        }
    }

    /**
     * Wraps values in an `Ok` type.
     *
     * Example: `ok(5) // => {ok: true, result: 5}`
     */
    var ok$1 = function (result) { return ({ ok: true, result: result }); };
    /**
     * Typeguard for `Ok`.
     */
    var isOk$1 = function (r) { return r.ok === true; };
    /**
     * Wraps errors in an `Err` type.
     *
     * Example: `err('on fire') // => {ok: false, error: 'on fire'}`
     */
    var err$1 = function (error) { return ({ ok: false, error: error }); };
    /**
     * Typeguard for `Err`.
     */
    var isErr$1 = function (r) { return r.ok === false; };
    /**
     * Create a `Promise` that either resolves with the result of `Ok` or rejects
     * with the error of `Err`.
     */
    var asPromise$1 = function (r) {
        return r.ok === true ? Promise.resolve(r.result) : Promise.reject(r.error);
    };
    /**
     * Unwraps a `Result` and returns either the result of an `Ok`, or
     * `defaultValue`.
     *
     * Example:
     * ```
     * Result.withDefault(5, number().run(json))
     * ```
     *
     * It would be nice if `Decoder` had an instance method that mirrored this
     * function. Such a method would look something like this:
     * ```
     * class Decoder<A> {
     *   runWithDefault = (defaultValue: A, json: any): A =>
     *     Result.withDefault(defaultValue, this.run(json));
     * }
     *
     * number().runWithDefault(5, json)
     * ```
     * Unfortunately, the type of `defaultValue: A` on the method causes issues
     * with type inference on  the `object` decoder in some situations. While these
     * inference issues can be solved by providing the optional type argument for
     * `object`s, the extra trouble and confusion doesn't seem worth it.
     */
    var withDefault$1 = function (defaultValue, r) {
        return r.ok === true ? r.result : defaultValue;
    };
    /**
     * Return the successful result, or throw an error.
     */
    var withException$1 = function (r) {
        if (r.ok === true) {
            return r.result;
        }
        else {
            throw r.error;
        }
    };
    /**
     * Given an array of `Result`s, return the successful values.
     */
    var successes$1 = function (results) {
        return results.reduce(function (acc, r) { return (r.ok === true ? acc.concat(r.result) : acc); }, []);
    };
    /**
     * Apply `f` to the result of an `Ok`, or pass the error through.
     */
    var map$1 = function (f, r) {
        return r.ok === true ? ok$1(f(r.result)) : r;
    };
    /**
     * Apply `f` to the result of two `Ok`s, or pass an error through. If both
     * `Result`s are errors then the first one is returned.
     */
    var map2$1 = function (f, ar, br) {
        return ar.ok === false ? ar :
            br.ok === false ? br :
                ok$1(f(ar.result, br.result));
    };
    /**
     * Apply `f` to the error of an `Err`, or pass the success through.
     */
    var mapError$1 = function (f, r) {
        return r.ok === true ? r : err$1(f(r.error));
    };
    /**
     * Chain together a sequence of computations that may fail, similar to a
     * `Promise`. If the first computation fails then the error will propagate
     * through. If it succeeds, then `f` will be applied to the value, returning a
     * new `Result`.
     */
    var andThen$1 = function (f, r) {
        return r.ok === true ? f(r.result) : r;
    };


    var result$1 = Object.freeze({
    	ok: ok$1,
    	isOk: isOk$1,
    	err: err$1,
    	isErr: isErr$1,
    	asPromise: asPromise$1,
    	withDefault: withDefault$1,
    	withException: withException$1,
    	successes: successes$1,
    	map: map$1,
    	map2: map2$1,
    	mapError: mapError$1,
    	andThen: andThen$1
    });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */



    var __assign$2 = function() {
        __assign$2 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$2.apply(this, arguments);
    };

    function __rest$2(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function isEqual$1(a, b) {
        if (a === b) {
            return true;
        }
        if (a === null && b === null) {
            return true;
        }
        if (typeof (a) !== typeof (b)) {
            return false;
        }
        if (typeof (a) === 'object') {
            // Array
            if (Array.isArray(a)) {
                if (!Array.isArray(b)) {
                    return false;
                }
                if (a.length !== b.length) {
                    return false;
                }
                for (var i = 0; i < a.length; i++) {
                    if (!isEqual$1(a[i], b[i])) {
                        return false;
                    }
                }
                return true;
            }
            // Hash table
            var keys = Object.keys(a);
            if (keys.length !== Object.keys(b).length) {
                return false;
            }
            for (var i = 0; i < keys.length; i++) {
                if (!b.hasOwnProperty(keys[i])) {
                    return false;
                }
                if (!isEqual$1(a[keys[i]], b[keys[i]])) {
                    return false;
                }
            }
            return true;
        }
    }
    /*
     * Helpers
     */
    var isJsonArray$1 = function (json) { return Array.isArray(json); };
    var isJsonObject$1 = function (json) {
        return typeof json === 'object' && json !== null && !isJsonArray$1(json);
    };
    var typeString$1 = function (json) {
        switch (typeof json) {
            case 'string':
                return 'a string';
            case 'number':
                return 'a number';
            case 'boolean':
                return 'a boolean';
            case 'undefined':
                return 'undefined';
            case 'object':
                if (json instanceof Array) {
                    return 'an array';
                }
                else if (json === null) {
                    return 'null';
                }
                else {
                    return 'an object';
                }
            default:
                return JSON.stringify(json);
        }
    };
    var expectedGot$1 = function (expected, got) {
        return "expected " + expected + ", got " + typeString$1(got);
    };
    var printPath$1 = function (paths) {
        return paths.map(function (path) { return (typeof path === 'string' ? "." + path : "[" + path + "]"); }).join('');
    };
    var prependAt$1 = function (newAt, _a) {
        var at = _a.at, rest = __rest$2(_a, ["at"]);
        return (__assign$2({ at: newAt + (at || '') }, rest));
    };
    /**
     * Decoders transform json objects with unknown structure into known and
     * verified forms. You can create objects of type `Decoder<A>` with either the
     * primitive decoder functions, such as `boolean()` and `string()`, or by
     * applying higher-order decoders to the primitives, such as `array(boolean())`
     * or `dict(string())`.
     *
     * Each of the decoder functions are available both as a static method on
     * `Decoder` and as a function alias -- for example the string decoder is
     * defined at `Decoder.string()`, but is also aliased to `string()`. Using the
     * function aliases exported with the library is recommended.
     *
     * `Decoder` exposes a number of 'run' methods, which all decode json in the
     * same way, but communicate success and failure in different ways. The `map`
     * and `andThen` methods modify decoders without having to call a 'run' method.
     *
     * Alternatively, the main decoder `run()` method returns an object of type
     * `Result<A, DecoderError>`. This library provides a number of helper
     * functions for dealing with the `Result` type, so you can do all the same
     * things with a `Result` as with the decoder methods.
     */
    var Decoder$1 = /** @class */ (function () {
        /**
         * The Decoder class constructor is kept private to separate the internal
         * `decode` function from the external `run` function. The distinction
         * between the two functions is that `decode` returns a
         * `Partial<DecoderError>` on failure, which contains an unfinished error
         * report. When `run` is called on a decoder, the relevant series of `decode`
         * calls is made, and then on failure the resulting `Partial<DecoderError>`
         * is turned into a `DecoderError` by filling in the missing information.
         *
         * While hiding the constructor may seem restrictive, leveraging the
         * provided decoder combinators and helper functions such as
         * `andThen` and `map` should be enough to build specialized decoders as
         * needed.
         */
        function Decoder(decode) {
            var _this = this;
            this.decode = decode;
            /**
             * Run the decoder and return a `Result` with either the decoded value or a
             * `DecoderError` containing the json input, the location of the error, and
             * the error message.
             *
             * Examples:
             * ```
             * number().run(12)
             * // => {ok: true, result: 12}
             *
             * string().run(9001)
             * // =>
             * // {
             * //   ok: false,
             * //   error: {
             * //     kind: 'DecoderError',
             * //     input: 9001,
             * //     at: 'input',
             * //     message: 'expected a string, got 9001'
             * //   }
             * // }
             * ```
             */
            this.run = function (json) {
                return mapError$1(function (error) { return ({
                    kind: 'DecoderError',
                    input: json,
                    at: 'input' + (error.at || ''),
                    message: error.message || ''
                }); }, _this.decode(json));
            };
            /**
             * Run the decoder as a `Promise`.
             */
            this.runPromise = function (json) { return asPromise$1(_this.run(json)); };
            /**
             * Run the decoder and return the value on success, or throw an exception
             * with a formatted error string.
             */
            this.runWithException = function (json) { return withException$1(_this.run(json)); };
            /**
             * Construct a new decoder that applies a transformation to the decoded
             * result. If the decoder succeeds then `f` will be applied to the value. If
             * it fails the error will propagated through.
             *
             * Example:
             * ```
             * number().map(x => x * 5).run(10)
             * // => {ok: true, result: 50}
             * ```
             */
            this.map = function (f) {
                return new Decoder(function (json) { return map$1(f, _this.decode(json)); });
            };
            /**
             * Chain together a sequence of decoders. The first decoder will run, and
             * then the function will determine what decoder to run second. If the result
             * of the first decoder succeeds then `f` will be applied to the decoded
             * value. If it fails the error will propagate through.
             *
             * This is a very powerful method -- it can act as both the `map` and `where`
             * methods, can improve error messages for edge cases, and can be used to
             * make a decoder for custom types.
             *
             * Example of adding an error message:
             * ```
             * const versionDecoder = valueAt(['version'], number());
             * const infoDecoder3 = object({a: boolean()});
             *
             * const decoder = versionDecoder.andThen(version => {
             *   switch (version) {
             *     case 3:
             *       return infoDecoder3;
             *     default:
             *       return fail(`Unable to decode info, version ${version} is not supported.`);
             *   }
             * });
             *
             * decoder.run({version: 3, a: true})
             * // => {ok: true, result: {a: true}}
             *
             * decoder.run({version: 5, x: 'abc'})
             * // =>
             * // {
             * //   ok: false,
             * //   error: {... message: 'Unable to decode info, version 5 is not supported.'}
             * // }
             * ```
             *
             * Example of decoding a custom type:
             * ```
             * // nominal type for arrays with a length of at least one
             * type NonEmptyArray<T> = T[] & { __nonEmptyArrayBrand__: void };
             *
             * const nonEmptyArrayDecoder = <T>(values: Decoder<T>): Decoder<NonEmptyArray<T>> =>
             *   array(values).andThen(arr =>
             *     arr.length > 0
             *       ? succeed(createNonEmptyArray(arr))
             *       : fail(`expected a non-empty array, got an empty array`)
             *   );
             * ```
             */
            this.andThen = function (f) {
                return new Decoder(function (json) {
                    return andThen$1(function (value) { return f(value).decode(json); }, _this.decode(json));
                });
            };
            /**
             * Add constraints to a decoder _without_ changing the resulting type. The
             * `test` argument is a predicate function which returns true for valid
             * inputs. When `test` fails on an input, the decoder fails with the given
             * `errorMessage`.
             *
             * ```
             * const chars = (length: number): Decoder<string> =>
             *   string().where(
             *     (s: string) => s.length === length,
             *     `expected a string of length ${length}`
             *   );
             *
             * chars(5).run('12345')
             * // => {ok: true, result: '12345'}
             *
             * chars(2).run('HELLO')
             * // => {ok: false, error: {... message: 'expected a string of length 2'}}
             *
             * chars(12).run(true)
             * // => {ok: false, error: {... message: 'expected a string, got a boolean'}}
             * ```
             */
            this.where = function (test, errorMessage) {
                return _this.andThen(function (value) { return (test(value) ? Decoder.succeed(value) : Decoder.fail(errorMessage)); });
            };
        }
        /**
         * Decoder primitive that validates strings, and fails on all other input.
         */
        Decoder.string = function () {
            return new Decoder(function (json) {
                return typeof json === 'string'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a string', json) });
            });
        };
        /**
         * Decoder primitive that validates numbers, and fails on all other input.
         */
        Decoder.number = function () {
            return new Decoder(function (json) {
                return typeof json === 'number'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a number', json) });
            });
        };
        /**
         * Decoder primitive that validates booleans, and fails on all other input.
         */
        Decoder.boolean = function () {
            return new Decoder(function (json) {
                return typeof json === 'boolean'
                    ? ok$1(json)
                    : err$1({ message: expectedGot$1('a boolean', json) });
            });
        };
        Decoder.constant = function (value) {
            return new Decoder(function (json) {
                return isEqual$1(json, value)
                    ? ok$1(value)
                    : err$1({ message: "expected " + JSON.stringify(value) + ", got " + JSON.stringify(json) });
            });
        };
        Decoder.object = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonObject$1(json) && decoders) {
                    var obj = {};
                    for (var key in decoders) {
                        if (decoders.hasOwnProperty(key)) {
                            var r = decoders[key].decode(json[key]);
                            if (r.ok === true) {
                                // tslint:disable-next-line:strict-type-predicates
                                if (r.result !== undefined) {
                                    obj[key] = r.result;
                                }
                            }
                            else if (json[key] === undefined) {
                                return err$1({ message: "the key '" + key + "' is required but was not present" });
                            }
                            else {
                                return err$1(prependAt$1("." + key, r.error));
                            }
                        }
                    }
                    return ok$1(obj);
                }
                else if (isJsonObject$1(json)) {
                    return ok$1(json);
                }
                else {
                    return err$1({ message: expectedGot$1('an object', json) });
                }
            });
        };
        Decoder.array = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonArray$1(json) && decoder) {
                    var decodeValue_1 = function (v, i) {
                        return mapError$1(function (err$$1) { return prependAt$1("[" + i + "]", err$$1); }, decoder.decode(v));
                    };
                    return json.reduce(function (acc, v, i) {
                        return map2$1(function (arr, result) { return arr.concat([result]); }, acc, decodeValue_1(v, i));
                    }, ok$1([]));
                }
                else if (isJsonArray$1(json)) {
                    return ok$1(json);
                }
                else {
                    return err$1({ message: expectedGot$1('an array', json) });
                }
            });
        };
        Decoder.tuple = function (decoders) {
            return new Decoder(function (json) {
                if (isJsonArray$1(json)) {
                    if (json.length !== decoders.length) {
                        return err$1({
                            message: "expected a tuple of length " + decoders.length + ", got one of length " + json.length
                        });
                    }
                    var result = [];
                    for (var i = 0; i < decoders.length; i++) {
                        var nth = decoders[i].decode(json[i]);
                        if (nth.ok) {
                            result[i] = nth.result;
                        }
                        else {
                            return err$1(prependAt$1("[" + i + "]", nth.error));
                        }
                    }
                    return ok$1(result);
                }
                else {
                    return err$1({ message: expectedGot$1("a tuple of length " + decoders.length, json) });
                }
            });
        };
        Decoder.union = function (ad, bd) {
            var decoders = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                decoders[_i - 2] = arguments[_i];
            }
            return Decoder.oneOf.apply(Decoder, [ad, bd].concat(decoders));
        };
        Decoder.intersection = function (ad, bd) {
            var ds = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                ds[_i - 2] = arguments[_i];
            }
            return new Decoder(function (json) {
                return [ad, bd].concat(ds).reduce(function (acc, decoder) { return map2$1(Object.assign, acc, decoder.decode(json)); }, ok$1({}));
            });
        };
        /**
         * Escape hatch to bypass validation. Always succeeds and types the result as
         * `any`. Useful for defining decoders incrementally, particularly for
         * complex objects.
         *
         * Example:
         * ```
         * interface User {
         *   name: string;
         *   complexUserData: ComplexType;
         * }
         *
         * const userDecoder: Decoder<User> = object({
         *   name: string(),
         *   complexUserData: anyJson()
         * });
         * ```
         */
        Decoder.anyJson = function () { return new Decoder(function (json) { return ok$1(json); }); };
        /**
         * Decoder identity function which always succeeds and types the result as
         * `unknown`.
         */
        Decoder.unknownJson = function () {
            return new Decoder(function (json) { return ok$1(json); });
        };
        /**
         * Decoder for json objects where the keys are unknown strings, but the values
         * should all be of the same type.
         *
         * Example:
         * ```
         * dict(number()).run({chocolate: 12, vanilla: 10, mint: 37});
         * // => {ok: true, result: {chocolate: 12, vanilla: 10, mint: 37}}
         * ```
         */
        Decoder.dict = function (decoder) {
            return new Decoder(function (json) {
                if (isJsonObject$1(json)) {
                    var obj = {};
                    for (var key in json) {
                        if (json.hasOwnProperty(key)) {
                            var r = decoder.decode(json[key]);
                            if (r.ok === true) {
                                obj[key] = r.result;
                            }
                            else {
                                return err$1(prependAt$1("." + key, r.error));
                            }
                        }
                    }
                    return ok$1(obj);
                }
                else {
                    return err$1({ message: expectedGot$1('an object', json) });
                }
            });
        };
        /**
         * Decoder for values that may be `undefined`. This is primarily helpful for
         * decoding interfaces with optional fields.
         *
         * Example:
         * ```
         * interface User {
         *   id: number;
         *   isOwner?: boolean;
         * }
         *
         * const decoder: Decoder<User> = object({
         *   id: number(),
         *   isOwner: optional(boolean())
         * });
         * ```
         */
        Decoder.optional = function (decoder) {
            return new Decoder(function (json) { return (json === undefined || json === null ? ok$1(undefined) : decoder.decode(json)); });
        };
        /**
         * Decoder that attempts to run each decoder in `decoders` and either succeeds
         * with the first successful decoder, or fails after all decoders have failed.
         *
         * Note that `oneOf` expects the decoders to all have the same return type,
         * while `union` creates a decoder for the union type of all the input
         * decoders.
         *
         * Examples:
         * ```
         * oneOf(string(), number().map(String))
         * oneOf(constant('start'), constant('stop'), succeed('unknown'))
         * ```
         */
        Decoder.oneOf = function () {
            var decoders = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                decoders[_i] = arguments[_i];
            }
            return new Decoder(function (json) {
                var errors = [];
                for (var i = 0; i < decoders.length; i++) {
                    var r = decoders[i].decode(json);
                    if (r.ok === true) {
                        return r;
                    }
                    else {
                        errors[i] = r.error;
                    }
                }
                var errorsList = errors
                    .map(function (error) { return "at error" + (error.at || '') + ": " + error.message; })
                    .join('", "');
                return err$1({
                    message: "expected a value matching one of the decoders, got the errors [\"" + errorsList + "\"]"
                });
            });
        };
        /**
         * Decoder that always succeeds with either the decoded value, or a fallback
         * default value.
         */
        Decoder.withDefault = function (defaultValue, decoder) {
            return new Decoder(function (json) {
                return ok$1(withDefault$1(defaultValue, decoder.decode(json)));
            });
        };
        /**
         * Decoder that pulls a specific field out of a json structure, instead of
         * decoding and returning the full structure. The `paths` array describes the
         * object keys and array indices to traverse, so that values can be pulled out
         * of a nested structure.
         *
         * Example:
         * ```
         * const decoder = valueAt(['a', 'b', 0], string());
         *
         * decoder.run({a: {b: ['surprise!']}})
         * // => {ok: true, result: 'surprise!'}
         *
         * decoder.run({a: {x: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b[0]' message: 'path does not exist'}}
         * ```
         *
         * Note that the `decoder` is ran on the value found at the last key in the
         * path, even if the last key is not found. This allows the `optional`
         * decoder to succeed when appropriate.
         * ```
         * const optionalDecoder = valueAt(['a', 'b', 'c'], optional(string()));
         *
         * optionalDecoder.run({a: {b: {c: 'surprise!'}}})
         * // => {ok: true, result: 'surprise!'}
         *
         * optionalDecoder.run({a: {b: 'cats'}})
         * // => {ok: false, error: {... at: 'input.a.b.c' message: 'expected an object, got "cats"'}
         *
         * optionalDecoder.run({a: {b: {z: 1}}})
         * // => {ok: true, result: undefined}
         * ```
         */
        Decoder.valueAt = function (paths, decoder) {
            return new Decoder(function (json) {
                var jsonAtPath = json;
                for (var i = 0; i < paths.length; i++) {
                    if (jsonAtPath === undefined) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: 'path does not exist'
                        });
                    }
                    else if (typeof paths[i] === 'string' && !isJsonObject$1(jsonAtPath)) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: expectedGot$1('an object', jsonAtPath)
                        });
                    }
                    else if (typeof paths[i] === 'number' && !isJsonArray$1(jsonAtPath)) {
                        return err$1({
                            at: printPath$1(paths.slice(0, i + 1)),
                            message: expectedGot$1('an array', jsonAtPath)
                        });
                    }
                    else {
                        jsonAtPath = jsonAtPath[paths[i]];
                    }
                }
                return mapError$1(function (error) {
                    return jsonAtPath === undefined
                        ? { at: printPath$1(paths), message: 'path does not exist' }
                        : prependAt$1(printPath$1(paths), error);
                }, decoder.decode(jsonAtPath));
            });
        };
        /**
         * Decoder that ignores the input json and always succeeds with `fixedValue`.
         */
        Decoder.succeed = function (fixedValue) {
            return new Decoder(function (json) { return ok$1(fixedValue); });
        };
        /**
         * Decoder that ignores the input json and always fails with `errorMessage`.
         */
        Decoder.fail = function (errorMessage) {
            return new Decoder(function (json) { return err$1({ message: errorMessage }); });
        };
        /**
         * Decoder that allows for validating recursive data structures. Unlike with
         * functions, decoders assigned to variables can't reference themselves
         * before they are fully defined. We can avoid prematurely referencing the
         * decoder by wrapping it in a function that won't be called until use, at
         * which point the decoder has been defined.
         *
         * Example:
         * ```
         * interface Comment {
         *   msg: string;
         *   replies: Comment[];
         * }
         *
         * const decoder: Decoder<Comment> = object({
         *   msg: string(),
         *   replies: lazy(() => array(decoder))
         * });
         * ```
         */
        Decoder.lazy = function (mkDecoder) {
            return new Decoder(function (json) { return mkDecoder().decode(json); });
        };
        return Decoder;
    }());

    /* tslint:disable:variable-name */
    /** See `Decoder.string` */
    var string$1 = Decoder$1.string;
    /** See `Decoder.number` */
    var number$1 = Decoder$1.number;
    /** See `Decoder.boolean` */
    var boolean$1 = Decoder$1.boolean;
    /** See `Decoder.anyJson` */
    var anyJson$1 = Decoder$1.anyJson;
    /** See `Decoder.constant` */
    var constant$1 = Decoder$1.constant;
    /** See `Decoder.object` */
    var object$1 = Decoder$1.object;
    /** See `Decoder.array` */
    var array$1 = Decoder$1.array;
    /** See `Decoder.optional` */
    var optional$1 = Decoder$1.optional;
    /** See `Decoder.oneOf` */
    var oneOf$1 = Decoder$1.oneOf;
    /** See `Decoder.intersection` */
    var intersection = Decoder$1.intersection;
    /** See `Decoder.fail` */
    var fail = Decoder$1.fail;
    /** See `Decoder.lazy` */
    var lazy$1 = Decoder$1.lazy;

    const nonNegativeNumberDecoder$1 = number$1().where((num) => num >= 0, "Expected a non-negative number");
    const nonEmptyStringDecoder$1 = string$1().where((s) => s.length > 0, "Expected a non-empty string");
    const anyDecoder$1 = anyJson$1();
    const windowBoundsDecoder$1 = object$1({
        top: number$1(),
        left: number$1(),
        width: nonNegativeNumberDecoder$1,
        height: nonNegativeNumberDecoder$1
    });
    const windowRelativeDirectionDecoder$1 = oneOf$1(constant$1("top"), constant$1("left"), constant$1("right"), constant$1("bottom"));
    const logLevelDecoder = oneOf$1(constant$1("trace"), constant$1("debug"), constant$1("info"), constant$1("warn"), constant$1("error"));
    const channelMetaDecoder = anyJson$1().where((meta) => typeof meta["color"] === "string" && meta["color"].length > 0, "Expected color to be a non-empty string");
    const layoutTypeDecoder$1 = oneOf$1(constant$1("Global"), constant$1("Activity"), constant$1("ApplicationDefault"), constant$1("Swimlane"), constant$1("Workspace"));
    const componentTypeDecoder$1 = oneOf$1(constant$1("application"), constant$1("activity"));
    const functionCheck = (input, propDescription) => {
        const providedType = typeof input;
        return providedType === "function" ?
            anyJson$1() :
            fail(`The provided argument as ${propDescription} should be of type function, provided: ${typeof providedType}`);
    };
    const operationCheckConfigDecoder = object$1({
        operation: nonEmptyStringDecoder$1
    });
    const operationCheckResultDecoder = object$1({
        isSupported: boolean$1()
    });
    const layoutSummaryDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$1,
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1())
    });
    const windowComponentStateDecoder$1 = object$1({
        context: optional$1(anyJson$1()),
        bounds: windowBoundsDecoder$1,
        createArgs: object$1({
            name: optional$1(nonEmptyStringDecoder$1),
            url: optional$1(nonEmptyStringDecoder$1),
            context: optional$1(anyJson$1())
        }),
        windowState: optional$1(nonEmptyStringDecoder$1),
        restoreState: optional$1(nonEmptyStringDecoder$1),
        instanceId: nonEmptyStringDecoder$1,
        isCollapsed: optional$1(boolean$1()),
        isSticky: optional$1(boolean$1()),
        restoreSettings: object$1({
            groupId: optional$1(nonEmptyStringDecoder$1),
            groupZOrder: optional$1(number$1())
        })
    });
    const windowLayoutComponentDecoder$1 = object$1({
        type: constant$1("window"),
        componentType: optional$1(componentTypeDecoder$1),
        application: nonEmptyStringDecoder$1,
        state: windowComponentStateDecoder$1
    });
    const libDomainDecoder$1 = oneOf$1(constant$1("system"), constant$1("windows"), constant$1("appManager"), constant$1("layouts"), constant$1("workspaces"), constant$1("intents"), constant$1("notifications"), constant$1("extension"), constant$1("channels"));
    const systemOperationTypesDecoder = oneOf$1(constant$1("getEnvironment"), constant$1("getBase"), constant$1("operationCheck"));
    const windowLayoutItemDecoder$1 = object$1({
        type: constant$1("window"),
        config: object$1({
            appName: nonEmptyStringDecoder$1,
            windowId: optional$1(nonEmptyStringDecoder$1),
            context: optional$1(anyJson$1()),
            url: optional$1(nonEmptyStringDecoder$1),
            title: optional$1(string$1()),
            showCloseButton: optional$1(boolean$1()),
            allowExtract: optional$1(boolean$1()),
            allowReorder: optional$1(boolean$1()),
            isMaximized: optional$1(boolean$1())
        })
    });
    const groupLayoutItemDecoder$1 = object$1({
        type: constant$1("group"),
        config: anyJson$1(),
        children: array$1(oneOf$1(windowLayoutItemDecoder$1))
    });
    const columnLayoutItemDecoder$1 = object$1({
        type: constant$1("column"),
        config: anyJson$1(),
        children: array$1(oneOf$1(groupLayoutItemDecoder$1, windowLayoutItemDecoder$1, lazy$1(() => columnLayoutItemDecoder$1), lazy$1(() => rowLayoutItemDecoder$1)))
    });
    const rowLayoutItemDecoder$1 = object$1({
        type: constant$1("row"),
        config: anyJson$1(),
        children: array$1(oneOf$1(columnLayoutItemDecoder$1, groupLayoutItemDecoder$1, windowLayoutItemDecoder$1, lazy$1(() => rowLayoutItemDecoder$1)))
    });
    const workspaceLayoutComponentStateDecoder$1 = object$1({
        config: anyJson$1(),
        context: anyJson$1(),
        children: array$1(oneOf$1(rowLayoutItemDecoder$1, columnLayoutItemDecoder$1, groupLayoutItemDecoder$1, windowLayoutItemDecoder$1))
    });
    const workspaceLayoutComponentDecoder$1 = object$1({
        type: constant$1("Workspace"),
        application: optional$1(string$1()),
        state: workspaceLayoutComponentStateDecoder$1
    });
    const workspaceFrameComponentStateDecoder$1 = object$1({
        bounds: windowBoundsDecoder$1,
        instanceId: nonEmptyStringDecoder$1,
        selectedWorkspace: nonNegativeNumberDecoder$1,
        workspaces: array$1(workspaceLayoutComponentStateDecoder$1),
        windowState: optional$1(nonEmptyStringDecoder$1),
        restoreState: optional$1(nonEmptyStringDecoder$1)
    });
    const workspaceFrameComponentDecoder$1 = object$1({
        type: constant$1("workspaceFrame"),
        application: nonEmptyStringDecoder$1,
        componentType: optional$1(componentTypeDecoder$1),
        state: workspaceFrameComponentStateDecoder$1
    });
    const glueLayoutDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$1,
        components: array$1(oneOf$1(windowLayoutComponentDecoder$1, workspaceLayoutComponentDecoder$1, workspaceFrameComponentDecoder$1)),
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1())
    });
    const applicationDetailsDecoder$1 = object$1({
        url: nonEmptyStringDecoder$1,
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1)
    });
    const intentDefinitionDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        displayName: optional$1(string$1()),
        contexts: optional$1(array$1(string$1())),
        customConfig: optional$1(object$1()),
        resultType: optional$1(nonEmptyStringDecoder$1)
    });
    const glueCoreAppDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        customProperties: optional$1(anyJson$1()),
        icon: optional$1(string$1()),
        caption: optional$1(string$1()),
        details: applicationDetailsDecoder$1,
        intents: optional$1(array$1(intentDefinitionDecoder$1)),
        hidden: optional$1(boolean$1())
    });
    const fdc3AppDefinitionDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        appId: optional$1(nonEmptyStringDecoder$1),
        manifest: nonEmptyStringDecoder$1,
        manifestType: nonEmptyStringDecoder$1,
        tooltip: optional$1(nonEmptyStringDecoder$1),
        description: optional$1(nonEmptyStringDecoder$1),
        contactEmail: optional$1(nonEmptyStringDecoder$1),
        supportEmail: optional$1(nonEmptyStringDecoder$1),
        publisher: optional$1(nonEmptyStringDecoder$1),
        images: optional$1(array$1(object$1({ url: optional$1(nonEmptyStringDecoder$1) }))),
        icons: optional$1(array$1(object$1({ icon: optional$1(nonEmptyStringDecoder$1) }))),
        customConfig: anyJson$1(),
        intents: optional$1(array$1(intentDefinitionDecoder$1))
    });
    const remoteStoreDecoder = object$1({
        url: nonEmptyStringDecoder$1,
        pollingInterval: optional$1(nonNegativeNumberDecoder$1),
        requestTimeout: optional$1(nonNegativeNumberDecoder$1),
        customHeaders: optional$1(anyJson$1())
    });
    const supplierDecoder = object$1({
        fetch: anyJson$1().andThen((result) => functionCheck(result, "supplier fetch")),
        timeout: optional$1(nonNegativeNumberDecoder$1),
        pollingInterval: optional$1(nonNegativeNumberDecoder$1),
        save: optional$1(anyJson$1().andThen((result) => functionCheck(result, "supplier save"))),
        delete: optional$1(anyJson$1().andThen((result) => functionCheck(result, "supplier delete")))
    });
    const channelDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        meta: channelMetaDecoder,
        data: optional$1(anyJson$1())
    });
    const pluginDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        start: anyJson$1(),
        version: optional$1(nonEmptyStringDecoder$1),
        config: optional$1(anyJson$1()),
        critical: optional$1(boolean$1())
    });
    const allApplicationDefinitionsDecoder$1 = oneOf$1(glueCoreAppDefinitionDecoder, fdc3AppDefinitionDecoder$1);
    const appsCollectionDecoder = array$1(allApplicationDefinitionsDecoder$1);
    const applicationsConfigDecoder = object$1({
        local: optional$1(array$1(allApplicationDefinitionsDecoder$1)),
        remote: optional$1(remoteStoreDecoder)
    });
    const layoutsConfigDecoder = object$1({
        mode: optional$1(oneOf$1(constant$1("idb"), constant$1("session"))),
        local: optional$1(array$1(glueLayoutDecoder$1))
    });
    const channelsConfigDecoder = object$1({
        definitions: array$1(channelDefinitionDecoder)
    });
    const pluginsConfigDecoder = object$1({
        definitions: array$1(pluginDefinitionDecoder)
    });
    const gatewayConfigDecoder = object$1({
        logging: optional$1(object$1({
            level: optional$1(logLevelDecoder),
            appender: optional$1(anyJson$1().andThen((result) => functionCheck(result, "gateway log appender")))
        }))
    });
    const glueConfigDecoder = anyJson$1();
    const maximumActiveWorkspacesDecoder = object$1({
        threshold: number$1().where((num) => num > 1, "Expected a number larger than 1")
    });
    const idleWorkspacesDecoder = object$1({
        idleMSThreshold: number$1().where((num) => num > 100, "Expected a number larger than 100")
    });
    const hibernationConfigDecoder = object$1({
        maximumActiveWorkspaces: optional$1(maximumActiveWorkspacesDecoder),
        idleWorkspaces: optional$1(idleWorkspacesDecoder)
    });
    const loadingConfigDecoder = object$1({
        delayed: optional$1(object$1({
            batch: optional$1(number$1()),
            initialOffsetInterval: optional$1(number$1()),
            interval: optional$1(number$1())
        })),
        defaultStrategy: optional$1(oneOf$1(constant$1("direct"), constant$1("delayed"), constant$1("lazy"))),
        showDelayedIndicator: optional$1(boolean$1())
    });
    const workspacesConfigDecoder = object$1({
        src: nonEmptyStringDecoder$1,
        hibernation: optional$1(hibernationConfigDecoder),
        loadingStrategy: optional$1(loadingConfigDecoder),
        isFrame: optional$1(boolean$1()),
        frameCache: optional$1(boolean$1())
    });
    const preferredConnectionSettingsDecoder = object$1({
        url: nonEmptyStringDecoder$1,
        auth: optional$1(object$1({
            username: optional$1(nonEmptyStringDecoder$1),
            password: optional$1(nonEmptyStringDecoder$1),
            sessionId: optional$1(nonEmptyStringDecoder$1),
            provider: optional$1(nonEmptyStringDecoder$1),
            providerContext: optional$1(anyJson$1()),
            token: optional$1(nonEmptyStringDecoder$1),
            gatewayToken: optional$1(nonEmptyStringDecoder$1),
            flowName: optional$1(constant$1("sspi")),
            flowCallback: optional$1(anyJson$1().andThen((result) => functionCheck(result, "flowCallback function")))
        })),
        forceIncompleteSwitch: optional$1(boolean$1()),
        discoveryIntervalMS: optional$1(nonNegativeNumberDecoder$1)
    });
    const connectionConfigDecoder = object$1({
        preferred: optional$1(preferredConnectionSettingsDecoder)
    });
    const windowsConfigDecoder = object$1({
        windowResponseTimeoutMs: optional$1(nonNegativeNumberDecoder$1),
        defaultWindowOpenBounds: optional$1(windowBoundsDecoder$1)
    });
    const serviceWorkerConfigDecoder = object$1({
        url: optional$1(nonEmptyStringDecoder$1),
        registrationPromise: optional$1(anyJson$1())
    });
    const corePlusConfigDecoder = object$1({
        start: anyJson$1(),
        version: nonEmptyStringDecoder$1
    });
    const platformConfigDecoder = object$1({
        windows: optional$1(windowsConfigDecoder),
        applications: optional$1(applicationsConfigDecoder),
        layouts: optional$1(layoutsConfigDecoder),
        channels: optional$1(channelsConfigDecoder),
        plugins: optional$1(pluginsConfigDecoder),
        serviceWorker: optional$1(serviceWorkerConfigDecoder),
        gateway: optional$1(gatewayConfigDecoder),
        connection: optional$1(connectionConfigDecoder),
        glue: optional$1(glueConfigDecoder),
        workspaces: optional$1(workspacesConfigDecoder),
        environment: optional$1(anyJson$1()),
        corePlus: optional$1(corePlusConfigDecoder),
        glueFactory: optional$1(anyJson$1().andThen((result) => functionCheck(result, "glueFactory")))
    });
    const windowOpenSettingsDecoder$1 = object$1({
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        context: optional$1(anyJson$1()),
        relativeTo: optional$1(nonEmptyStringDecoder$1),
        relativeDirection: optional$1(windowRelativeDirectionDecoder$1)
    });
    const interceptorRegistrationRequestDecoder = object$1({
        callInterceptor: anyJson$1().andThen((result) => functionCheck(result, "callInterceptor")),
        interceptions: array$1(object$1({
            domain: libDomainDecoder$1,
            operation: nonEmptyStringDecoder$1
        }))
    });

    var isMergeableObject = function isMergeableObject(value) {
    	return isNonNullObject(value)
    		&& !isSpecial(value)
    };

    function isNonNullObject(value) {
    	return !!value && typeof value === 'object'
    }

    function isSpecial(value) {
    	var stringValue = Object.prototype.toString.call(value);

    	return stringValue === '[object RegExp]'
    		|| stringValue === '[object Date]'
    		|| isReactElement(value)
    }

    // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

    function isReactElement(value) {
    	return value.$$typeof === REACT_ELEMENT_TYPE
    }

    function emptyTarget(val) {
    	return Array.isArray(val) ? [] : {}
    }

    function cloneUnlessOtherwiseSpecified(value, options) {
    	return (options.clone !== false && options.isMergeableObject(value))
    		? deepmerge(emptyTarget(value), value, options)
    		: value
    }

    function defaultArrayMerge(target, source, options) {
    	return target.concat(source).map(function(element) {
    		return cloneUnlessOtherwiseSpecified(element, options)
    	})
    }

    function getMergeFunction(key, options) {
    	if (!options.customMerge) {
    		return deepmerge
    	}
    	var customMerge = options.customMerge(key);
    	return typeof customMerge === 'function' ? customMerge : deepmerge
    }

    function getEnumerableOwnPropertySymbols(target) {
    	return Object.getOwnPropertySymbols
    		? Object.getOwnPropertySymbols(target).filter(function(symbol) {
    			return target.propertyIsEnumerable(symbol)
    		})
    		: []
    }

    function getKeys(target) {
    	return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
    }

    function propertyIsOnObject(object, property) {
    	try {
    		return property in object
    	} catch(_) {
    		return false
    	}
    }

    // Protects from prototype poisoning and unexpected merging up the prototype chain.
    function propertyIsUnsafe(target, key) {
    	return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
    		&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
    			&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
    }

    function mergeObject(target, source, options) {
    	var destination = {};
    	if (options.isMergeableObject(target)) {
    		getKeys(target).forEach(function(key) {
    			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    		});
    	}
    	getKeys(source).forEach(function(key) {
    		if (propertyIsUnsafe(target, key)) {
    			return
    		}

    		if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
    			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    		} else {
    			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    		}
    	});
    	return destination
    }

    function deepmerge(target, source, options) {
    	options = options || {};
    	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    	options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    	// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
    	// implementations can use it. The caller may not replace it.
    	options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

    	var sourceIsArray = Array.isArray(source);
    	var targetIsArray = Array.isArray(target);
    	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    	if (!sourceAndTargetTypesMatch) {
    		return cloneUnlessOtherwiseSpecified(source, options)
    	} else if (sourceIsArray) {
    		return options.arrayMerge(target, source, options)
    	} else {
    		return mergeObject(target, source, options)
    	}
    }

    deepmerge.all = function deepmergeAll(array, options) {
    	if (!Array.isArray(array)) {
    		throw new Error('first argument should be an array')
    	}

    	return array.reduce(function(prev, next) {
    		return deepmerge(prev, next, options)
    	}, {})
    };

    var deepmerge_1 = deepmerge;

    var cjs = deepmerge_1;

    let nanoid = (size = 21) =>
      crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
        byte &= 63;
        if (byte < 36) {
          id += byte.toString(36);
        } else if (byte < 62) {
          id += (byte - 26).toString(36).toUpperCase();
        } else if (byte > 62) {
          id += '-';
        } else {
          id += '_';
        }
        return id
      }, '');

    class Platform {
        constructor(controller, session, config) {
            this.controller = controller;
            this.session = session;
            this.checkSingleton();
            this.processConfig(config);
        }
        ready() {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.controller.start(this.platformConfig);
            });
        }
        getClientGlue() {
            return this.controller.getClientGlue();
        }
        getPlatformApi() {
            return this.controller.platformApi;
        }
        checkSingleton() {
            const glue42CoreNamespace = window.glue42core;
            if (glue42CoreNamespace && glue42CoreNamespace.platformStarted) {
                throw new Error("The Glue42 Core Platform has already been started for this application.");
            }
        }
        processConfig(config = {}) {
            var _a, _b, _c;
            const verifiedConfig = config.corePlus ? config : platformConfigDecoder.runWithException(config);
            this.validatePlugins(verifiedConfig);
            this.platformConfig = cjs(defaultPlatformConfig, verifiedConfig);
            let systemSettings = this.session.getSystemSettings();
            if (!systemSettings) {
                systemSettings = {
                    systemInstanceId: nanoid(),
                    ctxTrackInstanceId: nanoid()
                };
                this.session.saveSystemSettings(systemSettings);
            }
            this.platformConfig.workspacesFrameCache = typeof ((_a = config.workspaces) === null || _a === void 0 ? void 0 : _a.frameCache) === "boolean" ? (_b = config.workspaces) === null || _b === void 0 ? void 0 : _b.frameCache : true;
            this.transferPromiseObjects(verifiedConfig);
            const glue42core = {
                platformStarted: true,
                isPlatformFrame: !!((_c = config === null || config === void 0 ? void 0 : config.workspaces) === null || _c === void 0 ? void 0 : _c.isFrame),
                environment: Object.assign({}, this.platformConfig.environment, { extension: undefined }),
                workspacesFrameCache: this.platformConfig.workspacesFrameCache,
                communicationId: systemSettings.systemInstanceId
            };
            window.glue42core = glue42core;
        }
        transferPromiseObjects(verifiedConfig) {
            var _a;
            if ((_a = verifiedConfig.serviceWorker) === null || _a === void 0 ? void 0 : _a.registrationPromise) {
                this.platformConfig.serviceWorker.registrationPromise = verifiedConfig.serviceWorker.registrationPromise;
            }
            if (verifiedConfig.plugins && verifiedConfig.plugins.definitions.length) {
                const definitions = verifiedConfig.plugins.definitions;
                definitions.forEach((def) => {
                    var _a;
                    const found = (_a = this.platformConfig.plugins) === null || _a === void 0 ? void 0 : _a.definitions.find((savedDef) => savedDef.name === def.name);
                    if (found) {
                        found.config = def.config;
                    }
                });
            }
        }
        validatePlugins(verifiedConfig) {
            var _a;
            if ((_a = verifiedConfig.plugins) === null || _a === void 0 ? void 0 : _a.definitions) {
                const badDefinitions = verifiedConfig.plugins.definitions.reduce((soFar, definition) => {
                    const startType = typeof definition.start;
                    const name = definition.name;
                    if (startType !== "function") {
                        soFar.push({ name, startType });
                    }
                    return soFar;
                }, []);
                if (badDefinitions.length) {
                    const errorStack = badDefinitions
                        .map((def) => `The start function for plugin ${def.name} was expected to be of type function, but was provided: ${def.startType}`)
                        .join("\n");
                    throw new Error(errorStack);
                }
            }
        }
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics$1 = function(d, b) {
        extendStatics$1 = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics$1(d, b);
    };

    function __extends$1(d, b) {
        extendStatics$1(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign$3 = function() {
        __assign$3 = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign$3.apply(this, arguments);
    };

    function __awaiter$2(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator$1(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __spreadArrays$1() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    var MetricTypes$1 = {
        STRING: 1,
        NUMBER: 2,
        TIMESTAMP: 3,
        OBJECT: 4
    };

    function getMetricTypeByValue$1(metric) {
        if (metric.type === MetricTypes$1.TIMESTAMP) {
            return "timestamp";
        }
        else if (metric.type === MetricTypes$1.NUMBER) {
            return "number";
        }
        else if (metric.type === MetricTypes$1.STRING) {
            return "string";
        }
        else if (metric.type === MetricTypes$1.OBJECT) {
            return "object";
        }
        return "unknown";
    }
    function getTypeByValue$1(value) {
        if (value.constructor === Date) {
            return "timestamp";
        }
        else if (typeof value === "number") {
            return "number";
        }
        else if (typeof value === "string") {
            return "string";
        }
        else if (typeof value === "object") {
            return "object";
        }
        else {
            return "string";
        }
    }
    function serializeMetric$1(metric) {
        var serializedMetrics = {};
        var type = getMetricTypeByValue$1(metric);
        if (type === "object") {
            var values = Object.keys(metric.value).reduce(function (memo, key) {
                var innerType = getTypeByValue$1(metric.value[key]);
                if (innerType === "object") {
                    var composite = defineNestedComposite$1(metric.value[key]);
                    memo[key] = {
                        type: "object",
                        description: "",
                        context: {},
                        composite: composite,
                    };
                }
                else {
                    memo[key] = {
                        type: innerType,
                        description: "",
                        context: {},
                    };
                }
                return memo;
            }, {});
            serializedMetrics.composite = values;
        }
        serializedMetrics.name = normalizeMetricName$1(metric.path.join("/") + "/" + metric.name);
        serializedMetrics.type = type;
        serializedMetrics.description = metric.description;
        serializedMetrics.context = {};
        return serializedMetrics;
    }
    function defineNestedComposite$1(values) {
        return Object.keys(values).reduce(function (memo, key) {
            var type = getTypeByValue$1(values[key]);
            if (type === "object") {
                memo[key] = {
                    type: "object",
                    description: "",
                    context: {},
                    composite: defineNestedComposite$1(values[key]),
                };
            }
            else {
                memo[key] = {
                    type: type,
                    description: "",
                    context: {},
                };
            }
            return memo;
        }, {});
    }
    function normalizeMetricName$1(name) {
        if (typeof name !== "undefined" && name.length > 0 && name[0] !== "/") {
            return "/" + name;
        }
        else {
            return name;
        }
    }
    function getMetricValueByType$1(metric) {
        var type = getMetricTypeByValue$1(metric);
        if (type === "timestamp") {
            return Date.now();
        }
        else {
            return publishNestedComposite$1(metric.value);
        }
    }
    function publishNestedComposite$1(values) {
        if (typeof values !== "object") {
            return values;
        }
        return Object.keys(values).reduce(function (memo, key) {
            var value = values[key];
            if (typeof value === "object" && value.constructor !== Date) {
                memo[key] = publishNestedComposite$1(value);
            }
            else if (value.constructor === Date) {
                memo[key] = new Date(value).getTime();
            }
            else if (value.constructor === Boolean) {
                memo[key] = value.toString();
            }
            else {
                memo[key] = value;
            }
            return memo;
        }, {});
    }
    function flatten$1(arr) {
        return arr.reduce(function (flat, toFlatten) {
            return flat.concat(Array.isArray(toFlatten) ? flatten$1(toFlatten) : toFlatten);
        }, []);
    }
    function getHighestState$1(arr) {
        return arr.sort(function (a, b) {
            if (!a.state) {
                return 1;
            }
            if (!b.state) {
                return -1;
            }
            return b.state - a.state;
        })[0];
    }
    function aggregateDescription$1(arr) {
        var msg = "";
        arr.forEach(function (m, idx, a) {
            var path = m.path.join(".");
            if (idx === a.length - 1) {
                msg += path + "." + m.name + ": " + m.description;
            }
            else {
                msg += path + "." + m.name + ": " + m.description + ",";
            }
        });
        if (msg.length > 100) {
            return msg.slice(0, 100) + "...";
        }
        else {
            return msg;
        }
    }
    function composeMsgForRootStateMetric$1(system) {
        var aggregatedState = system.root.getAggregateState();
        var merged = flatten$1(aggregatedState);
        var highestState = getHighestState$1(merged);
        var aggregateDesc = aggregateDescription$1(merged);
        return {
            description: aggregateDesc,
            value: highestState.state,
        };
    }

    function gw3$1 (connection, config) {
        var _this = this;
        if (!connection || typeof connection !== "object") {
            throw new Error("Connection is required parameter");
        }
        var joinPromise;
        var session;
        var init = function (repo) {
            var resolveReadyPromise;
            joinPromise = new Promise(function (resolve) {
                resolveReadyPromise = resolve;
            });
            session = connection.domain("metrics");
            session.onJoined(function (reconnect) {
                if (!reconnect && resolveReadyPromise) {
                    resolveReadyPromise();
                    resolveReadyPromise = undefined;
                }
                var rootStateMetric = {
                    name: "/State",
                    type: "object",
                    composite: {
                        Description: {
                            type: "string",
                            description: "",
                        },
                        Value: {
                            type: "number",
                            description: "",
                        },
                    },
                    description: "System state",
                    context: {},
                };
                var defineRootMetricsMsg = {
                    type: "define",
                    metrics: [rootStateMetric],
                };
                session.send(defineRootMetricsMsg);
                if (reconnect) {
                    replayRepo(repo);
                }
            });
            session.join({
                system: config.system,
                service: config.service,
                instance: config.instance
            });
        };
        var replayRepo = function (repo) {
            replaySystem(repo.root);
        };
        var replaySystem = function (system) {
            createSystem(system);
            system.metrics.forEach(function (m) {
                createMetric(m);
            });
            system.subSystems.forEach(function (ss) {
                replaySystem(ss);
            });
        };
        var createSystem = function (system) { return __awaiter$2(_this, void 0, void 0, function () {
            var metric, createMetricsMsg;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (system.parent === undefined) {
                            return [2];
                        }
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        metric = {
                            name: normalizeMetricName$1(system.path.join("/") + "/" + system.name + "/State"),
                            type: "object",
                            composite: {
                                Description: {
                                    type: "string",
                                    description: "",
                                },
                                Value: {
                                    type: "number",
                                    description: "",
                                },
                            },
                            description: "System state",
                            context: {},
                        };
                        createMetricsMsg = {
                            type: "define",
                            metrics: [metric],
                        };
                        session.send(createMetricsMsg);
                        return [2];
                }
            });
        }); };
        var updateSystem = function (system, state) { return __awaiter$2(_this, void 0, void 0, function () {
            var shadowedUpdateMetric, stateObj, rootMetric;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, joinPromise];
                    case 1:
                        _a.sent();
                        shadowedUpdateMetric = {
                            type: "publish",
                            values: [{
                                    name: normalizeMetricName$1(system.path.join("/") + "/" + system.name + "/State"),
                                    value: {
                                        Description: state.description,
                                        Value: state.state,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(shadowedUpdateMetric);
                        stateObj = composeMsgForRootStateMetric$1(system);
                        rootMetric = {
                            type: "publish",
                            peer_id: connection.peerId,
                            values: [{
                                    name: "/State",
                                    value: {
                                        Description: stateObj.description,
                                        Value: stateObj.value,
                                    },
                                    timestamp: Date.now(),
                                }],
                        };
                        session.send(rootMetric);
                        return [2];
                }
            });
        }); };
        var createMetric = function (metric) { return __awaiter$2(_this, void 0, void 0, function () {
            var metricClone, m, createMetricsMsg;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        m = serializeMetric$1(metricClone);
                        createMetricsMsg = {
                            type: "define",
                            metrics: [m],
                        };
                        session.send(createMetricsMsg);
                        if (typeof metricClone.value !== "undefined") {
                            updateMetricCore(metricClone);
                        }
                        return [2];
                }
            });
        }); };
        var updateMetric = function (metric) { return __awaiter$2(_this, void 0, void 0, function () {
            var metricClone;
            return __generator$1(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        metricClone = cloneMetric(metric);
                        return [4, joinPromise];
                    case 1:
                        _a.sent();
                        updateMetricCore(metricClone);
                        return [2];
                }
            });
        }); };
        var updateMetricCore = function (metric) {
            if (canUpdate()) {
                var value = getMetricValueByType$1(metric);
                var publishMetricsMsg = {
                    type: "publish",
                    values: [{
                            name: normalizeMetricName$1(metric.path.join("/") + "/" + metric.name),
                            value: value,
                            timestamp: Date.now(),
                        }],
                };
                return session.sendFireAndForget(publishMetricsMsg);
            }
            return Promise.resolve();
        };
        var cloneMetric = function (metric) {
            var metricClone = __assign$3({}, metric);
            if (typeof metric.value === "object" && metric.value !== null) {
                metricClone.value = __assign$3({}, metric.value);
            }
            return metricClone;
        };
        var canUpdate = function () {
            var _a;
            try {
                var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });
                return func();
            }
            catch (_b) {
                return true;
            }
        };
        return {
            init: init,
            createSystem: createSystem,
            updateSystem: updateSystem,
            createMetric: createMetric,
            updateMetric: updateMetric,
        };
    }

    var Helpers$1 = {
        validate: function (definition, parent, transport) {
            if (definition === null || typeof definition !== "object") {
                throw new Error("Missing definition");
            }
            if (parent === null || typeof parent !== "object") {
                throw new Error("Missing parent");
            }
            if (transport === null || typeof transport !== "object") {
                throw new Error("Missing transport");
            }
        },
    };

    var BaseMetric$1 = (function () {
        function BaseMetric(definition, system, transport, value, type) {
            this.definition = definition;
            this.system = system;
            this.transport = transport;
            this.value = value;
            this.type = type;
            this.path = [];
            Helpers$1.validate(definition, system, transport);
            this.path = system.path.slice(0);
            this.path.push(system.name);
            this.name = definition.name;
            this.description = definition.description;
            transport.createMetric(this);
        }
        Object.defineProperty(BaseMetric.prototype, "repo", {
            get: function () {
                var _a;
                return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(BaseMetric.prototype, "id", {
            get: function () { return this.system.path + "/" + name; },
            enumerable: true,
            configurable: true
        });
        BaseMetric.prototype.update = function (newValue) {
            this.value = newValue;
            return this.transport.updateMetric(this);
        };
        return BaseMetric;
    }());

    var NumberMetric$1 = (function (_super) {
        __extends$1(NumberMetric, _super);
        function NumberMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.NUMBER) || this;
        }
        NumberMetric.prototype.incrementBy = function (num) {
            this.update(this.value + num);
        };
        NumberMetric.prototype.increment = function () {
            this.incrementBy(1);
        };
        NumberMetric.prototype.decrement = function () {
            this.incrementBy(-1);
        };
        NumberMetric.prototype.decrementBy = function (num) {
            this.incrementBy(num * -1);
        };
        return NumberMetric;
    }(BaseMetric$1));

    var ObjectMetric$1 = (function (_super) {
        __extends$1(ObjectMetric, _super);
        function ObjectMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.OBJECT) || this;
        }
        ObjectMetric.prototype.update = function (newValue) {
            this.mergeValues(newValue);
            return this.transport.updateMetric(this);
        };
        ObjectMetric.prototype.mergeValues = function (values) {
            var _this = this;
            return Object.keys(this.value).forEach(function (k) {
                if (typeof values[k] !== "undefined") {
                    _this.value[k] = values[k];
                }
            });
        };
        return ObjectMetric;
    }(BaseMetric$1));

    var StringMetric$1 = (function (_super) {
        __extends$1(StringMetric, _super);
        function StringMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.STRING) || this;
        }
        return StringMetric;
    }(BaseMetric$1));

    var TimestampMetric$1 = (function (_super) {
        __extends$1(TimestampMetric, _super);
        function TimestampMetric(definition, system, transport, value) {
            return _super.call(this, definition, system, transport, value, MetricTypes$1.TIMESTAMP) || this;
        }
        TimestampMetric.prototype.now = function () {
            this.update(new Date());
        };
        return TimestampMetric;
    }(BaseMetric$1));

    function system$1(name, repo, protocol, parent, description) {
        if (!repo) {
            throw new Error("Repository is required");
        }
        if (!protocol) {
            throw new Error("Transport is required");
        }
        var _transport = protocol;
        var _name = name;
        var _description = description || "";
        var _repo = repo;
        var _parent = parent;
        var _path = _buildPath(parent);
        var _state = {};
        var id = _arrayToString(_path, "/") + name;
        var root = repo.root;
        var _subSystems = [];
        var _metrics = [];
        function subSystem(nameSystem, descriptionSystem) {
            if (!nameSystem || nameSystem.length === 0) {
                throw new Error("name is required");
            }
            var match = _subSystems.filter(function (s) { return s.name === nameSystem; });
            if (match.length > 0) {
                return match[0];
            }
            var _system = system$1(nameSystem, _repo, _transport, me, descriptionSystem);
            _subSystems.push(_system);
            return _system;
        }
        function setState(state, stateDescription) {
            _state = { state: state, description: stateDescription };
            _transport.updateSystem(me, _state);
        }
        function stringMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.STRING, value, function (metricDef) { return new StringMetric$1(metricDef, me, _transport, value); });
        }
        function numberMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.NUMBER, value, function (metricDef) { return new NumberMetric$1(metricDef, me, _transport, value); });
        }
        function objectMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.OBJECT, value, function (metricDef) { return new ObjectMetric$1(metricDef, me, _transport, value); });
        }
        function timestampMetric(definition, value) {
            return _getOrCreateMetric(definition, MetricTypes$1.TIMESTAMP, value, function (metricDef) { return new TimestampMetric$1(metricDef, me, _transport, value); });
        }
        function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {
            var metricDef = { name: "" };
            if (typeof metricObject === "string") {
                metricDef = { name: metricObject };
            }
            else {
                metricDef = metricObject;
            }
            var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });
            if (matching.length > 0) {
                var existing = matching[0];
                if (existing.type !== expectedType) {
                    throw new Error("A metric named " + metricDef.name + " is already defined with different type.");
                }
                if (typeof value !== "undefined") {
                    existing
                        .update(value)
                        .catch(function () { });
                }
                return existing;
            }
            var metric = createMetric(metricDef);
            _metrics.push(metric);
            return metric;
        }
        function _buildPath(shadowedSystem) {
            if (!shadowedSystem || !shadowedSystem.parent) {
                return [];
            }
            var path = _buildPath(shadowedSystem.parent);
            path.push(shadowedSystem.name);
            return path;
        }
        function _arrayToString(path, separator) {
            return ((path && path.length > 0) ? path.join(separator) : "");
        }
        function getAggregateState() {
            var aggState = [];
            if (Object.keys(_state).length > 0) {
                aggState.push({
                    name: _name,
                    path: _path,
                    state: _state.state,
                    description: _state.description,
                });
            }
            _subSystems.forEach(function (shadowedSubSystem) {
                var result = shadowedSubSystem.getAggregateState();
                if (result.length > 0) {
                    aggState.push.apply(aggState, result);
                }
            });
            return aggState;
        }
        var me = {
            get name() {
                return _name;
            },
            get description() {
                return _description;
            },
            get repo() {
                return _repo;
            },
            get parent() {
                return _parent;
            },
            path: _path,
            id: id,
            root: root,
            get subSystems() {
                return _subSystems;
            },
            get metrics() {
                return _metrics;
            },
            subSystem: subSystem,
            getState: function () {
                return _state;
            },
            setState: setState,
            stringMetric: stringMetric,
            timestampMetric: timestampMetric,
            objectMetric: objectMetric,
            numberMetric: numberMetric,
            getAggregateState: getAggregateState,
        };
        _transport.createSystem(me);
        return me;
    }

    var Repository$1 = (function () {
        function Repository(options, protocol) {
            protocol.init(this);
            this.root = system$1("", this, protocol);
            this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);
        }
        Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {
            if (typeof navigator !== "undefined") {
                rootSystem.stringMetric("UserAgent", navigator.userAgent);
            }
            if (useClickStream && typeof document !== "undefined") {
                var clickStream_1 = rootSystem.subSystem("ClickStream");
                var documentClickHandler = function (e) {
                    var _a;
                    if (!e.target) {
                        return;
                    }
                    var target = e.target;
                    var className = target ? (_a = target.getAttribute("class")) !== null && _a !== void 0 ? _a : "" : "";
                    clickStream_1.objectMetric("LastBrowserEvent", {
                        type: "click",
                        timestamp: new Date(),
                        target: {
                            className: className,
                            id: target.id,
                            type: "<" + target.tagName.toLowerCase() + ">",
                            href: target.href || "",
                        },
                    });
                };
                clickStream_1.objectMetric("Page", {
                    title: document.title,
                    page: window.location.href,
                });
                if (document.addEventListener) {
                    document.addEventListener("click", documentClickHandler);
                }
                else {
                    document.attachEvent("onclick", documentClickHandler);
                }
            }
            var startTime = rootSystem.stringMetric("StartTime", (new Date()).toString());
            var urlMetric = rootSystem.stringMetric("StartURL", "");
            var appNameMetric = rootSystem.stringMetric("AppName", "");
            if (typeof window !== "undefined") {
                if (typeof window.location !== "undefined") {
                    var startUrl = window.location.href;
                    urlMetric.update(startUrl);
                }
                if (typeof window.glue42gd !== "undefined") {
                    appNameMetric.update(window.glue42gd.appName);
                }
            }
        };
        return Repository;
    }());

    var NullProtocol$1 = (function () {
        function NullProtocol() {
        }
        NullProtocol.prototype.init = function (repo) {
        };
        NullProtocol.prototype.createSystem = function (system) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateSystem = function (metric, state) {
            return Promise.resolve();
        };
        NullProtocol.prototype.createMetric = function (metric) {
            return Promise.resolve();
        };
        NullProtocol.prototype.updateMetric = function (metric) {
            return Promise.resolve();
        };
        return NullProtocol;
    }());

    var PerfTracker$1 = (function () {
        function PerfTracker(api, initialPublishTimeout, publishInterval) {
            this.api = api;
            this.lastCount = 0;
            this.initialPublishTimeout = 10 * 1000;
            this.publishInterval = 60 * 1000;
            this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;
            this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;
            this.scheduleCollection();
            this.system = this.api.subSystem("performance", "Performance data published by the web application");
        }
        PerfTracker.prototype.scheduleCollection = function () {
            var _this = this;
            setTimeout(function () {
                _this.collect();
                setInterval(function () {
                    _this.collect();
                }, _this.publishInterval);
            }, this.initialPublishTimeout);
        };
        PerfTracker.prototype.collect = function () {
            try {
                this.collectMemory();
                this.collectEntries();
            }
            catch (_a) {
            }
        };
        PerfTracker.prototype.collectMemory = function () {
            var memory = window.performance.memory;
            this.system.stringMetric("memory", JSON.stringify({
                totalJSHeapSize: memory.totalJSHeapSize,
                usedJSHeapSize: memory.usedJSHeapSize
            }));
        };
        PerfTracker.prototype.collectEntries = function () {
            var allEntries = window.performance.getEntries();
            if (allEntries.length <= this.lastCount) {
                return;
            }
            this.lastCount = allEntries.length;
            var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });
            this.system.stringMetric("entries", JSON.stringify(jsonfiedEntries));
        };
        return PerfTracker;
    }());

    var metrics$1 = (function (options) {
        var protocol;
        if (!options.connection || typeof options.connection !== "object") {
            protocol = new NullProtocol$1();
        }
        else {
            protocol = gw3$1(options.connection, options);
        }
        var repo = new Repository$1(options, protocol);
        var rootSystem = repo.root;
        if (!options.disableAutoAppSystem) {
            rootSystem = rootSystem.subSystem("App");
        }
        var api = addFAVSupport$1(rootSystem);
        initPerf$1(api, options.pagePerformanceMetrics);
        return api;
    });
    var perf$1;
    function initPerf$1(api, config) {
        var _a, _b;
        if (typeof window === "undefined") {
            return;
        }
        var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;
        if (perfConfig) {
            config = perfConfig;
        }
        if (config === null || config === void 0 ? void 0 : config.enabled) {
            perf$1 = new PerfTracker$1(api, config.initialPublishTimeout, config.publishInterval);
        }
    }
    function addFAVSupport$1(system) {
        var reportingSystem = system.subSystem("reporting");
        var def = {
            name: "features"
        };
        var featureMetric;
        var featureMetricFunc = function (name, action, payload) {
            if (typeof name === "undefined" || name === "") {
                throw new Error("name is mandatory");
            }
            else if (typeof action === "undefined" || action === "") {
                throw new Error("action is mandatory");
            }
            else if (typeof payload === "undefined" || payload === "") {
                throw new Error("payload is mandatory");
            }
            if (!featureMetric) {
                featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });
            }
            else {
                featureMetric.update({
                    name: name,
                    action: action,
                    payload: payload
                });
            }
        };
        system.featureMetric = featureMetricFunc;
        return system;
    }

    function createRegistry$2(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$2.default = createRegistry$2;
    var lib$4 = createRegistry$2;

    var InProcTransport$1 = (function () {
        function InProcTransport(settings, logger) {
            var _this = this;
            this.registry = lib$4();
            this.gw = settings.facade;
            this.gw.connect(function (_client, message) {
                _this.messageHandler(message);
            }).then(function (client) {
                _this.client = client;
            });
        }
        Object.defineProperty(InProcTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InProcTransport.prototype.sendObject = function (msg) {
            if (this.client) {
                this.client.send(msg);
                return Promise.resolve(undefined);
            }
            else {
                return Promise.reject("not connected");
            }
        };
        InProcTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        InProcTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        InProcTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
            return function () { };
        };
        InProcTransport.prototype.close = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.open = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.name = function () {
            return "in-memory";
        };
        InProcTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        InProcTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return InProcTransport;
    }());

    var SharedWorkerTransport$1 = (function () {
        function SharedWorkerTransport(workerFile, logger) {
            var _this = this;
            this.logger = logger;
            this.registry = lib$4();
            this.worker = new SharedWorker(workerFile);
            this.worker.port.onmessage = function (e) {
                _this.messageHandler(e.data);
            };
        }
        Object.defineProperty(SharedWorkerTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        SharedWorkerTransport.prototype.sendObject = function (msg) {
            this.worker.port.postMessage(msg);
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.send = function (_msg) {
            return Promise.reject("not supported");
        };
        SharedWorkerTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {
            callback(true);
            return function () { };
        };
        SharedWorkerTransport.prototype.close = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.open = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.name = function () {
            return "shared-worker";
        };
        SharedWorkerTransport.prototype.reconnect = function () {
            return Promise.resolve();
        };
        SharedWorkerTransport.prototype.messageHandler = function (msg) {
            this.registry.execute("onMessage", msg);
        };
        return SharedWorkerTransport;
    }());

    var Utils$1 = (function () {
        function Utils() {
        }
        Utils.getGDMajorVersion = function () {
            if (typeof window === "undefined") {
                return undefined;
            }
            if (!window.glueDesktop) {
                return undefined;
            }
            if (!window.glueDesktop.version) {
                return undefined;
            }
            var ver = Number(window.glueDesktop.version.substr(0, 1));
            return isNaN(ver) ? undefined : ver;
        };
        Utils.isNode = function () {
            if (typeof Utils._isNode !== "undefined") {
                return Utils._isNode;
            }
            if (typeof window !== "undefined") {
                Utils._isNode = false;
                return false;
            }
            try {
                Utils._isNode = Object.prototype.toString.call(global.process) === "[object process]";
            }
            catch (e) {
                Utils._isNode = false;
            }
            return Utils._isNode;
        };
        return Utils;
    }());

    var PromiseWrapper$1 = (function () {
        function PromiseWrapper() {
            var _this = this;
            this.rejected = false;
            this.resolved = false;
            this.promise = new Promise(function (resolve, reject) {
                _this.resolve = function (t) {
                    _this.resolved = true;
                    resolve(t);
                };
                _this.reject = function (err) {
                    _this.rejected = true;
                    reject(err);
                };
            });
        }
        PromiseWrapper.delay = function (time) {
            return new Promise(function (resolve) { return setTimeout(resolve, time); });
        };
        Object.defineProperty(PromiseWrapper.prototype, "ended", {
            get: function () {
                return this.rejected || this.resolved;
            },
            enumerable: true,
            configurable: true
        });
        return PromiseWrapper;
    }());

    var timers$1 = {};
    function getAllTimers$1() {
        return timers$1;
    }
    function timer$1 (timerName) {
        var existing = timers$1[timerName];
        if (existing) {
            return existing;
        }
        var marks = [];
        function now() {
            return new Date().getTime();
        }
        var startTime = now();
        mark("start", startTime);
        var endTime;
        var period;
        function stop() {
            endTime = now();
            mark("end", endTime);
            period = endTime - startTime;
            return period;
        }
        function mark(name, time) {
            var currentTime = time !== null && time !== void 0 ? time : now();
            var diff = 0;
            if (marks.length > 0) {
                diff = currentTime - marks[marks.length - 1].time;
            }
            marks.push({ name: name, time: currentTime, diff: diff });
        }
        var timerObj = {
            get startTime() {
                return startTime;
            },
            get endTime() {
                return endTime;
            },
            get period() {
                return period;
            },
            stop: stop,
            mark: mark,
            marks: marks
        };
        timers$1[timerName] = timerObj;
        return timerObj;
    }

    var WebSocketConstructor$1 = Utils$1.isNode() ? require("ws") : window.WebSocket;
    var WS$1 = (function () {
        function WS(settings, logger) {
            this.startupTimer = timer$1("connection");
            this._running = true;
            this._registry = lib$4();
            this.wsRequests = [];
            this.settings = settings;
            this.logger = logger;
            if (!this.settings.ws) {
                throw new Error("ws is missing");
            }
        }
        WS.prototype.onMessage = function (callback) {
            return this._registry.add("onMessage", callback);
        };
        WS.prototype.send = function (msg, options) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(function () {
                    var _a;
                    try {
                        (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);
                        resolve();
                    }
                    catch (e) {
                        reject(e);
                    }
                }, reject);
            });
        };
        WS.prototype.open = function () {
            var _this = this;
            this.logger.info("opening ws...");
            this._running = true;
            return new Promise(function (resolve, reject) {
                _this.waitForSocketConnection(resolve, reject);
            });
        };
        WS.prototype.close = function () {
            this._running = false;
            if (this.ws) {
                this.ws.close();
            }
            return Promise.resolve();
        };
        WS.prototype.onConnectedChanged = function (callback) {
            return this._registry.add("onConnectedChanged", callback);
        };
        WS.prototype.name = function () {
            return this.settings.ws;
        };
        WS.prototype.reconnect = function () {
            var _a;
            (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();
            var pw = new PromiseWrapper$1();
            this.waitForSocketConnection(function () {
                pw.resolve();
            });
            return pw.promise;
        };
        WS.prototype.waitForSocketConnection = function (callback, failed) {
            var _a;
            failed = failed !== null && failed !== void 0 ? failed : (function () { });
            if (!this._running) {
                failed("wait for socket on " + this.settings.ws + " failed - socket closed by user");
                return;
            }
            if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {
                callback();
                return;
            }
            this.wsRequests.push({ callback: callback, failed: failed });
            if (this.wsRequests.length > 1) {
                return;
            }
            this.openSocket();
        };
        WS.prototype.openSocket = function (retryInterval, retriesLeft) {
            return __awaiter$2(this, void 0, void 0, function () {
                var _a;
                var _this = this;
                return __generator$1(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.startupTimer.mark("opening-socket");
                            if (retryInterval === undefined) {
                                retryInterval = this.settings.reconnectInterval;
                            }
                            if (typeof retriesLeft === "undefined") {
                                retriesLeft = this.settings.reconnectAttempts;
                            }
                            if (retriesLeft !== undefined) {
                                if (retriesLeft === 0) {
                                    this.notifyForSocketState("wait for socket on " + this.settings.ws + " failed - no more retries left");
                                    return [2];
                                }
                                this.logger.debug("will retry " + retriesLeft + " more times (every " + retryInterval + " ms)");
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4, this.initiateSocket()];
                        case 2:
                            _b.sent();
                            this.startupTimer.mark("socket-initiated");
                            this.notifyForSocketState();
                            return [3, 4];
                        case 3:
                            _a = _b.sent();
                            setTimeout(function () {
                                var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;
                                _this.openSocket(retryInterval, retries);
                            }, retryInterval);
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        };
        WS.prototype.initiateSocket = function () {
            var _this = this;
            var pw = new PromiseWrapper$1();
            this.logger.debug("initiating ws to " + this.settings.ws + "...");
            this.ws = new WebSocketConstructor$1(this.settings.ws || "");
            this.ws.onerror = function (err) {
                var reason = "";
                try {
                    reason = JSON.stringify(err);
                }
                catch (error) {
                    var seen_1 = new WeakSet();
                    var replacer = function (key, value) {
                        if (typeof value === "object" && value !== null) {
                            if (seen_1.has(value)) {
                                return;
                            }
                            seen_1.add(value);
                        }
                        return value;
                    };
                    reason = JSON.stringify(err, replacer);
                }
                pw.reject("error");
                _this.notifyStatusChanged(false, reason);
            };
            this.ws.onclose = function (err) {
                _this.logger.info("ws closed " + err);
                pw.reject("closed");
                _this.notifyStatusChanged(false);
            };
            this.ws.onopen = function () {
                var _a;
                _this.startupTimer.mark("ws-opened");
                _this.logger.info("ws opened " + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));
                pw.resolve();
                _this.notifyStatusChanged(true);
            };
            this.ws.onmessage = function (message) {
                _this._registry.execute("onMessage", message.data);
            };
            return pw.promise;
        };
        WS.prototype.notifyForSocketState = function (error) {
            this.wsRequests.forEach(function (wsRequest) {
                if (error) {
                    if (wsRequest.failed) {
                        wsRequest.failed(error);
                    }
                }
                else {
                    wsRequest.callback();
                }
            });
            this.wsRequests = [];
        };
        WS.prototype.notifyStatusChanged = function (status, reason) {
            this._registry.execute("onConnectedChanged", status, reason);
        };
        return WS;
    }());

    function createCommonjsModule$3(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    // Found this seed-based random generator somewhere
    // Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

    var seed$3 = 1;

    /**
     * return a random number based on a seed
     * @param seed
     * @returns {number}
     */
    function getNextValue$3() {
        seed$3 = (seed$3 * 9301 + 49297) % 233280;
        return seed$3/(233280.0);
    }

    function setSeed$5(_seed_) {
        seed$3 = _seed_;
    }

    var randomFromSeed$3 = {
        nextValue: getNextValue$3,
        seed: setSeed$5
    };

    var ORIGINAL$3 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
    var alphabet$3;
    var previousSeed$3;

    var shuffled$3;

    function reset$3() {
        shuffled$3 = false;
    }

    function setCharacters$3(_alphabet_) {
        if (!_alphabet_) {
            if (alphabet$3 !== ORIGINAL$3) {
                alphabet$3 = ORIGINAL$3;
                reset$3();
            }
            return;
        }

        if (_alphabet_ === alphabet$3) {
            return;
        }

        if (_alphabet_.length !== ORIGINAL$3.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$3.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
        }

        var unique = _alphabet_.split('').filter(function(item, ind, arr){
           return ind !== arr.lastIndexOf(item);
        });

        if (unique.length) {
            throw new Error('Custom alphabet for shortid must be ' + ORIGINAL$3.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
        }

        alphabet$3 = _alphabet_;
        reset$3();
    }

    function characters$3(_alphabet_) {
        setCharacters$3(_alphabet_);
        return alphabet$3;
    }

    function setSeed$1$2(seed) {
        randomFromSeed$3.seed(seed);
        if (previousSeed$3 !== seed) {
            reset$3();
            previousSeed$3 = seed;
        }
    }

    function shuffle$3() {
        if (!alphabet$3) {
            setCharacters$3(ORIGINAL$3);
        }

        var sourceArray = alphabet$3.split('');
        var targetArray = [];
        var r = randomFromSeed$3.nextValue();
        var characterIndex;

        while (sourceArray.length > 0) {
            r = randomFromSeed$3.nextValue();
            characterIndex = Math.floor(r * sourceArray.length);
            targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
        }
        return targetArray.join('');
    }

    function getShuffled$3() {
        if (shuffled$3) {
            return shuffled$3;
        }
        shuffled$3 = shuffle$3();
        return shuffled$3;
    }

    /**
     * lookup shuffled letter
     * @param index
     * @returns {string}
     */
    function lookup$3(index) {
        var alphabetShuffled = getShuffled$3();
        return alphabetShuffled[index];
    }

    var alphabet_1$3 = {
        characters: characters$3,
        seed: setSeed$1$2,
        lookup: lookup$3,
        shuffled: getShuffled$3
    };

    var crypto$3 = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

    function randomByte$3() {
        if (!crypto$3 || !crypto$3.getRandomValues) {
            return Math.floor(Math.random() * 256) & 0x30;
        }
        var dest = new Uint8Array(1);
        crypto$3.getRandomValues(dest);
        return dest[0] & 0x30;
    }

    var randomByteBrowser$3 = randomByte$3;

    function encode$1(lookup, number) {
        var loopCounter = 0;
        var done;

        var str = '';

        while (!done) {
            str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser$3() );
            done = number < (Math.pow(16, loopCounter + 1 ) );
            loopCounter++;
        }
        return str;
    }

    var encode_1$1 = encode$1;

    /**
     * Decode the id to get the version and worker
     * Mainly for debugging and testing.
     * @param id - the shortid-generated id.
     */
    function decode$1(id) {
        var characters = alphabet_1$3.shuffled();
        return {
            version: characters.indexOf(id.substr(0, 1)) & 0x0f,
            worker: characters.indexOf(id.substr(1, 1)) & 0x0f
        };
    }

    var decode_1$1 = decode$1;

    function isShortId$3(id) {
        if (!id || typeof id !== 'string' || id.length < 6 ) {
            return false;
        }

        var characters = alphabet_1$3.characters();
        var len = id.length;
        for(var i = 0; i < len;i++) {
            if (characters.indexOf(id[i]) === -1) {
                return false;
            }
        }
        return true;
    }

    var isValid$3 = isShortId$3;

    var lib$1$2 = createCommonjsModule$3(function (module) {






    // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
    // This number should be updated every year or so to keep the generated id short.
    // To regenerate `new Date() - 0` and bump the version. Always bump the version!
    var REDUCE_TIME = 1459707606518;

    // don't change unless we change the algos or REDUCE_TIME
    // must be an integer and less than 16
    var version = 6;

    // if you are using cluster or multiple servers use this to make each instance
    // has a unique value for worker
    // Note: I don't know if this is automatically set when using third
    // party cluster solutions such as pm2.
    var clusterWorkerId =  0;

    // Counter is used when shortid is called multiple times in one second.
    var counter;

    // Remember the last time shortid was called in case counter is needed.
    var previousSeconds;

    /**
     * Generate unique id
     * Returns string id
     */
    function generate() {

        var str = '';

        var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

        if (seconds === previousSeconds) {
            counter++;
        } else {
            counter = 0;
            previousSeconds = seconds;
        }

        str = str + encode_1$1(alphabet_1$3.lookup, version);
        str = str + encode_1$1(alphabet_1$3.lookup, clusterWorkerId);
        if (counter > 0) {
            str = str + encode_1$1(alphabet_1$3.lookup, counter);
        }
        str = str + encode_1$1(alphabet_1$3.lookup, seconds);

        return str;
    }


    /**
     * Set the seed.
     * Highly recommended if you don't want people to try to figure out your id schema.
     * exposed as shortid.seed(int)
     * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
     */
    function seed(seedValue) {
        alphabet_1$3.seed(seedValue);
        return module.exports;
    }

    /**
     * Set the cluster worker or machine id
     * exposed as shortid.worker(int)
     * @param workerId worker must be positive integer.  Number less than 16 is recommended.
     * returns shortid module so it can be chained.
     */
    function worker(workerId) {
        clusterWorkerId = workerId;
        return module.exports;
    }

    /**
     *
     * sets new characters to use in the alphabet
     * returns the shuffled alphabet
     */
    function characters(newCharacters) {
        if (newCharacters !== undefined) {
            alphabet_1$3.characters(newCharacters);
        }

        return alphabet_1$3.shuffled();
    }


    // Export all other functions as properties of the generate function
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.decode = decode_1$1;
    module.exports.isValid = isValid$3;
    });
    var lib_1$1 = lib$1$2.generate;
    var lib_2$1 = lib$1$2.seed;
    var lib_3$1 = lib$1$2.worker;
    var lib_4$1 = lib$1$2.characters;
    var lib_5$1 = lib$1$2.decode;
    var lib_6$1 = lib$1$2.isValid;

    var shortid$3 = lib$1$2;

    function domainSession$1 (domain, connection, logger, successMessages, errorMessages) {
        if (domain == null) {
            domain = "global";
        }
        successMessages = successMessages || ["success"];
        errorMessages = errorMessages || ["error"];
        var isJoined = false;
        var tryReconnecting = false;
        var _latestOptions;
        var _connectionOn = false;
        var callbacks = lib$4();
        connection.disconnected(handleConnectionDisconnected);
        connection.loggedIn(handleConnectionLoggedIn);
        connection.on("success", function (msg) { return handleSuccessMessage(msg); });
        connection.on("error", function (msg) { return handleErrorMessage(msg); });
        connection.on("result", function (msg) { return handleSuccessMessage(msg); });
        if (successMessages) {
            successMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleSuccessMessage(msg); });
            });
        }
        if (errorMessages) {
            errorMessages.forEach(function (sm) {
                connection.on(sm, function (msg) { return handleErrorMessage(msg); });
            });
        }
        var requestsMap = {};
        function join(options) {
            _latestOptions = options;
            return new Promise(function (resolve, reject) {
                if (isJoined) {
                    resolve();
                    return;
                }
                var joinPromise;
                if (domain === "global") {
                    joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject("not connected to gateway");
                }
                else {
                    logger.debug("joining domain " + domain);
                    var joinMsg = {
                        type: "join",
                        destination: domain,
                        domain: "global",
                        options: options,
                    };
                    joinPromise = send(joinMsg);
                }
                joinPromise
                    .then(function () {
                    handleJoined();
                    resolve();
                })
                    .catch(function (err) {
                    logger.debug("error joining " + domain + " domain: " + JSON.stringify(err));
                    reject(err);
                });
            });
        }
        function leave() {
            if (domain === "global") {
                return Promise.resolve();
            }
            logger.debug("stopping session " + domain + "...");
            var leaveMsg = {
                type: "leave",
                destination: domain,
                domain: "global",
            };
            tryReconnecting = false;
            return send(leaveMsg)
                .then(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            })
                .catch(function () {
                isJoined = false;
                callbacks.execute("onLeft");
            });
        }
        function handleJoined() {
            logger.debug("did join " + domain);
            isJoined = true;
            var wasReconnect = tryReconnecting;
            tryReconnecting = false;
            callbacks.execute("onJoined", wasReconnect);
        }
        function handleConnectionDisconnected() {
            _connectionOn = false;
            logger.debug("connection is down");
            isJoined = false;
            tryReconnecting = true;
            callbacks.execute("onLeft", { disconnected: true });
        }
        function handleConnectionLoggedIn() {
            _connectionOn = true;
            if (tryReconnecting) {
                logger.debug("connection is now up - trying to reconnect...");
                join(_latestOptions);
            }
        }
        function onJoined(callback) {
            if (isJoined) {
                callback(false);
            }
            return callbacks.add("onJoined", callback);
        }
        function onLeft(callback) {
            if (!isJoined) {
                callback();
            }
            return callbacks.add("onLeft", callback);
        }
        function handleErrorMessage(msg) {
            if (domain !== msg.domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.error(msg);
        }
        function handleSuccessMessage(msg) {
            if (msg.domain !== domain) {
                return;
            }
            var requestId = msg.request_id;
            if (!requestId) {
                return;
            }
            var entry = requestsMap[requestId];
            if (!entry) {
                return;
            }
            entry.success(msg);
        }
        function getNextRequestId() {
            return shortid$3();
        }
        function send(msg, tag, options) {
            options = options || {};
            msg.request_id = msg.request_id || getNextRequestId();
            msg.domain = msg.domain || domain;
            if (!options.skipPeerId) {
                msg.peer_id = connection.peerId;
            }
            var requestId = msg.request_id;
            return new Promise(function (resolve, reject) {
                requestsMap[requestId] = {
                    success: function (successMsg) {
                        delete requestsMap[requestId];
                        successMsg._tag = tag;
                        resolve(successMsg);
                    },
                    error: function (errorMsg) {
                        logger.warn("GW error - " + JSON.stringify(errorMsg) + " for request " + JSON.stringify(msg));
                        delete requestsMap[requestId];
                        errorMsg._tag = tag;
                        reject(errorMsg);
                    },
                };
                connection
                    .send(msg, options)
                    .catch(function (err) {
                    requestsMap[requestId].error({ err: err });
                });
            });
        }
        function sendFireAndForget(msg) {
            msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();
            msg.domain = msg.domain || domain;
            msg.peer_id = connection.peerId;
            return connection.send(msg);
        }
        return {
            join: join,
            leave: leave,
            onJoined: onJoined,
            onLeft: onLeft,
            send: send,
            sendFireAndForget: sendFireAndForget,
            on: function (type, callback) {
                connection.on(type, function (msg) {
                    if (msg.domain !== domain) {
                        return;
                    }
                    try {
                        callback(msg);
                    }
                    catch (e) {
                        logger.error("Callback  failed: " + e + " \n " + e.stack + " \n msg was: " + JSON.stringify(msg), e);
                    }
                });
            },
            loggedIn: function (callback) { return connection.loggedIn(callback); },
            connected: function (callback) { return connection.connected(callback); },
            disconnected: function (callback) { return connection.disconnected(callback); },
            get peerId() {
                return connection.peerId;
            },
            get domain() {
                return domain;
            },
        };
    }

    var GW3ProtocolImpl$1 = (function () {
        function GW3ProtocolImpl(connection, settings, logger) {
            var _this = this;
            this.connection = connection;
            this.settings = settings;
            this.logger = logger;
            this.protocolVersion = 3;
            this.datePrefix = "#T42_DATE#";
            this.datePrefixLen = this.datePrefix.length;
            this.dateMinLen = this.datePrefixLen + 1;
            this.datePrefixFirstChar = this.datePrefix[0];
            this.registry = lib$4();
            this._isLoggedIn = false;
            this.shouldTryLogin = true;
            this.initialLogin = true;
            this.initialLoginAttempts = 3;
            this.sessions = [];
            connection.disconnected(function () {
                _this.handleDisconnected();
            });
            this.ping();
        }
        Object.defineProperty(GW3ProtocolImpl.prototype, "isLoggedIn", {
            get: function () {
                return this._isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        GW3ProtocolImpl.prototype.processStringMessage = function (message) {
            var _this = this;
            var msg = JSON.parse(message, function (key, value) {
                if (typeof value !== "string") {
                    return value;
                }
                if (value.length < _this.dateMinLen) {
                    return value;
                }
                if (value[0] !== _this.datePrefixFirstChar) {
                    return value;
                }
                if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {
                    return value;
                }
                try {
                    var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);
                    if (isNaN(milliseconds)) {
                        return value;
                    }
                    return new Date(milliseconds);
                }
                catch (ex) {
                    return value;
                }
            });
            return {
                msg: msg,
                msgType: msg.type,
            };
        };
        GW3ProtocolImpl.prototype.createStringMessage = function (message) {
            var oldToJson = Date.prototype.toJSON;
            try {
                var datePrefix_1 = this.datePrefix;
                Date.prototype.toJSON = function () {
                    return datePrefix_1 + this.getTime();
                };
                var result = JSON.stringify(message);
                return result;
            }
            finally {
                Date.prototype.toJSON = oldToJson;
            }
        };
        GW3ProtocolImpl.prototype.processObjectMessage = function (message) {
            if (!message.type) {
                throw new Error("Object should have type property");
            }
            return {
                msg: message,
                msgType: message.type,
            };
        };
        GW3ProtocolImpl.prototype.createObjectMessage = function (message) {
            return message;
        };
        GW3ProtocolImpl.prototype.login = function (config, reconnect) {
            return __awaiter$2(this, void 0, void 0, function () {
                var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;
                return __generator$1(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.logger.debug("logging in...");
                            this.loginConfig = config;
                            if (!this.loginConfig) {
                                this.loginConfig = { username: "", password: "" };
                            }
                            this.shouldTryLogin = true;
                            authentication = {};
                            this.connection.gatewayToken = config.gatewayToken;
                            if (!config.gatewayToken) return [3, 5];
                            if (!reconnect) return [3, 4];
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 3, , 4]);
                            return [4, this.getNewGWToken()];
                        case 2:
                            token = _c.sent();
                            config.gatewayToken = token;
                            return [3, 4];
                        case 3:
                            e_1 = _c.sent();
                            this.logger.warn("failed to get GW token when reconnecting " + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));
                            return [3, 4];
                        case 4:
                            authentication.method = "gateway-token";
                            authentication.token = config.gatewayToken;
                            this.connection.gatewayToken = config.gatewayToken;
                            return [3, 10];
                        case 5:
                            if (!(config.flowName === "sspi")) return [3, 9];
                            authentication.provider = "win";
                            authentication.method = "access-token";
                            if (!(config.flowCallback && config.sessionId)) return [3, 7];
                            _a = authentication;
                            return [4, config.flowCallback(config.sessionId, null)];
                        case 6:
                            _a.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            return [3, 8];
                        case 7: throw new Error("Invalid SSPI config");
                        case 8: return [3, 10];
                        case 9:
                            if (config.token) {
                                authentication.method = "access-token";
                                authentication.token = config.token;
                            }
                            else if (config.username) {
                                authentication.method = "secret";
                                authentication.login = config.username;
                                authentication.secret = config.password;
                            }
                            else if (config.provider) {
                                authentication.provider = config.provider;
                                authentication.providerContext = config.providerContext;
                            }
                            else {
                                throw new Error("invalid auth message" + JSON.stringify(config));
                            }
                            _c.label = 10;
                        case 10:
                            helloMsg = {
                                type: "hello",
                                identity: this.settings.identity,
                                authentication: authentication
                            };
                            if (config.sessionId) {
                                helloMsg.request_id = config.sessionId;
                            }
                            this.globalDomain = domainSession$1("global", this.connection, this.logger.subLogger("global-domain"), [
                                "welcome",
                                "token",
                                "authentication-request"
                            ]);
                            sendOptions = { skipPeerId: true };
                            if (this.initialLogin) {
                                sendOptions.retryInterval = this.settings.reconnectInterval;
                                sendOptions.maxRetries = this.settings.reconnectAttempts;
                            }
                            _c.label = 11;
                        case 11:
                            _c.trys.push([11, 19, 20, 21]);
                            welcomeMsg = void 0;
                            _c.label = 12;
                        case 12:
                            return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];
                        case 13:
                            msg = _c.sent();
                            if (!(msg.type === "authentication-request")) return [3, 16];
                            token = Buffer.from(msg.authentication.token, "base64");
                            if (!(config.flowCallback && config.sessionId)) return [3, 15];
                            _b = helloMsg.authentication;
                            return [4, config.flowCallback(config.sessionId, token)];
                        case 14:
                            _b.token =
                                (_c.sent())
                                    .data
                                    .toString("base64");
                            _c.label = 15;
                        case 15:
                            helloMsg.request_id = config.sessionId;
                            return [3, 12];
                        case 16:
                            if (msg.type === "welcome") {
                                welcomeMsg = msg;
                                return [3, 18];
                            }
                            else if (msg.type === "error") {
                                throw new Error("Authentication failed: " + msg.reason);
                            }
                            else {
                                throw new Error("Unexpected message type during authentication: " + msg.type);
                            }
                        case 17: return [3, 12];
                        case 18:
                            this.initialLogin = false;
                            this.logger.debug("login successful with peerId " + welcomeMsg.peer_id);
                            this.connection.peerId = welcomeMsg.peer_id;
                            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;
                            this.connection.availableDomains = welcomeMsg.available_domains;
                            if (welcomeMsg.options) {
                                this.connection.token = welcomeMsg.options.access_token;
                                this.connection.info = welcomeMsg.options.info;
                            }
                            this.setLoggedIn(true);
                            return [2, welcomeMsg.resolved_identity];
                        case 19:
                            err_1 = _c.sent();
                            this.logger.error("error sending hello message - " + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);
                            throw err_1;
                        case 20:
                            if (config && config.flowCallback && config.sessionId) {
                                config.flowCallback(config.sessionId, null);
                            }
                            return [7];
                        case 21: return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.logout = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                var promises;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("logging out...");
                            this.shouldTryLogin = false;
                            if (this.pingTimer) {
                                clearTimeout(this.pingTimer);
                            }
                            promises = this.sessions.map(function (session) {
                                session.leave();
                            });
                            return [4, Promise.all(promises)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        GW3ProtocolImpl.prototype.loggedIn = function (callback) {
            if (this._isLoggedIn) {
                callback();
            }
            return this.registry.add("onLoggedIn", callback);
        };
        GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {
            var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];
            if (!session) {
                session = domainSession$1(domainName, this.connection, domainLogger, successMessages, errorMessages);
                this.sessions.push(session);
            }
            return session;
        };
        GW3ProtocolImpl.prototype.handleDisconnected = function () {
            var _this = this;
            this.setLoggedIn(false);
            var tryToLogin = this.shouldTryLogin;
            if (tryToLogin && this.initialLogin) {
                if (this.initialLoginAttempts <= 0) {
                    return;
                }
                this.initialLoginAttempts--;
            }
            this.logger.debug("disconnected - will try new login?" + this.shouldTryLogin);
            if (this.shouldTryLogin) {
                if (!this.loginConfig) {
                    throw new Error("no login info");
                }
                this.connection.login(this.loginConfig, true)
                    .catch(function () {
                    setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);
                });
            }
        };
        GW3ProtocolImpl.prototype.setLoggedIn = function (value) {
            this._isLoggedIn = value;
            if (this._isLoggedIn) {
                this.registry.execute("onLoggedIn");
            }
        };
        GW3ProtocolImpl.prototype.ping = function () {
            var _this = this;
            if (!this.shouldTryLogin) {
                return;
            }
            if (this._isLoggedIn) {
                this.connection.send({ type: "ping" });
            }
            this.pingTimer = setTimeout(function () {
                _this.ping();
            }, 30 * 1000);
        };
        GW3ProtocolImpl.prototype.authToken = function () {
            var createTokenReq = {
                type: "create-token"
            };
            if (!this.globalDomain) {
                return Promise.reject(new Error("no global domain session"));
            }
            return this.globalDomain.send(createTokenReq)
                .then(function (res) {
                return res.token;
            });
        };
        GW3ProtocolImpl.prototype.getNewGWToken = function () {
            if (typeof window !== undefined) {
                var glue42gd = window.glue42gd;
                if (glue42gd) {
                    return glue42gd.getGWToken();
                }
            }
            return Promise.reject(new Error("not running in GD"));
        };
        return GW3ProtocolImpl;
    }());

    var MessageReplayerImpl$1 = (function () {
        function MessageReplayerImpl(specs) {
            this.specsNames = [];
            this.messages = {};
            this.subs = {};
            this.subsRefCount = {};
            this.specs = {};
            for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {
                var spec = specs_1[_i];
                this.specs[spec.name] = spec;
                this.specsNames.push(spec.name);
            }
        }
        MessageReplayerImpl.prototype.init = function (connection) {
            var _this = this;
            this.connection = connection;
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var _loop_1 = function (type) {
                    var refCount = this_1.subsRefCount[type];
                    if (!refCount) {
                        refCount = 0;
                    }
                    refCount += 1;
                    this_1.subsRefCount[type] = refCount;
                    if (refCount > 1) {
                        return "continue";
                    }
                    var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });
                    this_1.subs[type] = sub;
                };
                var this_1 = this;
                for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {
                    var type = _c[_b];
                    _loop_1(type);
                }
            }
        };
        MessageReplayerImpl.prototype.processMessage = function (type, msg) {
            if (this.isDone || !msg) {
                return;
            }
            for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {
                var name_2 = _a[_i];
                if (this.specs[name_2].types.indexOf(type) !== -1) {
                    var messages = this.messages[name_2] || [];
                    this.messages[name_2] = messages;
                    messages.push(msg);
                }
            }
        };
        MessageReplayerImpl.prototype.drain = function (name, callback) {
            var _a;
            if (callback) {
                (this.messages[name] || []).forEach(callback);
            }
            delete this.messages[name];
            for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {
                var type = _b[_i];
                this.subsRefCount[type] -= 1;
                if (this.subsRefCount[type] <= 0) {
                    (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);
                    delete this.subs[type];
                    delete this.subsRefCount[type];
                }
            }
            delete this.specs[name];
            if (!this.specs.length) {
                this.isDone = true;
            }
        };
        return MessageReplayerImpl;
    }());

    var PromisePlus$2 = function (executor, timeoutMilliseconds, timeoutMessage) {
        return new Promise(function (resolve, reject) {
            var timeout = setTimeout(function () {
                var message = timeoutMessage || "Promise timeout hit: " + timeoutMilliseconds;
                reject(message);
            }, timeoutMilliseconds);
            var providedPromise = new Promise(executor);
            providedPromise
                .then(function (result) {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch(function (error) {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var WebPlatformTransport$1 = (function () {
        function WebPlatformTransport(settings, logger, identity) {
            this.settings = settings;
            this.logger = logger;
            this.identity = identity;
            this.iAmConnected = false;
            this.parentReady = false;
            this.rejected = false;
            this.children = [];
            this.extContentAvailable = false;
            this.extContentConnecting = false;
            this.extContentConnected = false;
            this.parentInExtMode = false;
            this.webNamespace = "g42_core_web";
            this.parentPingTimeout = 5000;
            this.connectionRequestTimeout = 7000;
            this.defaultTargetString = "*";
            this.registry = lib$4();
            this.messages = {
                connectionAccepted: { name: "connectionAccepted", handle: this.handleConnectionAccepted.bind(this) },
                connectionRejected: { name: "connectionRejected", handle: this.handleConnectionRejected.bind(this) },
                connectionRequest: { name: "connectionRequest", handle: this.handleConnectionRequest.bind(this) },
                parentReady: { name: "parentReady", handle: this.handleParentReady.bind(this) },
                parentPing: { name: "parentPing", handle: this.handleParentPing.bind(this) },
                platformPing: { name: "platformPing", handle: this.handlePlatformPing.bind(this) },
                platformReady: { name: "platformReady", handle: this.handlePlatformReady.bind(this) },
                clientUnload: { name: "clientUnload", handle: this.handleClientUnload.bind(this) },
                manualUnload: { name: "manualUnload", handle: this.handleManualUnload.bind(this) },
                extConnectionResponse: { name: "extConnectionResponse", handle: this.handleExtConnectionResponse.bind(this) },
                extSetupRequest: { name: "extSetupRequest", handle: this.handleExtSetupRequest.bind(this) },
                gatewayDisconnect: { name: "gatewayDisconnect", handle: this.handleGatewayDisconnect.bind(this) },
                gatewayInternalConnect: { name: "gatewayInternalConnect", handle: this.handleGatewayInternalConnect.bind(this) }
            };
            this.extContentAvailable = !!window.glue42ext;
            this.setUpMessageListener();
            this.setUpUnload();
            this.setupPlatformUnloadListener();
            if (!this.settings.port) {
                this.parent = window.opener || window.top;
                this.parentType = window.opener ? "opener" :
                    window.name.indexOf("#wsp") !== -1 ? "workspace" : "top";
            }
        }
        WebPlatformTransport.prototype.manualSetReadyState = function () {
            this.iAmConnected = true;
            this.parentReady = true;
        };
        Object.defineProperty(WebPlatformTransport.prototype, "transportWindowId", {
            get: function () {
                return this.publicWindowId;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(WebPlatformTransport.prototype, "communicationId", {
            get: function () {
                return this._communicationId;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.sendObject = function (msg) {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    if (this.extContentConnected) {
                        return [2, window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString)];
                    }
                    if (!this.port) {
                        throw new Error("Cannot send message, because the port was not opened yet");
                    }
                    this.port.postMessage(msg);
                    return [2];
                });
            });
        };
        Object.defineProperty(WebPlatformTransport.prototype, "isObjectBasedTransport", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        WebPlatformTransport.prototype.onMessage = function (callback) {
            return this.registry.add("onMessage", callback);
        };
        WebPlatformTransport.prototype.send = function () {
            return Promise.reject("not supported");
        };
        WebPlatformTransport.prototype.onConnectedChanged = function (callback) {
            return this.registry.add("onConnectedChanged", callback);
        };
        WebPlatformTransport.prototype.open = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.logger.debug("opening a connection to the web platform gateway.");
                            return [4, this.connect()];
                        case 1:
                            _a.sent();
                            this.notifyStatusChanged(true);
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.close = function () {
            var _a, _b;
            var message = {
                glue42core: {
                    type: this.messages.gatewayDisconnect.name,
                    data: {
                        clientId: this.myClientId,
                        ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                    }
                }
            };
            (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            this.parentReady = false;
            this.notifyStatusChanged(false, "manual reconnection");
            return Promise.resolve();
        };
        WebPlatformTransport.prototype.name = function () {
            return "web-platform";
        };
        WebPlatformTransport.prototype.reconnect = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.close()];
                        case 1:
                            _a.sent();
                            return [2, Promise.resolve()];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.connect = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.settings.port) return [3, 2];
                            return [4, this.initiateInternalConnection()];
                        case 1:
                            _a.sent();
                            this.logger.debug("internal web platform connection completed");
                            return [2];
                        case 2:
                            if (!this.parentType || !this.parent) {
                                throw new Error("Cannot initiate a connection, because there is no opener, no top and no port.");
                            }
                            this.logger.debug("opening a " + (this.parentType === "opener" ? "child" : "grandchild") + " client web platform connection");
                            return [4, this.waitParent(this.parent, this.parentType)];
                        case 3:
                            _a.sent();
                            if (!this.parentInExtMode) return [3, 5];
                            return [4, this.requestConnectionPermissionFromExt()];
                        case 4:
                            _a.sent();
                            _a.label = 5;
                        case 5: return [4, this.initiateRemoteConnection(this.parent, this.parentType)];
                        case 6:
                            _a.sent();
                            this.logger.debug("the " + (this.parentType === "opener" ? "child" : "grandchild") + " client is connected");
                            return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateInternalConnection = function () {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.logger.debug("opening an internal web platform connection");
                _this.port = _this.settings.port;
                if (_this.iAmConnected) {
                    _this.logger.warn("cannot open a new connection, because this client is currently connected");
                    return;
                }
                _this.port.onmessage = function (event) {
                    var _a, _b;
                    if (_this.iAmConnected && !((_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core)) {
                        _this.registry.execute("onMessage", event.data);
                        return;
                    }
                    var data = (_b = event.data) === null || _b === void 0 ? void 0 : _b.glue42core;
                    if (!data) {
                        return;
                    }
                    if (data.type === _this.messages.gatewayInternalConnect.name && data.success) {
                        _this.publicWindowId = _this.settings.windowId;
                        if (_this.identity && _this.publicWindowId) {
                            _this.identity.windowId = _this.publicWindowId;
                            _this.identity.instance = _this.publicWindowId;
                        }
                        resolve();
                    }
                    if (data.type === _this.messages.gatewayInternalConnect.name && data.error) {
                        reject(data.error);
                    }
                };
                _this.port.postMessage({
                    glue42core: {
                        type: _this.messages.gatewayInternalConnect.name
                    }
                });
            });
        };
        WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {
            var _this = this;
            return PromisePlus$2(function (resolve, reject) {
                var _a;
                _this.connectionResolve = resolve;
                _this.connectionReject = reject;
                _this.myClientId = (_a = _this.myClientId) !== null && _a !== void 0 ? _a : shortid$3();
                var bridgeInstanceId = _this.parentType === "workspace" ? window.name.substring(0, window.name.indexOf("#wsp")) : window.name;
                var request = {
                    glue42core: {
                        type: _this.messages.connectionRequest.name,
                        clientId: _this.myClientId,
                        clientType: parentType === "top" || parentType === "workspace" ? "grandChild" : "child",
                        bridgeInstanceId: bridgeInstanceId
                    }
                };
                _this.logger.debug("sending connection request to " + parentType);
                if (_this.extContentConnecting) {
                    request.glue42core.clientType = "child";
                    request.glue42core.bridgeInstanceId = _this.myClientId;
                    request.glue42core.parentWindowId = _this.parentWindowId;
                    return window.postMessage(request, _this.defaultTargetString);
                }
                target.postMessage(request, _this.defaultTargetString);
            }, this.connectionRequestTimeout, "The connection to the opener/top window timed out");
        };
        WebPlatformTransport.prototype.waitParent = function (target, parentType) {
            return __awaiter$2(this, void 0, void 0, function () {
                var connectionNotPossibleMsg, parentCheck, error_1;
                var _this = this;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            connectionNotPossibleMsg = "Cannot initiate glue, because this window was not opened or created by a glue client";
                            parentCheck = PromisePlus$2(function (resolve, reject) {
                                var isIframe = window.self !== window.top;
                                if (parentType === "top" && !isIframe) {
                                    return reject(connectionNotPossibleMsg);
                                }
                                _this.parentPingResolve = resolve;
                                var message = {
                                    glue42core: {
                                        type: parentType === "opener" ? _this.messages.platformPing.name : _this.messages.parentPing.name
                                    }
                                };
                                _this.logger.debug("checking for " + parentType + " window availability");
                                _this.parentPingInterval = setInterval(function () {
                                    target.postMessage(message, _this.defaultTargetString);
                                }, 1000);
                            }, this.parentPingTimeout, connectionNotPossibleMsg);
                            parentCheck.catch(function () {
                                if (_this.parentPingInterval) {
                                    clearInterval(_this.parentPingInterval);
                                    delete _this.parentPingInterval;
                                }
                            });
                            if (!this.extContentAvailable) {
                                return [2, parentCheck];
                            }
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 5]);
                            return [4, parentCheck];
                        case 2:
                            _a.sent();
                            return [2];
                        case 3:
                            error_1 = _a.sent();
                            this.logger.debug("the parent check failed, but there is an associated extension content script, requesting permission...");
                            return [4, this.requestConnectionPermissionFromExt()];
                        case 4:
                            _a.sent();
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            });
        };
        WebPlatformTransport.prototype.setUpMessageListener = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping generic message listener, because this is an internal client");
                return;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || _this.rejected) {
                    return;
                }
                if (!_this.checkMessageTypeValid(data.type)) {
                    _this.logger.error("cannot handle the incoming glue42 core message, because the type is invalid: " + data.type);
                    return;
                }
                var messageType = data.type;
                _this.logger.debug("received valid glue42core message of type: " + messageType);
                _this.messages[messageType].handle(event);
            });
        };
        WebPlatformTransport.prototype.setUpUnload = function () {
            var _this = this;
            if (this.settings.port) {
                this.logger.debug("skipping unload event listener, because this is an internal client");
                return;
            }
            window.addEventListener("beforeunload", function () {
                var _a, _b;
                if (_this.extContentConnected) {
                    return;
                }
                var message = {
                    glue42core: {
                        type: _this.messages.clientUnload.name,
                        data: {
                            clientId: _this.myClientId,
                            ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                        }
                    }
                };
                if (_this.parent) {
                    _this.parent.postMessage(message, _this.defaultTargetString);
                }
                (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
            });
        };
        WebPlatformTransport.prototype.handleParentReady = function (event) {
            var _a;
            this.logger.debug("handling the ready signal from the parent, by resoling the pending promise.");
            this.parentReady = true;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (data && data.extMode) {
                this.logger.debug("my parent is connected to its content script, fetching windowId and proceeding with content script connection");
                this.parentWindowId = data.extMode.windowId;
                this.parentInExtMode = true;
            }
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
            }
            if (this.parentPingInterval) {
                clearInterval(this.parentPingInterval);
                delete this.parentPingInterval;
            }
        };
        WebPlatformTransport.prototype.handlePlatformReady = function () {
            this.logger.debug("the web platform gave the ready signal");
            this.parentReady = true;
            if (this.parentPingResolve) {
                this.parentPingResolve();
                delete this.parentPingResolve;
            }
            if (this.parentPingInterval) {
                clearInterval(this.parentPingInterval);
                delete this.parentPingInterval;
            }
        };
        WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (this.myClientId === data.clientId) {
                return this.handleAcceptanceOfMyRequest(data);
            }
            return this.handleAcceptanceOfGrandChildRequest(data, event);
        };
        WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {
            var _this = this;
            var _a, _b, _c;
            this.logger.debug("handling a connection accepted signal targeted at me.");
            this.isPreferredActivated = data.isPreferredActivated;
            if (this.extContentConnecting) {
                return this.processExtContentConnection(data);
            }
            if (!data.port) {
                this.logger.error("cannot set up my connection, because I was not provided with a port");
                return;
            }
            this.publicWindowId = this.parentType === "opener" ? window.name :
                this.parentType === "top" ? data.parentWindowId :
                    window.name.substring(0, window.name.indexOf("#wsp"));
            if (this.identity && this.parentType !== "top") {
                this.identity.windowId = (_a = this.identity.windowId) !== null && _a !== void 0 ? _a : this.publicWindowId;
                this.identity.instance = (_b = this.identity.instance) !== null && _b !== void 0 ? _b : this.publicWindowId;
            }
            if (this.identity && this.parentType === "top") {
                this.identity.instance = (_c = this.identity.instance) !== null && _c !== void 0 ? _c : shortid$3();
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            this._communicationId = data.communicationId;
            this.port = data.port;
            this.port.onmessage = function (e) { return _this.registry.execute("onMessage", e.data); };
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
            this.logger.error("unable to call the connection resolve, because no connection promise was found");
        };
        WebPlatformTransport.prototype.processExtContentConnection = function (data) {
            var _this = this;
            this.logger.debug("handling a connection accepted signal targeted at me for extension content connection.");
            this.extContentConnecting = false;
            this.extContentConnected = true;
            this.publicWindowId = this.parentWindowId || this.myClientId;
            if (this.extContentConnecting && this.identity) {
                this.identity.windowId = this.publicWindowId;
            }
            if (this.identity && data.appName) {
                this.identity.application = data.appName;
                this.identity.applicationName = data.appName;
            }
            window.addEventListener("message", function (event) {
                var _a;
                var extData = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42ExtInc;
                if (!extData) {
                    return;
                }
                _this.registry.execute("onMessage", extData);
            });
            if (this.connectionResolve) {
                this.logger.debug("my connection is set up, calling the connection resolve.");
                this.connectionResolve();
                delete this.connectionResolve;
                return;
            }
        };
        WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {
            if (this.extContentConnecting || this.extContentConnected) {
                this.logger.debug("cannot process acceptance of a grandchild, because I am connected to a content script");
                return;
            }
            this.logger.debug("handling a connection accepted signal targeted at a grandchild: " + data.clientId);
            var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });
            if (!child) {
                this.logger.error("cannot handle connection accepted for grandchild: " + data.clientId + ", because there is no grandchild with this id");
                return;
            }
            child.connected = true;
            this.logger.debug("the grandchild connection for " + data.clientId + " is set up, forwarding the success message and the gateway port");
            data.parentWindowId = this.publicWindowId;
            child.source.postMessage(event.data, child.origin, [data.port]);
            return;
        };
        WebPlatformTransport.prototype.handleConnectionRejected = function () {
            this.logger.debug("handling a connection rejection. Most likely the reason is that this window was not created by a glue API call");
            if (this.connectionReject) {
                this.connectionReject("The platform connection was rejected. Most likely because this window was not created by a glue API call");
                delete this.connectionReject;
            }
        };
        WebPlatformTransport.prototype.handleConnectionRequest = function (event) {
            if (this.extContentConnecting) {
                this.logger.debug("This connection request event is targeted at the extension content");
                return;
            }
            var source = event.source;
            var data = event.data.glue42core;
            if (!data.clientType || data.clientType !== "grandChild") {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source was not opened by a glue API call");
            }
            if (!data.clientId) {
                return this.rejectConnectionRequest(source, event.origin, "rejecting a connection request, because the source did not provide a valid id");
            }
            if (this.parentType !== "opener" || !this.parent) {
                return this.rejectConnectionRequest(source, event.origin, "Cannot forward the connection request, because no direct connection to the platform was found");
            }
            this.logger.debug("handling a connection request for a grandchild: " + data.clientId);
            this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });
            this.logger.debug("grandchild: " + data.clientId + " is prepared, forwarding connection request to the platform");
            this.parent.postMessage(event.data, this.defaultTargetString);
        };
        WebPlatformTransport.prototype.handleParentPing = function (event) {
            if (!this.parentReady) {
                this.logger.debug("my parent is not ready, I am ignoring the parent ping");
                return;
            }
            if (!this.iAmConnected) {
                this.logger.debug("i am not fully connected yet, I am ignoring the parent ping");
                return;
            }
            var message = {
                glue42core: {
                    type: this.messages.parentReady.name
                }
            };
            if (this.extContentConnected) {
                message.glue42core.extMode = { windowId: this.myClientId };
            }
            var source = event.source;
            this.logger.debug("responding to a parent ping with a ready message");
            source.postMessage(message, event.origin);
        };
        WebPlatformTransport.prototype.setupPlatformUnloadListener = function () {
            var _this = this;
            this.onMessage(function (msg) {
                if (msg.type === "platformUnload") {
                    _this.logger.debug("detected a web platform unload");
                    _this.parentReady = false;
                    _this.notifyStatusChanged(false, "Gateway unloaded");
                }
            });
        };
        WebPlatformTransport.prototype.handleManualUnload = function () {
            var _a, _b;
            var message = {
                glue42core: {
                    type: this.messages.clientUnload.name,
                    data: {
                        clientId: this.myClientId,
                        ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId
                    }
                }
            };
            if (this.extContentConnected) {
                return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);
            }
            (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);
        };
        WebPlatformTransport.prototype.handleClientUnload = function (event) {
            var data = event.data.glue42core;
            var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;
            if (!clientId) {
                this.logger.warn("cannot process grand child unload, because the provided id was not valid");
                return;
            }
            var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });
            if (!foundChild) {
                this.logger.warn("cannot process grand child unload, because this client is unaware of this grandchild");
                return;
            }
            this.logger.debug("handling grandchild unload for id: " + clientId);
            this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });
        };
        WebPlatformTransport.prototype.handlePlatformPing = function () {
            this.logger.error("cannot handle platform ping, because this is not a platform calls handling component");
        };
        WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {
            this.iAmConnected = status;
            this.registry.execute("onConnectedChanged", status, reason);
        };
        WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {
            return typeof typeToValidate === "string" && !!this.messages[typeToValidate];
        };
        WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {
            this.rejected = true;
            this.logger.error(reason);
            var rejection = {
                glue42core: {
                    type: this.messages.connectionRejected.name
                }
            };
            source.postMessage(rejection, origin);
        };
        WebPlatformTransport.prototype.requestConnectionPermissionFromExt = function () {
            var _this = this;
            return this.waitForContentScript()
                .then(function () { return PromisePlus$2(function (resolve, reject) {
                _this.extConnectionResolve = resolve;
                _this.extConnectionReject = reject;
                var message = {
                    glue42core: {
                        type: "extSetupRequest"
                    }
                };
                _this.logger.debug("permission request to the extension content script was sent");
                window.postMessage(message, _this.defaultTargetString);
            }, _this.parentPingTimeout, "Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out"); });
        };
        WebPlatformTransport.prototype.handleExtConnectionResponse = function (event) {
            var _a;
            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
            if (!data.approved && this.extConnectionReject) {
                return this.extConnectionReject("Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected");
            }
            if (this.extConnectionResolve) {
                this.extContentConnecting = true;
                this.logger.debug("The extension connection was approved, proceeding.");
                this.extConnectionResolve();
                delete this.extConnectionResolve;
            }
        };
        WebPlatformTransport.prototype.handleExtSetupRequest = function () {
            return;
        };
        WebPlatformTransport.prototype.handleGatewayDisconnect = function () {
            return;
        };
        WebPlatformTransport.prototype.handleGatewayInternalConnect = function () {
            return;
        };
        WebPlatformTransport.prototype.waitForContentScript = function () {
            var _a;
            var contentReady = !!((_a = window.glue42ext) === null || _a === void 0 ? void 0 : _a.content);
            if (contentReady) {
                return Promise.resolve();
            }
            return PromisePlus$2(function (resolve) {
                window.addEventListener("Glue42EXTReady", function () {
                    resolve();
                });
            }, this.connectionRequestTimeout, "The content script was available, but was never heard to be ready");
        };
        return WebPlatformTransport;
    }());

    var waitForInvocations$1 = function (invocations, callback) {
        var left = invocations;
        return function () {
            left--;
            if (left === 0) {
                callback();
            }
        };
    };

    var AsyncSequelizer$1 = (function () {
        function AsyncSequelizer(minSequenceInterval) {
            if (minSequenceInterval === void 0) { minSequenceInterval = 0; }
            this.minSequenceInterval = minSequenceInterval;
            this.queue = [];
            this.isExecutingQueue = false;
        }
        AsyncSequelizer.prototype.enqueue = function (action) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.queue.push({ action: action, resolve: resolve, reject: reject });
                _this.executeQueue();
            });
        };
        AsyncSequelizer.prototype.executeQueue = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                var operation, actionResult, error_1;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (this.isExecutingQueue) {
                                return [2];
                            }
                            this.isExecutingQueue = true;
                            _a.label = 1;
                        case 1:
                            if (!this.queue.length) return [3, 7];
                            operation = this.queue.shift();
                            if (!operation) {
                                this.isExecutingQueue = false;
                                return [2];
                            }
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            return [4, operation.action()];
                        case 3:
                            actionResult = _a.sent();
                            operation.resolve(actionResult);
                            return [3, 5];
                        case 4:
                            error_1 = _a.sent();
                            operation.reject(error_1);
                            return [3, 5];
                        case 5: return [4, this.intervalBreak()];
                        case 6:
                            _a.sent();
                            return [3, 1];
                        case 7:
                            this.isExecutingQueue = false;
                            return [2];
                    }
                });
            });
        };
        AsyncSequelizer.prototype.intervalBreak = function () {
            var _this = this;
            return new Promise(function (res) { return setTimeout(res, _this.minSequenceInterval); });
        };
        return AsyncSequelizer;
    }());

    var Connection$1 = (function () {
        function Connection(settings, logger) {
            this.settings = settings;
            this.logger = logger;
            this.messageHandlers = {};
            this.ids = 1;
            this.registry = lib$4();
            this._connected = false;
            this.isTrace = false;
            this._swapTransport = false;
            this._switchInProgress = false;
            this._transportSubscriptions = [];
            this._sequelizer = new AsyncSequelizer$1();
            settings = settings || {};
            settings.reconnectAttempts = settings.reconnectAttempts || 10;
            settings.reconnectInterval = settings.reconnectInterval || 1000;
            if (settings.inproc) {
                this.transport = new InProcTransport$1(settings.inproc, logger.subLogger("inMemory"));
            }
            else if (settings.sharedWorker) {
                this.transport = new SharedWorkerTransport$1(settings.sharedWorker, logger.subLogger("shared-worker"));
            }
            else if (settings.webPlatform) {
                this.transport = new WebPlatformTransport$1(settings.webPlatform, logger.subLogger("web-platform"), settings.identity);
            }
            else if (settings.ws !== undefined) {
                this.transport = new WS$1(settings, logger.subLogger("ws"));
            }
            else {
                throw new Error("No connection information specified");
            }
            this.isTrace = logger.canPublish("trace");
            logger.debug("starting with " + this.transport.name() + " transport");
            this.protocol = new GW3ProtocolImpl$1(this, settings, logger.subLogger("protocol"));
            var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));
            this._transportSubscriptions.push(unsubConnectionChanged);
            this._transportSubscriptions.push(unsubOnMessage);
            this._defaultTransport = this.transport;
        }
        Object.defineProperty(Connection.prototype, "protocolVersion", {
            get: function () {
                var _a;
                return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.switchTransport = function (settings) {
            return __awaiter$2(this, void 0, void 0, function () {
                var _this = this;
                return __generator$1(this, function (_a) {
                    return [2, this._sequelizer.enqueue(function () { return __awaiter$2(_this, void 0, void 0, function () {
                            var switchTargetTransport, verifyPromise, isSwitchSuccess, error_1;
                            return __generator$1(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!settings || typeof settings !== "object") {
                                            throw new Error("Cannot switch transports, because the settings are missing or invalid.");
                                        }
                                        if (typeof settings.type === "undefined") {
                                            throw new Error("Cannot switch the transport, because the type is not defined");
                                        }
                                        this.logger.trace("Starting transport switch with settings: " + JSON.stringify(settings));
                                        switchTargetTransport = settings.type === "secondary" ? this.getNewSecondaryTransport(settings) : this._defaultTransport;
                                        this._targetTransport = switchTargetTransport;
                                        this._targetAuth = settings.type === "secondary" ? this.getNewSecondaryAuth(settings) : this._defaultAuth;
                                        verifyPromise = this.verifyConnection();
                                        this._swapTransport = true;
                                        this._switchInProgress = true;
                                        this.logger.trace("The new transport has been set, closing the current transport");
                                        return [4, this.transport.close()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        _a.trys.push([2, 4, , 5]);
                                        return [4, verifyPromise];
                                    case 3:
                                        _a.sent();
                                        isSwitchSuccess = this.transport === switchTargetTransport;
                                        this.logger.info("The reconnection after the switch was completed. Was the switch a success: " + isSwitchSuccess);
                                        this._switchInProgress = false;
                                        return [2, { success: isSwitchSuccess }];
                                    case 4:
                                        error_1 = _a.sent();
                                        this.logger.info("The reconnection after the switch timed out, reverting back to the default transport.");
                                        this.switchTransport({ type: "default" });
                                        this._switchInProgress = false;
                                        return [2, { success: false }];
                                    case 5: return [2];
                                }
                            });
                        }); })];
                });
            });
        };
        Connection.prototype.onLibReAnnounced = function (callback) {
            return this.registry.add("libReAnnounced", callback);
        };
        Connection.prototype.setLibReAnnounced = function (lib) {
            this.registry.execute("libReAnnounced", lib);
        };
        Connection.prototype.send = function (message, options) {
            if (this.transport.sendObject &&
                this.transport.isObjectBasedTransport) {
                var msg = this.protocol.createObjectMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + JSON.stringify(msg));
                }
                return this.transport.sendObject(msg, options);
            }
            else {
                var strMessage = this.protocol.createStringMessage(message);
                if (this.isTrace) {
                    this.logger.trace(">> " + strMessage);
                }
                return this.transport.send(strMessage, options);
            }
        };
        Connection.prototype.on = function (type, messageHandler) {
            type = type.toLowerCase();
            if (this.messageHandlers[type] === undefined) {
                this.messageHandlers[type] = {};
            }
            var id = this.ids++;
            this.messageHandlers[type][id] = messageHandler;
            return {
                type: type,
                id: id,
            };
        };
        Connection.prototype.off = function (info) {
            delete this.messageHandlers[info.type.toLowerCase()][info.id];
        };
        Object.defineProperty(Connection.prototype, "isConnected", {
            get: function () {
                return this.protocol.isLoggedIn;
            },
            enumerable: true,
            configurable: true
        });
        Connection.prototype.connected = function (callback) {
            var _this = this;
            return this.protocol.loggedIn(function () {
                var currentServer = _this.transport.name();
                callback(currentServer);
            });
        };
        Connection.prototype.disconnected = function (callback) {
            return this.registry.add("disconnected", callback);
        };
        Connection.prototype.login = function (authRequest, reconnect) {
            return __awaiter$2(this, void 0, void 0, function () {
                var newAuth, identity, error_2;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this._defaultAuth) {
                                this._defaultAuth = authRequest;
                            }
                            if (this._swapTransport) {
                                this.logger.trace("Detected a transport swap, swapping transports");
                                newAuth = this.transportSwap();
                                authRequest = newAuth !== null && newAuth !== void 0 ? newAuth : authRequest;
                            }
                            this.logger.trace("Starting login for transport: " + this.transport.name() + " and auth " + JSON.stringify(authRequest));
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 4, , 5]);
                            return [4, this.transport.open()];
                        case 2:
                            _a.sent();
                            this.logger.trace("Transport: " + this.transport.name() + " opened, logging in");
                            timer$1("connection").mark("transport-opened");
                            return [4, this.protocol.login(authRequest, reconnect)];
                        case 3:
                            identity = _a.sent();
                            this.logger.trace("Logged in with identity: " + JSON.stringify(identity));
                            timer$1("connection").mark("protocol-logged-in");
                            return [2, identity];
                        case 4:
                            error_2 = _a.sent();
                            if (this._switchInProgress) {
                                this.logger.trace("An error while logging in after a transport swap, preparing a default swap.");
                                this.prepareDefaultSwap();
                            }
                            throw new Error(error_2);
                        case 5: return [2];
                    }
                });
            });
        };
        Connection.prototype.logout = function () {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, this.protocol.logout()];
                        case 1:
                            _a.sent();
                            return [4, this.transport.close()];
                        case 2:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Connection.prototype.loggedIn = function (callback) {
            return this.protocol.loggedIn(callback);
        };
        Connection.prototype.domain = function (domain, successMessages, errorMessages) {
            return this.protocol.domain(domain, this.logger.subLogger("domain=" + domain), successMessages, errorMessages);
        };
        Connection.prototype.authToken = function () {
            return this.protocol.authToken();
        };
        Connection.prototype.reconnect = function () {
            return this.transport.reconnect();
        };
        Connection.prototype.distributeMessage = function (message, type) {
            var _this = this;
            var handlers = this.messageHandlers[type.toLowerCase()];
            if (handlers !== undefined) {
                Object.keys(handlers).forEach(function (handlerId) {
                    var handler = handlers[handlerId];
                    if (handler !== undefined) {
                        try {
                            handler(message);
                        }
                        catch (error) {
                            try {
                                _this.logger.error("Message handler failed with " + error.stack, error);
                            }
                            catch (loggerError) {
                                console.log("Message handler failed", error);
                            }
                        }
                    }
                });
            }
        };
        Connection.prototype.handleConnectionChanged = function (connected) {
            if (this._connected === connected) {
                return;
            }
            this._connected = connected;
            if (connected) {
                if (this.settings.replaySpecs && this.settings.replaySpecs.length) {
                    this.replayer = new MessageReplayerImpl$1(this.settings.replaySpecs);
                    this.replayer.init(this);
                }
                this.registry.execute("connected");
            }
            else {
                this.registry.execute("disconnected");
            }
        };
        Connection.prototype.handleTransportMessage = function (msg) {
            var msgObj;
            if (typeof msg === "string") {
                msgObj = this.protocol.processStringMessage(msg);
            }
            else {
                msgObj = this.protocol.processObjectMessage(msg);
            }
            if (this.isTrace) {
                this.logger.trace("<< " + JSON.stringify(msgObj));
            }
            this.distributeMessage(msgObj.msg, msgObj.msgType);
        };
        Connection.prototype.verifyConnection = function () {
            var _this = this;
            return PromisePlus$2(function (resolve) {
                var unsub;
                var ready = waitForInvocations$1(2, function () {
                    if (unsub) {
                        unsub();
                    }
                    resolve();
                });
                unsub = _this.onLibReAnnounced(function (lib) {
                    if (lib.name === "interop") {
                        return ready();
                    }
                    if (lib.name === "contexts") {
                        return ready();
                    }
                });
            }, 10000, "Transport switch timed out waiting for all libraries to be re-announced");
        };
        Connection.prototype.getNewSecondaryTransport = function (settings) {
            var _a;
            if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.url)) {
                throw new Error("Missing secondary transport URL.");
            }
            return new WS$1(Object.assign({}, this.settings, { ws: settings.transportConfig.url, reconnectAttempts: 1 }), this.logger.subLogger("ws-secondary"));
        };
        Connection.prototype.getNewSecondaryAuth = function (settings) {
            var _a;
            if (!((_a = settings.transportConfig) === null || _a === void 0 ? void 0 : _a.auth)) {
                throw new Error("Missing secondary transport auth information.");
            }
            return settings.transportConfig.auth;
        };
        Connection.prototype.transportSwap = function () {
            this._swapTransport = false;
            if (!this._targetTransport || !this._targetAuth) {
                this.logger.warn("Error while switching transports - either the target transport or auth is not defined: transport defined -> " + !!this._defaultTransport + ", auth defined -> " + !!this._targetAuth + ". Staying on the current one.");
                return;
            }
            this._transportSubscriptions.forEach(function (unsub) { return unsub(); });
            this._transportSubscriptions = [];
            this.transport = this._targetTransport;
            var unsubConnectionChanged = this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));
            var unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));
            this._transportSubscriptions.push(unsubConnectionChanged);
            this._transportSubscriptions.push(unsubOnMessage);
            return this._targetAuth;
        };
        Connection.prototype.prepareDefaultSwap = function () {
            var _this = this;
            this._transportSubscriptions.forEach(function (unsub) { return unsub(); });
            this._transportSubscriptions = [];
            this.transport.close().catch(function (error) { return _this.logger.warn("Error closing the " + _this.transport.name() + " transport after a failed connection attempt: " + JSON.stringify(error)); });
            this._targetTransport = this._defaultTransport;
            this._targetAuth = this._defaultAuth;
            this._swapTransport = true;
        };
        return Connection;
    }());

    var order$1 = ["trace", "debug", "info", "warn", "error", "off"];
    var Logger$1 = (function () {
        function Logger(name, parent, logFn) {
            this.name = name;
            this.parent = parent;
            this.subLoggers = [];
            this.logFn = console;
            this.customLogFn = false;
            this.name = name;
            if (parent) {
                this.path = parent.path + "." + name;
            }
            else {
                this.path = name;
            }
            this.loggerFullName = "[" + this.path + "]";
            this.includeTimeAndLevel = !logFn;
            if (logFn) {
                this.logFn = logFn;
                this.customLogFn = true;
            }
        }
        Logger.prototype.subLogger = function (name) {
            var existingSub = this.subLoggers.filter(function (subLogger) {
                return subLogger.name === name;
            })[0];
            if (existingSub !== undefined) {
                return existingSub;
            }
            Object.keys(this).forEach(function (key) {
                if (key === name) {
                    throw new Error("This sub logger name is not allowed.");
                }
            });
            var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);
            this.subLoggers.push(sub);
            return sub;
        };
        Logger.prototype.publishLevel = function (level) {
            var _a;
            if (level) {
                this._publishLevel = level;
            }
            return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());
        };
        Logger.prototype.consoleLevel = function (level) {
            var _a;
            if (level) {
                this._consoleLevel = level;
            }
            return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());
        };
        Logger.prototype.log = function (message, level, error) {
            this.publishMessage(level || "info", message, error);
        };
        Logger.prototype.trace = function (message) {
            this.log(message, "trace");
        };
        Logger.prototype.debug = function (message) {
            this.log(message, "debug");
        };
        Logger.prototype.info = function (message) {
            this.log(message, "info");
        };
        Logger.prototype.warn = function (message) {
            this.log(message, "warn");
        };
        Logger.prototype.error = function (message, err) {
            this.log(message, "error");
        };
        Logger.prototype.canPublish = function (level, compareWith) {
            var levelIdx = order$1.indexOf(level);
            var restrictionIdx = order$1.indexOf(compareWith || this.consoleLevel() || "trace");
            return levelIdx >= restrictionIdx;
        };
        Logger.prototype.publishMessage = function (level, message, error) {
            var loggerName = this.loggerFullName;
            if (level === "error" && !error) {
                var e = new Error();
                if (e.stack) {
                    message =
                        message +
                            "\n" +
                            e.stack
                                .split("\n")
                                .slice(3)
                                .join("\n");
                }
            }
            if (this.canPublish(level, this.publishLevel())) {
                var interop = Logger.Interop;
                if (interop) {
                    try {
                        if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {
                            interop.invoke(Logger.InteropMethodName, {
                                msg: "" + message,
                                logger: loggerName,
                                level: level
                            });
                        }
                    }
                    catch (_a) {
                    }
                }
            }
            if (this.canPublish(level)) {
                var prefix = "";
                if (this.includeTimeAndLevel) {
                    var date = new Date();
                    var time = date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
                    prefix = "[" + time + "] [" + level + "] ";
                }
                var toPrint = "" + prefix + loggerName + ": " + message;
                switch (level) {
                    case "trace":
                        this.logFn.debug(toPrint);
                        break;
                    case "debug":
                        if (this.logFn.debug) {
                            this.logFn.debug(toPrint);
                        }
                        else {
                            this.logFn.log(toPrint);
                        }
                        break;
                    case "info":
                        this.logFn.info(toPrint);
                        break;
                    case "warn":
                        this.logFn.warn(toPrint);
                        break;
                    case "error":
                        this.logFn.error(toPrint, error);
                        break;
                }
            }
        };
        Logger.InteropMethodName = "T42.AppLogger.Log";
        return Logger;
    }());

    var GW_MESSAGE_CREATE_CONTEXT$1 = "create-context";
    var GW_MESSAGE_ACTIVITY_CREATED$1 = "created";
    var GW_MESSAGE_ACTIVITY_DESTROYED$1 = "destroyed";
    var GW_MESSAGE_CONTEXT_CREATED$1 = "context-created";
    var GW_MESSAGE_CONTEXT_ADDED$1 = "context-added";
    var GW_MESSAGE_SUBSCRIBE_CONTEXT$1 = "subscribe-context";
    var GW_MESSAGE_SUBSCRIBED_CONTEXT$1 = "subscribed-context";
    var GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1 = "unsubscribe-context";
    var GW_MESSAGE_DESTROY_CONTEXT$1 = "destroy-context";
    var GW_MESSAGE_CONTEXT_DESTROYED$1 = "context-destroyed";
    var GW_MESSAGE_UPDATE_CONTEXT$1 = "update-context";
    var GW_MESSAGE_CONTEXT_UPDATED$1 = "context-updated";
    var GW_MESSAGE_JOINED_ACTIVITY$1 = "joined";

    var ContextMessageReplaySpec$1 = {
        get name() {
            return "context";
        },
        get types() {
            return [
                GW_MESSAGE_CREATE_CONTEXT$1,
                GW_MESSAGE_ACTIVITY_CREATED$1,
                GW_MESSAGE_ACTIVITY_DESTROYED$1,
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_CONTEXT_ADDED$1,
                GW_MESSAGE_SUBSCRIBE_CONTEXT$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1,
                GW_MESSAGE_DESTROY_CONTEXT$1,
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_UPDATE_CONTEXT$1,
                GW_MESSAGE_CONTEXT_UPDATED$1,
                GW_MESSAGE_JOINED_ACTIVITY$1
            ];
        }
    };

    var version$4 = "5.7.8";

    function prepareConfig$1 (configuration, ext, glue42gd) {
        var _a, _b, _c, _d;
        var nodeStartingContext;
        if (Utils$1.isNode()) {
            var startingContextString = process.env._GD_STARTING_CONTEXT_;
            if (startingContextString) {
                try {
                    nodeStartingContext = JSON.parse(startingContextString);
                }
                catch (_e) {
                }
            }
        }
        function getConnection() {
            var _a, _b, _c, _d, _e, _f;
            var gwConfig = configuration.gateway;
            var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;
            var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;
            var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;
            var defaultWs = "ws://localhost:8385";
            var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;
            var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;
            var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;
            var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;
            if (glue42gd) {
                ws = glue42gd.gwURL;
            }
            if (Utils$1.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {
                ws = nodeStartingContext.gwURL;
            }
            if (!ws && !sharedWorker && !inproc) {
                ws = defaultWs;
            }
            var instanceId;
            var windowId;
            var pid;
            var environment;
            var region;
            var appName = getApplication();
            var uniqueAppName = appName;
            if (typeof glue42gd !== "undefined") {
                windowId = glue42gd.windowId;
                pid = glue42gd.pid;
                if (glue42gd.env) {
                    environment = glue42gd.env.env;
                    region = glue42gd.env.region;
                }
                uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : "glue-app";
                instanceId = glue42gd.appInstanceId;
            }
            else if (Utils$1.isNode()) {
                pid = process.pid;
                if (nodeStartingContext) {
                    environment = nodeStartingContext.env;
                    region = nodeStartingContext.region;
                    instanceId = nodeStartingContext.instanceId;
                }
            }
            else if (typeof (window === null || window === void 0 ? void 0 : window.glue42electron) !== "undefined") {
                windowId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;
                pid = window === null || window === void 0 ? void 0 : window.glue42electron.pid;
                environment = window === null || window === void 0 ? void 0 : window.glue42electron.env;
                region = window === null || window === void 0 ? void 0 : window.glue42electron.region;
                uniqueAppName = (_d = window === null || window === void 0 ? void 0 : window.glue42electron.application) !== null && _d !== void 0 ? _d : "glue-app";
                instanceId = window === null || window === void 0 ? void 0 : window.glue42electron.instanceId;
            }
            else ;
            var replaySpecs = (_f = (_e = configuration.gateway) === null || _e === void 0 ? void 0 : _e.replaySpecs) !== null && _f !== void 0 ? _f : [];
            replaySpecs.push(ContextMessageReplaySpec$1);
            var identity = {
                application: uniqueAppName,
                applicationName: appName,
                windowId: windowId,
                instance: instanceId,
                process: pid,
                region: region,
                environment: environment,
                api: ext.version || version$4
            };
            if (configuration.identity) {
                identity = Object.assign(identity, configuration.identity);
            }
            return {
                identity: identity,
                reconnectInterval: reconnectInterval,
                ws: ws,
                sharedWorker: sharedWorker,
                webPlatform: webPlatform,
                inproc: inproc,
                protocolVersion: protocolVersion,
                reconnectAttempts: reconnectAttempts,
                replaySpecs: replaySpecs,
            };
        }
        function getContexts() {
            if (typeof configuration.contexts === "undefined") {
                return { reAnnounceKnownContexts: true };
            }
            if (typeof configuration.contexts === "boolean" && configuration.contexts) {
                return { reAnnounceKnownContexts: true };
            }
            if (typeof configuration.contexts === "object") {
                return Object.assign({}, { reAnnounceKnownContexts: true }, configuration.contexts);
            }
            return false;
        }
        function getApplication() {
            if (configuration.application) {
                return configuration.application;
            }
            if (glue42gd) {
                return glue42gd.applicationName;
            }
            if (typeof window !== "undefined" && typeof window.glue42electron !== "undefined") {
                return window.glue42electron.application;
            }
            var uid = shortid$3();
            if (Utils$1.isNode()) {
                if (nodeStartingContext) {
                    return nodeStartingContext.applicationConfig.name;
                }
                return "NodeJS" + uid;
            }
            if (typeof window !== "undefined" && typeof document !== "undefined") {
                return document.title + (" (" + uid + ")");
            }
            return uid;
        }
        function getAuth() {
            var _a, _b, _c;
            if (typeof configuration.auth === "string") {
                return {
                    token: configuration.auth
                };
            }
            if (configuration.auth) {
                return configuration.auth;
            }
            if (Utils$1.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {
                return {
                    gatewayToken: nodeStartingContext.gwToken
                };
            }
            if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {
                return {
                    username: "glue42", password: "glue42"
                };
            }
        }
        function getLogger() {
            var _a, _b;
            var config = configuration.logger;
            var defaultLevel = "warn";
            if (!config) {
                config = defaultLevel;
            }
            var gdConsoleLevel;
            if (glue42gd) {
                gdConsoleLevel = glue42gd.consoleLogLevel;
            }
            if (typeof config === "string") {
                return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };
            }
            return {
                console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,
                publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel
            };
        }
        var connection = getConnection();
        var application = getApplication();
        if (typeof window !== "undefined") {
            var windowAsAny = window;
            var containerApplication = windowAsAny.htmlContainer ?
                windowAsAny.htmlContainer.containerName + "." + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;
            if (containerApplication) {
                application = containerApplication;
            }
        }
        return {
            bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,
            application: application,
            auth: getAuth(),
            logger: getLogger(),
            connection: connection,
            metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,
            contexts: getContexts(),
            version: ext.version || version$4,
            libs: (_d = ext.libs) !== null && _d !== void 0 ? _d : [],
            customLogger: configuration.customLogger
        };
    }

    var GW3ContextData$1 = (function () {
        function GW3ContextData(contextId, name, isAnnounced, activityId) {
            this.updateCallbacks = {};
            this.contextId = contextId;
            this.name = name;
            this.isAnnounced = isAnnounced;
            this.activityId = activityId;
            this.context = {};
        }
        GW3ContextData.prototype.hasCallbacks = function () {
            return Object.keys(this.updateCallbacks).length > 0;
        };
        GW3ContextData.prototype.getState = function () {
            if (this.isAnnounced && this.hasCallbacks()) {
                return 3;
            }
            if (this.isAnnounced) {
                return 2;
            }
            if (this.hasCallbacks()) {
                return 1;
            }
            return 0;
        };
        return GW3ContextData;
    }());

    function applyContextDelta$1(context, delta, logger) {
        try {
            if (logger === null || logger === void 0 ? void 0 : logger.canPublish("trace")) {
                logger === null || logger === void 0 ? void 0 : logger.trace("applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context));
            }
            if (!delta) {
                return context;
            }
            if (delta.reset) {
                context = __assign$3({}, delta.reset);
                return context;
            }
            context = deepClone$1(context, undefined);
            if (delta.commands) {
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        deletePath$1(context, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath$1(context, command.value, command.path);
                    }
                }
                return context;
            }
            var added_1 = delta.added;
            var updated_1 = delta.updated;
            var removed = delta.removed;
            if (added_1) {
                Object.keys(added_1).forEach(function (key) {
                    context[key] = added_1[key];
                });
            }
            if (updated_1) {
                Object.keys(updated_1).forEach(function (key) {
                    mergeObjectsProperties$1(key, context, updated_1);
                });
            }
            if (removed) {
                removed.forEach(function (key) {
                    delete context[key];
                });
            }
            return context;
        }
        catch (e) {
            logger === null || logger === void 0 ? void 0 : logger.error("error applying context delta " + JSON.stringify(delta) + " on context " + JSON.stringify(context), e);
            return context;
        }
    }
    function deepClone$1(obj, hash) {
        hash = hash || new WeakMap();
        if (Object(obj) !== obj) {
            return obj;
        }
        if (obj instanceof Set) {
            return new Set(obj);
        }
        if (hash.has(obj)) {
            return hash.get(obj);
        }
        var result = obj instanceof Date ? new Date(obj)
            : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)
                : obj.constructor ? new obj.constructor()
                    : Object.create(null);
        hash.set(obj, result);
        if (obj instanceof Map) {
            Array.from(obj, function (_a) {
                var key = _a[0], val = _a[1];
                return result.set(key, deepClone$1(val, hash));
            });
        }
        return Object.assign.apply(Object, __spreadArrays$1([result], Object.keys(obj).map(function (key) {
            var _a;
            return (_a = {}, _a[key] = deepClone$1(obj[key], hash), _a);
        })));
    }
    var mergeObjectsProperties$1 = function (key, what, withWhat) {
        var right = withWhat[key];
        if (right === undefined) {
            return what;
        }
        var left = what[key];
        if (!left || !right) {
            what[key] = right;
            return what;
        }
        if (typeof left === "string" ||
            typeof left === "number" ||
            typeof left === "boolean" ||
            typeof right === "string" ||
            typeof right === "number" ||
            typeof right === "boolean" ||
            Array.isArray(left) ||
            Array.isArray(right)) {
            what[key] = right;
            return what;
        }
        what[key] = Object.assign({}, left, right);
        return what;
    };
    function deepEqual$1(x, y) {
        if (x === y) {
            return true;
        }
        if (!(x instanceof Object) || !(y instanceof Object)) {
            return false;
        }
        if (x.constructor !== y.constructor) {
            return false;
        }
        for (var p in x) {
            if (!x.hasOwnProperty(p)) {
                continue;
            }
            if (!y.hasOwnProperty(p)) {
                return false;
            }
            if (x[p] === y[p]) {
                continue;
            }
            if (typeof (x[p]) !== "object") {
                return false;
            }
            if (!deepEqual$1(x[p], y[p])) {
                return false;
            }
        }
        for (var p in y) {
            if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
                return false;
            }
        }
        return true;
    }
    function setValueToPath$1(obj, value, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                obj[pathArr[i]] = {};
            }
            if (typeof obj[pathArr[i]] !== "object") {
                obj[pathArr[i]] = {};
            }
            obj = obj[pathArr[i]];
        }
        obj[pathArr[i]] = value;
    }
    function isSubset$1(superObj, subObj) {
        return Object.keys(subObj).every(function (ele) {
            if (typeof subObj[ele] === "object") {
                return isSubset$1((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});
            }
            return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);
        });
    }
    function deletePath$1(obj, path) {
        var pathArr = path.split(".");
        var i;
        for (i = 0; i < pathArr.length - 1; i++) {
            if (!obj[pathArr[i]]) {
                return;
            }
            obj = obj[pathArr[i]];
        }
        delete obj[pathArr[i]];
    }

    var GW3Bridge$1 = (function () {
        function GW3Bridge(config) {
            var _this = this;
            var _a;
            this._contextNameToData = {};
            this._gw3Subscriptions = [];
            this._nextCallbackSubscriptionNumber = 0;
            this._contextNameToId = {};
            this._contextIdToName = {};
            this._protocolVersion = undefined;
            this._contextsTempCache = {};
            this._contextsSubscriptionsCache = [];
            this._connection = config.connection;
            this._logger = config.logger;
            this._trackAllContexts = config.trackAllContexts;
            this._reAnnounceKnownContexts = config.reAnnounceKnownContexts;
            this._gw3Session = this._connection.domain("global", [
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_CONTEXT_UPDATED$1,
            ]);
            this._gw3Session.disconnected(this.resetState.bind(this));
            this._gw3Session.onJoined(function (wasReconnect) {
                if (!wasReconnect) {
                    return;
                }
                if (!_this._reAnnounceKnownContexts) {
                    return _this._connection.setLibReAnnounced({ name: "contexts" });
                }
                _this.reInitiateState().then(function () { return _this._connection.setLibReAnnounced({ name: "contexts" }); });
            });
            this.subscribeToContextCreatedMessages();
            this.subscribeToContextUpdatedMessages();
            this.subscribeToContextDestroyedMessages();
            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec$1.name, function (message) {
                var type = message.type;
                if (!type) {
                    return;
                }
                if (type === GW_MESSAGE_CONTEXT_CREATED$1 ||
                    type === GW_MESSAGE_CONTEXT_ADDED$1 ||
                    type === GW_MESSAGE_ACTIVITY_CREATED$1) {
                    _this.handleContextCreatedMessage(message);
                }
                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT$1 ||
                    type === GW_MESSAGE_CONTEXT_UPDATED$1 ||
                    type === GW_MESSAGE_JOINED_ACTIVITY$1) {
                    _this.handleContextUpdatedMessage(message);
                }
                else if (type === GW_MESSAGE_CONTEXT_DESTROYED$1 ||
                    type === GW_MESSAGE_ACTIVITY_DESTROYED$1) {
                    _this.handleContextDestroyedMessage(message);
                }
            });
        }
        Object.defineProperty(GW3Bridge.prototype, "protocolVersion", {
            get: function () {
                var _a;
                if (!this._protocolVersion) {
                    var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === "context"; });
                    this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;
                }
                return this._protocolVersion;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GW3Bridge.prototype, "setPathSupported", {
            get: function () {
                return this.protocolVersion >= 2;
            },
            enumerable: true,
            configurable: true
        });
        GW3Bridge.prototype.dispose = function () {
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            this._gw3Subscriptions.length = 0;
            for (var contextName in this._contextNameToData) {
                if (this._contextNameToId.hasOwnProperty(contextName)) {
                    delete this._contextNameToData[contextName];
                }
            }
        };
        GW3Bridge.prototype.createContext = function (name, data) {
            var _this = this;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_CREATE_CONTEXT$1,
                domain: "global",
                name: name,
                data: data,
                lifetime: "retained",
            })
                .then(function (createContextMsg) {
                _this._contextNameToId[name] = createContextMsg.context_id;
                _this._contextIdToName[createContextMsg.context_id] = name;
                var contextData = _this._contextNameToData[name] || new GW3ContextData$1(createContextMsg.context_id, name, true, undefined);
                contextData.isAnnounced = true;
                contextData.name = name;
                contextData.contextId = createContextMsg.context_id;
                contextData.context = createContextMsg.data || data;
                contextData.hasReceivedSnapshot = true;
                _this._contextNameToData[name] = contextData;
                return createContextMsg.context_id;
            });
        };
        GW3Bridge.prototype.all = function () {
            var _this = this;
            return Object.keys(this._contextNameToData)
                .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });
        };
        GW3Bridge.prototype.update = function (name, delta) {
            var _a;
            return __awaiter$2(this, void 0, void 0, function () {
                var contextData, currentContext, calculatedDelta;
                var _this = this;
                return __generator$1(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            contextData = this._contextNameToData[name];
                            if (!contextData || !contextData.isAnnounced) {
                                return [2, this.createContext(name, delta)];
                            }
                            currentContext = contextData.context;
                            if (!!contextData.hasCallbacks()) return [3, 2];
                            return [4, this.get(contextData.name)];
                        case 1:
                            currentContext = _b.sent();
                            _b.label = 2;
                        case 2:
                            calculatedDelta = this.protocolVersion === 2 ?
                                this.calculateContextDeltaV2(currentContext, delta) :
                                this.calculateContextDeltaV1(currentContext, delta);
                            if (!Object.keys(calculatedDelta.added).length
                                && !Object.keys(calculatedDelta.updated).length
                                && !calculatedDelta.removed.length
                                && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {
                                return [2, Promise.resolve()];
                            }
                            return [2, this._gw3Session
                                    .send({
                                    type: GW_MESSAGE_UPDATE_CONTEXT$1,
                                    domain: "global",
                                    context_id: contextData.contextId,
                                    delta: calculatedDelta,
                                }, {}, { skipPeerId: false })
                                    .then(function (gwResponse) {
                                    _this.handleUpdated(contextData, calculatedDelta, {
                                        updaterId: gwResponse.peer_id
                                    });
                                })];
                    }
                });
            });
        };
        GW3Bridge.prototype.set = function (name, data) {
            var _this = this;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return this.createContext(name, data);
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
                delta: { reset: data },
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.setPath = function (name, path, value) {
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPath operation is not supported, use Glue42 3.10 or later");
            }
            return this.setPaths(name, [{ path: path, value: value }]);
        };
        GW3Bridge.prototype.setPaths = function (name, pathValues) {
            var _this = this;
            if (!this.setPathSupported) {
                return Promise.reject("glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later");
            }
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                var obj = {};
                for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {
                    var pathValue = pathValues_1[_i];
                    setValueToPath$1(obj, pathValue.value, pathValue.path);
                }
                return this.createContext(name, obj);
            }
            var commands = [];
            for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {
                var pathValue = pathValues_2[_a];
                if (pathValue.value === null) {
                    commands.push({ type: "remove", path: pathValue.path });
                }
                else {
                    commands.push({ type: "set", path: pathValue.path, value: pathValue.value });
                }
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UPDATE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
                delta: { commands: commands }
            }, {}, { skipPeerId: false })
                .then(function (gwResponse) {
                _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });
            });
        };
        GW3Bridge.prototype.get = function (name) {
            var _this = this;
            var _a;
            var contextData = this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                return Promise.resolve({});
            }
            if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {
                return new Promise(function (resolve) {
                    _this.subscribe(name, function (data, _d, _r, un) {
                        _this.unsubscribe(un);
                        resolve(data);
                    });
                });
            }
            var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};
            return Promise.resolve(context);
        };
        GW3Bridge.prototype.subscribe = function (name, callback, subscriptionKey) {
            var _this = this;
            var thisCallbackSubscriptionNumber = typeof subscriptionKey === "undefined" ? this._nextCallbackSubscriptionNumber : subscriptionKey;
            if (typeof subscriptionKey === "undefined") {
                this._nextCallbackSubscriptionNumber += 1;
            }
            if (this._contextsSubscriptionsCache.every(function (subscription) { return subscription.subKey !== _this._nextCallbackSubscriptionNumber; })) {
                this._contextsSubscriptionsCache.push({ contextName: name, subKey: thisCallbackSubscriptionNumber, callback: callback });
            }
            var contextData = this._contextNameToData[name];
            if (!contextData ||
                !contextData.isAnnounced) {
                contextData = contextData || new GW3ContextData$1(undefined, name, false, undefined);
                this._contextNameToData[name] = contextData;
                contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
            var hadCallbacks = contextData.hasCallbacks();
            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;
            if (!hadCallbacks) {
                if (!contextData.joinedActivity) {
                    if (contextData.context && contextData.sentExplicitSubscription) {
                        if (contextData.hasReceivedSnapshot) {
                            var clone = deepClone$1(contextData.context);
                            callback(clone, clone, [], thisCallbackSubscriptionNumber);
                        }
                        return Promise.resolve(thisCallbackSubscriptionNumber);
                    }
                    return this.sendSubscribe(contextData)
                        .then(function () { return thisCallbackSubscriptionNumber; });
                }
                else {
                    if (contextData.hasReceivedSnapshot) {
                        var clone = deepClone$1(contextData.context);
                        callback(clone, clone, [], thisCallbackSubscriptionNumber);
                    }
                    return Promise.resolve(thisCallbackSubscriptionNumber);
                }
            }
            else {
                if (contextData.hasReceivedSnapshot) {
                    var clone = deepClone$1(contextData.context);
                    callback(clone, clone, [], thisCallbackSubscriptionNumber);
                }
                return Promise.resolve(thisCallbackSubscriptionNumber);
            }
        };
        GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {
            this._contextsSubscriptionsCache = this._contextsSubscriptionsCache.filter(function (subscription) { return subscription.subKey !== subscriptionKey; });
            for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {
                var name_1 = _a[_i];
                var contextData = this._contextNameToData[name_1];
                if (!contextData) {
                    return;
                }
                var hadCallbacks = contextData.hasCallbacks();
                delete contextData.updateCallbacks[subscriptionKey];
                if (contextData.isAnnounced &&
                    hadCallbacks &&
                    !contextData.hasCallbacks() &&
                    contextData.sentExplicitSubscription) {
                    this.sendUnsubscribe(contextData);
                }
                if (!contextData.isAnnounced &&
                    !contextData.hasCallbacks()) {
                    delete this._contextNameToData[name_1];
                }
            }
        };
        GW3Bridge.prototype.destroy = function (name) {
            var contextData = this._contextNameToData[name];
            if (!contextData) {
                return Promise.reject("context with " + name + " does not exist");
            }
            return this._gw3Session
                .send({
                type: GW_MESSAGE_DESTROY_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {
            var oldContext = contextData.context;
            contextData.context = applyContextDelta$1(contextData.context, delta, this._logger);
            contextData.hasReceivedSnapshot = true;
            if (this._contextNameToData[contextData.name] === contextData &&
                !deepEqual$1(oldContext, contextData.context)) {
                this.invokeUpdateCallbacks(contextData, delta, extraData);
            }
        };
        GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {
            var createdMessageTypes = [
                GW_MESSAGE_CONTEXT_ADDED$1,
                GW_MESSAGE_CONTEXT_CREATED$1,
                GW_MESSAGE_ACTIVITY_CREATED$1,
            ];
            for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {
                var createdMessageType = createdMessageTypes_1[_i];
                var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {
            var _this = this;
            var createdMessageType = contextCreatedMsg.type;
            if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED$1) {
                this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;
            }
            else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED$1) {
                this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;
                this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;
            }
            else ;
            var name = this._contextIdToName[contextCreatedMsg.context_id];
            if (!name) {
                throw new Error("Received created event for context with unknown name: " + contextCreatedMsg.context_id);
            }
            if (!this._contextNameToId[name]) {
                throw new Error("Received created event for context with unknown id: " + contextCreatedMsg.context_id);
            }
            var contextData = this._contextNameToData[name];
            if (contextData) {
                if (contextData.isAnnounced) {
                    return;
                }
                else {
                    if (!contextData.hasCallbacks()) {
                        throw new Error("Assertion failure: contextData.hasCallbacks()");
                    }
                    contextData.isAnnounced = true;
                    contextData.contextId = contextCreatedMsg.context_id;
                    contextData.activityId = contextCreatedMsg.activity_id;
                    if (!contextData.sentExplicitSubscription) {
                        this.sendSubscribe(contextData);
                    }
                }
            }
            else {
                this._contextNameToData[name] = contextData =
                    new GW3ContextData$1(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);
                if (this._trackAllContexts) {
                    this.subscribe(name, function () { }).then(function (subKey) { return _this._systemContextsSubKey = subKey; });
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {
            var updatedMessageTypes = [
                GW_MESSAGE_CONTEXT_UPDATED$1,
                GW_MESSAGE_SUBSCRIBED_CONTEXT$1,
                GW_MESSAGE_JOINED_ACTIVITY$1,
            ];
            for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {
                var updatedMessageType = updatedMessageTypes_1[_i];
                var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {
            var updatedMessageType = contextUpdatedMsg.type;
            var contextId = contextUpdatedMsg.context_id;
            var contextData = this._contextNameToData[this._contextIdToName[contextId]];
            var justSeen = !contextData || !contextData.isAnnounced;
            if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY$1) {
                if (!contextData) {
                    contextData = new GW3ContextData$1(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);
                    this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;
                    this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;
                    this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;
                }
                else {
                    contextData.contextId = contextId;
                    contextData.isAnnounced = true;
                    contextData.activityId = contextUpdatedMsg.activity_id;
                }
                contextData.joinedActivity = true;
            }
            else {
                if (!contextData || !contextData.isAnnounced) {
                    if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                        contextData = contextData || new GW3ContextData$1(contextId, contextUpdatedMsg.name, true, undefined);
                        contextData.sentExplicitSubscription = true;
                        this._contextNameToData[contextUpdatedMsg.name] = contextData;
                        this._contextIdToName[contextId] = contextUpdatedMsg.name;
                        this._contextNameToId[contextUpdatedMsg.name] = contextId;
                    }
                    else {
                        this._logger.error("Received 'update' for unknown context: " + contextId);
                    }
                    return;
                }
            }
            var oldContext = contextData.context;
            contextData.hasReceivedSnapshot = true;
            if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                contextData.context = contextUpdatedMsg.data || {};
            }
            else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY$1) {
                contextData.context = contextUpdatedMsg.context_snapshot || {};
            }
            else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED$1) {
                contextData.context = applyContextDelta$1(contextData.context, contextUpdatedMsg.delta, this._logger);
            }
            else {
                throw new Error("Unrecognized context update message " + updatedMessageType);
            }
            if (justSeen ||
                !deepEqual$1(contextData.context, oldContext) ||
                updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT$1) {
                this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });
            }
        };
        GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {
            delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };
            if (delta.commands) {
                delta.added = delta.updated = delta.reset = {};
                delta.removed = [];
                for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    if (command.type === "remove") {
                        if (command.path.indexOf(".") === -1) {
                            delta.removed.push(command.path);
                        }
                        setValueToPath$1(delta.updated, null, command.path);
                    }
                    else if (command.type === "set") {
                        setValueToPath$1(delta.updated, command.value, command.path);
                    }
                }
            }
            for (var updateCallbackIndex in contextData.updateCallbacks) {
                if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {
                    try {
                        var updateCallback = contextData.updateCallbacks[updateCallbackIndex];
                        updateCallback(deepClone$1(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);
                    }
                    catch (err) {
                        this._logger.debug("callback error: " + JSON.stringify(err));
                    }
                }
            }
        };
        GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {
            var destroyedMessageTypes = [
                GW_MESSAGE_CONTEXT_DESTROYED$1,
                GW_MESSAGE_ACTIVITY_DESTROYED$1,
            ];
            for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {
                var destroyedMessageType = destroyedMessageTypes_1[_i];
                var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));
                this._gw3Subscriptions.push(sub);
            }
        };
        GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {
            var destroyedMessageType = destroyedMsg.type;
            var contextId;
            var name;
            if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED$1) {
                name = destroyedMsg.activity_id;
                contextId = this._contextNameToId[name];
                if (!contextId) {
                    this._logger.error("Received 'destroyed' for unknown activity: " + destroyedMsg.activity_id);
                    return;
                }
            }
            else {
                contextId = destroyedMsg.context_id;
                name = this._contextIdToName[contextId];
                if (!name) {
                    this._logger.error("Received 'destroyed' for unknown context: " + destroyedMsg.context_id);
                    return;
                }
            }
            delete this._contextIdToName[contextId];
            delete this._contextNameToId[name];
            var contextData = this._contextNameToData[name];
            delete this._contextNameToData[name];
            if (!contextData || !contextData.isAnnounced) {
                this._logger.error("Received 'destroyed' for unknown context: " + contextId);
                return;
            }
        };
        GW3Bridge.prototype.sendSubscribe = function (contextData) {
            contextData.sentExplicitSubscription = true;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_SUBSCRIBE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.sendUnsubscribe = function (contextData) {
            contextData.sentExplicitSubscription = false;
            return this._gw3Session
                .send({
                type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT$1,
                domain: "global",
                context_id: contextData.contextId,
            }).then(function (_) { return undefined; });
        };
        GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {
            var delta = { added: {}, updated: {}, removed: [], reset: undefined };
            if (from) {
                for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {
                    var x = _a[_i];
                    if (Object.keys(to).indexOf(x) !== -1
                        && to[x] !== null
                        && !deepEqual$1(from[x], to[x])) {
                        delta.updated[x] = to[x];
                    }
                }
            }
            for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {
                var x = _c[_b];
                if (!from || (Object.keys(from).indexOf(x) === -1)) {
                    if (to[x] !== null) {
                        delta.added[x] = to[x];
                    }
                }
                else if (to[x] === null) {
                    delta.removed.push(x);
                }
            }
            return delta;
        };
        GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {
            var _a, _b;
            var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };
            for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {
                var x = _c[_i];
                if (to[x] !== null) {
                    var fromX = from ? from[x] : null;
                    if (!deepEqual$1(fromX, to[x])) {
                        (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: "set", path: x, value: to[x] });
                    }
                }
                else {
                    (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: "remove", path: x });
                }
            }
            return delta;
        };
        GW3Bridge.prototype.resetState = function () {
            var _this = this;
            for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {
                var sub = _a[_i];
                this._connection.off(sub);
            }
            if (this._systemContextsSubKey) {
                this.unsubscribe(this._systemContextsSubKey);
                delete this._systemContextsSubKey;
            }
            this._gw3Subscriptions = [];
            this._contextNameToId = {};
            this._contextIdToName = {};
            delete this._protocolVersion;
            this._contextsTempCache = Object.keys(this._contextNameToData).reduce(function (cacheSoFar, ctxName) {
                cacheSoFar[ctxName] = _this._contextNameToData[ctxName].context;
                return cacheSoFar;
            }, {});
            this._contextNameToData = {};
        };
        GW3Bridge.prototype.reInitiateState = function () {
            var _a;
            return __awaiter$2(this, void 0, void 0, function () {
                var _b, _c, _i, ctxName, lastKnownData;
                var _this = this;
                return __generator$1(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            this.subscribeToContextCreatedMessages();
                            this.subscribeToContextUpdatedMessages();
                            this.subscribeToContextDestroyedMessages();
                            (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec$1.name, function (message) {
                                var type = message.type;
                                if (!type) {
                                    return;
                                }
                                if (type === GW_MESSAGE_CONTEXT_CREATED$1 ||
                                    type === GW_MESSAGE_CONTEXT_ADDED$1 ||
                                    type === GW_MESSAGE_ACTIVITY_CREATED$1) {
                                    _this.handleContextCreatedMessage(message);
                                }
                                else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT$1 ||
                                    type === GW_MESSAGE_CONTEXT_UPDATED$1 ||
                                    type === GW_MESSAGE_JOINED_ACTIVITY$1) {
                                    _this.handleContextUpdatedMessage(message);
                                }
                                else if (type === GW_MESSAGE_CONTEXT_DESTROYED$1 ||
                                    type === GW_MESSAGE_ACTIVITY_DESTROYED$1) {
                                    _this.handleContextDestroyedMessage(message);
                                }
                            });
                            return [4, Promise.all(this._contextsSubscriptionsCache.map(function (subscription) { return _this.subscribe(subscription.contextName, subscription.callback, subscription.subKey); }))];
                        case 1:
                            _e.sent();
                            return [4, this.flushQueue()];
                        case 2:
                            _e.sent();
                            _b = [];
                            for (_c in this._contextsTempCache)
                                _b.push(_c);
                            _i = 0;
                            _e.label = 3;
                        case 3:
                            if (!(_i < _b.length)) return [3, 7];
                            ctxName = _b[_i];
                            if (typeof this._contextsTempCache[ctxName] !== "object" || Object.keys(this._contextsTempCache[ctxName]).length === 0) {
                                return [3, 6];
                            }
                            lastKnownData = this._contextsTempCache[ctxName];
                            this._logger.info("Re-announcing known context: " + ctxName);
                            return [4, this.flushQueue()];
                        case 4:
                            _e.sent();
                            return [4, this.update(ctxName, lastKnownData)];
                        case 5:
                            _e.sent();
                            _e.label = 6;
                        case 6:
                            _i++;
                            return [3, 3];
                        case 7:
                            this._contextsTempCache = {};
                            this._logger.info("Contexts are re-announced");
                            return [2];
                    }
                });
            });
        };
        GW3Bridge.prototype.flushQueue = function () {
            return new Promise(function (resolve) { return setTimeout(function () { return resolve(); }, 0); });
        };
        return GW3Bridge;
    }());

    var ContextsModule$1 = (function () {
        function ContextsModule(config) {
            this._bridge = new GW3Bridge$1(config);
        }
        ContextsModule.prototype.all = function () {
            return this._bridge.all();
        };
        ContextsModule.prototype.update = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.update(name, data);
        };
        ContextsModule.prototype.set = function (name, data) {
            this.checkName(name);
            this.checkData(data);
            return this._bridge.set(name, data);
        };
        ContextsModule.prototype.setPath = function (name, path, data) {
            this.checkName(name);
            this.checkPath(path);
            var isTopLevelPath = path === "";
            if (isTopLevelPath) {
                this.checkData(data);
                return this.set(name, data);
            }
            return this._bridge.setPath(name, path, data);
        };
        ContextsModule.prototype.setPaths = function (name, paths) {
            this.checkName(name);
            if (!Array.isArray(paths)) {
                throw new Error("Please provide the paths as an array of PathValues!");
            }
            for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {
                var _a = paths_1[_i], path = _a.path, value = _a.value;
                this.checkPath(path);
                var isTopLevelPath = path === "";
                if (isTopLevelPath) {
                    this.checkData(value);
                }
            }
            return this._bridge.setPaths(name, paths);
        };
        ContextsModule.prototype.subscribe = function (name, callback) {
            var _this = this;
            this.checkName(name);
            if (typeof callback !== "function") {
                throw new Error("Please provide the callback as a function!");
            }
            return this._bridge
                .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })
                .then(function (key) {
                return function () {
                    _this._bridge.unsubscribe(key);
                };
            });
        };
        ContextsModule.prototype.get = function (name) {
            this.checkName(name);
            return this._bridge.get(name);
        };
        ContextsModule.prototype.ready = function () {
            return Promise.resolve(this);
        };
        ContextsModule.prototype.destroy = function (name) {
            this.checkName(name);
            return this._bridge.destroy(name);
        };
        Object.defineProperty(ContextsModule.prototype, "setPathSupported", {
            get: function () {
                return this._bridge.setPathSupported;
            },
            enumerable: true,
            configurable: true
        });
        ContextsModule.prototype.checkName = function (name) {
            if (typeof name !== "string" || name === "") {
                throw new Error("Please provide the name as a non-empty string!");
            }
        };
        ContextsModule.prototype.checkPath = function (path) {
            if (typeof path !== "string") {
                throw new Error("Please provide the path as a dot delimited string!");
            }
        };
        ContextsModule.prototype.checkData = function (data) {
            if (typeof data !== "object") {
                throw new Error("Please provide the data as an object!");
            }
        };
        return ContextsModule;
    }());

    function promisify$1 (promise, successCallback, errorCallback) {
        if (typeof successCallback !== "function" && typeof errorCallback !== "function") {
            return promise;
        }
        if (typeof successCallback !== "function") {
            successCallback = function () { };
        }
        else if (typeof errorCallback !== "function") {
            errorCallback = function () { };
        }
        return promise.then(successCallback, errorCallback);
    }

    function rejectAfter$1(ms, promise, error) {
        if (ms === void 0) { ms = 0; }
        var timeout;
        var clearTimeoutIfThere = function () {
            if (timeout) {
                clearTimeout(timeout);
            }
        };
        promise
            .then(function () {
            clearTimeoutIfThere();
        })
            .catch(function () {
            clearTimeoutIfThere();
        });
        return new Promise(function (resolve, reject) {
            timeout = setTimeout(function () { return reject(error); }, ms);
        });
    }

    var InvokeStatus$1;
    (function (InvokeStatus) {
        InvokeStatus[InvokeStatus["Success"] = 0] = "Success";
        InvokeStatus[InvokeStatus["Error"] = 1] = "Error";
    })(InvokeStatus$1 || (InvokeStatus$1 = {}));
    var Client$1 = (function () {
        function Client(protocol, repo, instance, configuration) {
            this.protocol = protocol;
            this.repo = repo;
            this.instance = instance;
            this.configuration = configuration;
        }
        Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {
            var _this = this;
            var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {
                var _a;
                options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;
                _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);
            };
            var promise = new Promise(function (resolve, reject) {
                var successProxy = function (sub) {
                    resolve(sub);
                };
                var errorProxy = function (err) {
                    reject(err);
                };
                if (!method) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                var methodDef;
                if (typeof method === "string") {
                    methodDef = { name: method };
                }
                else {
                    methodDef = method;
                }
                if (!methodDef.name) {
                    reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
                    return;
                }
                if (options === undefined) {
                    options = {};
                }
                var target = options.target;
                if (target === undefined) {
                    target = "best";
                }
                if (typeof target === "string" && target !== "all" && target !== "best") {
                    reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\", \"best\", or an instance."));
                    return;
                }
                if (options.methodResponseTimeout === undefined) {
                    options.methodResponseTimeout = options.method_response_timeout;
                    if (options.methodResponseTimeout === undefined) {
                        options.methodResponseTimeout = _this.configuration.methodResponseTimeout;
                    }
                }
                if (options.waitTimeoutMs === undefined) {
                    options.waitTimeoutMs = options.wait_for_method_timeout;
                    if (options.waitTimeoutMs === undefined) {
                        options.waitTimeoutMs = _this.configuration.waitTimeoutMs;
                    }
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                if (currentServers.length > 0) {
                    callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);
                }
                else {
                    var retry_1 = function () {
                        if (!target || !(options.waitTimeoutMs)) {
                            return;
                        }
                        delayTillNow += delayStep;
                        currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);
                        if (currentServers.length > 0) {
                            var streamInfo = currentServers[0].methods[0];
                            callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);
                        }
                        else if (delayTillNow >= options.waitTimeoutMs) {
                            var def = typeof method === "string" ? { name: method } : method;
                            callProtocolSubscribe(currentServers, def, successProxy, errorProxy);
                        }
                        else {
                            setTimeout(retry_1, delayStep);
                        }
                    };
                    setTimeout(retry_1, delayStep);
                }
            });
            return promisify$1(promise, successCallback, errorCallback);
        };
        Client.prototype.servers = function (methodFilter) {
            var filterCopy = methodFilter === undefined
                ? undefined
                : __assign$3({}, methodFilter);
            return this.getServers(filterCopy).map(function (serverMethodMap) {
                return serverMethodMap.server.instance;
            });
        };
        Client.prototype.methods = function (methodFilter) {
            if (typeof methodFilter === "string") {
                methodFilter = { name: methodFilter };
            }
            else {
                methodFilter = __assign$3({}, methodFilter);
            }
            return this.getMethods(methodFilter);
        };
        Client.prototype.methodsForInstance = function (instance) {
            return this.getMethodsForInstance(instance);
        };
        Client.prototype.methodAdded = function (callback) {
            return this.repo.onMethodAdded(callback);
        };
        Client.prototype.methodRemoved = function (callback) {
            return this.repo.onMethodRemoved(callback);
        };
        Client.prototype.serverAdded = function (callback) {
            return this.repo.onServerAdded(callback);
        };
        Client.prototype.serverRemoved = function (callback) {
            return this.repo.onServerRemoved(function (server, reason) {
                callback(server, reason);
            });
        };
        Client.prototype.serverMethodAdded = function (callback) {
            return this.repo.onServerMethodAdded(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.serverMethodRemoved = function (callback) {
            return this.repo.onServerMethodRemoved(function (server, method) {
                callback({ server: server, method: method });
            });
        };
        Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return __awaiter$2(this, void 0, void 0, function () {
                var getInvokePromise;
                var _this = this;
                return __generator$1(this, function (_a) {
                    getInvokePromise = function () { return __awaiter$2(_this, void 0, void 0, function () {
                        var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;
                        var _this = this;
                        var _a, _b, _c;
                        return __generator$1(this, function (_d) {
                            switch (_d.label) {
                                case 0:
                                    if (typeof methodFilter === "string") {
                                        methodDefinition = { name: methodFilter };
                                    }
                                    else {
                                        methodDefinition = __assign$3({}, methodFilter);
                                    }
                                    if (!methodDefinition.name) {
                                        return [2, Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.")];
                                    }
                                    if (!argumentObj) {
                                        argumentObj = {};
                                    }
                                    if (!target) {
                                        target = "best";
                                    }
                                    if (typeof target === "string" && target !== "all" && target !== "best" && target !== "skipMine") {
                                        return [2, Promise.reject(new Error("\"" + target + "\" is not a valid target. Valid targets are \"all\" and \"best\"."))];
                                    }
                                    if (!additionalOptions) {
                                        additionalOptions = {};
                                    }
                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                        additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;
                                        if (additionalOptions.methodResponseTimeoutMs === undefined) {
                                            additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs === undefined) {
                                        additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;
                                        if (additionalOptions.waitTimeoutMs === undefined) {
                                            additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;
                                        }
                                    }
                                    if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== "number") {
                                        return [2, Promise.reject(new Error("\"" + additionalOptions.waitTimeoutMs + "\" is not a valid number for \"waitTimeoutMs\" "))];
                                    }
                                    if (typeof argumentObj !== "object") {
                                        return [2, Promise.reject(new Error("The method arguments must be an object. method: " + methodDefinition.name))];
                                    }
                                    serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                                    if (!(serversMethodMap.length === 0)) return [3, 4];
                                    _d.label = 1;
                                case 1:
                                    _d.trys.push([1, 3, , 4]);
                                    return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];
                                case 2:
                                    serversMethodMap = _d.sent();
                                    return [3, 4];
                                case 3:
                                    err_1 = _d.sent();
                                    method = __assign$3(__assign$3({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });
                                    errorObj = {
                                        method: method,
                                        called_with: argumentObj,
                                        message: "Can not find a method matching " + JSON.stringify(methodFilter) + " with server filter " + JSON.stringify(target),
                                        executed_by: undefined,
                                        returned: undefined,
                                        status: undefined,
                                    };
                                    return [2, Promise.reject(errorObj)];
                                case 4:
                                    timeout = additionalOptions.methodResponseTimeoutMs;
                                    additionalOptionsCopy = additionalOptions;
                                    invokePromises = serversMethodMap.map(function (serversMethodPair) {
                                        var invId = shortid$3();
                                        var method = serversMethodPair.methods[0];
                                        var server = serversMethodPair.server;
                                        var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);
                                        return Promise.race([
                                            invokePromise,
                                            rejectAfter$1(timeout, invokePromise, {
                                                invocationId: invId,
                                                message: "Invocation timeout (" + timeout + " ms) reached for method name: " + (method === null || method === void 0 ? void 0 : method.name) + ", target instance: " + JSON.stringify(server.instance) + ", options: " + JSON.stringify(additionalOptionsCopy),
                                                status: InvokeStatus$1.Error,
                                            })
                                        ]);
                                    });
                                    return [4, Promise.all(invokePromises)];
                                case 5:
                                    invocationMessages = _d.sent();
                                    results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);
                                    allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus$1.Error; });
                                    if (allRejected) {
                                        return [2, Promise.reject(results)];
                                    }
                                    return [2, results];
                            }
                        });
                    }); };
                    return [2, promisify$1(getInvokePromise(), success, error)];
                });
            });
        };
        Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {
            var all_return_values = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus$1.Success; })
                .reduce(function (allValues, currentValue) {
                allValues = __spreadArrays$1(allValues, [
                    {
                        executed_by: currentValue.instance,
                        returned: currentValue.result,
                        called_with: calledWith,
                        method: method,
                        message: currentValue.message,
                        status: currentValue.status,
                    }
                ]);
                return allValues;
            }, []);
            var all_errors = invocationResults
                .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus$1.Error; })
                .reduce(function (allErrors, currError) {
                allErrors = __spreadArrays$1(allErrors, [
                    {
                        executed_by: currError.instance,
                        called_with: calledWith,
                        name: method.name,
                        message: currError.message,
                    }
                ]);
                return allErrors;
            }, []);
            var invResult = invocationResults[0];
            var result = {
                method: method,
                called_with: calledWith,
                returned: invResult.result,
                executed_by: invResult.instance,
                all_return_values: all_return_values,
                all_errors: all_errors,
                message: invResult.message,
                status: invResult.status
            };
            return result;
        };
        Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (additionalOptions.waitTimeoutMs === 0) {
                    reject();
                    return;
                }
                var delayStep = 500;
                var delayTillNow = 0;
                var retry = function () {
                    delayTillNow += delayStep;
                    var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);
                    if (serversMethodMap.length > 0) {
                        clearInterval(interval);
                        resolve(serversMethodMap);
                    }
                    else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {
                        clearInterval(interval);
                        reject();
                        return;
                    }
                };
                var interval = setInterval(retry, delayStep);
            });
        };
        Client.prototype.filterByTarget = function (target, serverMethodMap) {
            var _this = this;
            if (typeof target === "string") {
                if (target === "all") {
                    return __spreadArrays$1(serverMethodMap);
                }
                else if (target === "best") {
                    var localMachine = serverMethodMap
                        .find(function (s) { return s.server.instance.isLocal; });
                    if (localMachine) {
                        return [localMachine];
                    }
                    if (serverMethodMap[0] !== undefined) {
                        return [serverMethodMap[0]];
                    }
                }
                else if (target === "skipMine") {
                    return serverMethodMap.filter(function (_a) {
                        var server = _a.server;
                        return server.instance.peerId !== _this.instance.peerId;
                    });
                }
            }
            else {
                var targetArray = void 0;
                if (!Array.isArray(target)) {
                    targetArray = [target];
                }
                else {
                    targetArray = target;
                }
                var allServersMatching = targetArray.reduce(function (matches, filter) {
                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {
                        return _this.instanceMatch(filter, serverMethodPair.server.instance);
                    });
                    return matches.concat(myMatches);
                }, []);
                return allServersMatching;
            }
            return [];
        };
        Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {
            return this.containsProps(instanceFilter, instanceDefinition);
        };
        Client.prototype.methodMatch = function (methodFilter, methodDefinition) {
            return this.containsProps(methodFilter, methodDefinition);
        };
        Client.prototype.containsProps = function (filter, repoMethod) {
            var filterProps = Object.keys(filter)
                .filter(function (prop) {
                return filter[prop] !== undefined
                    && filter[prop] !== null
                    && typeof filter[prop] !== "function"
                    && prop !== "object_types"
                    && prop !== "display_name"
                    && prop !== "id"
                    && prop !== "gatewayId"
                    && prop !== "identifier"
                    && prop[0] !== "_";
            });
            return filterProps.every(function (prop) {
                var isMatch;
                var filterValue = filter[prop];
                var repoMethodValue = repoMethod[prop];
                switch (prop) {
                    case "objectTypes":
                        isMatch = (filterValue || []).every(function (filterValueEl) {
                            return (repoMethodValue || []).includes(filterValueEl);
                        });
                        break;
                    case "flags":
                        isMatch = isSubset$1(repoMethodValue || {}, filterValue || {});
                        break;
                    default:
                        isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();
                }
                return isMatch;
            });
        };
        Client.prototype.getMethods = function (methodFilter) {
            var _this = this;
            if (methodFilter === undefined) {
                return this.repo.getMethods();
            }
            var methods = this.repo.getMethods().filter(function (method) {
                return _this.methodMatch(methodFilter, method);
            });
            return methods;
        };
        Client.prototype.getMethodsForInstance = function (instanceFilter) {
            var _this = this;
            var allServers = this.repo.getServers();
            var matchingServers = allServers.filter(function (server) {
                return _this.instanceMatch(instanceFilter, server.instance);
            });
            if (matchingServers.length === 0) {
                return [];
            }
            var resultMethodsObject = {};
            if (matchingServers.length === 1) {
                resultMethodsObject = matchingServers[0].methods;
            }
            else {
                matchingServers.forEach(function (server) {
                    Object.keys(server.methods).forEach(function (methodKey) {
                        var method = server.methods[methodKey];
                        resultMethodsObject[method.identifier] = method;
                    });
                });
            }
            return Object.keys(resultMethodsObject)
                .map(function (key) {
                return resultMethodsObject[key];
            });
        };
        Client.prototype.getServers = function (methodFilter) {
            var _this = this;
            var servers = this.repo.getServers();
            if (methodFilter === undefined) {
                return servers.map(function (server) {
                    return { server: server, methods: [] };
                });
            }
            return servers.reduce(function (prev, current) {
                var methodsForServer = Object.values(current.methods);
                var matchingMethods = methodsForServer.filter(function (method) {
                    return _this.methodMatch(methodFilter, method);
                });
                if (matchingMethods.length > 0) {
                    prev.push({ server: current, methods: matchingMethods });
                }
                return prev;
            }, []);
        };
        Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {
            var serversMethodMap = this.getServers(methodFilter);
            return this.filterByTarget(target, serversMethodMap);
        };
        return Client;
    }());

    var ServerSubscription$1 = (function () {
        function ServerSubscription(protocol, repoMethod, subscription) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.subscription = subscription;
        }
        Object.defineProperty(ServerSubscription.prototype, "stream", {
            get: function () {
                if (!this.repoMethod.stream) {
                    throw new Error("no stream");
                }
                return this.repoMethod.stream;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "arguments", {
            get: function () { return this.subscription.arguments || {}; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "branchKey", {
            get: function () { return this.subscription.branchKey; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ServerSubscription.prototype, "instance", {
            get: function () {
                if (!this.subscription.instance) {
                    throw new Error("no instance");
                }
                return this.subscription.instance;
            },
            enumerable: true,
            configurable: true
        });
        ServerSubscription.prototype.close = function () {
            this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);
        };
        ServerSubscription.prototype.push = function (data) {
            this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);
        };
        return ServerSubscription;
    }());

    var Request$2 = (function () {
        function Request(protocol, repoMethod, requestContext) {
            this.protocol = protocol;
            this.repoMethod = repoMethod;
            this.requestContext = requestContext;
            this.arguments = requestContext.arguments;
            this.instance = requestContext.instance;
        }
        Request.prototype.accept = function () {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, "");
        };
        Request.prototype.acceptOnBranch = function (branch) {
            this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);
        };
        Request.prototype.reject = function (reason) {
            this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);
        };
        return Request;
    }());

    var ServerStreaming$2 = (function () {
        function ServerStreaming(protocol, server) {
            var _this = this;
            this.protocol = protocol;
            this.server = server;
            protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });
            protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });
            protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });
        }
        ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRequestHandler === "function")) {
                return;
            }
            var request = new Request$2(this.protocol, repoMethod, requestContext);
            repoMethod.streamCallbacks.subscriptionRequestHandler(request);
        };
        ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionAddedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription$1(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionAddedHandler(sub);
        };
        ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {
            if (!(repoMethod &&
                repoMethod.streamCallbacks &&
                typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === "function")) {
                return;
            }
            var sub = new ServerSubscription$1(this.protocol, repoMethod, subscription);
            repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);
        };
        return ServerStreaming;
    }());

    var ServerBranch$1 = (function () {
        function ServerBranch(key, protocol, repoMethod) {
            this.key = key;
            this.protocol = protocol;
            this.repoMethod = repoMethod;
        }
        ServerBranch.prototype.subscriptions = function () {
            var _this = this;
            var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);
            return subList.map(function (sub) {
                return new ServerSubscription$1(_this.protocol, _this.repoMethod, sub);
            });
        };
        ServerBranch.prototype.close = function () {
            this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);
        };
        ServerBranch.prototype.push = function (data) {
            this.protocol.server.pushData(this.repoMethod, data, [this.key]);
        };
        return ServerBranch;
    }());

    var ServerStream$1 = (function () {
        function ServerStream(_protocol, _repoMethod, _server) {
            this._protocol = _protocol;
            this._repoMethod = _repoMethod;
            this._server = _server;
            this.name = this._repoMethod.definition.name;
        }
        ServerStream.prototype.branches = function (key) {
            var _this = this;
            var bList = this._protocol.server.getBranchList(this._repoMethod);
            if (key) {
                if (bList.indexOf(key) > -1) {
                    return new ServerBranch$1(key, this._protocol, this._repoMethod);
                }
                return undefined;
            }
            else {
                return bList.map(function (branchKey) {
                    return new ServerBranch$1(branchKey, _this._protocol, _this._repoMethod);
                });
            }
        };
        ServerStream.prototype.branch = function (key) {
            return this.branches(key);
        };
        ServerStream.prototype.subscriptions = function () {
            var _this = this;
            var subList = this._protocol.server.getSubscriptionList(this._repoMethod);
            return subList.map(function (sub) {
                return new ServerSubscription$1(_this._protocol, _this._repoMethod, sub);
            });
        };
        Object.defineProperty(ServerStream.prototype, "definition", {
            get: function () {
                var _a;
                var def2 = this._repoMethod.definition;
                return {
                    accepts: def2.accepts,
                    description: def2.description,
                    displayName: def2.displayName,
                    name: def2.name,
                    objectTypes: def2.objectTypes,
                    returns: def2.returns,
                    supportsStreaming: def2.supportsStreaming,
                    flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,
                };
            },
            enumerable: true,
            configurable: true
        });
        ServerStream.prototype.close = function () {
            this._protocol.server.closeAllSubscriptions(this._repoMethod);
            this._server.unregister(this._repoMethod.definition, true);
        };
        ServerStream.prototype.push = function (data, branches) {
            if (typeof branches !== "string" && !Array.isArray(branches) && branches !== undefined) {
                throw new Error("invalid branches should be string or string array");
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            this._protocol.server.pushData(this._repoMethod, data, branches);
        };
        ServerStream.prototype.updateRepoMethod = function (repoMethod) {
            this._repoMethod = repoMethod;
        };
        return ServerStream;
    }());

    var Server$1 = (function () {
        function Server(protocol, serverRepository) {
            this.protocol = protocol;
            this.serverRepository = serverRepository;
            this.invocations = 0;
            this.currentlyUnregistering = {};
            this.streaming = new ServerStreaming$2(protocol, this);
            this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));
        }
        Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {
            var _this = this;
            var promise = new Promise(function (resolve, reject) {
                if (!streamDef) {
                    reject("The stream name must be unique! Please, provide either a unique string for a stream name to \u201Cglue.interop.createStream()\u201D or a \u201CmethodDefinition\u201D object with a unique \u201Cname\u201D property for the stream.");
                    return;
                }
                var streamMethodDefinition;
                if (typeof streamDef === "string") {
                    streamMethodDefinition = { name: "" + streamDef };
                }
                else {
                    streamMethodDefinition = __assign$3({}, streamDef);
                }
                if (!streamMethodDefinition.name) {
                    return reject("The \u201Cname\u201D property is required for the \u201CstreamDefinition\u201D object and must be unique. Stream definition: " + JSON.stringify(streamMethodDefinition));
                }
                var nameAlreadyExists = _this.serverRepository.getList()
                    .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });
                if (nameAlreadyExists) {
                    return reject("A stream with the name \"" + streamMethodDefinition.name + "\" already exists! Please, provide a unique name for the stream.");
                }
                streamMethodDefinition.supportsStreaming = true;
                if (!callbacks) {
                    callbacks = {};
                }
                if (typeof callbacks.subscriptionRequestHandler !== "function") {
                    callbacks.subscriptionRequestHandler = function (request) {
                        request.accept();
                    };
                }
                var repoMethod = _this.serverRepository.add({
                    definition: streamMethodDefinition,
                    streamCallbacks: callbacks,
                    protocolState: {},
                });
                _this.protocol.server.createStream(repoMethod)
                    .then(function () {
                    var streamUserObject;
                    if (existingStream) {
                        streamUserObject = existingStream;
                        existingStream.updateRepoMethod(repoMethod);
                    }
                    else {
                        streamUserObject = new ServerStream$1(_this.protocol, repoMethod, _this);
                    }
                    repoMethod.stream = streamUserObject;
                    resolve(streamUserObject);
                })
                    .catch(function (err) {
                    if (repoMethod.repoId) {
                        _this.serverRepository.remove(repoMethod.repoId);
                    }
                    reject(err);
                });
            });
            return promisify$1(promise, successCallback, errorCallback);
        };
        Server.prototype.register = function (methodDefinition, callback) {
            var _this = this;
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter$2(_this, void 0, void 0, function () {
                var result, resultValue, e_1;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 4, , 5]);
                            result = callback(context.args, context.instance);
                            if (!(result && typeof result.then === "function")) return [3, 2];
                            return [4, result];
                        case 1:
                            resultValue = _a.sent();
                            resultCallback(undefined, resultValue);
                            return [3, 3];
                        case 2:
                            resultCallback(undefined, result);
                            _a.label = 3;
                        case 3: return [3, 5];
                        case 4:
                            e_1 = _a.sent();
                            if (!e_1) {
                                e_1 = "";
                            }
                            resultCallback(e_1, e_1);
                            return [3, 5];
                        case 5: return [2];
                    }
                });
            }); };
            wrappedCallbackFunction.userCallback = callback;
            return this.registerCore(methodDefinition, wrappedCallbackFunction);
        };
        Server.prototype.registerAsync = function (methodDefinition, callback) {
            if (!methodDefinition) {
                return Promise.reject("Method definition is required. Please, provide either a unique string for a method name or a \u201CmethodDefinition\u201D object with a required \u201Cname\u201D property.");
            }
            if (typeof callback !== "function") {
                return Promise.reject("The second parameter must be a callback function. Method: " + (typeof methodDefinition === "string" ? methodDefinition : methodDefinition.name));
            }
            var wrappedCallback = function (context, resultCallback) {
                try {
                    var resultCalled_1 = false;
                    var success = function (result) {
                        if (!resultCalled_1) {
                            resultCallback(undefined, result);
                        }
                        resultCalled_1 = true;
                    };
                    var error = function (e) {
                        if (!resultCalled_1) {
                            if (!e) {
                                e = "";
                            }
                            resultCallback(e, e);
                        }
                        resultCalled_1 = true;
                    };
                    var methodResult = callback(context.args, context.instance, success, error);
                    if (methodResult && typeof methodResult.then === "function") {
                        methodResult
                            .then(success)
                            .catch(error);
                    }
                }
                catch (e) {
                    resultCallback(e, undefined);
                }
            };
            wrappedCallback.userCallbackAsync = callback;
            return this.registerCore(methodDefinition, wrappedCallback);
        };
        Server.prototype.unregister = function (methodFilter, forStream) {
            if (forStream === void 0) { forStream = false; }
            return __awaiter$2(this, void 0, void 0, function () {
                var methodDefinition, methodToBeRemoved;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (methodFilter === undefined) {
                                return [2, Promise.reject("Please, provide either a unique string for a name or an object containing a \u201Cname\u201D property.")];
                            }
                            if (!(typeof methodFilter === "function")) return [3, 2];
                            return [4, this.unregisterWithPredicate(methodFilter, forStream)];
                        case 1:
                            _a.sent();
                            return [2];
                        case 2:
                            if (typeof methodFilter === "string") {
                                methodDefinition = { name: methodFilter };
                            }
                            else {
                                methodDefinition = methodFilter;
                            }
                            if (methodDefinition.name === undefined) {
                                return [2, Promise.reject("Method name is required. Cannot find a method if the method name is undefined!")];
                            }
                            methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {
                                return serverMethod.definition.name === methodDefinition.name
                                    && (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodToBeRemoved) {
                                return [2, Promise.reject("Method with a name \"" + methodDefinition.name + "\" does not exist or is not registered by your application!")];
                            }
                            return [4, this.removeMethodsOrStreams([methodToBeRemoved])];
                        case 3:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {
            return __awaiter$2(this, void 0, void 0, function () {
                var methodsOrStreamsToRemove;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            methodsOrStreamsToRemove = this.serverRepository.getList()
                                .filter(function (sm) { return filterPredicate(sm.definition); })
                                .filter(function (serverMethod) {
                                return (serverMethod.definition.supportsStreaming || false) === forStream;
                            });
                            if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {
                                return [2, Promise.reject("Could not find a " + (forStream ? "stream" : "method") + " matching the specified condition!")];
                            }
                            return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {
            var _this = this;
            var methodUnregPromises = [];
            methodsToRemove.forEach(function (method) {
                var promise = _this.protocol.server.unregister(method)
                    .then(function () {
                    if (method.repoId) {
                        _this.serverRepository.remove(method.repoId);
                    }
                });
                methodUnregPromises.push(promise);
                _this.addAsCurrentlyUnregistering(method.definition.name, promise);
            });
            return Promise.all(methodUnregPromises);
        };
        Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {
            return __awaiter$2(this, void 0, void 0, function () {
                var timeout;
                var _this = this;
                return __generator$1(this, function (_a) {
                    timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });
                    this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {
                        delete _this.currentlyUnregistering[methodName];
                    });
                    return [2];
                });
            });
        };
        Server.prototype.registerCore = function (method, theFunction) {
            return __awaiter$2(this, void 0, void 0, function () {
                var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;
                var _this = this;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (typeof method === "string") {
                                methodDefinition = { name: "" + method };
                            }
                            else {
                                methodDefinition = __assign$3({}, method);
                            }
                            if (!methodDefinition.name) {
                                return [2, Promise.reject("Please, provide a (unique) string value for the \u201Cname\u201D property in the \u201CmethodDefinition\u201D object: " + JSON.stringify(method))];
                            }
                            unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];
                            if (!unregisterInProgress) return [3, 2];
                            return [4, unregisterInProgress];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            nameAlreadyExists = this.serverRepository.getList()
                                .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });
                            if (nameAlreadyExists) {
                                return [2, Promise.reject("A method with the name \"" + methodDefinition.name + "\" already exists! Please, provide a unique name for the method.")];
                            }
                            if (methodDefinition.supportsStreaming) {
                                return [2, Promise.reject("When you create methods with \u201Cglue.interop.register()\u201D or \u201Cglue.interop.registerAsync()\u201D the property \u201CsupportsStreaming\u201D cannot be \u201Ctrue\u201D. If you want \u201C" + methodDefinition.name + "\u201D to be a stream, please use the \u201Cglue.interop.createStream()\u201D method.")];
                            }
                            repoMethod = this.serverRepository.add({
                                definition: methodDefinition,
                                theFunction: theFunction,
                                protocolState: {},
                            });
                            return [2, this.protocol.server.register(repoMethod)
                                    .catch(function (err) {
                                    if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {
                                        _this.serverRepository.remove(repoMethod.repoId);
                                    }
                                    throw err;
                                })];
                    }
                });
            });
        };
        Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {
            var _this = this;
            if (!methodToExecute || !methodToExecute.theFunction) {
                return;
            }
            methodToExecute.theFunction(invocationArgs, function (err, result) {
                if (err !== undefined && err !== null) {
                    if (err.message && typeof err.message === "string") {
                        err = err.message;
                    }
                    else if (typeof err !== "string") {
                        try {
                            err = JSON.stringify(err);
                        }
                        catch (unStrException) {
                            err = "un-stringifyable error in onMethodInvoked! Top level prop names: " + Object.keys(err);
                        }
                    }
                }
                if (!result) {
                    result = {};
                }
                else if (typeof result !== "object" || Array.isArray(result)) {
                    result = { _value: result };
                }
                _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);
            });
        };
        return Server;
    }());

    var InstanceWrapper$1 = (function () {
        function InstanceWrapper(API, instance, connection) {
            var _this = this;
            this.wrapped = {};
            this.wrapped.getMethods = function () {
                return API.methodsForInstance(this);
            };
            this.wrapped.getStreams = function () {
                return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });
            };
            if (instance) {
                this.refreshWrappedObject(instance);
            }
            if (connection) {
                connection.loggedIn(function () {
                    _this.refresh(connection);
                });
                this.refresh(connection);
            }
        }
        InstanceWrapper.prototype.unwrap = function () {
            return this.wrapped;
        };
        InstanceWrapper.prototype.refresh = function (connection) {
            if (!connection) {
                return;
            }
            var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;
            var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });
            this.refreshWrappedObject(instance);
        };
        InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {
            var _this = this;
            var _a, _b, _c, _d;
            Object.keys(resolvedIdentity).forEach(function (key) {
                _this.wrapped[key] = resolvedIdentity[key];
            });
            this.wrapped.user = resolvedIdentity.user;
            this.wrapped.instance = resolvedIdentity.instance;
            this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid$3();
            this.wrapped.applicationName = resolvedIdentity.applicationName;
            this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);
            this.wrapped.machine = resolvedIdentity.machine;
            this.wrapped.environment = resolvedIdentity.environment;
            this.wrapped.region = resolvedIdentity.region;
            this.wrapped.windowId = resolvedIdentity.windowId;
            this.wrapped.isLocal = (_d = resolvedIdentity.isLocal) !== null && _d !== void 0 ? _d : true;
            this.wrapped.api = resolvedIdentity.api;
            this.wrapped.service = resolvedIdentity.service;
            this.wrapped.peerId = resolvedIdentity.peerId;
        };
        return InstanceWrapper;
    }());

    var hideMethodSystemFlags$1 = function (method) {
        return __assign$3(__assign$3({}, method), { flags: method.flags.metadata || {} });
    };
    var ClientRepository$1 = (function () {
        function ClientRepository(logger, API) {
            this.logger = logger;
            this.API = API;
            this.servers = {};
            this.methodsCount = {};
            this.callbacks = lib$4();
            var peerId = this.API.instance.peerId;
            this.myServer = {
                id: peerId,
                methods: {},
                instance: this.API.instance,
                wrapper: this.API.unwrappedInstance,
            };
            this.servers[peerId] = this.myServer;
        }
        ClientRepository.prototype.addServer = function (info, serverId) {
            this.logger.debug("adding server " + serverId);
            var current = this.servers[serverId];
            if (current) {
                return current.id;
            }
            var wrapper = new InstanceWrapper$1(this.API, info);
            var serverEntry = {
                id: serverId,
                methods: {},
                instance: wrapper.unwrap(),
                wrapper: wrapper,
            };
            this.servers[serverId] = serverEntry;
            this.callbacks.execute("onServerAdded", serverEntry.instance);
            return serverId;
        };
        ClientRepository.prototype.removeServerById = function (id, reason) {
            var _this = this;
            var server = this.servers[id];
            if (!server) {
                this.logger.warn("not aware of server " + id + ", my state " + JSON.stringify(Object.keys(this.servers)));
                return;
            }
            else {
                this.logger.debug("removing server " + id);
            }
            Object.keys(server.methods).forEach(function (methodId) {
                _this.removeServerMethod(id, methodId);
            });
            delete this.servers[id];
            this.callbacks.execute("onServerRemoved", server.instance, reason);
        };
        ClientRepository.prototype.addServerMethod = function (serverId, method) {
            var _a;
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            if (server.methods[method.id]) {
                return;
            }
            var identifier = this.createMethodIdentifier(method);
            var that = this;
            var methodDefinition = {
                identifier: identifier,
                gatewayId: method.id,
                name: method.name,
                displayName: method.display_name,
                description: method.description,
                version: method.version,
                objectTypes: method.object_types || [],
                accepts: method.input_signature,
                returns: method.result_signature,
                supportsStreaming: typeof method.flags !== "undefined" ? method.flags.streaming : false,
                flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},
                getServers: function () {
                    return that.getServersByMethod(identifier);
                }
            };
            methodDefinition.object_types = methodDefinition.objectTypes;
            methodDefinition.display_name = methodDefinition.displayName;
            methodDefinition.version = methodDefinition.version;
            server.methods[method.id] = methodDefinition;
            var clientMethodDefinition = hideMethodSystemFlags$1(methodDefinition);
            if (!this.methodsCount[identifier]) {
                this.methodsCount[identifier] = 0;
                this.callbacks.execute("onMethodAdded", clientMethodDefinition);
            }
            this.methodsCount[identifier] = this.methodsCount[identifier] + 1;
            this.callbacks.execute("onServerMethodAdded", server.instance, clientMethodDefinition);
            return methodDefinition;
        };
        ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {
            var server = this.servers[serverId];
            if (!server) {
                throw new Error("server does not exists");
            }
            var method = server.methods[methodId];
            delete server.methods[methodId];
            var clientMethodDefinition = hideMethodSystemFlags$1(method);
            this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;
            if (this.methodsCount[method.identifier] === 0) {
                this.callbacks.execute("onMethodRemoved", clientMethodDefinition);
            }
            this.callbacks.execute("onServerMethodRemoved", server.instance, clientMethodDefinition);
        };
        ClientRepository.prototype.getMethods = function () {
            return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags$1);
        };
        ClientRepository.prototype.getServers = function () {
            return Object.values(this.servers).map(this.hideServerMethodSystemFlags);
        };
        ClientRepository.prototype.onServerAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerAdded", callback);
            var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);
        };
        ClientRepository.prototype.onMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodAdded", callback);
            var methodsToReplay = this.getMethods();
            return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);
        };
        ClientRepository.prototype.onServerMethodAdded = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodAdded", callback);
            var unsubCalled = false;
            var servers = this.getServers();
            setTimeout(function () {
                servers.forEach(function (server) {
                    var methods = server.methods;
                    Object.keys(methods).forEach(function (methodId) {
                        if (!unsubCalled) {
                            callback(server.instance, methods[methodId]);
                        }
                    });
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.onMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.onServerMethodRemoved = function (callback) {
            var unsubscribeFunc = this.callbacks.add("onServerMethodRemoved", callback);
            return unsubscribeFunc;
        };
        ClientRepository.prototype.getServerById = function (id) {
            return this.hideServerMethodSystemFlags(this.servers[id]);
        };
        ClientRepository.prototype.reset = function () {
            var _a;
            var _this = this;
            Object.keys(this.servers).forEach(function (key) {
                _this.removeServerById(key, "reset");
            });
            this.servers = (_a = {},
                _a[this.myServer.id] = this.myServer,
                _a);
            this.methodsCount = {};
        };
        ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {
            var _a, _b;
            var accepts = (_a = methodInfo.input_signature) !== null && _a !== void 0 ? _a : "";
            var returns = (_b = methodInfo.result_signature) !== null && _b !== void 0 ? _b : "";
            return (methodInfo.name + accepts + returns).toLowerCase();
        };
        ClientRepository.prototype.getServersByMethod = function (identifier) {
            var allServers = [];
            Object.values(this.servers).forEach(function (server) {
                Object.values(server.methods).forEach(function (method) {
                    if (method.identifier === identifier) {
                        allServers.push(server.instance);
                    }
                });
            });
            return allServers;
        };
        ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {
            var unsubCalled = false;
            setTimeout(function () {
                collectionToReplay.forEach(function (item) {
                    if (!unsubCalled) {
                        callback(item);
                    }
                });
            }, 0);
            return function () {
                unsubCalled = true;
                unsubscribeFunc();
            };
        };
        ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {
            var clientMethods = {};
            Object.entries(server.methods).forEach(function (_a) {
                var name = _a[0], method = _a[1];
                clientMethods[name] = hideMethodSystemFlags$1(method);
            });
            return __assign$3(__assign$3({}, server), { methods: clientMethods });
        };
        ClientRepository.prototype.extractMethodsFromServers = function (servers) {
            var methods = Object.values(servers).reduce(function (clientMethods, server) {
                return __spreadArrays$1(clientMethods, Object.values(server.methods));
            }, []);
            return methods;
        };
        return ClientRepository;
    }());

    var ServerRepository$1 = (function () {
        function ServerRepository() {
            this.nextId = 0;
            this.methods = [];
        }
        ServerRepository.prototype.add = function (method) {
            method.repoId = String(this.nextId);
            this.nextId += 1;
            this.methods.push(method);
            return method;
        };
        ServerRepository.prototype.remove = function (repoId) {
            if (typeof repoId !== "string") {
                return new TypeError("Expecting a string");
            }
            this.methods = this.methods.filter(function (m) {
                return m.repoId !== repoId;
            });
        };
        ServerRepository.prototype.getById = function (id) {
            if (typeof id !== "string") {
                return undefined;
            }
            return this.methods.find(function (m) {
                return m.repoId === id;
            });
        };
        ServerRepository.prototype.getList = function () {
            return this.methods.map(function (m) { return m; });
        };
        ServerRepository.prototype.length = function () {
            return this.methods.length;
        };
        ServerRepository.prototype.reset = function () {
            this.methods = [];
        };
        return ServerRepository;
    }());

    var SUBSCRIPTION_REQUEST$1 = "onSubscriptionRequest";
    var SUBSCRIPTION_ADDED$1 = "onSubscriptionAdded";
    var SUBSCRIPTION_REMOVED$1 = "onSubscriptionRemoved";
    var ServerStreaming$1$1 = (function () {
        function ServerStreaming(session, repository, serverRepository) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.serverRepository = serverRepository;
            this.ERR_URI_SUBSCRIPTION_FAILED = "com.tick42.agm.errors.subscription.failure";
            this.callbacks = lib$4();
            this.nextStreamId = 0;
            session.on("add-interest", function (msg) {
                _this.handleAddInterest(msg);
            });
            session.on("remove-interest", function (msg) {
                _this.handleRemoveInterest(msg);
            });
        }
        ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {
            if (typeof branch !== "string") {
                branch = "";
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                throw new TypeError("The streaming method is missing its subscriptions.");
            }
            if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                throw new TypeError("The streaming method is missing its branches.");
            }
            var streamId = this.getStreamId(streamingMethod, branch);
            var key = requestContext.msg.subscription_id;
            var subscription = {
                id: key,
                arguments: requestContext.arguments,
                instance: requestContext.instance,
                branchKey: branch,
                streamId: streamId,
                subscribeMsg: requestContext.msg,
            };
            streamingMethod.protocolState.subscriptionsMap[key] = subscription;
            this.session.sendFireAndForget({
                type: "accepted",
                subscription_id: key,
                stream_id: streamId,
            });
            this.callbacks.execute(SUBSCRIPTION_ADDED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {
            if (typeof reason !== "string") {
                reason = "";
            }
            this.sendSubscriptionFailed("Subscription rejected by user. " + reason, requestContext.msg.subscription_id);
        };
        ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {
            var _this = this;
            if (typeof streamingMethod !== "object" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {
                return;
            }
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            if (typeof branches === "string") {
                branches = [branches];
            }
            else if (!Array.isArray(branches) || branches.length <= 0) {
                branches = [];
            }
            var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap
                .filter(function (br) {
                if (!branches || branches.length === 0) {
                    return true;
                }
                return branches.indexOf(br.key) >= 0;
            }).map(function (br) {
                return br.streamId;
            });
            streamIdList.forEach(function (streamId) {
                var publishMessage = {
                    type: "publish",
                    stream_id: streamId,
                    data: data,
                };
                _this.session.sendFireAndForget(publishMessage);
            });
        };
        ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {
            if (typeof data !== "object") {
                throw new Error("Invalid arguments. Data must be an object.");
            }
            var postMessage = {
                type: "post",
                subscription_id: subscription.id,
                data: data,
            };
            this.session.sendFireAndForget(postMessage);
        };
        ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {
            if (streamingMethod.protocolState.subscriptionsMap) {
                delete streamingMethod.protocolState.subscriptionsMap[subscription.id];
            }
            var dropSubscriptionMessage = {
                type: "drop-subscription",
                subscription_id: subscription.id,
                reason: "Server dropping a single subscription",
            };
            this.session.sendFireAndForget(dropSubscriptionMessage);
            var subscriber = subscription.instance;
            this.callbacks.execute(SUBSCRIPTION_REMOVED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {
            var _this = this;
            if (typeof streamingMethod !== "object" || typeof streamingMethod.protocolState.subscriptionsMap !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var subscriptionsToClose = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey === "string") {
                subscriptionsToClose = subscriptionsToClose.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            subscriptionsToClose.forEach(function (subscription) {
                delete subscriptionsMap[subscription.id];
                var drop = {
                    type: "drop-subscription",
                    subscription_id: subscription.id,
                    reason: "Server dropping all subscriptions on stream_id: " + subscription.streamId,
                };
                _this.session.sendFireAndForget(drop);
            });
        };
        ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            var subscriptions = [];
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            if (typeof branchKey !== "string") {
                subscriptions = allSubscriptions;
            }
            else {
                subscriptions = allSubscriptions.filter(function (sub) {
                    return sub.branchKey === branchKey;
                });
            }
            return subscriptions;
        };
        ServerStreaming.prototype.getBranchList = function (streamingMethod) {
            if (typeof streamingMethod !== "object") {
                return [];
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return [];
            }
            var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;
            var allSubscriptions = Object.keys(subscriptionsMap)
                .map(function (key) {
                return subscriptionsMap[key];
            });
            var result = [];
            allSubscriptions.forEach(function (sub) {
                var branch = "";
                if (typeof sub === "object" && typeof sub.branchKey === "string") {
                    branch = sub.branchKey;
                }
                if (result.indexOf(branch) === -1) {
                    result.push(branch);
                }
            });
            return result;
        };
        ServerStreaming.prototype.onSubAdded = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED$1, callback);
        };
        ServerStreaming.prototype.onSubRequest = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST$1, callback);
        };
        ServerStreaming.prototype.onSubRemoved = function (callback) {
            this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED$1, callback);
        };
        ServerStreaming.prototype.handleRemoveInterest = function (msg) {
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (typeof msg.subscription_id !== "string" ||
                typeof streamingMethod !== "object") {
                return;
            }
            if (!streamingMethod.protocolState.subscriptionsMap) {
                return;
            }
            if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== "object") {
                return;
            }
            var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];
            this.callbacks.execute(SUBSCRIPTION_REMOVED$1, subscription, streamingMethod);
        };
        ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {
            this.callbacks.add(eventName, handlerFunc);
        };
        ServerStreaming.prototype.getNextStreamId = function () {
            return this.nextStreamId++ + "";
        };
        ServerStreaming.prototype.handleAddInterest = function (msg) {
            var caller = this.repository.getServerById(msg.caller_id);
            var instance = caller.instance;
            var requestContext = {
                msg: msg,
                arguments: msg.arguments_kv || {},
                instance: instance,
            };
            var streamingMethod = this.serverRepository.getById(msg.method_id);
            if (streamingMethod === undefined) {
                var errorMsg = "No method with id " + msg.method_id + " on this server.";
                this.sendSubscriptionFailed(errorMsg, msg.subscription_id);
                return;
            }
            if (streamingMethod.protocolState.subscriptionsMap &&
                streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {
                this.sendSubscriptionFailed("A subscription with id " + msg.subscription_id + " already exists.", msg.subscription_id);
                return;
            }
            this.callbacks.execute(SUBSCRIPTION_REQUEST$1, requestContext, streamingMethod);
        };
        ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {
            var errorMessage = {
                type: "error",
                reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,
                reason: reason,
                request_id: subscriptionId,
            };
            this.session.sendFireAndForget(errorMessage);
        };
        ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {
            if (typeof branchKey !== "string") {
                branchKey = "";
            }
            if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {
                throw new Error("streaming " + streamingMethod.definition.name + " method without protocol state");
            }
            var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {
                return branch.key === branchKey;
            })[0];
            var streamId = (needleBranch ? needleBranch.streamId : undefined);
            if (typeof streamId !== "string" || streamId === "") {
                streamId = this.getNextStreamId();
                streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });
            }
            return streamId;
        };
        return ServerStreaming;
    }());

    var ServerProtocol$1 = (function () {
        function ServerProtocol(session, clientRepository, serverRepository, logger) {
            var _this = this;
            this.session = session;
            this.clientRepository = clientRepository;
            this.serverRepository = serverRepository;
            this.logger = logger;
            this.callbacks = lib$4();
            this.streaming = new ServerStreaming$1$1(session, clientRepository, serverRepository);
            this.session.on("invoke", function (msg) { return _this.handleInvokeMessage(msg); });
        }
        ServerProtocol.prototype.createStream = function (repoMethod) {
            repoMethod.protocolState.subscriptionsMap = {};
            repoMethod.protocolState.branchKeyToStreamIdMap = [];
            return this.register(repoMethod, true);
        };
        ServerProtocol.prototype.register = function (repoMethod, isStreaming) {
            var _this = this;
            var _a;
            var methodDef = repoMethod.definition;
            var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });
            var registerMsg = {
                type: "register",
                methods: [{
                        id: repoMethod.repoId,
                        name: methodDef.name,
                        display_name: methodDef.displayName,
                        description: methodDef.description,
                        version: methodDef.version,
                        flags: flags,
                        object_types: methodDef.objectTypes || methodDef.object_types,
                        input_signature: methodDef.accepts,
                        result_signature: methodDef.returns,
                        restrictions: undefined,
                    }],
            };
            return this.session.send(registerMsg, { methodId: repoMethod.repoId })
                .then(function () {
                _this.logger.debug("registered method " + repoMethod.definition.name + " with id " + repoMethod.repoId);
            })
                .catch(function (msg) {
                _this.logger.warn("failed to register method " + repoMethod.definition.name + " with id " + repoMethod.repoId + " - " + JSON.stringify(msg));
                throw msg;
            });
        };
        ServerProtocol.prototype.onInvoked = function (callback) {
            this.callbacks.add("onInvoked", callback);
        };
        ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {
            var msg;
            if (err || err === "") {
                msg = {
                    type: "error",
                    request_id: invocationId,
                    reason_uri: "agm.errors.client_error",
                    reason: err,
                    context: result,
                    peer_id: undefined,
                };
            }
            else {
                msg = {
                    type: "yield",
                    invocation_id: invocationId,
                    peer_id: this.session.peerId,
                    result: result,
                    request_id: undefined,
                };
            }
            this.session.sendFireAndForget(msg);
        };
        ServerProtocol.prototype.unregister = function (method) {
            return __awaiter$2(this, void 0, void 0, function () {
                var msg;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            msg = {
                                type: "unregister",
                                methods: [method.repoId],
                            };
                            return [4, this.session.send(msg)];
                        case 1:
                            _a.sent();
                            return [2];
                    }
                });
            });
        };
        ServerProtocol.prototype.getBranchList = function (method) {
            return this.streaming.getBranchList(method);
        };
        ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {
            return this.streaming.getSubscriptionList(method, branchKey);
        };
        ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {
            this.streaming.closeMultipleSubscriptions(method, branchKey);
        };
        ServerProtocol.prototype.pushData = function (method, data, branches) {
            this.streaming.pushData(method, data, branches);
        };
        ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {
            this.streaming.pushDataToSingle(method, subscription, data);
        };
        ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {
            this.streaming.closeSingleSubscription(method, subscription);
        };
        ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {
            this.streaming.acceptRequestOnBranch(requestContext, method, branch);
        };
        ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {
            this.streaming.rejectRequest(requestContext, method, reason);
        };
        ServerProtocol.prototype.onSubRequest = function (callback) {
            this.streaming.onSubRequest(callback);
        };
        ServerProtocol.prototype.onSubAdded = function (callback) {
            this.streaming.onSubAdded(callback);
        };
        ServerProtocol.prototype.onSubRemoved = function (callback) {
            this.streaming.onSubRemoved(callback);
        };
        ServerProtocol.prototype.handleInvokeMessage = function (msg) {
            var invocationId = msg.invocation_id;
            var callerId = msg.caller_id;
            var methodId = msg.method_id;
            var args = msg.arguments_kv;
            var methodList = this.serverRepository.getList();
            var method = methodList.filter(function (m) {
                return m.repoId === methodId;
            })[0];
            if (method === undefined) {
                return;
            }
            var client = this.clientRepository.getServerById(callerId).instance;
            var invocationArgs = { args: args, instance: client };
            this.callbacks.execute("onInvoked", method, invocationId, invocationArgs);
        };
        return ServerProtocol;
    }());

    var UserSubscription$1 = (function () {
        function UserSubscription(repository, subscriptionData) {
            this.repository = repository;
            this.subscriptionData = subscriptionData;
        }
        Object.defineProperty(UserSubscription.prototype, "requestArguments", {
            get: function () {
                return this.subscriptionData.params.arguments || {};
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "servers", {
            get: function () {
                var _this = this;
                return this.subscriptionData.trackedServers
                    .filter(function (pair) { return pair.subscriptionId; })
                    .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "serverInstance", {
            get: function () {
                return this.servers[0];
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(UserSubscription.prototype, "stream", {
            get: function () {
                return this.subscriptionData.method;
            },
            enumerable: true,
            configurable: true
        });
        UserSubscription.prototype.onData = function (dataCallback) {
            if (typeof dataCallback !== "function") {
                throw new TypeError("The data callback must be a function.");
            }
            this.subscriptionData.handlers.onData.push(dataCallback);
            if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {
                this.subscriptionData.queued.data.forEach(function (dataItem) {
                    dataCallback(dataItem);
                });
            }
        };
        UserSubscription.prototype.onClosed = function (closedCallback) {
            if (typeof closedCallback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onClosed.push(closedCallback);
        };
        UserSubscription.prototype.onFailed = function (callback) {
        };
        UserSubscription.prototype.onConnected = function (callback) {
            if (typeof callback !== "function") {
                throw new TypeError("The callback must be a function.");
            }
            this.subscriptionData.handlers.onConnected.push(callback);
        };
        UserSubscription.prototype.close = function () {
            this.subscriptionData.close();
        };
        UserSubscription.prototype.setNewSubscription = function (newSub) {
            this.subscriptionData = newSub;
        };
        return UserSubscription;
    }());

    var TimedCache$1 = (function () {
        function TimedCache(config) {
            this.config = config;
            this.cache = [];
            this.timeoutIds = [];
        }
        TimedCache.prototype.add = function (element) {
            var _this = this;
            var id = shortid$3();
            this.cache.push({ id: id, element: element });
            var timeoutId = setTimeout(function () {
                var elementIdx = _this.cache.findIndex(function (entry) { return entry.id === id; });
                if (elementIdx < 0) {
                    return;
                }
                _this.cache.splice(elementIdx, 1);
            }, this.config.ELEMENT_TTL_MS);
            this.timeoutIds.push(timeoutId);
        };
        TimedCache.prototype.flush = function () {
            var elements = this.cache.map(function (entry) { return entry.element; });
            this.timeoutIds.forEach(function (id) { return clearInterval(id); });
            this.cache = [];
            this.timeoutIds = [];
            return elements;
        };
        return TimedCache;
    }());

    var STATUS_AWAITING_ACCEPT$1 = "awaitingAccept";
    var STATUS_SUBSCRIBED$1 = "subscribed";
    var ERR_MSG_SUB_FAILED$1 = "Subscription failed.";
    var ERR_MSG_SUB_REJECTED$1 = "Subscription rejected.";
    var ON_CLOSE_MSG_SERVER_INIT$1 = "ServerInitiated";
    var ON_CLOSE_MSG_CLIENT_INIT$1 = "ClientInitiated";
    var ClientStreaming$1 = (function () {
        function ClientStreaming(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            this.subscriptionsList = {};
            this.timedCache = new TimedCache$1({ ELEMENT_TTL_MS: 10000 });
            this.subscriptionIdToLocalKeyMap = {};
            this.nextSubLocalKey = 0;
            this.handleErrorSubscribing = function (errorResponse) {
                var tag = errorResponse._tag;
                var subLocalKey = tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                    return server.serverId !== tag.serverId;
                });
                if (pendingSub.trackedServers.length <= 0) {
                    clearTimeout(pendingSub.timeoutId);
                    if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {
                        var reason = (typeof errorResponse.reason === "string" && errorResponse.reason !== "") ?
                            ' Publisher said "' + errorResponse.reason + '".' :
                            " No reason given.";
                        var callArgs = typeof pendingSub.params.arguments === "object" ?
                            JSON.stringify(pendingSub.params.arguments) :
                            "{}";
                        pendingSub.error({
                            message: ERR_MSG_SUB_REJECTED$1 + reason + " Called with:" + callArgs,
                            called_with: pendingSub.params.arguments,
                            method: pendingSub.method,
                        });
                    }
                    else if (pendingSub.status === STATUS_SUBSCRIBED$1) {
                        _this.callOnClosedHandlers(pendingSub);
                    }
                    delete _this.subscriptionsList[subLocalKey];
                }
            };
            this.handleSubscribed = function (msg) {
                var subLocalKey = msg._tag.subLocalKey;
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (typeof pendingSub !== "object") {
                    return;
                }
                var serverId = msg._tag.serverId;
                var acceptingServer = pendingSub.trackedServers
                    .filter(function (server) {
                    return server.serverId === serverId;
                })[0];
                if (typeof acceptingServer !== "object") {
                    return;
                }
                acceptingServer.subscriptionId = msg.subscription_id;
                _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;
                var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT$1);
                pendingSub.status = STATUS_SUBSCRIBED$1;
                if (isFirstResponse) {
                    var reconnect = false;
                    var sub = pendingSub.subscription;
                    if (sub) {
                        sub.setNewSubscription(pendingSub);
                        pendingSub.success(sub);
                        reconnect = true;
                    }
                    else {
                        sub = new UserSubscription$1(_this.repository, pendingSub);
                        pendingSub.subscription = sub;
                        pendingSub.success(sub);
                    }
                    for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {
                        var handler = _a[_i];
                        try {
                            handler(sub.serverInstance, reconnect);
                        }
                        catch (e) {
                        }
                    }
                }
            };
            this.handleEventData = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var trackedServersFound = subscription.trackedServers.filter(function (server) {
                    return server.subscriptionId === msg.subscription_id;
                });
                if (trackedServersFound.length !== 1) {
                    return;
                }
                var isPrivateData = msg.oob;
                var sendingServerId = trackedServersFound[0].serverId;
                var receivedStreamData = function () {
                    return {
                        data: msg.data,
                        server: _this.repository.getServerById(sendingServerId).instance,
                        requestArguments: subscription.params.arguments,
                        message: undefined,
                        private: isPrivateData,
                    };
                };
                var onDataHandlers = subscription.handlers.onData;
                var queuedData = subscription.queued.data;
                if (onDataHandlers.length > 0) {
                    onDataHandlers.forEach(function (callback) {
                        if (typeof callback === "function") {
                            callback(receivedStreamData());
                        }
                    });
                }
                else {
                    queuedData.push(receivedStreamData());
                }
            };
            this.handleSubscriptionCancelled = function (msg) {
                var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
                if (typeof subLocalKey === "undefined") {
                    return;
                }
                var subscription = _this.subscriptionsList[subLocalKey];
                if (typeof subscription !== "object") {
                    return;
                }
                var expectedNewLength = subscription.trackedServers.length - 1;
                subscription.trackedServers = subscription.trackedServers.filter(function (server) {
                    if (server.subscriptionId === msg.subscription_id) {
                        subscription.queued.closers.push(server.serverId);
                        return false;
                    }
                    else {
                        return true;
                    }
                });
                if (subscription.trackedServers.length !== expectedNewLength) {
                    return;
                }
                if (subscription.trackedServers.length <= 0) {
                    _this.timedCache.add(subscription);
                    clearTimeout(subscription.timeoutId);
                    _this.callOnClosedHandlers(subscription);
                    delete _this.subscriptionsList[subLocalKey];
                }
                delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];
            };
            session.on("subscribed", this.handleSubscribed);
            session.on("event", this.handleEventData);
            session.on("subscription-cancelled", this.handleSubscriptionCancelled);
        }
        ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {
            var _this = this;
            if (targetServers.length === 0) {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED$1 + " No available servers matched the target params.",
                });
                return;
            }
            var subLocalKey = this.getNextSubscriptionLocalKey();
            var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);
            if (typeof pendingSub !== "object") {
                error({
                    method: streamingMethod,
                    called_with: params.arguments,
                    message: ERR_MSG_SUB_FAILED$1 + " Unable to register the user callbacks.",
                });
                return;
            }
            targetServers.forEach(function (target) {
                var serverId = target.server.id;
                var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });
                if (!method) {
                    _this.logger.error("can not find method " + streamingMethod.name + " for target " + target.server.id);
                    return;
                }
                pendingSub.trackedServers.push({
                    serverId: serverId,
                    subscriptionId: undefined,
                });
                var msg = {
                    type: "subscribe",
                    server_id: serverId,
                    method_id: method.gatewayId,
                    arguments_kv: params.arguments,
                };
                _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })
                    .then(function (m) { return _this.handleSubscribed(m); })
                    .catch(function (err) { return _this.handleErrorSubscribing(err); });
            });
        };
        ClientStreaming.prototype.drainSubscriptions = function () {
            var existing = Object.values(this.subscriptionsList);
            this.subscriptionsList = {};
            this.subscriptionIdToLocalKeyMap = {};
            return existing;
        };
        ClientStreaming.prototype.drainSubscriptionsCache = function () {
            return this.timedCache.flush();
        };
        ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {
            var current = this.nextSubLocalKey;
            this.nextSubLocalKey += 1;
            return current;
        };
        ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {
            var _this = this;
            var subsInfo = {
                localKey: subLocalKey,
                status: STATUS_AWAITING_ACCEPT$1,
                method: method,
                params: params,
                success: success,
                error: error,
                trackedServers: [],
                handlers: {
                    onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],
                    onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],
                    onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],
                },
                queued: {
                    data: [],
                    closers: [],
                },
                timeoutId: undefined,
                close: function () { return _this.closeSubscription(subLocalKey); },
                subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription
            };
            if (!existingSub) {
                if (params.onData) {
                    subsInfo.handlers.onData.push(params.onData);
                }
                if (params.onClosed) {
                    subsInfo.handlers.onClosed.push(params.onClosed);
                }
                if (params.onConnected) {
                    subsInfo.handlers.onConnected.push(params.onConnected);
                }
            }
            this.subscriptionsList[subLocalKey] = subsInfo;
            subsInfo.timeoutId = setTimeout(function () {
                if (_this.subscriptionsList[subLocalKey] === undefined) {
                    return;
                }
                var pendingSub = _this.subscriptionsList[subLocalKey];
                if (pendingSub.status === STATUS_AWAITING_ACCEPT$1) {
                    error({
                        method: method,
                        called_with: params.arguments,
                        message: ERR_MSG_SUB_FAILED$1 + " Subscription attempt timed out after " + timeout + " ms.",
                    });
                    delete _this.subscriptionsList[subLocalKey];
                }
                else if (pendingSub.status === STATUS_SUBSCRIBED$1 && pendingSub.trackedServers.length > 0) {
                    pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {
                        return (typeof server.subscriptionId !== "undefined");
                    });
                    delete pendingSub.timeoutId;
                    if (pendingSub.trackedServers.length <= 0) {
                        _this.callOnClosedHandlers(pendingSub);
                        delete _this.subscriptionsList[subLocalKey];
                    }
                }
            }, timeout);
            return subsInfo;
        };
        ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {
            var closersCount = subscription.queued.closers.length;
            var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;
            var closingServer;
            if (closingServerId !== undefined && typeof closingServerId === "string") {
                closingServer = this.repository.getServerById(closingServerId).instance;
            }
            subscription.handlers.onClosed.forEach(function (callback) {
                if (typeof callback !== "function") {
                    return;
                }
                callback({
                    message: reason || ON_CLOSE_MSG_SERVER_INIT$1,
                    requestArguments: subscription.params.arguments || {},
                    server: closingServer,
                    stream: subscription.method,
                });
            });
        };
        ClientStreaming.prototype.closeSubscription = function (subLocalKey) {
            var _this = this;
            var subscription = this.subscriptionsList[subLocalKey];
            if (typeof subscription !== "object") {
                return;
            }
            subscription.trackedServers.forEach(function (server) {
                if (typeof server.subscriptionId === "undefined") {
                    return;
                }
                subscription.queued.closers.push(server.serverId);
                _this.session.sendFireAndForget({
                    type: "unsubscribe",
                    subscription_id: server.subscriptionId,
                    reason_uri: "",
                    reason: ON_CLOSE_MSG_CLIENT_INIT$1,
                });
                delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];
            });
            subscription.trackedServers = [];
            this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT$1);
            delete this.subscriptionsList[subLocalKey];
        };
        return ClientStreaming;
    }());

    var ClientProtocol$1 = (function () {
        function ClientProtocol(session, repository, logger) {
            var _this = this;
            this.session = session;
            this.repository = repository;
            this.logger = logger;
            session.on("peer-added", function (msg) { return _this.handlePeerAdded(msg); });
            session.on("peer-removed", function (msg) { return _this.handlePeerRemoved(msg); });
            session.on("methods-added", function (msg) { return _this.handleMethodsAddedMessage(msg); });
            session.on("methods-removed", function (msg) { return _this.handleMethodsRemovedMessage(msg); });
            this.streaming = new ClientStreaming$1(session, repository, logger);
        }
        ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {
            this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);
        };
        ClientProtocol.prototype.invoke = function (id, method, args, target) {
            var _this = this;
            var serverId = target.id;
            var methodId = method.gatewayId;
            var msg = {
                type: "call",
                server_id: serverId,
                method_id: methodId,
                arguments_kv: args,
            };
            return this.session.send(msg, { invocationId: id, serverId: serverId })
                .then(function (m) { return _this.handleResultMessage(m); })
                .catch(function (err) { return _this.handleInvocationError(err); });
        };
        ClientProtocol.prototype.drainSubscriptions = function () {
            return this.streaming.drainSubscriptions();
        };
        ClientProtocol.prototype.drainSubscriptionsCache = function () {
            return this.streaming.drainSubscriptionsCache();
        };
        ClientProtocol.prototype.handlePeerAdded = function (msg) {
            var newPeerId = msg.new_peer_id;
            var remoteId = msg.identity;
            var isLocal = msg.meta ? msg.meta.local : true;
            var pid = Number(remoteId.process);
            var serverInfo = {
                machine: remoteId.machine,
                pid: isNaN(pid) ? remoteId.process : pid,
                instance: remoteId.instance,
                application: remoteId.application,
                applicationName: remoteId.applicationName,
                environment: remoteId.environment,
                region: remoteId.region,
                user: remoteId.user,
                windowId: remoteId.windowId,
                peerId: newPeerId,
                api: remoteId.api,
                isLocal: isLocal
            };
            this.repository.addServer(serverInfo, newPeerId);
        };
        ClientProtocol.prototype.handlePeerRemoved = function (msg) {
            var removedPeerId = msg.removed_id;
            var reason = msg.reason;
            this.repository.removeServerById(removedPeerId, reason);
        };
        ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methods = msg.methods;
            methods.forEach(function (method) {
                _this.repository.addServerMethod(serverId, method);
            });
        };
        ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {
            var _this = this;
            var serverId = msg.server_id;
            var methodIdList = msg.methods;
            var server = this.repository.getServerById(serverId);
            var serverMethodKeys = Object.keys(server.methods);
            serverMethodKeys.forEach(function (methodKey) {
                var method = server.methods[methodKey];
                if (methodIdList.indexOf(method.gatewayId) > -1) {
                    _this.repository.removeServerMethod(serverId, methodKey);
                }
            });
        };
        ClientProtocol.prototype.handleResultMessage = function (msg) {
            var invocationId = msg._tag.invocationId;
            var result = msg.result;
            var serverId = msg._tag.serverId;
            var server = this.repository.getServerById(serverId);
            return {
                invocationId: invocationId,
                result: result,
                instance: server.instance,
                status: InvokeStatus$1.Success,
                message: ""
            };
        };
        ClientProtocol.prototype.handleInvocationError = function (msg) {
            this.logger.debug("handle invocation error " + JSON.stringify(msg));
            if ("_tag" in msg) {
                var invocationId = msg._tag.invocationId;
                var serverId = msg._tag.serverId;
                var server = this.repository.getServerById(serverId);
                var message = msg.reason;
                var context_1 = msg.context;
                return {
                    invocationId: invocationId,
                    result: context_1,
                    instance: server.instance,
                    status: InvokeStatus$1.Error,
                    message: message
                };
            }
            else {
                return {
                    invocationId: "",
                    message: msg.message,
                    status: InvokeStatus$1.Error,
                    error: msg
                };
            }
        };
        return ClientProtocol;
    }());

    function gW3ProtocolFactory$1 (instance, connection, clientRepository, serverRepository, libConfig, interop) {
        var logger = libConfig.logger.subLogger("gw3-protocol");
        var resolveReadyPromise;
        var readyPromise = new Promise(function (resolve) {
            resolveReadyPromise = resolve;
        });
        var session = connection.domain("agm", ["subscribed"]);
        var server = new ServerProtocol$1(session, clientRepository, serverRepository, logger.subLogger("server"));
        var client = new ClientProtocol$1(session, clientRepository, logger.subLogger("client"));
        function handleReconnect() {
            return __awaiter$2(this, void 0, void 0, function () {
                var reconnectionPromises, existingSubscriptions, _loop_1, _i, existingSubscriptions_1, sub, registeredMethods, _loop_2, _a, registeredMethods_1, method;
                return __generator$1(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            logger.info("reconnected - will replay registered methods and subscriptions");
                            client.drainSubscriptionsCache().forEach(function (sub) {
                                var methodInfo = sub.method;
                                var params = Object.assign({}, sub.params);
                                logger.info("trying to soft-re-subscribe to method " + methodInfo.name + ", with params: " + JSON.stringify(params));
                                interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info("soft-subscribing to method " + methodInfo.name + " DONE"); }).catch(function (error) { return logger.warn("subscribing to method " + methodInfo.name + " failed: " + JSON.stringify(error) + "}"); });
                            });
                            reconnectionPromises = [];
                            existingSubscriptions = client.drainSubscriptions();
                            _loop_1 = function (sub) {
                                var methodInfo = sub.method;
                                var params = Object.assign({}, sub.params);
                                logger.info("trying to re-subscribe to method " + methodInfo.name + ", with params: " + JSON.stringify(params));
                                reconnectionPromises.push(interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(function () { return logger.info("subscribing to method " + methodInfo.name + " DONE"); }));
                            };
                            for (_i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {
                                sub = existingSubscriptions_1[_i];
                                _loop_1(sub);
                            }
                            registeredMethods = serverRepository.getList();
                            serverRepository.reset();
                            _loop_2 = function (method) {
                                var def = method.definition;
                                logger.info("re-publishing method " + def.name);
                                if (method.stream) {
                                    reconnectionPromises.push(interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                else if (method.theFunction && method.theFunction.userCallback) {
                                    reconnectionPromises.push(interop.register(def, method.theFunction.userCallback).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                else if (method.theFunction && method.theFunction.userCallbackAsync) {
                                    reconnectionPromises.push(interop.registerAsync(def, method.theFunction.userCallbackAsync).then(function () { return logger.info("subscribing to method " + def.name + " DONE"); }));
                                }
                                logger.info("re-publishing method " + def.name + " DONE");
                            };
                            for (_a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {
                                method = registeredMethods_1[_a];
                                _loop_2(method);
                            }
                            return [4, Promise.all(reconnectionPromises)];
                        case 1:
                            _b.sent();
                            logger.info("Interop is re-announced");
                            return [2];
                    }
                });
            });
        }
        function handleInitialJoin() {
            if (resolveReadyPromise) {
                resolveReadyPromise({
                    client: client,
                    server: server,
                });
                resolveReadyPromise = undefined;
            }
        }
        session.onJoined(function (reconnect) {
            clientRepository.addServer(instance, connection.peerId);
            if (reconnect) {
                handleReconnect().then(function () { return connection.setLibReAnnounced({ name: "interop" }); }).catch(function (error) { return logger.warn("Error while re-announcing interop: " + JSON.stringify(error)); });
            }
            else {
                handleInitialJoin();
            }
        });
        session.onLeft(function () {
            clientRepository.reset();
        });
        session.join();
        return readyPromise;
    }

    var Interop$1 = (function () {
        function Interop(configuration) {
            var _this = this;
            if (typeof configuration === "undefined") {
                throw new Error("configuration is required");
            }
            if (typeof configuration.connection === "undefined") {
                throw new Error("configuration.connections is required");
            }
            var connection = configuration.connection;
            if (typeof configuration.methodResponseTimeout !== "number") {
                configuration.methodResponseTimeout = 30 * 1000;
            }
            if (typeof configuration.waitTimeoutMs !== "number") {
                configuration.waitTimeoutMs = 30 * 1000;
            }
            this.unwrappedInstance = new InstanceWrapper$1(this, undefined, connection);
            this.instance = this.unwrappedInstance.unwrap();
            this.clientRepository = new ClientRepository$1(configuration.logger.subLogger("cRep"), this);
            this.serverRepository = new ServerRepository$1();
            var protocolPromise;
            if (connection.protocolVersion === 3) {
                protocolPromise = gW3ProtocolFactory$1(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);
            }
            else {
                throw new Error("protocol " + connection.protocolVersion + " not supported");
            }
            this.readyPromise = protocolPromise.then(function (protocol) {
                _this.protocol = protocol;
                _this.client = new Client$1(_this.protocol, _this.clientRepository, _this.instance, configuration);
                _this.server = new Server$1(_this.protocol, _this.serverRepository);
                return _this;
            });
        }
        Interop.prototype.ready = function () {
            return this.readyPromise;
        };
        Interop.prototype.serverRemoved = function (callback) {
            return this.client.serverRemoved(callback);
        };
        Interop.prototype.serverAdded = function (callback) {
            return this.client.serverAdded(callback);
        };
        Interop.prototype.serverMethodRemoved = function (callback) {
            return this.client.serverMethodRemoved(callback);
        };
        Interop.prototype.serverMethodAdded = function (callback) {
            return this.client.serverMethodAdded(callback);
        };
        Interop.prototype.methodRemoved = function (callback) {
            return this.client.methodRemoved(callback);
        };
        Interop.prototype.methodAdded = function (callback) {
            return this.client.methodAdded(callback);
        };
        Interop.prototype.methodsForInstance = function (instance) {
            return this.client.methodsForInstance(instance);
        };
        Interop.prototype.methods = function (methodFilter) {
            return this.client.methods(methodFilter);
        };
        Interop.prototype.servers = function (methodFilter) {
            return this.client.servers(methodFilter);
        };
        Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {
            return this.client.subscribe(method, options, successCallback, errorCallback);
        };
        Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {
            return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);
        };
        Interop.prototype.unregister = function (methodFilter) {
            return this.server.unregister(methodFilter);
        };
        Interop.prototype.registerAsync = function (methodDefinition, callback) {
            return this.server.registerAsync(methodDefinition, callback);
        };
        Interop.prototype.register = function (methodDefinition, callback) {
            return this.server.register(methodDefinition, callback);
        };
        Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {
            return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);
        };
        Interop.prototype.waitForMethod = function (name) {
            var pw = new PromiseWrapper$1();
            var unsubscribe = this.client.methodAdded(function (m) {
                if (m.name === name) {
                    unsubscribe();
                    pw.resolve(m);
                }
            });
            return pw.promise;
        };
        return Interop;
    }());

    var successMessages$1 = ["subscribed", "success"];
    var MessageBus$1 = (function () {
        function MessageBus(connection, logger) {
            var _this = this;
            this.publish = function (topic, data, options) {
                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                var args = _this.removeEmptyValues({
                    type: "publish",
                    topic: topic,
                    data: data,
                    peer_id: _this.peerId,
                    routing_key: routingKey,
                    target_identity: target
                });
                _this.session.send(args);
            };
            this.subscribe = function (topic, callback, options) {
                return new Promise(function (resolve, reject) {
                    var _a = options || {}, routingKey = _a.routingKey, target = _a.target;
                    var args = _this.removeEmptyValues({
                        type: "subscribe",
                        topic: topic,
                        peer_id: _this.peerId,
                        routing_key: routingKey,
                        source: target
                    });
                    _this.session.send(args)
                        .then(function (response) {
                        var subscription_id = response.subscription_id;
                        _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });
                        resolve({
                            unsubscribe: function () {
                                _this.session.send({ type: "unsubscribe", subscription_id: subscription_id, peer_id: _this.peerId });
                                _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });
                                return Promise.resolve();
                            }
                        });
                    })
                        .catch(function (error) { return reject(error); });
                });
            };
            this.watchOnEvent = function () {
                _this.session.on("event", function (args) {
                    var data = args.data, subscription_id = args.subscription_id;
                    var source = args["publisher-identity"];
                    var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });
                    if (subscription) {
                        if (!subscription.source) {
                            subscription.callback(data, subscription.topic, source);
                        }
                        else {
                            if (_this.keysMatch(subscription.source, source)) {
                                subscription.callback(data, subscription.topic, source);
                            }
                        }
                    }
                });
            };
            this.connection = connection;
            this.logger = logger;
            this.peerId = connection.peerId;
            this.subscriptions = [];
            this.session = connection.domain("bus", successMessages$1);
            this.readyPromise = this.session.join();
            this.readyPromise.then(function () {
                _this.watchOnEvent();
            });
        }
        MessageBus.prototype.ready = function () {
            return this.readyPromise;
        };
        MessageBus.prototype.removeEmptyValues = function (obj) {
            var cleaned = {};
            Object.keys(obj).forEach(function (key) {
                if (obj[key] !== undefined && obj[key] !== null) {
                    cleaned[key] = obj[key];
                }
            });
            return cleaned;
        };
        MessageBus.prototype.keysMatch = function (obj1, obj2) {
            var keysObj1 = Object.keys(obj1);
            var allMatch = true;
            keysObj1.forEach(function (key) {
                if (obj1[key] !== obj2[key]) {
                    allMatch = false;
                }
            });
            return allMatch;
        };
        return MessageBus;
    }());

    var GlueCore$1 = function (userConfig, ext) {
        var gdVersion = Utils$1.getGDMajorVersion();
        var glue42gd;
        var preloadPromise = Promise.resolve();
        if (gdVersion) {
            if (gdVersion < 3) {
                throw new Error("GD v2 is not supported. Use v4 of the API to run in that context.");
            }
            else if (gdVersion >= 3) {
                glue42gd = window.glue42gd;
                preloadPromise = window.gdPreloadPromise || preloadPromise;
            }
        }
        var glueInitTimer = timer$1("glue");
        userConfig = userConfig || {};
        ext = ext || {};
        var internalConfig = prepareConfig$1(userConfig, ext, glue42gd);
        var _connection;
        var _interop;
        var _logger;
        var _metrics;
        var _contexts;
        var _bus;
        var _allowTrace;
        var libs = {};
        function registerLib(name, inner, t) {
            _allowTrace = _logger.canPublish("trace");
            if (_allowTrace) {
                _logger.trace("registering " + name + " module");
            }
            var done = function () {
                inner.initTime = t.stop();
                inner.initEndTime = t.endTime;
                inner.marks = t.marks;
                if (_allowTrace) {
                    _logger.trace(name + " is ready - " + (t.endTime - t.startTime));
                }
            };
            inner.initStartTime = t.startTime;
            if (inner.ready) {
                inner.ready().then(function () {
                    done();
                });
            }
            else {
                done();
            }
            if (!Array.isArray(name)) {
                name = [name];
            }
            name.forEach(function (n) {
                libs[n] = inner;
                GlueCore$1[n] = inner;
            });
        }
        function setupConnection() {
            var initTimer = timer$1("connection");
            _connection = new Connection$1(internalConfig.connection, _logger.subLogger("connection"));
            var authPromise = Promise.resolve(internalConfig.auth);
            if (internalConfig.connection && !internalConfig.auth) {
                if (glue42gd) {
                    authPromise = glue42gd.getGWToken()
                        .then(function (token) {
                        return {
                            gatewayToken: token
                        };
                    });
                }
                else if (typeof window !== "undefined" && (window === null || window === void 0 ? void 0 : window.glue42electron)) {
                    if (typeof window.glue42electron.gwToken === "string") {
                        authPromise = Promise.resolve({
                            gatewayToken: window.glue42electron.gwToken
                        });
                    }
                }
                else {
                    authPromise = Promise.reject("You need to provide auth information");
                }
            }
            return authPromise
                .then(function (authConfig) {
                initTimer.mark("auth-promise-resolved");
                var authRequest;
                if (Object.prototype.toString.call(authConfig) === "[object Object]") {
                    authRequest = authConfig;
                }
                else {
                    throw new Error("Invalid auth object - " + JSON.stringify(authConfig));
                }
                return _connection.login(authRequest);
            })
                .then(function () {
                registerLib("connection", _connection, initTimer);
                return internalConfig;
            })
                .catch(function (e) {
                if (_connection) {
                    _connection.logout();
                }
                throw e;
            });
        }
        function setupLogger() {
            var _a;
            var initTimer = timer$1("logger");
            _logger = new Logger$1("" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);
            _logger.consoleLevel(internalConfig.logger.console);
            _logger.publishLevel(internalConfig.logger.publish);
            if (_logger.canPublish("debug")) {
                _logger.debug("initializing glue...");
            }
            registerLib("logger", _logger, initTimer);
            return Promise.resolve(undefined);
        }
        function setupMetrics() {
            var _a, _b, _c, _d, _e;
            var initTimer = timer$1("metrics");
            var config = internalConfig.metrics;
            var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;
            var identity = internalConfig.connection.identity;
            var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };
            var disableAutoAppSystem = (_a = (typeof config !== "boolean" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;
            _metrics = metrics$1({
                connection: config ? _connection : undefined,
                logger: _logger.subLogger("metrics"),
                canUpdateMetric: canUpdateMetric,
                system: "Glue42",
                service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,
                instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid$3(),
                disableAutoAppSystem: disableAutoAppSystem,
                pagePerformanceMetrics: typeof config !== "boolean" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined
            });
            registerLib("metrics", _metrics, initTimer);
            return Promise.resolve();
        }
        function setupInterop() {
            var initTimer = timer$1("interop");
            var agmConfig = {
                connection: _connection,
                logger: _logger.subLogger("interop"),
            };
            _interop = new Interop$1(agmConfig);
            Logger$1.Interop = _interop;
            registerLib(["interop", "agm"], _interop, initTimer);
            return Promise.resolve();
        }
        function setupContexts() {
            var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);
            var needsContexts = internalConfig.contexts || hasActivities;
            if (needsContexts) {
                var initTimer = timer$1("contexts");
                _contexts = new ContextsModule$1({
                    connection: _connection,
                    logger: _logger.subLogger("contexts"),
                    trackAllContexts: typeof internalConfig.contexts === "object" ? internalConfig.contexts.trackAllContexts : false,
                    reAnnounceKnownContexts: typeof internalConfig.contexts === "object" ? internalConfig.contexts.reAnnounceKnownContexts : false
                });
                registerLib("contexts", _contexts, initTimer);
                return _contexts;
            }
            else {
                var replayer = _connection.replayer;
                if (replayer) {
                    replayer.drain(ContextMessageReplaySpec$1.name);
                }
            }
        }
        function setupBus() {
            return __awaiter$2(this, void 0, void 0, function () {
                var initTimer;
                return __generator$1(this, function (_a) {
                    if (!internalConfig.bus) {
                        return [2, Promise.resolve()];
                    }
                    initTimer = timer$1("bus");
                    _bus = new MessageBus$1(_connection, _logger.subLogger("bus"));
                    registerLib("bus", _bus, initTimer);
                    return [2, Promise.resolve()];
                });
            });
        }
        function setupExternalLibs(externalLibs) {
            try {
                externalLibs.forEach(function (lib) {
                    setupExternalLib(lib.name, lib.create);
                });
                return Promise.resolve();
            }
            catch (e) {
                return Promise.reject(e);
            }
        }
        function setupExternalLib(name, createCallback) {
            var initTimer = timer$1(name);
            var lib = createCallback(libs);
            if (lib) {
                registerLib(name, lib, initTimer);
            }
        }
        function waitForLibs() {
            var libsReadyPromises = Object.keys(libs).map(function (key) {
                var lib = libs[key];
                return lib.ready ?
                    lib.ready() : Promise.resolve();
            });
            return Promise.all(libsReadyPromises);
        }
        function constructGlueObject() {
            var feedbackFunc = function (feedbackInfo) {
                if (!_interop) {
                    return;
                }
                _interop.invoke("T42.ACS.Feedback", feedbackInfo, "best");
            };
            var info = {
                coreVersion: version$4,
                version: internalConfig.version
            };
            glueInitTimer.stop();
            var glue = {
                feedback: feedbackFunc,
                info: info,
                logger: _logger,
                interop: _interop,
                agm: _interop,
                connection: _connection,
                metrics: _metrics,
                contexts: _contexts,
                bus: _bus,
                version: internalConfig.version,
                userConfig: userConfig,
                done: function () {
                    _logger === null || _logger === void 0 ? void 0 : _logger.info("done called by user...");
                    return _connection.logout();
                }
            };
            glue.performance = {
                get glueVer() {
                    return internalConfig.version;
                },
                get glueConfig() {
                    return JSON.stringify(userConfig);
                },
                get browser() {
                    return window.performance.timing.toJSON();
                },
                get memory() {
                    return window.performance.memory;
                },
                get initTimes() {
                    var all = getAllTimers$1();
                    return Object.keys(all).map(function (key) {
                        var t = all[key];
                        return {
                            name: key,
                            duration: t.endTime - t.startTime,
                            marks: t.marks,
                            startTime: t.startTime,
                            endTime: t.endTime
                        };
                    });
                }
            };
            Object.keys(libs).forEach(function (key) {
                var lib = libs[key];
                glue[key] = lib;
            });
            glue.config = {};
            Object.keys(internalConfig).forEach(function (k) {
                glue.config[k] = internalConfig[k];
            });
            if (ext && ext.extOptions) {
                Object.keys(ext.extOptions).forEach(function (k) {
                    glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];
                });
            }
            if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {
                ext.enrichGlue(glue);
            }
            if (glue42gd && glue42gd.updatePerfData) {
                glue42gd.updatePerfData(glue.performance);
            }
            if (glue.agm) {
                var deprecatedDecorator = function (fn, wrong, proper) {
                    return function () {
                        glue.logger.warn("glue.js - 'glue.agm." + wrong + "' method is deprecated, use 'glue.interop." + proper + "' instead.");
                        return fn.apply(glue.agm, arguments);
                    };
                };
                var agmAny = glue.agm;
                agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, "method_added", "methodAdded");
                agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, "method_removed", "methodRemoved");
                agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, "server_added", "serverAdded");
                agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, "server_method_aded", "serverMethodAdded");
                agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, "server_method_removed", "serverMethodRemoved");
            }
            return glue;
        }
        function registerInstanceIfNeeded() {
            return __awaiter$2(this, void 0, void 0, function () {
                var RegisterInstanceMethodName, isMethodAvailable, error_1, typedError;
                return __generator$1(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            RegisterInstanceMethodName = "T42.ACS.RegisterInstance";
                            if (!(Utils$1.isNode() && typeof process.env._GD_STARTING_CONTEXT_ === "undefined" && typeof (userConfig === null || userConfig === void 0 ? void 0 : userConfig.application) !== "undefined")) return [3, 4];
                            isMethodAvailable = _interop.methods({ name: RegisterInstanceMethodName }).length > 0;
                            if (!isMethodAvailable) return [3, 4];
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4, _interop.invoke(RegisterInstanceMethodName, { appName: userConfig === null || userConfig === void 0 ? void 0 : userConfig.application, pid: process.pid })];
                        case 2:
                            _a.sent();
                            return [3, 4];
                        case 3:
                            error_1 = _a.sent();
                            typedError = error_1;
                            _logger.error("Cannot register as an instance: " + JSON.stringify(typedError.message));
                            return [3, 4];
                        case 4: return [2];
                    }
                });
            });
        }
        return preloadPromise
            .then(setupLogger)
            .then(setupConnection)
            .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })
            .then(function () { return _interop.readyPromise; })
            .then(function () { return registerInstanceIfNeeded(); })
            .then(function () {
            return setupExternalLibs(internalConfig.libs || []);
        })
            .then(waitForLibs)
            .then(constructGlueObject)
            .catch(function (err) {
            return Promise.reject({
                err: err,
                libs: libs
            });
        });
    };
    if (typeof window !== "undefined") {
        window.GlueCore = GlueCore$1;
    }
    GlueCore$1.version = version$4;
    GlueCore$1.default = GlueCore$1;

    const PromiseWrap$1 = (promise, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            let promiseActive = true;
            const timeout = setTimeout(() => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            promise()
                .then((result) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                if (!promiseActive) {
                    return;
                }
                promiseActive = false;
                clearTimeout(timeout);
                reject(error);
            });
        });
    };
    const PromisePlus$3 = (executor, timeoutMilliseconds, timeoutMessage) => {
        return new Promise((resolve, reject) => {
            const timeout = setTimeout(() => {
                const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;
                reject(message);
            }, timeoutMilliseconds);
            const providedPromise = new Promise(executor);
            providedPromise
                .then((result) => {
                clearTimeout(timeout);
                resolve(result);
            })
                .catch((error) => {
                clearTimeout(timeout);
                reject(error);
            });
        });
    };

    var toStr = Object.prototype.toString;

    var isArguments = function isArguments(value) {
    	var str = toStr.call(value);
    	var isArgs = str === '[object Arguments]';
    	if (!isArgs) {
    		isArgs = str !== '[object Array]' &&
    			value !== null &&
    			typeof value === 'object' &&
    			typeof value.length === 'number' &&
    			value.length >= 0 &&
    			toStr.call(value.callee) === '[object Function]';
    	}
    	return isArgs;
    };

    var keysShim;
    if (!Object.keys) {
    	// modified from https://github.com/es-shims/es5-shim
    	var has = Object.prototype.hasOwnProperty;
    	var toStr$1 = Object.prototype.toString;
    	var isArgs = isArguments; // eslint-disable-line global-require
    	var isEnumerable = Object.prototype.propertyIsEnumerable;
    	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
    	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
    	var dontEnums = [
    		'toString',
    		'toLocaleString',
    		'valueOf',
    		'hasOwnProperty',
    		'isPrototypeOf',
    		'propertyIsEnumerable',
    		'constructor'
    	];
    	var equalsConstructorPrototype = function (o) {
    		var ctor = o.constructor;
    		return ctor && ctor.prototype === o;
    	};
    	var excludedKeys = {
    		$applicationCache: true,
    		$console: true,
    		$external: true,
    		$frame: true,
    		$frameElement: true,
    		$frames: true,
    		$innerHeight: true,
    		$innerWidth: true,
    		$onmozfullscreenchange: true,
    		$onmozfullscreenerror: true,
    		$outerHeight: true,
    		$outerWidth: true,
    		$pageXOffset: true,
    		$pageYOffset: true,
    		$parent: true,
    		$scrollLeft: true,
    		$scrollTop: true,
    		$scrollX: true,
    		$scrollY: true,
    		$self: true,
    		$webkitIndexedDB: true,
    		$webkitStorageInfo: true,
    		$window: true
    	};
    	var hasAutomationEqualityBug = (function () {
    		/* global window */
    		if (typeof window === 'undefined') { return false; }
    		for (var k in window) {
    			try {
    				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
    					try {
    						equalsConstructorPrototype(window[k]);
    					} catch (e) {
    						return true;
    					}
    				}
    			} catch (e) {
    				return true;
    			}
    		}
    		return false;
    	}());
    	var equalsConstructorPrototypeIfNotBuggy = function (o) {
    		/* global window */
    		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
    			return equalsConstructorPrototype(o);
    		}
    		try {
    			return equalsConstructorPrototype(o);
    		} catch (e) {
    			return false;
    		}
    	};

    	keysShim = function keys(object) {
    		var isObject = object !== null && typeof object === 'object';
    		var isFunction = toStr$1.call(object) === '[object Function]';
    		var isArguments = isArgs(object);
    		var isString = isObject && toStr$1.call(object) === '[object String]';
    		var theKeys = [];

    		if (!isObject && !isFunction && !isArguments) {
    			throw new TypeError('Object.keys called on a non-object');
    		}

    		var skipProto = hasProtoEnumBug && isFunction;
    		if (isString && object.length > 0 && !has.call(object, 0)) {
    			for (var i = 0; i < object.length; ++i) {
    				theKeys.push(String(i));
    			}
    		}

    		if (isArguments && object.length > 0) {
    			for (var j = 0; j < object.length; ++j) {
    				theKeys.push(String(j));
    			}
    		} else {
    			for (var name in object) {
    				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
    					theKeys.push(String(name));
    				}
    			}
    		}

    		if (hasDontEnumBug) {
    			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

    			for (var k = 0; k < dontEnums.length; ++k) {
    				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
    					theKeys.push(dontEnums[k]);
    				}
    			}
    		}
    		return theKeys;
    	};
    }
    var implementation = keysShim;

    var slice = Array.prototype.slice;


    var origKeys = Object.keys;
    var keysShim$1 = origKeys ? function keys(o) { return origKeys(o); } : implementation;

    var originalKeys = Object.keys;

    keysShim$1.shim = function shimObjectKeys() {
    	if (Object.keys) {
    		var keysWorksWithArguments = (function () {
    			// Safari 5.0 bug
    			var args = Object.keys(arguments);
    			return args && args.length === arguments.length;
    		}(1, 2));
    		if (!keysWorksWithArguments) {
    			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
    				if (isArguments(object)) {
    					return originalKeys(slice.call(object));
    				}
    				return originalKeys(object);
    			};
    		}
    	} else {
    		Object.keys = keysShim$1;
    	}
    	return Object.keys || keysShim$1;
    };

    var objectKeys = keysShim$1;

    /* eslint complexity: [2, 18], max-statements: [2, 33] */
    var shams = function hasSymbols() {
    	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
    	if (typeof Symbol.iterator === 'symbol') { return true; }

    	var obj = {};
    	var sym = Symbol('test');
    	var symObj = Object(sym);
    	if (typeof sym === 'string') { return false; }

    	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
    	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

    	// temp disabled per https://github.com/ljharb/object.assign/issues/17
    	// if (sym instanceof Symbol) { return false; }
    	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
    	// if (!(symObj instanceof Symbol)) { return false; }

    	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
    	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

    	var symVal = 42;
    	obj[sym] = symVal;
    	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax
    	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

    	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

    	var syms = Object.getOwnPropertySymbols(obj);
    	if (syms.length !== 1 || syms[0] !== sym) { return false; }

    	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

    	if (typeof Object.getOwnPropertyDescriptor === 'function') {
    		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
    		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
    	}

    	return true;
    };

    var origSymbol = commonjsGlobal.Symbol;


    var hasSymbols = function hasNativeSymbols() {
    	if (typeof origSymbol !== 'function') { return false; }
    	if (typeof Symbol !== 'function') { return false; }
    	if (typeof origSymbol('foo') !== 'symbol') { return false; }
    	if (typeof Symbol('bar') !== 'symbol') { return false; }

    	return shams();
    };

    /* eslint no-invalid-this: 1 */

    var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
    var slice$1 = Array.prototype.slice;
    var toStr$2 = Object.prototype.toString;
    var funcType = '[object Function]';

    var implementation$1 = function bind(that) {
        var target = this;
        if (typeof target !== 'function' || toStr$2.call(target) !== funcType) {
            throw new TypeError(ERROR_MESSAGE + target);
        }
        var args = slice$1.call(arguments, 1);

        var bound;
        var binder = function () {
            if (this instanceof bound) {
                var result = target.apply(
                    this,
                    args.concat(slice$1.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;
            } else {
                return target.apply(
                    that,
                    args.concat(slice$1.call(arguments))
                );
            }
        };

        var boundLength = Math.max(0, target.length - args.length);
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push('$' + i);
        }

        bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

        if (target.prototype) {
            var Empty = function Empty() {};
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            Empty.prototype = null;
        }

        return bound;
    };

    var functionBind = Function.prototype.bind || implementation$1;

    var src = functionBind.call(Function.call, Object.prototype.hasOwnProperty);

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$1;

    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
    	try {
    		$gOPD({}, '');
    	} catch (e) {
    		$gOPD = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError = function () {
    	throw new $TypeError();
    };
    var ThrowTypeError = $gOPD
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError;
    			}
    		}
    	}())
    	: throwTypeError;

    var hasSymbols$1 = hasSymbols();

    var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction = getEvalledConstructor('async function* () {}');
    var asyncGenFunctionPrototype = asyncGenFunction ? asyncGenFunction.prototype : undefined$1;
    var asyncGenPrototype = asyncGenFunctionPrototype ? asyncGenFunctionPrototype.prototype : undefined$1;

    var TypedArray = typeof Uint8Array === 'undefined' ? undefined$1 : getProto(Uint8Array);

    var INTRINSICS = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$1 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$1 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$1 ? getProto([][Symbol.iterator]()) : undefined$1,
    	'%AsyncFromSyncIteratorPrototype%': undefined$1,
    	'%AsyncFunction%': getEvalledConstructor('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype,
    	'%AsyncGeneratorFunction%': asyncGenFunction,
    	'%AsyncIteratorPrototype%': asyncGenPrototype ? getProto(asyncGenPrototype) : undefined$1,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$1 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$1 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$1 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$1 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$1 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$1 : FinalizationRegistry,
    	'%Function%': $Function,
    	'%GeneratorFunction%': getEvalledConstructor('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$1 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$1 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$1 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$1 ? getProto(getProto([][Symbol.iterator]())) : undefined$1,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$1,
    	'%Map%': typeof Map === 'undefined' ? undefined$1 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$1 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$1 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$1 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$1 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$1 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$1 ? getProto(''[Symbol.iterator]()) : undefined$1,
    	'%Symbol%': hasSymbols$1 ? Symbol : undefined$1,
    	'%SyntaxError%': $SyntaxError,
    	'%ThrowTypeError%': ThrowTypeError,
    	'%TypedArray%': TypedArray,
    	'%TypeError%': $TypeError,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$1 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$1 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$1 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$1 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$1 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$1 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$1 : WeakSet
    };

    var LEGACY_ALIASES = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace = functionBind.call(Function.call, String.prototype.replace);
    var $strSlice = functionBind.call(Function.call, String.prototype.slice);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath = function stringToPath(string) {
    	var first = $strSlice(string, 0, 1);
    	var last = $strSlice(string, -1);
    	if (first === '%' && last !== '%') {
    		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    	} else if (last === '%' && first !== '%') {
    		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    	}
    	var result = [];
    	$replace(string, rePropName, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES, intrinsicName)) {
    		alias = LEGACY_ALIASES[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS, intrinsicName)) {
    		var value = INTRINSICS[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
    };

    var getIntrinsic = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply(parts, $concat([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		var first = $strSlice(part, 0, 1);
    		var last = $strSlice(part, -1);
    		if (
    			(
    				(first === '"' || first === "'" || first === '`')
    				|| (last === '"' || last === "'" || last === '`')
    			)
    			&& first !== last
    		) {
    			throw new $SyntaxError('property names with quotes must have matching quotes');
    		}
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS, intrinsicRealName)) {
    			value = INTRINSICS[intrinsicRealName];
    		} else if (value != null) {
    			if (!(part in value)) {
    				if (!allowMissing) {
    					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				return void undefined$1;
    			}
    			if ($gOPD && (i + 1) >= parts.length) {
    				var desc = $gOPD(value, part);
    				isOwn = !!desc;

    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var callBind = createCommonjsModule$2(function (module) {




    var $apply = getIntrinsic('%Function.prototype.apply%');
    var $call = getIntrinsic('%Function.prototype.call%');
    var $reflectApply = getIntrinsic('%Reflect.apply%', true) || functionBind.call($call, $apply);

    var $gOPD = getIntrinsic('%Object.getOwnPropertyDescriptor%', true);
    var $defineProperty = getIntrinsic('%Object.defineProperty%', true);
    var $max = getIntrinsic('%Math.max%');

    if ($defineProperty) {
    	try {
    		$defineProperty({}, 'a', { value: 1 });
    	} catch (e) {
    		// IE 8 has a broken defineProperty
    		$defineProperty = null;
    	}
    }

    module.exports = function callBind(originalFunction) {
    	var func = $reflectApply(functionBind, $call, arguments);
    	if ($gOPD && $defineProperty) {
    		var desc = $gOPD(func, 'length');
    		if (desc.configurable) {
    			// original length, plus the receiver, minus any additional arguments (after the receiver)
    			$defineProperty(
    				func,
    				'length',
    				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
    			);
    		}
    	}
    	return func;
    };

    var applyBind = function applyBind() {
    	return $reflectApply(functionBind, $apply, arguments);
    };

    if ($defineProperty) {
    	$defineProperty(module.exports, 'apply', { value: applyBind });
    } else {
    	module.exports.apply = applyBind;
    }
    });

    var $indexOf = callBind(getIntrinsic('String.prototype.indexOf'));

    var callBound = function callBoundIntrinsic(name, allowMissing) {
    	var intrinsic = getIntrinsic(name, !!allowMissing);
    	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
    		return callBind(intrinsic);
    	}
    	return intrinsic;
    };

    var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';


    var $toString = callBound('Object.prototype.toString');

    var isStandardArguments = function isArguments(value) {
    	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
    		return false;
    	}
    	return $toString(value) === '[object Arguments]';
    };

    var isLegacyArguments = function isArguments(value) {
    	if (isStandardArguments(value)) {
    		return true;
    	}
    	return value !== null &&
    		typeof value === 'object' &&
    		typeof value.length === 'number' &&
    		value.length >= 0 &&
    		$toString(value) !== '[object Array]' &&
    		$toString(value.callee) === '[object Function]';
    };

    var supportsStandardArguments = (function () {
    	return isStandardArguments(arguments);
    }());

    isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

    var isArguments$1 = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

    var hasSymbols$2 = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

    var toStr$3 = Object.prototype.toString;
    var concat = Array.prototype.concat;
    var origDefineProperty = Object.defineProperty;

    var isFunction = function (fn) {
    	return typeof fn === 'function' && toStr$3.call(fn) === '[object Function]';
    };

    var arePropertyDescriptorsSupported = function () {
    	var obj = {};
    	try {
    		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
    		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
    		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
    			return false;
    		}
    		return obj.x === obj;
    	} catch (e) { /* this is IE 8. */
    		return false;
    	}
    };
    var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

    var defineProperty = function (object, name, value, predicate) {
    	if (name in object && (!isFunction(predicate) || !predicate())) {
    		return;
    	}
    	if (supportsDescriptors) {
    		origDefineProperty(object, name, {
    			configurable: true,
    			enumerable: false,
    			value: value,
    			writable: true
    		});
    	} else {
    		object[name] = value;
    	}
    };

    var defineProperties = function (object, map) {
    	var predicates = arguments.length > 2 ? arguments[2] : {};
    	var props = objectKeys(map);
    	if (hasSymbols$2) {
    		props = concat.call(props, Object.getOwnPropertySymbols(map));
    	}
    	for (var i = 0; i < props.length; i += 1) {
    		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
    	}
    };

    defineProperties.supportsDescriptors = !!supportsDescriptors;

    var defineProperties_1 = defineProperties;

    var numberIsNaN = function (value) {
    	return value !== value;
    };

    var implementation$2 = function is(a, b) {
    	if (a === 0 && b === 0) {
    		return 1 / a === 1 / b;
    	}
    	if (a === b) {
    		return true;
    	}
    	if (numberIsNaN(a) && numberIsNaN(b)) {
    		return true;
    	}
    	return false;
    };

    var polyfill = function getPolyfill() {
    	return typeof Object.is === 'function' ? Object.is : implementation$2;
    };

    var shim = function shimObjectIs() {
    	var polyfill$1 = polyfill();
    	defineProperties_1(Object, { is: polyfill$1 }, {
    		is: function testObjectIs() {
    			return Object.is !== polyfill$1;
    		}
    	});
    	return polyfill$1;
    };

    var polyfill$1 = callBind(polyfill(), Object);

    defineProperties_1(polyfill$1, {
    	getPolyfill: polyfill,
    	implementation: implementation$2,
    	shim: shim
    });

    var objectIs = polyfill$1;

    var hasSymbols$3 = hasSymbols();
    var hasToStringTag$1 = hasSymbols$3 && typeof Symbol.toStringTag === 'symbol';
    var hasOwnProperty;
    var regexExec;
    var isRegexMarker;
    var badStringifier;

    if (hasToStringTag$1) {
    	hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);
    	regexExec = Function.call.bind(RegExp.prototype.exec);
    	isRegexMarker = {};

    	var throwRegexMarker = function () {
    		throw isRegexMarker;
    	};
    	badStringifier = {
    		toString: throwRegexMarker,
    		valueOf: throwRegexMarker
    	};

    	if (typeof Symbol.toPrimitive === 'symbol') {
    		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
    	}
    }

    var toStr$4 = Object.prototype.toString;
    var gOPD = Object.getOwnPropertyDescriptor;
    var regexClass = '[object RegExp]';

    var isRegex = hasToStringTag$1
    	// eslint-disable-next-line consistent-return
    	? function isRegex(value) {
    		if (!value || typeof value !== 'object') {
    			return false;
    		}

    		var descriptor = gOPD(value, 'lastIndex');
    		var hasLastIndexDataProperty = descriptor && hasOwnProperty(descriptor, 'value');
    		if (!hasLastIndexDataProperty) {
    			return false;
    		}

    		try {
    			regexExec(value, badStringifier);
    		} catch (e) {
    			return e === isRegexMarker;
    		}
    	}
    	: function isRegex(value) {
    		// In older browsers, typeof regex incorrectly returns 'function'
    		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
    			return false;
    		}

    		return toStr$4.call(value) === regexClass;
    	};

    /* globals
    	Atomics,
    	SharedArrayBuffer,
    */

    var undefined$2;

    var $TypeError$1 = TypeError;

    var $gOPD$1 = Object.getOwnPropertyDescriptor;
    if ($gOPD$1) {
    	try {
    		$gOPD$1({}, '');
    	} catch (e) {
    		$gOPD$1 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$1 = function () { throw new $TypeError$1(); };
    var ThrowTypeError$1 = $gOPD$1
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$1;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$1(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$1;
    			}
    		}
    	}())
    	: throwTypeError$1;

    var hasSymbols$4 = hasSymbols();

    var getProto$1 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto
    var generatorFunction =  undefined$2;
    var asyncFunction =  undefined$2;
    var asyncGenFunction$1 =  undefined$2;

    var TypedArray$1 = typeof Uint8Array === 'undefined' ? undefined$2 : getProto$1(Uint8Array);

    var INTRINSICS$1 = {
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$2 : ArrayBuffer,
    	'%ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined$2 : ArrayBuffer.prototype,
    	'%ArrayIteratorPrototype%': hasSymbols$4 ? getProto$1([][Symbol.iterator]()) : undefined$2,
    	'%ArrayPrototype%': Array.prototype,
    	'%ArrayProto_entries%': Array.prototype.entries,
    	'%ArrayProto_forEach%': Array.prototype.forEach,
    	'%ArrayProto_keys%': Array.prototype.keys,
    	'%ArrayProto_values%': Array.prototype.values,
    	'%AsyncFromSyncIteratorPrototype%': undefined$2,
    	'%AsyncFunction%': asyncFunction,
    	'%AsyncFunctionPrototype%':  undefined$2,
    	'%AsyncGenerator%':  undefined$2,
    	'%AsyncGeneratorFunction%': asyncGenFunction$1,
    	'%AsyncGeneratorPrototype%':  undefined$2,
    	'%AsyncIteratorPrototype%':  undefined$2,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$2 : Atomics,
    	'%Boolean%': Boolean,
    	'%BooleanPrototype%': Boolean.prototype,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$2 : DataView,
    	'%DataViewPrototype%': typeof DataView === 'undefined' ? undefined$2 : DataView.prototype,
    	'%Date%': Date,
    	'%DatePrototype%': Date.prototype,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%ErrorPrototype%': Error.prototype,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%EvalErrorPrototype%': EvalError.prototype,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$2 : Float32Array,
    	'%Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined$2 : Float32Array.prototype,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$2 : Float64Array,
    	'%Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined$2 : Float64Array.prototype,
    	'%Function%': Function,
    	'%FunctionPrototype%': Function.prototype,
    	'%Generator%':  undefined$2,
    	'%GeneratorFunction%': generatorFunction,
    	'%GeneratorPrototype%':  undefined$2,
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$2 : Int8Array,
    	'%Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined$2 : Int8Array.prototype,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$2 : Int16Array,
    	'%Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined$2 : Int8Array.prototype,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$2 : Int32Array,
    	'%Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined$2 : Int32Array.prototype,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$4 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$2,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$2,
    	'%JSONParse%': typeof JSON === 'object' ? JSON.parse : undefined$2,
    	'%Map%': typeof Map === 'undefined' ? undefined$2 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$4 ? undefined$2 : getProto$1(new Map()[Symbol.iterator]()),
    	'%MapPrototype%': typeof Map === 'undefined' ? undefined$2 : Map.prototype,
    	'%Math%': Math,
    	'%Number%': Number,
    	'%NumberPrototype%': Number.prototype,
    	'%Object%': Object,
    	'%ObjectPrototype%': Object.prototype,
    	'%ObjProto_toString%': Object.prototype.toString,
    	'%ObjProto_valueOf%': Object.prototype.valueOf,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$2 : Promise,
    	'%PromisePrototype%': typeof Promise === 'undefined' ? undefined$2 : Promise.prototype,
    	'%PromiseProto_then%': typeof Promise === 'undefined' ? undefined$2 : Promise.prototype.then,
    	'%Promise_all%': typeof Promise === 'undefined' ? undefined$2 : Promise.all,
    	'%Promise_reject%': typeof Promise === 'undefined' ? undefined$2 : Promise.reject,
    	'%Promise_resolve%': typeof Promise === 'undefined' ? undefined$2 : Promise.resolve,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$2 : Proxy,
    	'%RangeError%': RangeError,
    	'%RangeErrorPrototype%': RangeError.prototype,
    	'%ReferenceError%': ReferenceError,
    	'%ReferenceErrorPrototype%': ReferenceError.prototype,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$2 : Reflect,
    	'%RegExp%': RegExp,
    	'%RegExpPrototype%': RegExp.prototype,
    	'%Set%': typeof Set === 'undefined' ? undefined$2 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$4 ? undefined$2 : getProto$1(new Set()[Symbol.iterator]()),
    	'%SetPrototype%': typeof Set === 'undefined' ? undefined$2 : Set.prototype,
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$2 : SharedArrayBuffer,
    	'%SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined$2 : SharedArrayBuffer.prototype,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$4 ? getProto$1(''[Symbol.iterator]()) : undefined$2,
    	'%StringPrototype%': String.prototype,
    	'%Symbol%': hasSymbols$4 ? Symbol : undefined$2,
    	'%SymbolPrototype%': hasSymbols$4 ? Symbol.prototype : undefined$2,
    	'%SyntaxError%': SyntaxError,
    	'%SyntaxErrorPrototype%': SyntaxError.prototype,
    	'%ThrowTypeError%': ThrowTypeError$1,
    	'%TypedArray%': TypedArray$1,
    	'%TypedArrayPrototype%': TypedArray$1 ? TypedArray$1.prototype : undefined$2,
    	'%TypeError%': $TypeError$1,
    	'%TypeErrorPrototype%': $TypeError$1.prototype,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$2 : Uint8Array,
    	'%Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined$2 : Uint8Array.prototype,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$2 : Uint8ClampedArray,
    	'%Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined$2 : Uint8ClampedArray.prototype,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$2 : Uint16Array,
    	'%Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined$2 : Uint16Array.prototype,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$2 : Uint32Array,
    	'%Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined$2 : Uint32Array.prototype,
    	'%URIError%': URIError,
    	'%URIErrorPrototype%': URIError.prototype,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$2 : WeakMap,
    	'%WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined$2 : WeakMap.prototype,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$2 : WeakSet,
    	'%WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined$2 : WeakSet.prototype
    };


    var $replace$1 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$1 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$1 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$1 = function stringToPath(string) {
    	var result = [];
    	$replace$1(string, rePropName$1, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$1(subString, reEscapeChar$1, '$1') : (number || match);
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$1 = function getBaseIntrinsic(name, allowMissing) {
    	if (!(name in INTRINSICS$1)) {
    		throw new SyntaxError('intrinsic ' + name + ' does not exist!');
    	}

    	// istanbul ignore if // hopefully this is impossible to test :-)
    	if (typeof INTRINSICS$1[name] === 'undefined' && !allowMissing) {
    		throw new $TypeError$1('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    	}

    	return INTRINSICS$1[name];
    };

    var GetIntrinsic = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new TypeError('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new TypeError('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$1(name);

    	var value = getBaseIntrinsic$1('%' + (parts.length > 0 ? parts[0] : '') + '%', allowMissing);
    	for (var i = 1; i < parts.length; i += 1) {
    		if (value != null) {
    			if ($gOPD$1 && (i + 1) >= parts.length) {
    				var desc = $gOPD$1(value, parts[i]);
    				if (!allowMissing && !(parts[i] in value)) {
    					throw new $TypeError$1('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				value = desc && 'get' in desc && !('originalValue' in desc.get) ? desc.get : value[parts[i]];
    			} else {
    				value = value[parts[i]];
    			}
    		}
    	}
    	return value;
    };

    var callBind$1 = createCommonjsModule$2(function (module) {





    var $apply = GetIntrinsic('%Function.prototype.apply%');
    var $call = GetIntrinsic('%Function.prototype.call%');
    var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || functionBind.call($call, $apply);

    var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

    if ($defineProperty) {
    	try {
    		$defineProperty({}, 'a', { value: 1 });
    	} catch (e) {
    		// IE 8 has a broken defineProperty
    		$defineProperty = null;
    	}
    }

    module.exports = function callBind() {
    	return $reflectApply(functionBind, $call, arguments);
    };

    var applyBind = function applyBind() {
    	return $reflectApply(functionBind, $apply, arguments);
    };

    if ($defineProperty) {
    	$defineProperty(module.exports, 'apply', { value: applyBind });
    } else {
    	module.exports.apply = applyBind;
    }
    });

    var $Object = Object;
    var $TypeError$2 = TypeError;

    var implementation$3 = function flags() {
    	if (this != null && this !== $Object(this)) {
    		throw new $TypeError$2('RegExp.prototype.flags getter called on non-object');
    	}
    	var result = '';
    	if (this.global) {
    		result += 'g';
    	}
    	if (this.ignoreCase) {
    		result += 'i';
    	}
    	if (this.multiline) {
    		result += 'm';
    	}
    	if (this.dotAll) {
    		result += 's';
    	}
    	if (this.unicode) {
    		result += 'u';
    	}
    	if (this.sticky) {
    		result += 'y';
    	}
    	return result;
    };

    var supportsDescriptors$1 = defineProperties_1.supportsDescriptors;
    var $gOPD$2 = Object.getOwnPropertyDescriptor;
    var $TypeError$3 = TypeError;

    var polyfill$2 = function getPolyfill() {
    	if (!supportsDescriptors$1) {
    		throw new $TypeError$3('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    	}
    	if ((/a/mig).flags === 'gim') {
    		var descriptor = $gOPD$2(RegExp.prototype, 'flags');
    		if (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {
    			return descriptor.get;
    		}
    	}
    	return implementation$3;
    };

    var supportsDescriptors$2 = defineProperties_1.supportsDescriptors;

    var gOPD$1 = Object.getOwnPropertyDescriptor;
    var defineProperty$1 = Object.defineProperty;
    var TypeErr = TypeError;
    var getProto$2 = Object.getPrototypeOf;
    var regex = /a/;

    var shim$1 = function shimFlags() {
    	if (!supportsDescriptors$2 || !getProto$2) {
    		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    	}
    	var polyfill = polyfill$2();
    	var proto = getProto$2(regex);
    	var descriptor = gOPD$1(proto, 'flags');
    	if (!descriptor || descriptor.get !== polyfill) {
    		defineProperty$1(proto, 'flags', {
    			configurable: true,
    			enumerable: false,
    			get: polyfill
    		});
    	}
    	return polyfill;
    };

    var flagsBound = callBind$1(implementation$3);

    defineProperties_1(flagsBound, {
    	getPolyfill: polyfill$2,
    	implementation: implementation$3,
    	shim: shim$1
    });

    var regexp_prototype_flags = flagsBound;

    var toString = {}.toString;

    var isarray = Array.isArray || function (arr) {
      return toString.call(arr) == '[object Array]';
    };

    var getDay = Date.prototype.getDay;
    var tryDateObject = function tryDateGetDayCall(value) {
    	try {
    		getDay.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };

    var toStr$5 = Object.prototype.toString;
    var dateClass = '[object Date]';
    var hasToStringTag$2 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isDateObject = function isDateObject(value) {
    	if (typeof value !== 'object' || value === null) {
    		return false;
    	}
    	return hasToStringTag$2 ? tryDateObject(value) : toStr$5.call(value) === dateClass;
    };

    var strValue = String.prototype.valueOf;
    var tryStringObject = function tryStringObject(value) {
    	try {
    		strValue.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var toStr$6 = Object.prototype.toString;
    var strClass = '[object String]';
    var hasToStringTag$3 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isString = function isString(value) {
    	if (typeof value === 'string') {
    		return true;
    	}
    	if (typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$3 ? tryStringObject(value) : toStr$6.call(value) === strClass;
    };

    var numToStr = Number.prototype.toString;
    var tryNumberObject = function tryNumberObject(value) {
    	try {
    		numToStr.call(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var toStr$7 = Object.prototype.toString;
    var numClass = '[object Number]';
    var hasToStringTag$4 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isNumberObject = function isNumberObject(value) {
    	if (typeof value === 'number') {
    		return true;
    	}
    	if (typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$4 ? tryNumberObject(value) : toStr$7.call(value) === numClass;
    };

    var $boolToStr = callBound('Boolean.prototype.toString');
    var $toString$1 = callBound('Object.prototype.toString');

    var tryBooleanObject = function booleanBrandCheck(value) {
    	try {
    		$boolToStr(value);
    		return true;
    	} catch (e) {
    		return false;
    	}
    };
    var boolClass = '[object Boolean]';
    var hasToStringTag$5 = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

    var isBooleanObject = function isBoolean(value) {
    	if (typeof value === 'boolean') {
    		return true;
    	}
    	if (value === null || typeof value !== 'object') {
    		return false;
    	}
    	return hasToStringTag$5 && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString$1(value) === boolClass;
    };

    var isSymbol = createCommonjsModule$2(function (module) {

    var toStr = Object.prototype.toString;
    var hasSymbols$1 = hasSymbols();

    if (hasSymbols$1) {
    	var symToStr = Symbol.prototype.toString;
    	var symStringRegex = /^Symbol\(.*\)$/;
    	var isSymbolObject = function isRealSymbolObject(value) {
    		if (typeof value.valueOf() !== 'symbol') {
    			return false;
    		}
    		return symStringRegex.test(symToStr.call(value));
    	};

    	module.exports = function isSymbol(value) {
    		if (typeof value === 'symbol') {
    			return true;
    		}
    		if (toStr.call(value) !== '[object Symbol]') {
    			return false;
    		}
    		try {
    			return isSymbolObject(value);
    		} catch (e) {
    			return false;
    		}
    	};
    } else {

    	module.exports = function isSymbol(value) {
    		// this environment does not support Symbols.
    		return false ;
    	};
    }
    });

    var isBigint = createCommonjsModule$2(function (module) {

    if (typeof BigInt === 'function') {
    	var bigIntValueOf = BigInt.prototype.valueOf;
    	var tryBigInt = function tryBigIntObject(value) {
    		try {
    			bigIntValueOf.call(value);
    			return true;
    		} catch (e) {
    		}
    		return false;
    	};

    	module.exports = function isBigInt(value) {
    		if (
    			value === null
    			|| typeof value === 'undefined'
    			|| typeof value === 'boolean'
    			|| typeof value === 'string'
    			|| typeof value === 'number'
    			|| typeof value === 'symbol'
    			|| typeof value === 'function'
    		) {
    			return false;
    		}
    		if (typeof value === 'bigint') {
    			return true;
    		}

    		return tryBigInt(value);
    	};
    } else {
    	module.exports = function isBigInt(value) {
    		return false ;
    	};
    }
    });

    // eslint-disable-next-line consistent-return
    var whichBoxedPrimitive = function whichBoxedPrimitive(value) {
    	// eslint-disable-next-line eqeqeq
    	if (value == null || (typeof value !== 'object' && typeof value !== 'function')) {
    		return null;
    	}
    	if (isString(value)) {
    		return 'String';
    	}
    	if (isNumberObject(value)) {
    		return 'Number';
    	}
    	if (isBooleanObject(value)) {
    		return 'Boolean';
    	}
    	if (isSymbol(value)) {
    		return 'Symbol';
    	}
    	if (isBigint(value)) {
    		return 'BigInt';
    	}
    };

    var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
    var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

    var exported;

    if (!$Map) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isMap(x) {
    		// `Map` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas = $Map ? Map.prototype.has : null;
    var $setHas = $Set ? Set.prototype.has : null;
    if (!exported && !$mapHas) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isMap(x) {
    		// `Map` does not have a `has` method
    		return false;
    	};
    }

    var isMap = exported || function isMap(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$mapHas.call(x);
    		if ($setHas) {
    			try {
    				$setHas.call(x);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $Map; // core-js workaround, pre-v2.5.0
    	} catch (e) {}
    	return false;
    };

    var $Map$1 = typeof Map === 'function' && Map.prototype ? Map : null;
    var $Set$1 = typeof Set === 'function' && Set.prototype ? Set : null;

    var exported$1;

    if (!$Set$1) {
    	// eslint-disable-next-line no-unused-vars
    	exported$1 = function isSet(x) {
    		// `Set` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas$1 = $Map$1 ? Map.prototype.has : null;
    var $setHas$1 = $Set$1 ? Set.prototype.has : null;
    if (!exported$1 && !$setHas$1) {
    	// eslint-disable-next-line no-unused-vars
    	exported$1 = function isSet(x) {
    		// `Set` does not have a `has` method
    		return false;
    	};
    }

    var isSet = exported$1 || function isSet(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$setHas$1.call(x);
    		if ($mapHas$1) {
    			try {
    				$mapHas$1.call(x);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $Set$1; // core-js workaround, pre-v2.5.0
    	} catch (e) {}
    	return false;
    };

    var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
    var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

    var exported$2;

    if (!$WeakMap) {
    	// eslint-disable-next-line no-unused-vars
    	exported$2 = function isWeakMap(x) {
    		// `WeakMap` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas$2 = $WeakMap ? $WeakMap.prototype.has : null;
    var $setHas$2 = $WeakSet ? $WeakSet.prototype.has : null;
    if (!exported$2 && !$mapHas$2) {
    	// eslint-disable-next-line no-unused-vars
    	exported$2 = function isWeakMap(x) {
    		// `WeakMap` does not have a `has` method
    		return false;
    	};
    }

    var isWeakmap = exported$2 || function isWeakMap(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$mapHas$2.call(x, $mapHas$2);
    		if ($setHas$2) {
    			try {
    				$setHas$2.call(x, $setHas$2);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $WeakMap; // core-js workaround, pre-v3
    	} catch (e) {}
    	return false;
    };

    var isWeakset = createCommonjsModule$2(function (module) {

    var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
    var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

    var exported;

    if (!$WeakMap) {
    	// eslint-disable-next-line no-unused-vars
    	exported = function isWeakSet(x) {
    		// `WeakSet` is not present in this environment.
    		return false;
    	};
    }

    var $mapHas = $WeakMap ? $WeakMap.prototype.has : null;
    var $setHas = $WeakSet ? $WeakSet.prototype.has : null;
    if (!exported && !$setHas) {
    	// eslint-disable-next-line no-unused-vars
    	module.exports = function isWeakSet(x) {
    		// `WeakSet` does not have a `has` method
    		return false;
    	};
    }

    module.exports = exported || function isWeakSet(x) {
    	if (!x || typeof x !== 'object') {
    		return false;
    	}
    	try {
    		$setHas.call(x, $setHas);
    		if ($mapHas) {
    			try {
    				$mapHas.call(x, $mapHas);
    			} catch (e) {
    				return true;
    			}
    		}
    		return x instanceof $WeakSet; // core-js workaround, pre-v3
    	} catch (e) {}
    	return false;
    };
    });

    var whichCollection = function whichCollection(value) {
    	if (value && typeof value === 'object') {
    		if (isMap(value)) {
    			return 'Map';
    		}
    		if (isSet(value)) {
    			return 'Set';
    		}
    		if (isWeakmap(value)) {
    			return 'WeakMap';
    		}
    		if (isWeakset(value)) {
    			return 'WeakSet';
    		}
    	}
    	return false;
    };

    var esGetIterator = createCommonjsModule$2(function (module) {

    /* eslint global-require: 0 */
    // the code is structured this way so that bundlers can
    // alias out `has-symbols` to `() => true` or `() => false` if your target
    // environments' Symbol capabilities are known, and then use
    // dead code elimination on the rest of this module.
    //
    // Similarly, `isarray` can be aliased to `Array.isArray` if
    // available in all target environments.



    if (hasSymbols() || shams()) {
    	var $iterator = Symbol.iterator;
    	// Symbol is available natively or shammed
    	// natively:
    	//  - Chrome >= 38
    	//  - Edge 12-14?, Edge >= 15 for sure
    	//  - FF >= 36
    	//  - Safari >= 9
    	//  - node >= 0.12
    	module.exports = function getIterator(iterable) {
    		// alternatively, `iterable[$iterator]?.()`
    		if (iterable != null && typeof iterable[$iterator] !== 'undefined') {
    			return iterable[$iterator]();
    		}
    		if (isArguments$1(iterable)) {
    			// arguments objects lack Symbol.iterator
    			// - node 0.12
    			return Array.prototype[$iterator].call(iterable);
    		}
    	};
    } else {
    	// Symbol is not available, native or shammed
    	var isArray = isarray;
    	var isString$1 = isString;
    	var GetIntrinsic = getIntrinsic;
    	var $Map = GetIntrinsic('%Map%', true);
    	var $Set = GetIntrinsic('%Set%', true);
    	var callBound$1 = callBound;
    	var $arrayPush = callBound$1('Array.prototype.push');
    	var $charCodeAt = callBound$1('String.prototype.charCodeAt');
    	var $stringSlice = callBound$1('String.prototype.slice');

    	var advanceStringIndex = function advanceStringIndex(S, index) {
    		var length = S.length;
    		if ((index + 1) >= length) {
    			return index + 1;
    		}

    		var first = $charCodeAt(S, index);
    		if (first < 0xD800 || first > 0xDBFF) {
    			return index + 1;
    		}

    		var second = $charCodeAt(S, index + 1);
    		if (second < 0xDC00 || second > 0xDFFF) {
    			return index + 1;
    		}

    		return index + 2;
    	};

    	var getArrayIterator = function getArrayIterator(arraylike) {
    		var i = 0;
    		return {
    			next: function next() {
    				var done = i >= arraylike.length;
    				var value;
    				if (!done) {
    					value = arraylike[i];
    					i += 1;
    				}
    				return {
    					done: done,
    					value: value
    				};
    			}
    		};
    	};

    	var getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {
    		if (isArray(iterable) || isArguments$1(iterable)) {
    			return getArrayIterator(iterable);
    		}
    		if (isString$1(iterable)) {
    			var i = 0;
    			return {
    				next: function next() {
    					var nextIndex = advanceStringIndex(iterable, i);
    					var value = $stringSlice(iterable, i, nextIndex);
    					i = nextIndex;
    					return {
    						done: nextIndex > iterable.length,
    						value: value
    					};
    				}
    			};
    		}

    		// es6-shim and es-shims' es-map use a string "_es6-shim iterator_" property on different iterables, such as MapIterator.
    		if (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {
    			return iterable['_es6-shim iterator_']();
    		}
    	};

    	if (!$Map && !$Set) {
    		// the only language iterables are Array, String, arguments
    		// - Safari <= 6.0
    		// - Chrome < 38
    		// - node < 0.12
    		// - FF < 13
    		// - IE < 11
    		// - Edge < 11

    		module.exports = function getIterator(iterable) {
    			if (iterable != null) {
    				return getNonCollectionIterator(iterable, true);
    			}
    		};
    	} else {
    		// either Map or Set are available, but Symbol is not
    		// - es6-shim on an ES5 browser
    		// - Safari 6.2 (maybe 6.1?)
    		// - FF v[13, 36)
    		// - IE 11
    		// - Edge 11
    		// - Safari v[6, 9)

    		var isMap$1 = isMap;
    		var isSet$1 = isSet;

    		// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach
    		var $mapForEach = callBound$1('Map.prototype.forEach', true);
    		var $setForEach = callBound$1('Set.prototype.forEach', true);
    		if (typeof process === 'undefined' || !process.versions || !process.versions.node) { // "if is not node"

    			// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either
    			// returns a value, or throws a StopIteration object. These browsers
    			// do not have any other mechanism for iteration.
    			var $mapIterator = callBound$1('Map.prototype.iterator', true);
    			var $setIterator = callBound$1('Set.prototype.iterator', true);
    			var getStopIterationIterator = function (iterator) {
    				var done = false;
    				return {
    					next: function next() {
    						try {
    							return {
    								done: done,
    								value: done ? undefined : iterator.next()
    							};
    						} catch (e) {
    							done = true;
    							return {
    								done: true,
    								value: undefined
    							};
    						}
    					}
    				};
    			};
    		}
    		// Firefox 27-35, and some older es6-shim versions, use a string "@@iterator" property
    		// this returns a proper iterator object, so we should use it instead of forEach.
    		// newer es6-shim versions use a string "_es6-shim iterator_" property.
    		var $mapAtAtIterator = callBound$1('Map.prototype.@@iterator', true) || callBound$1('Map.prototype._es6-shim iterator_', true);
    		var $setAtAtIterator = callBound$1('Set.prototype.@@iterator', true) || callBound$1('Set.prototype._es6-shim iterator_', true);

    		var getCollectionIterator = function getCollectionIterator(iterable) {
    			if (isMap$1(iterable)) {
    				if ($mapIterator) {
    					return getStopIterationIterator($mapIterator(iterable));
    				}
    				if ($mapAtAtIterator) {
    					return $mapAtAtIterator(iterable);
    				}
    				if ($mapForEach) {
    					var entries = [];
    					$mapForEach(iterable, function (v, k) {
    						$arrayPush(entries, [k, v]);
    					});
    					return getArrayIterator(entries);
    				}
    			}
    			if (isSet$1(iterable)) {
    				if ($setIterator) {
    					return getStopIterationIterator($setIterator(iterable));
    				}
    				if ($setAtAtIterator) {
    					return $setAtAtIterator(iterable);
    				}
    				if ($setForEach) {
    					var values = [];
    					$setForEach(iterable, function (v) {
    						$arrayPush(values, v);
    					});
    					return getArrayIterator(values);
    				}
    			}
    		};

    		module.exports = function getIterator(iterable) {
    			return getCollectionIterator(iterable) || getNonCollectionIterator(iterable);
    		};
    	}
    }
    });

    var _nodeResolve_empty = {};

    var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        'default': _nodeResolve_empty
    });

    var require$$0 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);

    var hasMap = typeof Map === 'function' && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === 'function' && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var match = String.prototype.match;
    var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === 'function' ? Symbol.prototype.toString : null;
    var isEnumerable$1 = Object.prototype.propertyIsEnumerable;

    var inspectCustom = require$$0.custom;
    var inspectSymbol = inspectCustom && isSymbol$1(inspectCustom) ? inspectCustom : null;

    var objectInspect = function inspect_(obj, options, depth, seen) {
        var opts = options || {};

        if (has$1(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
            throw new TypeError('option "quoteStyle" must be "single" or "double"');
        }
        if (
            has$1(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
                ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
                : opts.maxStringLength !== null
            )
        ) {
            throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
        }
        var customInspect = has$1(opts, 'customInspect') ? opts.customInspect : true;
        if (typeof customInspect !== 'boolean') {
            throw new TypeError('option "customInspect", if provided, must be `true` or `false`');
        }

        if (
            has$1(opts, 'indent')
            && opts.indent !== null
            && opts.indent !== '\t'
            && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
        ) {
            throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');
        }

        if (typeof obj === 'undefined') {
            return 'undefined';
        }
        if (obj === null) {
            return 'null';
        }
        if (typeof obj === 'boolean') {
            return obj ? 'true' : 'false';
        }

        if (typeof obj === 'string') {
            return inspectString(obj, opts);
        }
        if (typeof obj === 'number') {
            if (obj === 0) {
                return Infinity / obj > 0 ? '0' : '-0';
            }
            return String(obj);
        }
        if (typeof obj === 'bigint') {
            return String(obj) + 'n';
        }

        var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
        if (typeof depth === 'undefined') { depth = 0; }
        if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
            return isArray(obj) ? '[Array]' : '[Object]';
        }

        var indent = getIndent(opts, depth);

        if (typeof seen === 'undefined') {
            seen = [];
        } else if (indexOf(seen, obj) >= 0) {
            return '[Circular]';
        }

        function inspect(value, from, noIndent) {
            if (from) {
                seen = seen.slice();
                seen.push(from);
            }
            if (noIndent) {
                var newOpts = {
                    depth: opts.depth
                };
                if (has$1(opts, 'quoteStyle')) {
                    newOpts.quoteStyle = opts.quoteStyle;
                }
                return inspect_(value, newOpts, depth + 1, seen);
            }
            return inspect_(value, opts, depth + 1, seen);
        }

        if (typeof obj === 'function') {
            var name = nameOf(obj);
            var keys = arrObjKeys(obj, inspect);
            return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');
        }
        if (isSymbol$1(obj)) {
            var symString = symToString.call(obj);
            return typeof obj === 'object' ? markBoxed(symString) : symString;
        }
        if (isElement(obj)) {
            var s = '<' + String(obj.nodeName).toLowerCase();
            var attrs = obj.attributes || [];
            for (var i = 0; i < attrs.length; i++) {
                s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
            }
            s += '>';
            if (obj.childNodes && obj.childNodes.length) { s += '...'; }
            s += '</' + String(obj.nodeName).toLowerCase() + '>';
            return s;
        }
        if (isArray(obj)) {
            if (obj.length === 0) { return '[]'; }
            var xs = arrObjKeys(obj, inspect);
            if (indent && !singleLineValues(xs)) {
                return '[' + indentedJoin(xs, indent) + ']';
            }
            return '[ ' + xs.join(', ') + ' ]';
        }
        if (isError(obj)) {
            var parts = arrObjKeys(obj, inspect);
            if (parts.length === 0) { return '[' + String(obj) + ']'; }
            return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
        }
        if (typeof obj === 'object' && customInspect) {
            if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {
                return obj[inspectSymbol]();
            } else if (typeof obj.inspect === 'function') {
                return obj.inspect();
            }
        }
        if (isMap$1(obj)) {
            var mapParts = [];
            mapForEach.call(obj, function (value, key) {
                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
            });
            return collectionOf('Map', mapSize.call(obj), mapParts, indent);
        }
        if (isSet$1(obj)) {
            var setParts = [];
            setForEach.call(obj, function (value) {
                setParts.push(inspect(value, obj));
            });
            return collectionOf('Set', setSize.call(obj), setParts, indent);
        }
        if (isWeakMap(obj)) {
            return weakCollectionOf('WeakMap');
        }
        if (isWeakSet(obj)) {
            return weakCollectionOf('WeakSet');
        }
        if (isNumber(obj)) {
            return markBoxed(inspect(Number(obj)));
        }
        if (isBigInt(obj)) {
            return markBoxed(inspect(bigIntValueOf.call(obj)));
        }
        if (isBoolean(obj)) {
            return markBoxed(booleanValueOf.call(obj));
        }
        if (isString$1(obj)) {
            return markBoxed(inspect(String(obj)));
        }
        if (!isDate(obj) && !isRegExp(obj)) {
            var ys = arrObjKeys(obj, inspect);
            if (ys.length === 0) { return '{}'; }
            if (indent) {
                return '{' + indentedJoin(ys, indent) + '}';
            }
            return '{ ' + ys.join(', ') + ' }';
        }
        return String(obj);
    };

    function wrapQuotes(s, defaultStyle, opts) {
        var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
        return quoteChar + s + quoteChar;
    }

    function quote(s) {
        return String(s).replace(/"/g, '&quot;');
    }

    function isArray(obj) { return toStr$8(obj) === '[object Array]'; }
    function isDate(obj) { return toStr$8(obj) === '[object Date]'; }
    function isRegExp(obj) { return toStr$8(obj) === '[object RegExp]'; }
    function isError(obj) { return toStr$8(obj) === '[object Error]'; }
    function isSymbol$1(obj) { return toStr$8(obj) === '[object Symbol]'; }
    function isString$1(obj) { return toStr$8(obj) === '[object String]'; }
    function isNumber(obj) { return toStr$8(obj) === '[object Number]'; }
    function isBigInt(obj) { return toStr$8(obj) === '[object BigInt]'; }
    function isBoolean(obj) { return toStr$8(obj) === '[object Boolean]'; }

    var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
    function has$1(obj, key) {
        return hasOwn.call(obj, key);
    }

    function toStr$8(obj) {
        return objectToString.call(obj);
    }

    function nameOf(f) {
        if (f.name) { return f.name; }
        var m = match.call(functionToString.call(f), /^function\s*([\w$]+)/);
        if (m) { return m[1]; }
        return null;
    }

    function indexOf(xs, x) {
        if (xs.indexOf) { return xs.indexOf(x); }
        for (var i = 0, l = xs.length; i < l; i++) {
            if (xs[i] === x) { return i; }
        }
        return -1;
    }

    function isMap$1(x) {
        if (!mapSize || !x || typeof x !== 'object') {
            return false;
        }
        try {
            mapSize.call(x);
            try {
                setSize.call(x);
            } catch (s) {
                return true;
            }
            return x instanceof Map; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isWeakMap(x) {
        if (!weakMapHas || !x || typeof x !== 'object') {
            return false;
        }
        try {
            weakMapHas.call(x, weakMapHas);
            try {
                weakSetHas.call(x, weakSetHas);
            } catch (s) {
                return true;
            }
            return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isSet$1(x) {
        if (!setSize || !x || typeof x !== 'object') {
            return false;
        }
        try {
            setSize.call(x);
            try {
                mapSize.call(x);
            } catch (m) {
                return true;
            }
            return x instanceof Set; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isWeakSet(x) {
        if (!weakSetHas || !x || typeof x !== 'object') {
            return false;
        }
        try {
            weakSetHas.call(x, weakSetHas);
            try {
                weakMapHas.call(x, weakMapHas);
            } catch (s) {
                return true;
            }
            return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
        } catch (e) {}
        return false;
    }

    function isElement(x) {
        if (!x || typeof x !== 'object') { return false; }
        if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
            return true;
        }
        return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
    }

    function inspectString(str, opts) {
        if (str.length > opts.maxStringLength) {
            var remaining = str.length - opts.maxStringLength;
            var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
            return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;
        }
        // eslint-disable-next-line no-control-regex
        var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
        return wrapQuotes(s, 'single', opts);
    }

    function lowbyte(c) {
        var n = c.charCodeAt(0);
        var x = {
            8: 'b',
            9: 't',
            10: 'n',
            12: 'f',
            13: 'r'
        }[n];
        if (x) { return '\\' + x; }
        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();
    }

    function markBoxed(str) {
        return 'Object(' + str + ')';
    }

    function weakCollectionOf(type) {
        return type + ' { ? }';
    }

    function collectionOf(type, size, entries, indent) {
        var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');
        return type + ' (' + size + ') {' + joinedEntries + '}';
    }

    function singleLineValues(xs) {
        for (var i = 0; i < xs.length; i++) {
            if (indexOf(xs[i], '\n') >= 0) {
                return false;
            }
        }
        return true;
    }

    function getIndent(opts, depth) {
        var baseIndent;
        if (opts.indent === '\t') {
            baseIndent = '\t';
        } else if (typeof opts.indent === 'number' && opts.indent > 0) {
            baseIndent = Array(opts.indent + 1).join(' ');
        } else {
            return null;
        }
        return {
            base: baseIndent,
            prev: Array(depth + 1).join(baseIndent)
        };
    }

    function indentedJoin(xs, indent) {
        if (xs.length === 0) { return ''; }
        var lineJoiner = '\n' + indent.prev + indent.base;
        return lineJoiner + xs.join(',' + lineJoiner) + '\n' + indent.prev;
    }

    function arrObjKeys(obj, inspect) {
        var isArr = isArray(obj);
        var xs = [];
        if (isArr) {
            xs.length = obj.length;
            for (var i = 0; i < obj.length; i++) {
                xs[i] = has$1(obj, i) ? inspect(obj[i], obj) : '';
            }
        }
        for (var key in obj) { // eslint-disable-line no-restricted-syntax
            if (!has$1(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
            if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
            if ((/[^\w$]/).test(key)) {
                xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
            } else {
                xs.push(key + ': ' + inspect(obj[key], obj));
            }
        }
        if (typeof gOPS === 'function') {
            var syms = gOPS(obj);
            for (var j = 0; j < syms.length; j++) {
                if (isEnumerable$1.call(obj, syms[j])) {
                    xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
                }
            }
        }
        return xs;
    }

    var $TypeError$4 = getIntrinsic('%TypeError%');
    var $WeakMap$1 = getIntrinsic('%WeakMap%', true);
    var $Map$2 = getIntrinsic('%Map%', true);

    var $weakMapGet = callBound('WeakMap.prototype.get', true);
    var $weakMapSet = callBound('WeakMap.prototype.set', true);
    var $weakMapHas = callBound('WeakMap.prototype.has', true);
    var $mapGet = callBound('Map.prototype.get', true);
    var $mapSet = callBound('Map.prototype.set', true);
    var $mapHas$3 = callBound('Map.prototype.has', true);

    /*
     * This function traverses the list returning the node corresponding to the
     * given key.
     *
     * That node is also moved to the head of the list, so that if it's accessed
     * again we don't need to traverse the whole list. By doing so, all the recently
     * used nodes can be accessed relatively quickly.
     */
    var listGetNode = function (list, key) { // eslint-disable-line consistent-return
    	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
    		if (curr.key === key) {
    			prev.next = curr.next;
    			curr.next = list.next;
    			list.next = curr; // eslint-disable-line no-param-reassign
    			return curr;
    		}
    	}
    };

    var listGet = function (objects, key) {
    	var node = listGetNode(objects, key);
    	return node && node.value;
    };
    var listSet = function (objects, key, value) {
    	var node = listGetNode(objects, key);
    	if (node) {
    		node.value = value;
    	} else {
    		// Prepend the new node to the beginning of the list
    		objects.next = { // eslint-disable-line no-param-reassign
    			key: key,
    			next: objects.next,
    			value: value
    		};
    	}
    };
    var listHas = function (objects, key) {
    	return !!listGetNode(objects, key);
    };

    var sideChannel = function getSideChannel() {
    	var $wm;
    	var $m;
    	var $o;
    	var channel = {
    		assert: function (key) {
    			if (!channel.has(key)) {
    				throw new $TypeError$4('Side channel does not contain ' + objectInspect(key));
    			}
    		},
    		get: function (key) { // eslint-disable-line consistent-return
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if ($wm) {
    					return $weakMapGet($wm, key);
    				}
    			} else if ($Map$2) {
    				if ($m) {
    					return $mapGet($m, key);
    				}
    			} else {
    				if ($o) { // eslint-disable-line no-lonely-if
    					return listGet($o, key);
    				}
    			}
    		},
    		has: function (key) {
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if ($wm) {
    					return $weakMapHas($wm, key);
    				}
    			} else if ($Map$2) {
    				if ($m) {
    					return $mapHas$3($m, key);
    				}
    			} else {
    				if ($o) { // eslint-disable-line no-lonely-if
    					return listHas($o, key);
    				}
    			}
    			return false;
    		},
    		set: function (key, value) {
    			if ($WeakMap$1 && key && (typeof key === 'object' || typeof key === 'function')) {
    				if (!$wm) {
    					$wm = new $WeakMap$1();
    				}
    				$weakMapSet($wm, key, value);
    			} else if ($Map$2) {
    				if (!$m) {
    					$m = new $Map$2();
    				}
    				$mapSet($m, key, value);
    			} else {
    				if (!$o) {
    					/*
    					 * Initialize the linked list as an empty node, so that we don't have
    					 * to special-case handling of the first node: we can always refer to
    					 * it as (previous node).next, instead of something like (list).head
    					 */
    					$o = { key: {}, next: null };
    				}
    				listSet($o, key, value);
    			}
    		}
    	};
    	return channel;
    };

    var hasOwn$1 = Object.prototype.hasOwnProperty;
    var toString$1 = Object.prototype.toString;

    var foreach = function forEach (obj, fn, ctx) {
        if (toString$1.call(fn) !== '[object Function]') {
            throw new TypeError('iterator must be a function');
        }
        var l = obj.length;
        if (l === +l) {
            for (var i = 0; i < l; i++) {
                fn.call(ctx, obj[i], i, obj);
            }
        } else {
            for (var k in obj) {
                if (hasOwn$1.call(obj, k)) {
                    fn.call(ctx, obj[k], k, obj);
                }
            }
        }
    };

    /**
     * Array#filter.
     *
     * @param {Array} arr
     * @param {Function} fn
     * @param {Object=} self
     * @return {Array}
     * @throw TypeError
     */

    var arrayFilter = function (arr, fn, self) {
      if (arr.filter) return arr.filter(fn, self);
      if (void 0 === arr || null === arr) throw new TypeError;
      if ('function' != typeof fn) throw new TypeError;
      var ret = [];
      for (var i = 0; i < arr.length; i++) {
        if (!hasOwn$2.call(arr, i)) continue;
        var val = arr[i];
        if (fn.call(self, val, i, arr)) ret.push(val);
      }
      return ret;
    };

    var hasOwn$2 = Object.prototype.hasOwnProperty;

    var availableTypedArrays = function availableTypedArrays() {
    	return arrayFilter([
    		'BigInt64Array',
    		'BigUint64Array',
    		'Float32Array',
    		'Float64Array',
    		'Int16Array',
    		'Int32Array',
    		'Int8Array',
    		'Uint16Array',
    		'Uint32Array',
    		'Uint8Array',
    		'Uint8ClampedArray'
    	], function (typedArray) {
    		return typeof commonjsGlobal[typedArray] === 'function';
    	});
    };

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$3;

    var $SyntaxError$1 = SyntaxError;
    var $Function$1 = Function;
    var $TypeError$5 = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor$1 = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD$3 = Object.getOwnPropertyDescriptor;
    if ($gOPD$3) {
    	try {
    		$gOPD$3({}, '');
    	} catch (e) {
    		$gOPD$3 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$2 = function () { throw new $TypeError$5(); };
    var ThrowTypeError$2 = $gOPD$3
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$2;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$3(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$2;
    			}
    		}
    	}())
    	: throwTypeError$2;

    var hasSymbols$5 = hasSymbols();

    var getProto$3 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction$2 = getEvalledConstructor$1('async function* () {}');
    var asyncGenFunctionPrototype$1 = asyncGenFunction$2 ? asyncGenFunction$2.prototype : undefined$3;
    var asyncGenPrototype$1 = asyncGenFunctionPrototype$1 ? asyncGenFunctionPrototype$1.prototype : undefined$3;

    var TypedArray$2 = typeof Uint8Array === 'undefined' ? undefined$3 : getProto$3(Uint8Array);

    var INTRINSICS$2 = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$3 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$3 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$5 ? getProto$3([][Symbol.iterator]()) : undefined$3,
    	'%AsyncFromSyncIteratorPrototype%': undefined$3,
    	'%AsyncFunction%': getEvalledConstructor$1('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype$1,
    	'%AsyncGeneratorFunction%': asyncGenFunction$2,
    	'%AsyncIteratorPrototype%': asyncGenPrototype$1 ? getProto$3(asyncGenPrototype$1) : undefined$3,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$3 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$3 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$3 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$3 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$3 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$3 : FinalizationRegistry,
    	'%Function%': $Function$1,
    	'%GeneratorFunction%': getEvalledConstructor$1('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$3 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$3 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$3 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$5 ? getProto$3(getProto$3([][Symbol.iterator]())) : undefined$3,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$3,
    	'%Map%': typeof Map === 'undefined' ? undefined$3 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$5 ? undefined$3 : getProto$3(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$3 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$3 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$3 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$3 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$5 ? undefined$3 : getProto$3(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$3 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$5 ? getProto$3(''[Symbol.iterator]()) : undefined$3,
    	'%Symbol%': hasSymbols$5 ? Symbol : undefined$3,
    	'%SyntaxError%': $SyntaxError$1,
    	'%ThrowTypeError%': ThrowTypeError$2,
    	'%TypedArray%': TypedArray$2,
    	'%TypeError%': $TypeError$5,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$3 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$3 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$3 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$3 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$3 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$3 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$3 : WeakSet
    };

    var LEGACY_ALIASES$1 = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat$1 = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply$1 = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace$2 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$2 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$2 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$2 = function stringToPath(string) {
    	var result = [];
    	$replace$2(string, rePropName$2, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$2(subString, reEscapeChar$2, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$2 = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES$1, intrinsicName)) {
    		alias = LEGACY_ALIASES$1[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS$2, intrinsicName)) {
    		var value = INTRINSICS$2[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError$5('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError$1('intrinsic ' + name + ' does not exist!');
    };

    var GetIntrinsic$1 = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError$5('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError$5('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$2(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic$2('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply$1(parts, $concat$1([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS$2, intrinsicRealName)) {
    			value = INTRINSICS$2[intrinsicRealName];
    		} else if (value != null) {
    			if ($gOPD$3 && (i + 1) >= parts.length) {
    				var desc = $gOPD$3(value, part);
    				isOwn = !!desc;

    				if (!allowMissing && !(part in value)) {
    					throw new $TypeError$5('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS$2[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var $gOPD$4 = GetIntrinsic$1('%Object.getOwnPropertyDescriptor%');
    if ($gOPD$4) {
    	try {
    		$gOPD$4([], 'length');
    	} catch (e) {
    		// IE 8 has a broken gOPD
    		$gOPD$4 = null;
    	}
    }

    var getOwnPropertyDescriptor = $gOPD$4;

    /* globals
    	AggregateError,
    	Atomics,
    	FinalizationRegistry,
    	SharedArrayBuffer,
    	WeakRef,
    */

    var undefined$4;

    var $SyntaxError$2 = SyntaxError;
    var $Function$2 = Function;
    var $TypeError$6 = TypeError;

    // eslint-disable-next-line consistent-return
    var getEvalledConstructor$2 = function (expressionSyntax) {
    	try {
    		// eslint-disable-next-line no-new-func
    		return Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    	} catch (e) {}
    };

    var $gOPD$5 = Object.getOwnPropertyDescriptor;
    if ($gOPD$5) {
    	try {
    		$gOPD$5({}, '');
    	} catch (e) {
    		$gOPD$5 = null; // this is IE 8, which has a broken gOPD
    	}
    }

    var throwTypeError$3 = function () { throw new $TypeError$6(); };
    var ThrowTypeError$3 = $gOPD$5
    	? (function () {
    		try {
    			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    			arguments.callee; // IE 8 does not throw here
    			return throwTypeError$3;
    		} catch (calleeThrows) {
    			try {
    				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
    				return $gOPD$5(arguments, 'callee').get;
    			} catch (gOPDthrows) {
    				return throwTypeError$3;
    			}
    		}
    	}())
    	: throwTypeError$3;

    var hasSymbols$6 = hasSymbols();

    var getProto$4 = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

    var asyncGenFunction$3 = getEvalledConstructor$2('async function* () {}');
    var asyncGenFunctionPrototype$2 = asyncGenFunction$3 ? asyncGenFunction$3.prototype : undefined$4;
    var asyncGenPrototype$2 = asyncGenFunctionPrototype$2 ? asyncGenFunctionPrototype$2.prototype : undefined$4;

    var TypedArray$3 = typeof Uint8Array === 'undefined' ? undefined$4 : getProto$4(Uint8Array);

    var INTRINSICS$3 = {
    	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined$4 : AggregateError,
    	'%Array%': Array,
    	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$4 : ArrayBuffer,
    	'%ArrayIteratorPrototype%': hasSymbols$6 ? getProto$4([][Symbol.iterator]()) : undefined$4,
    	'%AsyncFromSyncIteratorPrototype%': undefined$4,
    	'%AsyncFunction%': getEvalledConstructor$2('async function () {}'),
    	'%AsyncGenerator%': asyncGenFunctionPrototype$2,
    	'%AsyncGeneratorFunction%': asyncGenFunction$3,
    	'%AsyncIteratorPrototype%': asyncGenPrototype$2 ? getProto$4(asyncGenPrototype$2) : undefined$4,
    	'%Atomics%': typeof Atomics === 'undefined' ? undefined$4 : Atomics,
    	'%BigInt%': typeof BigInt === 'undefined' ? undefined$4 : BigInt,
    	'%Boolean%': Boolean,
    	'%DataView%': typeof DataView === 'undefined' ? undefined$4 : DataView,
    	'%Date%': Date,
    	'%decodeURI%': decodeURI,
    	'%decodeURIComponent%': decodeURIComponent,
    	'%encodeURI%': encodeURI,
    	'%encodeURIComponent%': encodeURIComponent,
    	'%Error%': Error,
    	'%eval%': eval, // eslint-disable-line no-eval
    	'%EvalError%': EvalError,
    	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined$4 : Float32Array,
    	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined$4 : Float64Array,
    	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$4 : FinalizationRegistry,
    	'%Function%': $Function$2,
    	'%GeneratorFunction%': getEvalledConstructor$2('function* () {}'),
    	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined$4 : Int8Array,
    	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined$4 : Int16Array,
    	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined$4 : Int32Array,
    	'%isFinite%': isFinite,
    	'%isNaN%': isNaN,
    	'%IteratorPrototype%': hasSymbols$6 ? getProto$4(getProto$4([][Symbol.iterator]())) : undefined$4,
    	'%JSON%': typeof JSON === 'object' ? JSON : undefined$4,
    	'%Map%': typeof Map === 'undefined' ? undefined$4 : Map,
    	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$6 ? undefined$4 : getProto$4(new Map()[Symbol.iterator]()),
    	'%Math%': Math,
    	'%Number%': Number,
    	'%Object%': Object,
    	'%parseFloat%': parseFloat,
    	'%parseInt%': parseInt,
    	'%Promise%': typeof Promise === 'undefined' ? undefined$4 : Promise,
    	'%Proxy%': typeof Proxy === 'undefined' ? undefined$4 : Proxy,
    	'%RangeError%': RangeError,
    	'%ReferenceError%': ReferenceError,
    	'%Reflect%': typeof Reflect === 'undefined' ? undefined$4 : Reflect,
    	'%RegExp%': RegExp,
    	'%Set%': typeof Set === 'undefined' ? undefined$4 : Set,
    	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$6 ? undefined$4 : getProto$4(new Set()[Symbol.iterator]()),
    	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$4 : SharedArrayBuffer,
    	'%String%': String,
    	'%StringIteratorPrototype%': hasSymbols$6 ? getProto$4(''[Symbol.iterator]()) : undefined$4,
    	'%Symbol%': hasSymbols$6 ? Symbol : undefined$4,
    	'%SyntaxError%': $SyntaxError$2,
    	'%ThrowTypeError%': ThrowTypeError$3,
    	'%TypedArray%': TypedArray$3,
    	'%TypeError%': $TypeError$6,
    	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$4 : Uint8Array,
    	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$4 : Uint8ClampedArray,
    	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$4 : Uint16Array,
    	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$4 : Uint32Array,
    	'%URIError%': URIError,
    	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined$4 : WeakMap,
    	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined$4 : WeakRef,
    	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined$4 : WeakSet
    };

    var LEGACY_ALIASES$2 = {
    	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    	'%ArrayPrototype%': ['Array', 'prototype'],
    	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
    	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    	'%BooleanPrototype%': ['Boolean', 'prototype'],
    	'%DataViewPrototype%': ['DataView', 'prototype'],
    	'%DatePrototype%': ['Date', 'prototype'],
    	'%ErrorPrototype%': ['Error', 'prototype'],
    	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
    	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    	'%FunctionPrototype%': ['Function', 'prototype'],
    	'%Generator%': ['GeneratorFunction', 'prototype'],
    	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    	'%JSONParse%': ['JSON', 'parse'],
    	'%JSONStringify%': ['JSON', 'stringify'],
    	'%MapPrototype%': ['Map', 'prototype'],
    	'%NumberPrototype%': ['Number', 'prototype'],
    	'%ObjectPrototype%': ['Object', 'prototype'],
    	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    	'%PromisePrototype%': ['Promise', 'prototype'],
    	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    	'%Promise_all%': ['Promise', 'all'],
    	'%Promise_reject%': ['Promise', 'reject'],
    	'%Promise_resolve%': ['Promise', 'resolve'],
    	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
    	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    	'%RegExpPrototype%': ['RegExp', 'prototype'],
    	'%SetPrototype%': ['Set', 'prototype'],
    	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    	'%StringPrototype%': ['String', 'prototype'],
    	'%SymbolPrototype%': ['Symbol', 'prototype'],
    	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
    	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    	'%URIErrorPrototype%': ['URIError', 'prototype'],
    	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
    	'%WeakSetPrototype%': ['WeakSet', 'prototype']
    };



    var $concat$2 = functionBind.call(Function.call, Array.prototype.concat);
    var $spliceApply$2 = functionBind.call(Function.apply, Array.prototype.splice);
    var $replace$3 = functionBind.call(Function.call, String.prototype.replace);

    /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
    var rePropName$3 = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar$3 = /\\(\\)?/g; /** Used to match backslashes in property paths. */
    var stringToPath$3 = function stringToPath(string) {
    	var result = [];
    	$replace$3(string, rePropName$3, function (match, number, quote, subString) {
    		result[result.length] = quote ? $replace$3(subString, reEscapeChar$3, '$1') : number || match;
    	});
    	return result;
    };
    /* end adaptation */

    var getBaseIntrinsic$3 = function getBaseIntrinsic(name, allowMissing) {
    	var intrinsicName = name;
    	var alias;
    	if (src(LEGACY_ALIASES$2, intrinsicName)) {
    		alias = LEGACY_ALIASES$2[intrinsicName];
    		intrinsicName = '%' + alias[0] + '%';
    	}

    	if (src(INTRINSICS$3, intrinsicName)) {
    		var value = INTRINSICS$3[intrinsicName];
    		if (typeof value === 'undefined' && !allowMissing) {
    			throw new $TypeError$6('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    		}

    		return {
    			alias: alias,
    			name: intrinsicName,
    			value: value
    		};
    	}

    	throw new $SyntaxError$2('intrinsic ' + name + ' does not exist!');
    };

    var GetIntrinsic$2 = function GetIntrinsic(name, allowMissing) {
    	if (typeof name !== 'string' || name.length === 0) {
    		throw new $TypeError$6('intrinsic name must be a non-empty string');
    	}
    	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    		throw new $TypeError$6('"allowMissing" argument must be a boolean');
    	}

    	var parts = stringToPath$3(name);
    	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

    	var intrinsic = getBaseIntrinsic$3('%' + intrinsicBaseName + '%', allowMissing);
    	var intrinsicRealName = intrinsic.name;
    	var value = intrinsic.value;
    	var skipFurtherCaching = false;

    	var alias = intrinsic.alias;
    	if (alias) {
    		intrinsicBaseName = alias[0];
    		$spliceApply$2(parts, $concat$2([0, 1], alias));
    	}

    	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    		var part = parts[i];
    		if (part === 'constructor' || !isOwn) {
    			skipFurtherCaching = true;
    		}

    		intrinsicBaseName += '.' + part;
    		intrinsicRealName = '%' + intrinsicBaseName + '%';

    		if (src(INTRINSICS$3, intrinsicRealName)) {
    			value = INTRINSICS$3[intrinsicRealName];
    		} else if (value != null) {
    			if ($gOPD$5 && (i + 1) >= parts.length) {
    				var desc = $gOPD$5(value, part);
    				isOwn = !!desc;

    				if (!allowMissing && !(part in value)) {
    					throw new $TypeError$6('base intrinsic for ' + name + ' exists, but the property is not available.');
    				}
    				// By convention, when a data property is converted to an accessor
    				// property to emulate a data property that does not suffer from
    				// the override mistake, that accessor's getter is marked with
    				// an `originalValue` property. Here, when we detect this, we
    				// uphold the illusion by pretending to see that original data
    				// property, i.e., returning the value rather than the getter
    				// itself.
    				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
    					value = desc.get;
    				} else {
    					value = value[part];
    				}
    			} else {
    				isOwn = src(value, part);
    				value = value[part];
    			}

    			if (isOwn && !skipFurtherCaching) {
    				INTRINSICS$3[intrinsicRealName] = value;
    			}
    		}
    	}
    	return value;
    };

    var $gOPD$6 = GetIntrinsic$2('%Object.getOwnPropertyDescriptor%');
    if ($gOPD$6) {
    	try {
    		$gOPD$6([], 'length');
    	} catch (e) {
    		// IE 8 has a broken gOPD
    		$gOPD$6 = null;
    	}
    }

    var getOwnPropertyDescriptor$1 = $gOPD$6;

    var $toString$2 = callBound('Object.prototype.toString');
    var hasSymbols$7 = hasSymbols();
    var hasToStringTag$6 = hasSymbols$7 && typeof Symbol.toStringTag === 'symbol';

    var typedArrays = availableTypedArrays();

    var $indexOf$1 = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
    	for (var i = 0; i < array.length; i += 1) {
    		if (array[i] === value) {
    			return i;
    		}
    	}
    	return -1;
    };
    var $slice = callBound('String.prototype.slice');
    var toStrTags = {};

    var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
    if (hasToStringTag$6 && getOwnPropertyDescriptor$1 && getPrototypeOf) {
    	foreach(typedArrays, function (typedArray) {
    		var arr = new commonjsGlobal[typedArray]();
    		if (!(Symbol.toStringTag in arr)) {
    			throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
    		}
    		var proto = getPrototypeOf(arr);
    		var descriptor = getOwnPropertyDescriptor$1(proto, Symbol.toStringTag);
    		if (!descriptor) {
    			var superProto = getPrototypeOf(proto);
    			descriptor = getOwnPropertyDescriptor$1(superProto, Symbol.toStringTag);
    		}
    		toStrTags[typedArray] = descriptor.get;
    	});
    }

    var tryTypedArrays = function tryAllTypedArrays(value) {
    	var anyTrue = false;
    	foreach(toStrTags, function (getter, typedArray) {
    		if (!anyTrue) {
    			try {
    				anyTrue = getter.call(value) === typedArray;
    			} catch (e) { /**/ }
    		}
    	});
    	return anyTrue;
    };

    var isTypedArray = function isTypedArray(value) {
    	if (!value || typeof value !== 'object') { return false; }
    	if (!hasToStringTag$6) {
    		var tag = $slice($toString$2(value), 8, -1);
    		return $indexOf$1(typedArrays, tag) > -1;
    	}
    	if (!getOwnPropertyDescriptor$1) { return false; }
    	return tryTypedArrays(value);
    };

    var $toString$3 = callBound('Object.prototype.toString');
    var hasSymbols$8 = hasSymbols();
    var hasToStringTag$7 = hasSymbols$8 && typeof Symbol.toStringTag === 'symbol';

    var typedArrays$1 = availableTypedArrays();

    var $slice$1 = callBound('String.prototype.slice');
    var toStrTags$1 = {};

    var getPrototypeOf$1 = Object.getPrototypeOf; // require('getprototypeof');
    if (hasToStringTag$7 && getOwnPropertyDescriptor && getPrototypeOf$1) {
    	foreach(typedArrays$1, function (typedArray) {
    		if (typeof commonjsGlobal[typedArray] === 'function') {
    			var arr = new commonjsGlobal[typedArray]();
    			if (!(Symbol.toStringTag in arr)) {
    				throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
    			}
    			var proto = getPrototypeOf$1(arr);
    			var descriptor = getOwnPropertyDescriptor(proto, Symbol.toStringTag);
    			if (!descriptor) {
    				var superProto = getPrototypeOf$1(proto);
    				descriptor = getOwnPropertyDescriptor(superProto, Symbol.toStringTag);
    			}
    			toStrTags$1[typedArray] = descriptor.get;
    		}
    	});
    }

    var tryTypedArrays$1 = function tryAllTypedArrays(value) {
    	var foundName = false;
    	foreach(toStrTags$1, function (getter, typedArray) {
    		if (!foundName) {
    			try {
    				var name = getter.call(value);
    				if (name === typedArray) {
    					foundName = name;
    				}
    			} catch (e) {}
    		}
    	});
    	return foundName;
    };



    var whichTypedArray = function whichTypedArray(value) {
    	if (!isTypedArray(value)) { return false; }
    	if (!hasToStringTag$7) { return $slice$1($toString$3(value), 8, -1); }
    	return tryTypedArrays$1(value);
    };

    // modified from https://github.com/es-shims/es6-shim

    var canBeObject = function (obj) {
    	return typeof obj !== 'undefined' && obj !== null;
    };
    var hasSymbols$9 = shams();

    var toObject = Object;
    var $push = callBound('Array.prototype.push');
    var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
    var originalGetSymbols = hasSymbols$9 ? Object.getOwnPropertySymbols : null;

    // eslint-disable-next-line no-unused-vars
    var implementation$4 = function assign(target, source1) {
    	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
    	var objTarget = toObject(target);
    	var s, source, i, props, syms, value, key;
    	for (s = 1; s < arguments.length; ++s) {
    		source = toObject(arguments[s]);
    		props = objectKeys(source);
    		var getSymbols = hasSymbols$9 && (Object.getOwnPropertySymbols || originalGetSymbols);
    		if (getSymbols) {
    			syms = getSymbols(source);
    			for (i = 0; i < syms.length; ++i) {
    				key = syms[i];
    				if ($propIsEnumerable(source, key)) {
    					$push(props, key);
    				}
    			}
    		}
    		for (i = 0; i < props.length; ++i) {
    			key = props[i];
    			value = source[key];
    			if ($propIsEnumerable(source, key)) {
    				objTarget[key] = value;
    			}
    		}
    	}
    	return objTarget;
    };

    var lacksProperEnumerationOrder = function () {
    	if (!Object.assign) {
    		return false;
    	}
    	/*
    	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
    	 * note: this does not detect the bug unless there's 20 characters
    	 */
    	var str = 'abcdefghijklmnopqrst';
    	var letters = str.split('');
    	var map = {};
    	for (var i = 0; i < letters.length; ++i) {
    		map[letters[i]] = letters[i];
    	}
    	var obj = Object.assign({}, map);
    	var actual = '';
    	for (var k in obj) {
    		actual += k;
    	}
    	return str !== actual;
    };

    var assignHasPendingExceptions = function () {
    	if (!Object.assign || !Object.preventExtensions) {
    		return false;
    	}
    	/*
    	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
    	 * which is 72% slower than our shim, and Firefox 40's native implementation.
    	 */
    	var thrower = Object.preventExtensions({ 1: 2 });
    	try {
    		Object.assign(thrower, 'xy');
    	} catch (e) {
    		return thrower[1] === 'y';
    	}
    	return false;
    };

    var polyfill$3 = function getPolyfill() {
    	if (!Object.assign) {
    		return implementation$4;
    	}
    	if (lacksProperEnumerationOrder()) {
    		return implementation$4;
    	}
    	if (assignHasPendingExceptions()) {
    		return implementation$4;
    	}
    	return Object.assign;
    };

    var shim$2 = function shimAssign() {
    	var polyfill = polyfill$3();
    	defineProperties_1(
    		Object,
    		{ assign: polyfill },
    		{ assign: function () { return Object.assign !== polyfill; } }
    	);
    	return polyfill;
    };

    var polyfill$4 = callBind.apply(polyfill$3());
    // eslint-disable-next-line no-unused-vars
    var bound = function assign(target, source1) {
    	return polyfill$4(Object, arguments);
    };

    defineProperties_1(bound, {
    	getPolyfill: polyfill$3,
    	implementation: implementation$4,
    	shim: shim$2
    });

    var object_assign = bound;

    var $getTime = callBound('Date.prototype.getTime');
    var gPO = Object.getPrototypeOf;
    var $objToString = callBound('Object.prototype.toString');

    var $Set$2 = getIntrinsic('%Set%', true);
    var $mapHas$4 = callBound('Map.prototype.has', true);
    var $mapGet$1 = callBound('Map.prototype.get', true);
    var $mapSize = callBound('Map.prototype.size', true);
    var $setAdd = callBound('Set.prototype.add', true);
    var $setDelete = callBound('Set.prototype.delete', true);
    var $setHas$3 = callBound('Set.prototype.has', true);
    var $setSize = callBound('Set.prototype.size', true);

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414
    function setHasEqualElement(set, val1, opts, channel) {
      var i = esGetIterator(set);
      var result;
      while ((result = i.next()) && !result.done) {
        if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define
          // Remove the matching element to make sure we do not check that again.
          $setDelete(set, result.value);
          return true;
        }
      }

      return false;
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439
    function findLooseMatchingPrimitives(prim) {
      if (typeof prim === 'undefined') {
        return null;
      }
      if (typeof prim === 'object') { // Only pass in null as object!
        return void 0;
      }
      if (typeof prim === 'symbol') {
        return false;
      }
      if (typeof prim === 'string' || typeof prim === 'number') {
        // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.
        return +prim === +prim; // eslint-disable-line no-implicit-coercion
      }
      return true;
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460
    function mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {
      var altValue = findLooseMatchingPrimitives(prim);
      if (altValue != null) {
        return altValue;
      }
      var curB = $mapGet$1(b, altValue);
      var looseOpts = object_assign({}, opts, { strict: false });
      if (
        (typeof curB === 'undefined' && !$mapHas$4(b, altValue))
        // eslint-disable-next-line no-use-before-define
        || !internalDeepEqual(item, curB, looseOpts, channel)
      ) {
        return false;
      }
      // eslint-disable-next-line no-use-before-define
      return !$mapHas$4(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447
    function setMightHaveLoosePrim(a, b, prim) {
      var altValue = findLooseMatchingPrimitives(prim);
      if (altValue != null) {
        return altValue;
      }

      return $setHas$3(b, altValue) && !$setHas$3(a, altValue);
    }

    // taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533
    function mapHasEqualEntry(set, map, key1, item1, opts, channel) {
      var i = esGetIterator(set);
      var result;
      var key2;
      while ((result = i.next()) && !result.done) {
        key2 = result.value;
        if (
          // eslint-disable-next-line no-use-before-define
          internalDeepEqual(key1, key2, opts, channel)
          // eslint-disable-next-line no-use-before-define
          && internalDeepEqual(item1, $mapGet$1(map, key2), opts, channel)
        ) {
          $setDelete(set, key2);
          return true;
        }
      }

      return false;
    }

    function internalDeepEqual(actual, expected, options, channel) {
      var opts = options || {};

      // 7.1. All identical values are equivalent, as determined by ===.
      if (opts.strict ? objectIs(actual, expected) : actual === expected) {
        return true;
      }

      var actualBoxed = whichBoxedPrimitive(actual);
      var expectedBoxed = whichBoxedPrimitive(expected);
      if (actualBoxed !== expectedBoxed) {
        return false;
      }

      // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
      if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
        return opts.strict ? objectIs(actual, expected) : actual == expected; // eslint-disable-line eqeqeq
      }

      /*
       * 7.4. For all other Object pairs, including Array objects, equivalence is
       * determined by having the same number of owned properties (as verified
       * with Object.prototype.hasOwnProperty.call), the same set of keys
       * (although not necessarily the same order), equivalent values for every
       * corresponding key, and an identical 'prototype' property. Note: this
       * accounts for both named and indexed properties on Arrays.
       */
      // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration

      var hasActual = channel.has(actual);
      var hasExpected = channel.has(expected);
      var sentinel;
      if (hasActual && hasExpected) {
        if (channel.get(actual) === channel.get(expected)) {
          return true;
        }
      } else {
        sentinel = {};
      }
      if (!hasActual) { channel.set(actual, sentinel); }
      if (!hasExpected) { channel.set(expected, sentinel); }

      // eslint-disable-next-line no-use-before-define
      return objEquiv(actual, expected, opts, channel);
    }

    function isBuffer(x) {
      if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
        return false;
      }
      if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
        return false;
      }
      if (x.length > 0 && typeof x[0] !== 'number') {
        return false;
      }

      return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));
    }

    function setEquiv(a, b, opts, channel) {
      if ($setSize(a) !== $setSize(b)) {
        return false;
      }
      var iA = esGetIterator(a);
      var iB = esGetIterator(b);
      var resultA;
      var resultB;
      var set;
      while ((resultA = iA.next()) && !resultA.done) {
        if (resultA.value && typeof resultA.value === 'object') {
          if (!set) { set = new $Set$2(); }
          $setAdd(set, resultA.value);
        } else if (!$setHas$3(b, resultA.value)) {
          if (opts.strict) { return false; }
          if (!setMightHaveLoosePrim(a, b, resultA.value)) {
            return false;
          }
          if (!set) { set = new $Set$2(); }
          $setAdd(set, resultA.value);
        }
      }
      if (set) {
        while ((resultB = iB.next()) && !resultB.done) {
          // We have to check if a primitive value is already matching and only if it's not, go hunting for it.
          if (resultB.value && typeof resultB.value === 'object') {
            if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {
              return false;
            }
          } else if (
            !opts.strict
            && !$setHas$3(a, resultB.value)
            && !setHasEqualElement(set, resultB.value, opts.strict, channel)
          ) {
            return false;
          }
        }
        return $setSize(set) === 0;
      }
      return true;
    }

    function mapEquiv(a, b, opts, channel) {
      if ($mapSize(a) !== $mapSize(b)) {
        return false;
      }
      var iA = esGetIterator(a);
      var iB = esGetIterator(b);
      var resultA;
      var resultB;
      var set;
      var key;
      var item1;
      var item2;
      while ((resultA = iA.next()) && !resultA.done) {
        key = resultA.value[0];
        item1 = resultA.value[1];
        if (key && typeof key === 'object') {
          if (!set) { set = new $Set$2(); }
          $setAdd(set, key);
        } else {
          item2 = $mapGet$1(b, key);
          if ((typeof item2 === 'undefined' && !$mapHas$4(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {
            if (opts.strict) {
              return false;
            }
            if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {
              return false;
            }
            if (!set) { set = new $Set$2(); }
            $setAdd(set, key);
          }
        }
      }

      if (set) {
        while ((resultB = iB.next()) && !resultB.done) {
          key = resultB.value[0];
          item2 = resultB.value[1];
          if (key && typeof key === 'object') {
            if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {
              return false;
            }
          } else if (
            !opts.strict
            && (!a.has(key) || !internalDeepEqual($mapGet$1(a, key), item2, opts, channel))
            && !mapHasEqualEntry(set, a, key, item2, object_assign({}, opts, { strict: false }), channel)
          ) {
            return false;
          }
        }
        return $setSize(set) === 0;
      }
      return true;
    }

    function objEquiv(a, b, opts, channel) {
      /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5] */
      var i, key;

      if (typeof a !== typeof b) { return false; }
      if (a == null || b == null) { return false; }

      if ($objToString(a) !== $objToString(b)) { return false; }

      if (isArguments$1(a) !== isArguments$1(b)) { return false; }

      var aIsArray = isarray(a);
      var bIsArray = isarray(b);
      if (aIsArray !== bIsArray) { return false; }

      // TODO: replace when a cross-realm brand check is available
      var aIsError = a instanceof Error;
      var bIsError = b instanceof Error;
      if (aIsError !== bIsError) { return false; }
      if (aIsError || bIsError) {
        if (a.name !== b.name || a.message !== b.message) { return false; }
      }

      var aIsRegex = isRegex(a);
      var bIsRegex = isRegex(b);
      if (aIsRegex !== bIsRegex) { return false; }
      if ((aIsRegex || bIsRegex) && (a.source !== b.source || regexp_prototype_flags(a) !== regexp_prototype_flags(b))) {
        return false;
      }

      var aIsDate = isDateObject(a);
      var bIsDate = isDateObject(b);
      if (aIsDate !== bIsDate) { return false; }
      if (aIsDate || bIsDate) { // && would work too, because both are true or both false here
        if ($getTime(a) !== $getTime(b)) { return false; }
      }
      if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }

      if (whichTypedArray(a) !== whichTypedArray(b)) {
        return false;
      }

      var aIsBuffer = isBuffer(a);
      var bIsBuffer = isBuffer(b);
      if (aIsBuffer !== bIsBuffer) { return false; }
      if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
        if (a.length !== b.length) { return false; }
        for (i = 0; i < a.length; i++) {
          if (a[i] !== b[i]) { return false; }
        }
        return true;
      }

      if (typeof a !== typeof b) { return false; }

      var ka = objectKeys(a);
      var kb = objectKeys(b);
      // having the same number of owned properties (keys incorporates hasOwnProperty)
      if (ka.length !== kb.length) { return false; }

      // the same set of keys (although not necessarily the same order),
      ka.sort();
      kb.sort();
      // ~~~cheap key test
      for (i = ka.length - 1; i >= 0; i--) {
        if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq
      }

      // equivalent values for every corresponding key, and ~~~possibly expensive deep test
      for (i = ka.length - 1; i >= 0; i--) {
        key = ka[i];
        if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }
      }

      var aCollection = whichCollection(a);
      var bCollection = whichCollection(b);
      if (aCollection !== bCollection) {
        return false;
      }
      if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection
        return setEquiv(a, b, opts, channel);
      }
      if (aCollection === 'Map') { // aCollection === bCollection
        return mapEquiv(a, b, opts, channel);
      }

      return true;
    }

    var deepEqual$2 = function deepEqual(a, b, opts) {
      return internalDeepEqual(a, b, opts, sideChannel());
    };

    // do not edit .js files directly - edit src/index.jst



    var fastDeepEqual = function equal(a, b) {
      if (a === b) return true;

      if (a && b && typeof a == 'object' && typeof b == 'object') {
        if (a.constructor !== b.constructor) return false;

        var length, i, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length) return false;
          for (i = length; i-- !== 0;)
            if (!equal(a[i], b[i])) return false;
          return true;
        }



        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;

        for (i = length; i-- !== 0;)
          if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

        for (i = length; i-- !== 0;) {
          var key = keys[i];

          if (!equal(a[key], b[key])) return false;
        }

        return true;
      }

      // true if both NaN, false otherwise
      return a!==a && b!==b;
    };

    const getRelativeBounds = (rect, relativeTo, relativeDirection) => {
        const edgeDistance = 0;
        if (relativeDirection === "bottom") {
            return {
                left: relativeTo.left,
                top: relativeTo.top + relativeTo.height + edgeDistance,
                width: relativeTo.width,
                height: rect.height
            };
        }
        if (relativeDirection === "top") {
            return {
                left: relativeTo.left,
                top: relativeTo.top - rect.height - edgeDistance,
                width: relativeTo.width,
                height: rect.height
            };
        }
        if (relativeDirection === "right") {
            return {
                left: relativeTo.left + relativeTo.width + edgeDistance,
                top: relativeTo.top,
                width: rect.width,
                height: relativeTo.height
            };
        }
        if (relativeDirection === "left") {
            return {
                left: relativeTo.left - rect.width - edgeDistance,
                top: relativeTo.top,
                width: rect.width,
                height: relativeTo.height
            };
        }
        throw new Error("invalid relativeDirection");
    };
    const objEqual = (objOne, objTwo) => deepEqual$2(objOne, objTwo, { strict: true });
    const objEqualFast = (objOne, objTwo) => fastDeepEqual(objOne, objTwo);
    const waitFor = (invocations, callback) => {
        let left = invocations;
        return () => {
            left--;
            if (left === 0) {
                callback();
            }
        };
    };
    const wait = (ms) => new Promise((resolve) => setTimeout(() => resolve(), ms));

    var version$5 = "1.17.1";

    class GlueController {
        constructor(portsBridge, sessionStorage) {
            this.portsBridge = portsBridge;
            this.sessionStorage = sessionStorage;
        }
        get platformVersion() {
            return version$5;
        }
        get clientGlue() {
            return this._clientGlue;
        }
        get contextsTrackingGlue() {
            return this._contextsTrackingGlue;
        }
        get systemGlue() {
            return this._systemGlue;
        }
        get platformWindowId() {
            return this._platformClientWindowId.slice();
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this._config = config;
                const systemSettings = this.sessionStorage.getSystemSettings();
                if (!systemSettings) {
                    throw new Error("Cannot initiate the glue controller, because the system settings are not defined");
                }
                this._systemSettings = systemSettings;
                this._systemGlue = yield this.initSystemGlue(config.glue);
                logger.setLogger(this._systemGlue.logger);
                this._contextsTrackingGlue = yield this.setUpCtxTracking(config);
            });
        }
        initClientGlue(config, factory, isWorkspaceFrame) {
            return __awaiter(this, void 0, void 0, function* () {
                const port = yield this.portsBridge.createInternalClient();
                this.registerClientWindow(isWorkspaceFrame);
                const webConfig = {
                    application: "Platform",
                    gateway: { webPlatform: { port, windowId: this.platformWindowId } }
                };
                const c = Object.assign({}, config, webConfig);
                this._clientGlue = factory ? yield factory(c) : yield glueWebFactory(c);
                return this._clientGlue;
            });
        }
        createPlatformSystemMethod(handler) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.createMethodAsync(GlueWebPlatformControlName$1, handler);
            });
        }
        createPlatformSystemStream() {
            return __awaiter(this, void 0, void 0, function* () {
                this._systemStream = yield this.createStream(GlueWebPlatformStreamName$1);
            });
        }
        createWorkspacesStream() {
            return __awaiter(this, void 0, void 0, function* () {
                this._workspacesStream = yield this.createStream(GlueWebPlatformWorkspacesStreamName);
            });
        }
        createWorkspacesEventsReceiver(callback) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this._systemGlue.interop.register(GlueWorkspacesEventsReceiverName, (args) => callback(args));
            });
        }
        pushSystemMessage(domain, operation, data) {
            if (!this._systemStream) {
                throw new Error(`Cannot push data to domain: ${domain}, because the system stream is not created`);
            }
            this._systemStream.push({ domain, operation, data });
        }
        pushWorkspacesMessage(data) {
            if (!this._workspacesStream) {
                throw new Error("Cannot push data to domain: workspaces, because the workspaces stream is not created");
            }
            this._workspacesStream.push({ data });
        }
        callFrame(operationDefinition, operationArguments, windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                const messageData = { operation: operationDefinition.name, operationArguments };
                const baseErrorMessage = `Internal Platform->Frame Communication Error. Attempted calling workspace frame: ${windowId} for operation ${operationDefinition.name} `;
                if (operationDefinition.dataDecoder) {
                    const decodeResult = operationDefinition.dataDecoder.run(messageData.operationArguments);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} OutBound validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                const methodName = GlueWorkspaceFrameClientControlName;
                const result = yield this.transmitMessage(methodName, messageData, baseErrorMessage, { windowId }, { methodResponseTimeoutMs: 30000, waitTimeoutMs: 30000 });
                if (operationDefinition.resultDecoder) {
                    const decodeResult = operationDefinition.resultDecoder.run(result);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} Result validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                return result;
            });
        }
        callWindow(domain, operationDefinition, data, windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                const operation = operationDefinition.name;
                const messageData = { domain, operation, data };
                const baseErrorMessage = `Internal Platform-> ${domain} Domain Communication Error. Attempted calling client window: ${windowId} for operation ${operation}. `;
                if (operationDefinition.dataDecoder) {
                    const decodeResult = operationDefinition.dataDecoder.run(messageData.data);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} OutBound validation failed: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                const result = yield this.transmitMessage(GlueClientControlName$1, messageData, baseErrorMessage, { windowId }, { methodResponseTimeoutMs: 30000, waitTimeoutMs: 30000 });
                if (operationDefinition.resultDecoder) {
                    const decodeResult = operationDefinition.resultDecoder.run(result);
                    if (!decodeResult.ok) {
                        throw new Error(`${baseErrorMessage} Result validation failed when calling window: ${windowId} for operation ${operation}: ${JSON.stringify(decodeResult.error)}`);
                    }
                }
                return result;
            });
        }
        setInstanceStartContext(windowId, context) {
            return __awaiter(this, void 0, void 0, function* () {
                const key = `___instance___${windowId}`;
                yield this._systemGlue.contexts.set(key, context);
            });
        }
        setWindowStartContext(windowId, context) {
            return PromisePlus$3((resolve, reject) => {
                let unsub;
                const ready = waitFor(3, () => {
                    resolve();
                    unsub();
                });
                const key = `___window___${windowId}`;
                this._clientGlue.contexts.subscribe(key, ready)
                    .then((un) => {
                    unsub = un;
                    ready();
                });
                this._systemGlue.contexts.set(key, context).then(ready).catch(reject);
            }, 10000, `Timed out waiting to set the window context for: ${windowId}`);
        }
        getServers() {
            return this._clientGlue.interop.servers();
        }
        subscribeForServerAdded(callback) {
            return this._clientGlue.interop.serverAdded(callback);
        }
        subscribeForMethodAdded(callback) {
            return this._clientGlue.interop.methodAdded(callback);
        }
        invokeMethod(method, argumentObj, target, options, success, error) {
            return this._clientGlue.interop.invoke(method, argumentObj, target, options, success, error);
        }
        setContext(name, data) {
            return this._systemGlue.contexts.set(name, data);
        }
        switchTransport(config, target) {
            if (target === "contextsTrack") {
                return this._contextsTrackingGlue ?
                    this._contextsTrackingGlue.connection.switchTransport(config) :
                    Promise.resolve({ success: true });
            }
            const glueToSwitch = target === "system" ? this._systemGlue : this._clientGlue;
            return glueToSwitch.connection.switchTransport(config);
        }
        onDisconnected(callback) {
            return this._systemGlue.connection.disconnected(callback);
        }
        getSystemGlueTransportName() {
            return this._systemGlue.connection.transport.name();
        }
        initSystemGlue(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const port = yield this.portsBridge.createInternalClient();
                const logLevel = (_b = (_a = config === null || config === void 0 ? void 0 : config.systemLogger) === null || _a === void 0 ? void 0 : _a.level) !== null && _b !== void 0 ? _b : "warn";
                return yield GlueCore$1({
                    application: "Platform-System",
                    gateway: { webPlatform: { port } },
                    logger: logLevel,
                    contexts: {
                        reAnnounceKnownContexts: false,
                        trackAllContexts: false
                    },
                    identity: {
                        instance: this._systemSettings.systemInstanceId
                    }
                });
            });
        }
        setUpCtxTracking(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this._config.connection.preferred) {
                    return yield this.initContextsTrackingGlue({
                        reAnnounceKnownContexts: true,
                        trackAllContexts: true
                    }, config);
                }
            });
        }
        initContextsTrackingGlue(contextsSettings, config) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                const port = yield this.portsBridge.createInternalClient();
                return yield GlueCore$1({
                    application: "Platform-Contexts-Track",
                    gateway: { webPlatform: { port } },
                    logger: (_c = (_b = (_a = config === null || config === void 0 ? void 0 : config.glue) === null || _a === void 0 ? void 0 : _a.systemLogger) === null || _b === void 0 ? void 0 : _b.level) !== null && _c !== void 0 ? _c : "warn",
                    contexts: contextsSettings,
                    identity: {
                        instance: this._systemSettings.ctxTrackInstanceId
                    }
                });
            });
        }
        registerClientWindow(isWorkspaceFrame) {
            if (isWorkspaceFrame) {
                const platformFrame = this.sessionStorage.getPlatformFrame();
                this._platformClientWindowId = platformFrame ? platformFrame.windowId :
                    window.name ? window.name : shortid$2.generate();
                if (!platformFrame) {
                    const platformFrameData = { windowId: this.platformWindowId, active: true, isPlatform: true };
                    this.sessionStorage.saveFrameData(platformFrameData);
                }
                window.name = this.platformWindowId;
                return;
            }
            const platformWindowData = this.sessionStorage.getWindowDataByName("Platform");
            this._platformClientWindowId = platformWindowData ? platformWindowData.windowId :
                window.name ? window.name : shortid$2.generate();
            if (!platformWindowData) {
                this.sessionStorage.saveWindowData({ name: "Platform", windowId: this.platformWindowId });
            }
            window.name = this.platformWindowId;
        }
        createMethodAsync(name, handler) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this._systemGlue.interop.registerAsync(name, handler);
            });
        }
        createStream(name) {
            return __awaiter(this, void 0, void 0, function* () {
                return this._systemGlue.interop.createStream(name);
            });
        }
        transmitMessage(methodName, messageData, baseErrorMessage, target, options) {
            return __awaiter(this, void 0, void 0, function* () {
                let invocationResult;
                try {
                    invocationResult = yield this._systemGlue.interop.invoke(methodName, messageData, target, options);
                    if (!invocationResult) {
                        throw new Error(`${baseErrorMessage} Received unsupported result from the client - empty result`);
                    }
                    if (!Array.isArray(invocationResult.all_return_values) || invocationResult.all_return_values.length === 0) {
                        throw new Error(`${baseErrorMessage} Received unsupported result from the client - empty values collection`);
                    }
                }
                catch (error) {
                    if (error && error.all_errors && error.all_errors.length) {
                        const invocationErrorMessage = error.all_errors[0].message;
                        throw new Error(`${baseErrorMessage} -> Inner message: ${invocationErrorMessage}`);
                    }
                    throw new Error(`${baseErrorMessage} -> Inner message: ${error.message}`);
                }
                return invocationResult.all_return_values[0].returned;
            });
        }
    }

    function createRegistry$3(options) {
        if (options && options.errorHandling
            && typeof options.errorHandling !== "function"
            && options.errorHandling !== "log"
            && options.errorHandling !== "silent"
            && options.errorHandling !== "throw") {
            throw new Error("Invalid options passed to createRegistry. Prop errorHandling should be [\"log\" | \"silent\" | \"throw\" | (err) => void], but " + typeof options.errorHandling + " was passed");
        }
        var _userErrorHandler = options && typeof options.errorHandling === "function" && options.errorHandling;
        var callbacks = {};
        function add(key, callback, replayArgumentsArr) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                callbacksForKey = [];
                callbacks[key] = callbacksForKey;
            }
            callbacksForKey.push(callback);
            if (replayArgumentsArr) {
                setTimeout(function () {
                    replayArgumentsArr.forEach(function (replayArgument) {
                        var _a;
                        if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {
                            try {
                                if (Array.isArray(replayArgument)) {
                                    callback.apply(undefined, replayArgument);
                                }
                                else {
                                    callback.apply(undefined, [replayArgument]);
                                }
                            }
                            catch (err) {
                                _handleError(err, key);
                            }
                        }
                    });
                }, 0);
            }
            return function () {
                var allForKey = callbacks[key];
                if (!allForKey) {
                    return;
                }
                allForKey = allForKey.reduce(function (acc, element, index) {
                    if (!(element === callback && acc.length === index)) {
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (allForKey.length === 0) {
                    delete callbacks[key];
                }
                else {
                    callbacks[key] = allForKey;
                }
            };
        }
        function execute(key) {
            var argumentsArr = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                argumentsArr[_i - 1] = arguments[_i];
            }
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey || callbacksForKey.length === 0) {
                return [];
            }
            var results = [];
            callbacksForKey.forEach(function (callback) {
                try {
                    var result = callback.apply(undefined, argumentsArr);
                    results.push(result);
                }
                catch (err) {
                    results.push(undefined);
                    _handleError(err, key);
                }
            });
            return results;
        }
        function _handleError(exceptionArtifact, key) {
            var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);
            if (_userErrorHandler) {
                _userErrorHandler(errParam);
                return;
            }
            var msg = "[ERROR] callback-registry: User callback for key \"" + key + "\" failed: " + errParam.stack;
            if (options) {
                switch (options.errorHandling) {
                    case "log":
                        return console.error(msg);
                    case "silent":
                        return;
                    case "throw":
                        throw new Error(msg);
                }
            }
            console.error(msg);
        }
        function clear() {
            callbacks = {};
        }
        function clearKey(key) {
            var callbacksForKey = callbacks[key];
            if (!callbacksForKey) {
                return;
            }
            delete callbacks[key];
        }
        return {
            add: add,
            execute: execute,
            clear: clear,
            clearKey: clearKey
        };
    }
    createRegistry$3.default = createRegistry$3;
    var lib$5 = createRegistry$3;

    class PortsBridge {
        constructor(gateway, sessionStorage, ioc) {
            this.gateway = gateway;
            this.sessionStorage = sessionStorage;
            this.ioc = ioc;
            this.registry = lib$5();
            this.allPorts = {};
            this.allClients = [];
            this.unLoadStarted = false;
            this.isPreferredActivated = false;
            this.transactionsController = this.ioc.transactionsController;
            this.startUpPromise = new Promise((resolve) => {
                this.startupResolve = resolve;
            });
        }
        configure(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const systemSettings = this.sessionStorage.getSystemSettings();
                if (!systemSettings) {
                    throw new Error("Cannot initiate the platform port bridge, because the system settings are not defined");
                }
                this._communicationId = systemSettings.systemInstanceId;
                yield this.gateway.start(config === null || config === void 0 ? void 0 : config.gateway);
                this.setUpGenericMessageHandler();
                this.setUpUnload();
            });
        }
        start() {
            this.startupResolve();
        }
        createInternalClient() {
            return __awaiter(this, void 0, void 0, function* () {
                const channel = this.ioc.createMessageChannel();
                yield this.gateway.setupInternalClient(channel.port1);
                return channel.port2;
            });
        }
        onClientUnloaded(callback) {
            return this.registry.add("client-unloaded", callback);
        }
        handleExtConnectionRequest(clientData, port) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const client = clientData.glue42core;
                const hasImpersonatedWindowId = !!client.parentWindowId;
                if (!hasImpersonatedWindowId) {
                    const id = client.clientId;
                    const windowData = {
                        windowId: id,
                        name: id
                    };
                    yield this.ioc.windowsController.processNewWindow(windowData);
                }
                yield this.gateway.connectExtClient(port, this.removeClient.bind(this));
                const myWindowId = (_a = this.sessionStorage.getWindowDataByName("Platform")) === null || _a === void 0 ? void 0 : _a.windowId;
                const message = {
                    glue42core: {
                        type: Glue42CoreMessageTypes$1.connectionAccepted.name,
                        parentWindowId: myWindowId,
                        appName: "ext-no-app",
                        clientId: client.clientId,
                        clientType: "child"
                    }
                };
                this.allPorts[client.clientId] = port;
                port.postMessage(message);
            });
        }
        setActivePreferredTransportConfig(transportConfig) {
            if (transportConfig.type === "secondary") {
                this.activePreferredTransportConfig = transportConfig;
                return;
            }
            delete this.activePreferredTransportConfig;
        }
        setPreferredActivated() {
            this.isPreferredActivated = true;
        }
        switchAllClientsTransport(transportConfig) {
            return __awaiter(this, void 0, void 0, function* () {
                const transactions = Object.keys(this.allPorts)
                    .map((id) => this.sendClientPortRequest({
                    type: Glue42CoreMessageTypes$1.transportSwitchRequest.name,
                    timeout: defaultClientPortRequestTimeoutMS,
                    clientId: id,
                    args: { switchSettings: transportConfig }
                }));
                yield Promise.all(transactions);
            });
        }
        checkClientsPreferredLogic() {
            return __awaiter(this, void 0, void 0, function* () {
                const transactions = Object.keys(this.allPorts)
                    .map((id) => this.sendClientPortRequest({
                    type: Glue42CoreMessageTypes$1.checkPreferredLogic.name,
                    timeout: defaultClientPreferredLogicTestTimeoutMS,
                    clientId: id
                }));
                try {
                    yield Promise.all(transactions);
                    return { success: true };
                }
                catch (error) {
                    return { success: false };
                }
            });
        }
        checkClientsPreferredConnection(url) {
            return __awaiter(this, void 0, void 0, function* () {
                const transactions = Object.keys(this.allPorts)
                    .map((id) => this.sendClientPortRequest({
                    type: Glue42CoreMessageTypes$1.checkPreferredConnection.name,
                    args: { url },
                    timeout: defaultClientPortRequestTimeoutMS,
                    clientId: id
                }));
                try {
                    yield Promise.all(transactions);
                    return { success: true };
                }
                catch (error) {
                    return { success: false };
                }
            });
        }
        removeGwClient(windowId) {
            const foundClient = this.allClients.find((client) => client.bridgeInstanceId === windowId);
            if (!foundClient) {
                return;
            }
            this.allClients = this.allClients.filter((client) => client.bridgeInstanceId !== windowId);
            foundClient.client.disconnect();
            if (this.allPorts[foundClient.clientId]) {
                delete this.allPorts[foundClient.clientId];
            }
        }
        setUpUnload() {
            window.addEventListener("unload", () => {
                this.unLoadStarted = true;
                for (const id in this.allPorts) {
                    this.allPorts[id].postMessage({ type: "platformUnload" });
                }
            });
        }
        setUpGenericMessageHandler() {
            window.addEventListener("message", (event) => {
                var _a;
                const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (!data || this.unLoadStarted) {
                    return;
                }
                if (data.type === Glue42CoreMessageTypes$1.clientUnload.name) {
                    const client = {
                        windowId: data.data.ownWindowId,
                        win: event.source
                    };
                    return this.registry.execute("client-unloaded", client);
                }
                if (data.type === Glue42CoreMessageTypes$1.connectionRequest.name) {
                    return this.startUpPromise.then(() => this.handleRemoteConnectionRequest(event.source, event.origin, data.clientId, data.clientType, data.bridgeInstanceId));
                }
                if (data.type === Glue42CoreMessageTypes$1.platformPing.name) {
                    return this.startUpPromise.then(() => this.handlePlatformPing(event.source, event.origin));
                }
                if (data.type === Glue42CoreMessageTypes$1.parentPing.name) {
                    return this.startUpPromise.then(() => this.handleParentPing(event.source, event.origin));
                }
            });
        }
        handleRemoteConnectionRequest(source, origin, clientId, clientType, bridgeInstanceId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const channel = this.ioc.createMessageChannel();
                const client = yield this.gateway.connectClient(channel.port1);
                this.setupGwClientPort({ client, clientId, clientPort: channel.port1 });
                this.allClients.push({ client, bridgeInstanceId, clientId });
                const foundData = this.sessionStorage.getBridgeInstanceData(bridgeInstanceId);
                const appName = foundData === null || foundData === void 0 ? void 0 : foundData.appName;
                const myWindowId = (_a = this.sessionStorage.getWindowDataByName("Platform")) === null || _a === void 0 ? void 0 : _a.windowId;
                const message = {
                    glue42core: {
                        type: Glue42CoreMessageTypes$1.connectionAccepted.name,
                        port: channel.port2,
                        communicationId: this._communicationId,
                        isPreferredActivated: this.isPreferredActivated,
                        parentWindowId: myWindowId,
                        appName, clientId, clientType
                    }
                };
                source.postMessage(message, origin, [channel.port2]);
            });
        }
        handleParentPing(source, origin) {
            const message = {
                glue42core: {
                    type: Glue42CoreMessageTypes$1.parentReady.name
                }
            };
            source.postMessage(message, origin);
        }
        handlePlatformPing(source, origin) {
            const message = {
                glue42core: {
                    type: Glue42CoreMessageTypes$1.platformReady.name
                }
            };
            source.postMessage(message, origin);
        }
        removeClient(clientId, announce, preservePort) {
            if (!clientId) {
                return;
            }
            if (this.allPorts[clientId] && !preservePort) {
                delete this.allPorts[clientId];
            }
            if (!announce) {
                return;
            }
            const client = { windowId: clientId };
            this.registry.execute("client-unloaded", client);
        }
        setupGwClientPort(config) {
            if (this.allPorts[config.clientId] && this.allPorts[config.clientId].onmessage) {
                this.allPorts[config.clientId].onmessage = null;
            }
            this.allPorts[config.clientId] = config.clientPort;
            config.clientPort.onmessage = (event) => {
                var _a;
                const data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;
                if (data && (data.type === Glue42CoreMessageTypes$1.clientUnload.name || data.type === Glue42CoreMessageTypes$1.gatewayDisconnect.name)) {
                    this.removeClient(data.data.clientId, false, data.type === Glue42CoreMessageTypes$1.gatewayDisconnect.name);
                    if (this.allClients.some((client) => client.clientId === data.data.clientId)) {
                        this.allClients = this.allClients.filter((client) => client.clientId !== data.data.clientId);
                        config.client.disconnect();
                    }
                    return;
                }
                if (data && data.type === Glue42CoreMessageTypes$1.transportSwitchResponse.name) {
                    const args = data.args;
                    if (args.success) {
                        this.transactionsController.completeTransaction(data.transactionId);
                    }
                    else {
                        this.transactionsController.failTransaction(data.transactionId, `The client: ${config.clientId} could not connect using the provided transport config.`);
                    }
                    return;
                }
                if (data && data.type === Glue42CoreMessageTypes$1.getCurrentTransport.name) {
                    const transactionId = data.transactionId;
                    config.clientPort.postMessage({
                        type: Glue42CoreMessageTypes$1.getCurrentTransportResponse.name,
                        args: {
                            transportState: this.getCurrentTransportState(),
                        },
                        transactionId
                    });
                    return;
                }
                if (data && data.type === Glue42CoreMessageTypes$1.checkPreferredLogicResponse.name) {
                    return this.transactionsController.completeTransaction(data.transactionId);
                }
                if (data && data.type === Glue42CoreMessageTypes$1.checkPreferredConnectionResponse.name) {
                    const args = data.args;
                    if (args.error) {
                        return this.transactionsController.failTransaction(data.transactionId, args.error);
                    }
                    if (!args.live) {
                        return this.transactionsController.failTransaction(data.transactionId, `Client ${config.clientId} could not connect to the preferred WS.`);
                    }
                    return this.transactionsController.completeTransaction(data.transactionId);
                }
                config.client.send(event.data);
            };
        }
        getCurrentTransportState() {
            var _a;
            const transportName = this.ioc.glueController.getSystemGlueTransportName();
            const transportState = {
                transportName,
                type: transportName === webPlatformTransportName$1 ? "default" : "secondary",
                transportConfig: transportName === webPlatformTransportName$1 ? undefined : (_a = this.activePreferredTransportConfig) === null || _a === void 0 ? void 0 : _a.transportConfig
            };
            return transportState;
        }
        sendClientPortRequest(request) {
            const client = this.allPorts[request.clientId];
            if (!client) {
                throw new Error(`Cannot sent port request: ${request.type} to ${request.clientId}, because there is no such client`);
            }
            const transaction = this.transactionsController.createTransaction(request.type, request.timeout || defaultClientPortRequestTimeoutMS);
            const type = request.type;
            const args = request.args;
            client.postMessage({ type, args, transactionId: transaction.id });
            return transaction.lock;
        }
    }

    const windowOperationDecoder = oneOf$1(constant$1("openWindow"), constant$1("windowHello"), constant$1("getUrl"), constant$1("getTitle"), constant$1("setTitle"), constant$1("moveResize"), constant$1("focus"), constant$1("close"), constant$1("getBounds"), constant$1("getFrameBounds"), constant$1("registerWorkspaceWindow"), constant$1("unregisterWorkspaceWindow"), constant$1("operationCheck"));
    const openWindowConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        url: nonEmptyStringDecoder$1,
        options: optional$1(windowOpenSettingsDecoder$1)
    });
    const openWindowSuccessDecoder = object$1({
        windowId: nonEmptyStringDecoder$1,
        name: nonEmptyStringDecoder$1
    });
    const simpleWindowDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1
    });
    const windowBoundsResultDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        bounds: windowBoundsDecoder$1
    });
    const frameWindowBoundsResultDecoder$1 = object$1({
        bounds: windowBoundsDecoder$1
    });
    const windowUrlResultDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        url: nonEmptyStringDecoder$1
    });
    const windowMoveResizeConfigDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relative: optional$1(boolean$1())
    });
    const windowTitleConfigDecoder$1 = object$1({
        windowId: nonEmptyStringDecoder$1,
        title: string$1()
    });

    const workspacesOperationDecoder = oneOf$1(constant$1("isWindowInWorkspace"), constant$1("createWorkspace"), constant$1("createFrame"), constant$1("initFrame"), constant$1("getAllFramesSummaries"), constant$1("getFrameSummary"), constant$1("getAllWorkspacesSummaries"), constant$1("getWorkspaceSnapshot"), constant$1("getAllLayoutsSummaries"), constant$1("openWorkspace"), constant$1("deleteLayout"), constant$1("saveLayout"), constant$1("importLayout"), constant$1("exportAllLayouts"), constant$1("restoreItem"), constant$1("maximizeItem"), constant$1("focusItem"), constant$1("closeItem"), constant$1("resizeItem"), constant$1("moveFrame"), constant$1("getFrameSnapshot"), constant$1("forceLoadWindow"), constant$1("ejectWindow"), constant$1("setItemTitle"), constant$1("moveWindowTo"), constant$1("addWindow"), constant$1("addContainer"), constant$1("bundleWorkspace"), constant$1("changeFrameState"), constant$1("getFrameState"), constant$1("getFrameBounds"), constant$1("frameHello"), constant$1("hibernateWorkspace"), constant$1("resumeWorkspace"), constant$1("getWorkspacesConfig"), constant$1("lockWorkspace"), constant$1("lockContainer"), constant$1("lockWindow"), constant$1("pinWorkspace"), constant$1("unpinWorkspace"), constant$1("getWorkspaceIcon"), constant$1("setWorkspaceIcon"), constant$1("checkStarted"), constant$1("getPlatformFrameId"), constant$1("getWorkspaceWindowsOnLayoutSaveContext"), constant$1("getWorkspacesLayouts"), constant$1("setMaximizationBoundary"), constant$1("operationCheck"));
    const frameHelloDecoder = object$1({
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const workspaceWindowDataDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        windowId: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        appName: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1)
    });
    const isWindowInSwimlaneResultDecoder = object$1({
        inWorkspace: boolean$1()
    });
    const allParentDecoder = oneOf$1(constant$1("workspace"), constant$1("row"), constant$1("column"), constant$1("group"));
    const subParentDecoder = oneOf$1(constant$1("row"), constant$1("column"), constant$1("group"));
    const frameStateDecoder = oneOf$1(constant$1("maximized"), constant$1("minimized"), constant$1("normal"));
    const workspaceBuilderCreateConfigDecoder = object$1({
        saveLayout: optional$1(boolean$1())
    });
    const deleteLayoutConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1
    });
    const swimlaneWindowDefinitionDecoder = object$1({
        type: optional$1(constant$1("window")),
        appName: optional$1(nonEmptyStringDecoder$1),
        windowId: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1())
    });
    const strictSwimlaneWindowDefinitionDecoder = object$1({
        type: constant$1("window"),
        appName: optional$1(nonEmptyStringDecoder$1),
        windowId: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1())
    });
    const parentDefinitionDecoder = object$1({
        type: optional$1(subParentDecoder),
        children: optional$1(lazy$1(() => array$1(oneOf$1(swimlaneWindowDefinitionDecoder, parentDefinitionDecoder)))),
        config: optional$1(anyJson$1())
    });
    const groupDefinitionConfigDecoder = object$1({
        minWidth: optional$1(number$1()),
        maxWidth: optional$1(number$1()),
        minHeight: optional$1(number$1()),
        maxHeight: optional$1(number$1()),
        allowExtract: optional$1(boolean$1()),
        allowReorder: optional$1(boolean$1()),
        allowDrop: optional$1(boolean$1()),
        allowDropHeader: optional$1(boolean$1()),
        allowDropLeft: optional$1(boolean$1()),
        allowDropTop: optional$1(boolean$1()),
        allowDropRight: optional$1(boolean$1()),
        allowDropBottom: optional$1(boolean$1()),
        showMaximizeButton: optional$1(boolean$1()),
        showEjectButton: optional$1(boolean$1()),
        showAddWindowButton: optional$1(boolean$1())
    });
    const rowDefinitionConfigDecoder = object$1({
        minHeight: optional$1(number$1()),
        maxHeight: optional$1(number$1()),
        allowDrop: optional$1(boolean$1()),
        allowSplitters: optional$1(boolean$1()),
        isPinned: optional$1(boolean$1()),
        maximizationBoundary: optional$1(boolean$1())
    });
    const columnDefinitionConfigDecoder = object$1({
        minWidth: optional$1(number$1()),
        maxWidth: optional$1(number$1()),
        allowDrop: optional$1(boolean$1()),
        allowSplitters: optional$1(boolean$1()),
        isPinned: optional$1(boolean$1()),
        maximizationBoundary: optional$1(boolean$1())
    });
    const strictColumnDefinitionDecoder = object$1({
        type: constant$1("column"),
        children: optional$1(lazy$1(() => array$1(oneOf$1(strictSwimlaneWindowDefinitionDecoder, strictParentDefinitionDecoder)))),
        config: optional$1(columnDefinitionConfigDecoder)
    });
    const strictRowDefinitionDecoder = object$1({
        type: constant$1("row"),
        children: optional$1(lazy$1(() => array$1(oneOf$1(strictSwimlaneWindowDefinitionDecoder, strictParentDefinitionDecoder)))),
        config: optional$1(rowDefinitionConfigDecoder)
    });
    const strictGroupDefinitionDecoder = object$1({
        type: constant$1("group"),
        children: optional$1(lazy$1(() => array$1(oneOf$1(strictSwimlaneWindowDefinitionDecoder, strictParentDefinitionDecoder)))),
        config: optional$1(groupDefinitionConfigDecoder)
    });
    const strictParentDefinitionDecoder = oneOf$1(strictGroupDefinitionDecoder, strictColumnDefinitionDecoder, strictRowDefinitionDecoder);
    const stateDecoder = oneOf$1(string$1().where((s) => s.toLowerCase() === "maximized", "Expected a case insensitive variation of 'maximized'"), string$1().where((s) => s.toLowerCase() === "normal", "Expected a case insensitive variation of 'normal'"));
    const newFrameConfigDecoder = object$1({
        bounds: optional$1(object$1({
            left: optional$1(number$1()),
            top: optional$1(number$1()),
            width: optional$1(nonNegativeNumberDecoder$1),
            height: optional$1(nonNegativeNumberDecoder$1)
        })),
        frameId: optional$1(nonEmptyStringDecoder$1)
    });
    const loadStrategyDecoder = oneOf$1(constant$1("direct"), constant$1("delayed"), constant$1("lazy"));
    const restoreWorkspaceConfigDecoder = object$1({
        app: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        loadStrategy: optional$1(loadStrategyDecoder),
        title: optional$1(nonEmptyStringDecoder$1),
        reuseWorkspaceId: optional$1(nonEmptyStringDecoder$1),
        frameId: optional$1(nonEmptyStringDecoder$1),
        lockdown: optional$1(boolean$1()),
        activateFrame: optional$1(boolean$1()),
        newFrame: optional$1(oneOf$1(newFrameConfigDecoder, boolean$1())),
        noTabHeader: optional$1(boolean$1()),
        inMemoryLayout: optional$1(boolean$1()),
        isPinned: optional$1(boolean$1()),
        icon: optional$1(nonEmptyStringDecoder$1),
        isSelected: optional$1(boolean$1()),
        positionIndex: optional$1(nonNegativeNumberDecoder$1)
    });
    const openWorkspaceConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        restoreOptions: optional$1(restoreWorkspaceConfigDecoder)
    });
    const workspaceDefinitionDecoder = object$1({
        children: optional$1(array$1(oneOf$1(swimlaneWindowDefinitionDecoder, parentDefinitionDecoder))),
        context: optional$1(anyJson$1()),
        config: optional$1(object$1({
            title: optional$1(nonEmptyStringDecoder$1),
            position: optional$1(nonNegativeNumberDecoder$1),
            isFocused: optional$1(boolean$1()),
            loadStrategy: optional$1(loadStrategyDecoder),
            noTabHeader: optional$1(boolean$1()),
            allowDrop: optional$1(boolean$1()),
            allowDropLeft: optional$1(boolean$1()),
            allowDropTop: optional$1(boolean$1()),
            allowDropRight: optional$1(boolean$1()),
            allowDropBottom: optional$1(boolean$1()),
            allowExtract: optional$1(boolean$1()),
            allowWindowReorder: optional$1(boolean$1()),
            showSaveButton: optional$1(boolean$1()),
            allowWorkspaceTabReorder: optional$1(boolean$1()),
            allowWorkspaceTabExtract: optional$1(boolean$1()),
            showCloseButton: optional$1(boolean$1()),
            allowSplitters: optional$1(boolean$1()),
            positionIndex: optional$1(nonNegativeNumberDecoder$1)
        })),
        frame: optional$1(object$1({
            reuseFrameId: optional$1(nonEmptyStringDecoder$1),
            newFrame: optional$1(oneOf$1(boolean$1(), newFrameConfigDecoder))
        }))
    });
    const builderConfigDecoder = object$1({
        type: allParentDecoder,
        definition: optional$1(oneOf$1(workspaceDefinitionDecoder, parentDefinitionDecoder))
    });
    const workspaceCreateConfigDecoder = intersection(workspaceDefinitionDecoder, object$1({
        saveConfig: optional$1(object$1({
            saveLayout: optional$1(boolean$1())
        }))
    }));
    const getFrameSummaryConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1
    });
    const frameSummaryDecoder = object$1({
        id: nonEmptyStringDecoder$1
    });
    const workspaceSummaryDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        positionIndex: number$1(),
        title: nonEmptyStringDecoder$1,
        focused: boolean$1(),
        layoutName: optional$1(nonEmptyStringDecoder$1),
        isSelected: optional$1(boolean$1())
    });
    const containerSummaryDecoder = object$1({
        type: subParentDecoder,
        id: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        positionIndex: number$1()
    });
    const eventTypeDecoder = oneOf$1(constant$1("frame"), constant$1("workspace"), constant$1("container"), constant$1("window"));
    const streamRequestArgumentsDecoder = object$1({
        type: eventTypeDecoder,
        branch: nonEmptyStringDecoder$1
    });
    const workspaceEventActionDecoder = oneOf$1(constant$1("opened"), constant$1("closing"), constant$1("closed"), constant$1("focus"), constant$1("added"), constant$1("loaded"), constant$1("removed"), constant$1("childrenUpdate"), constant$1("containerChange"), constant$1("maximized"), constant$1("restored"), constant$1("minimized"), constant$1("normal"), constant$1("selected"));
    const workspaceConfigResultDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        title: nonEmptyStringDecoder$1,
        positionIndex: nonNegativeNumberDecoder$1,
        name: nonEmptyStringDecoder$1,
        layoutName: optional$1(nonEmptyStringDecoder$1),
        isHibernated: boolean$1(),
        isSelected: boolean$1(),
        lastActive: number$1(),
        allowDrop: optional$1(boolean$1()),
        allowExtract: optional$1(boolean$1()),
        allowWindowReorder: optional$1(boolean$1()),
        allowSplitters: optional$1(boolean$1()),
        showCloseButton: optional$1(boolean$1()),
        showSaveButton: optional$1(boolean$1()),
        allowWorkspaceTabReorder: optional$1(boolean$1()),
        allowDropLeft: optional$1(boolean$1()),
        allowDropTop: optional$1(boolean$1()),
        allowDropRight: optional$1(boolean$1()),
        allowDropBottom: optional$1(boolean$1()),
        showAddWindowButtons: optional$1(boolean$1()),
        showEjectButtons: optional$1(boolean$1()),
        showWindowCloseButtons: optional$1(boolean$1()),
        minWidth: optional$1(number$1()),
        maxWidth: optional$1(number$1()),
        minHeight: optional$1(number$1()),
        maxHeight: optional$1(number$1()),
        widthInPx: optional$1(number$1()),
        heightInPx: optional$1(number$1())
    });
    const baseChildSnapshotConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        positionIndex: number$1()
    });
    const parentSnapshotConfigDecoder = anyJson$1();
    const swimlaneWindowSnapshotConfigDecoder = intersection(baseChildSnapshotConfigDecoder, object$1({
        windowId: optional$1(nonEmptyStringDecoder$1),
        isMaximized: optional$1(boolean$1()),
        isFocused: boolean$1(),
        isSelected: optional$1(boolean$1()),
        title: optional$1(string$1()),
        appName: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1())
    }));
    const childSnapshotResultDecoder = object$1({
        id: optional$1(nonEmptyStringDecoder$1),
        config: oneOf$1(parentSnapshotConfigDecoder, swimlaneWindowSnapshotConfigDecoder),
        children: optional$1(lazy$1(() => array$1(childSnapshotResultDecoder))),
        type: oneOf$1(constant$1("window"), constant$1("row"), constant$1("column"), constant$1("group"))
    });
    const workspaceSnapshotResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: workspaceConfigResultDecoder,
        children: array$1(childSnapshotResultDecoder),
        frameSummary: frameSummaryDecoder,
        context: optional$1(anyJson$1())
    });
    const customWorkspaceChildSnapshotDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: oneOf$1(parentSnapshotConfigDecoder, swimlaneWindowSnapshotConfigDecoder),
        children: optional$1(lazy$1(() => array$1(customWorkspaceChildSnapshotDecoder))),
        type: oneOf$1(constant$1("window"), constant$1("row"), constant$1("column"), constant$1("group"))
    });
    const groupLayoutItemDecoder$2 = object$1({
        type: constant$1("group"),
        config: anyJson$1(),
        children: array$1(oneOf$1(windowLayoutItemDecoder$1))
    });
    const columnLayoutItemDecoder$2 = object$1({
        type: constant$1("column"),
        config: anyJson$1(),
        children: array$1(oneOf$1(groupLayoutItemDecoder$2, windowLayoutItemDecoder$1, lazy$1(() => columnLayoutItemDecoder$2), lazy$1(() => rowLayoutItemDecoder$2)))
    });
    const rowLayoutItemDecoder$2 = object$1({
        type: constant$1("row"),
        config: anyJson$1(),
        children: array$1(oneOf$1(columnLayoutItemDecoder$2, groupLayoutItemDecoder$2, windowLayoutItemDecoder$1, lazy$1(() => rowLayoutItemDecoder$2)))
    });
    const workspaceLayoutDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        type: constant$1("Workspace"),
        metadata: optional$1(anyJson$1()),
        components: array$1(object$1({
            type: constant$1("Workspace"),
            application: optional$1(nonEmptyStringDecoder$1),
            state: object$1({
                config: anyJson$1(),
                context: anyJson$1(),
                children: array$1(oneOf$1(rowLayoutItemDecoder$2, columnLayoutItemDecoder$2, groupLayoutItemDecoder$2, windowLayoutItemDecoder$1))
            })
        }))
    });
    const workspacesLayoutImportConfigDecoder = object$1({
        layout: workspaceLayoutDecoder,
        mode: oneOf$1(constant$1("replace"), constant$1("merge"))
    });
    const exportedLayoutsResultDecoder = object$1({
        layouts: array$1(workspaceLayoutDecoder)
    });
    const frameSummaryResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
    });
    const frameSummariesResultDecoder = object$1({
        summaries: array$1(frameSummaryResultDecoder)
    });
    const workspaceSummaryResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: workspaceConfigResultDecoder
    });
    const workspaceSummariesResultDecoder = object$1({
        summaries: array$1(workspaceSummaryResultDecoder)
    });
    const frameSnapshotResultDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        config: anyJson$1(),
        workspaces: array$1(workspaceSnapshotResultDecoder)
    });
    const layoutSummaryDecoder$2 = object$1({
        name: nonEmptyStringDecoder$1
    });
    const layoutSummariesDecoder = object$1({
        summaries: array$1(layoutSummaryDecoder$2)
    });
    const simpleWindowOperationSuccessResultDecoder = object$1({
        windowId: nonEmptyStringDecoder$1
    });
    const voidResultDecoder = anyJson$1();
    const frameStateResultDecoder = object$1({
        state: frameStateDecoder
    });
    const frameBoundsDecoder = object$1({
        top: number$1(),
        left: number$1(),
        width: nonNegativeNumberDecoder$1,
        height: nonNegativeNumberDecoder$1
    });
    const frameBoundsResultDecoder = object$1({
        bounds: frameBoundsDecoder
    });
    const resizeConfigDecoder = object$1({
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relative: optional$1(boolean$1())
    });
    const moveConfigDecoder = object$1({
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        relative: optional$1(boolean$1())
    });
    const simpleItemConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1
    });
    const frameSnapshotConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        excludeIds: optional$1(boolean$1())
    });
    const frameStateConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        requestedState: frameStateDecoder
    });
    const setItemTitleConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        title: nonEmptyStringDecoder$1
    });
    const moveWindowConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        containerId: nonEmptyStringDecoder$1
    });
    const resizeItemConfigDecoder = intersection(simpleItemConfigDecoder, resizeConfigDecoder);
    const moveFrameConfigDecoder = intersection(simpleItemConfigDecoder, moveConfigDecoder);
    const simpleParentDecoder = object$1({
        id: nonEmptyStringDecoder$1,
        type: subParentDecoder
    });
    const addWindowConfigDecoder = object$1({
        definition: swimlaneWindowDefinitionDecoder,
        parentId: nonEmptyStringDecoder$1,
        parentType: allParentDecoder
    });
    const addContainerConfigDecoder = object$1({
        definition: strictParentDefinitionDecoder,
        parentId: nonEmptyStringDecoder$1,
        parentType: allParentDecoder
    });
    const addItemResultDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const pingResultDecoder = object$1({
        live: boolean$1()
    });
    const bundleConfigDecoder = object$1({
        type: oneOf$1(constant$1("row"), constant$1("column")),
        workspaceId: nonEmptyStringDecoder$1
    });
    const workspaceSelectorDecoder = object$1({
        workspaceId: nonEmptyStringDecoder$1
    });
    const containerSummaryResultDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        config: parentSnapshotConfigDecoder
    });
    const frameStreamDataDecoder = object$1({
        frameSummary: frameSummaryDecoder,
        frameBounds: optional$1(frameBoundsDecoder)
    });
    const workspaceStreamDataDecoder = object$1({
        workspaceSummary: workspaceSummaryResultDecoder,
        frameSummary: frameSummaryDecoder,
        frameBounds: optional$1(frameBoundsDecoder)
    });
    const containerStreamDataDecoder = object$1({
        containerSummary: containerSummaryResultDecoder
    });
    const windowStreamDataDecoder = object$1({
        windowSummary: object$1({
            itemId: nonEmptyStringDecoder$1,
            parentId: nonEmptyStringDecoder$1,
            config: swimlaneWindowSnapshotConfigDecoder
        })
    });
    const workspaceLayoutSaveConfigDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        workspaceId: nonEmptyStringDecoder$1,
        saveContext: optional$1(boolean$1())
    });
    const lockWorkspaceDecoder = object$1({
        workspaceId: nonEmptyStringDecoder$1,
        config: optional$1(object$1({
            allowDrop: optional$1(boolean$1()),
            allowDropLeft: optional$1(boolean$1()),
            allowDropTop: optional$1(boolean$1()),
            allowDropRight: optional$1(boolean$1()),
            allowDropBottom: optional$1(boolean$1()),
            allowExtract: optional$1(boolean$1()),
            allowWindowReorder: optional$1(boolean$1()),
            allowSplitters: optional$1(boolean$1()),
            showCloseButton: optional$1(boolean$1()),
            showSaveButton: optional$1(boolean$1()),
            allowWorkspaceTabReorder: optional$1(boolean$1()),
            showWindowCloseButtons: optional$1(boolean$1()),
            showEjectButtons: optional$1(boolean$1()),
            showAddWindowButtons: optional$1(boolean$1())
        }))
    });
    const lockWindowDecoder = object$1({
        windowPlacementId: nonEmptyStringDecoder$1,
        config: optional$1(object$1({
            allowExtract: optional$1(boolean$1()),
            allowReorder: optional$1(boolean$1()),
            showCloseButton: optional$1(boolean$1())
        }))
    });
    const lockRowDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        type: constant$1("row"),
        config: optional$1(object$1({
            allowDrop: optional$1(boolean$1()),
            allowSplitters: optional$1(boolean$1()),
        }))
    });
    const lockColumnDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        type: constant$1("column"),
        config: optional$1(object$1({
            allowDrop: optional$1(boolean$1()),
            allowSplitters: optional$1(boolean$1()),
        }))
    });
    const lockGroupDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        type: constant$1("group"),
        config: optional$1(object$1({
            allowExtract: optional$1(boolean$1()),
            allowReorder: optional$1(boolean$1()),
            allowDrop: optional$1(boolean$1()),
            allowDropHeader: optional$1(boolean$1()),
            allowDropLeft: optional$1(boolean$1()),
            allowDropTop: optional$1(boolean$1()),
            allowDropRight: optional$1(boolean$1()),
            allowDropBottom: optional$1(boolean$1()),
            showMaximizeButton: optional$1(boolean$1()),
            showEjectButton: optional$1(boolean$1()),
            showAddWindowButton: optional$1(boolean$1()),
        }))
    });
    const lockContainerDecoder = oneOf$1(lockColumnDecoder, lockGroupDecoder, lockRowDecoder);
    const pinWorkspaceDecoder = object$1({
        workspaceId: nonEmptyStringDecoder$1,
        icon: optional$1(nonEmptyStringDecoder$1)
    });
    const setWorkspaceIconDecoder = object$1({
        workspaceId: nonEmptyStringDecoder$1,
        icon: optional$1(nonEmptyStringDecoder$1)
    });
    const workspaceIconDecoder = object$1({
        icon: optional$1(nonEmptyStringDecoder$1)
    });
    const emptyFrameDefinitionDecoder = object$1({
        frameConfig: optional$1(newFrameConfigDecoder),
        context: optional$1(object$1())
    });
    const restoreWorkspaceDefinitionDecoder = object$1({
        name: nonEmptyStringDecoder$1,
        restoreOptions: optional$1(restoreWorkspaceConfigDecoder)
    });
    const frameInitProtocolConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        workspaces: array$1(oneOf$1(workspaceDefinitionDecoder, restoreWorkspaceDefinitionDecoder))
    });
    const getWorkspaceWindowsOnLayoutSaveContextConfigDecoder = object$1({
        layoutType: oneOf$1(constant$1("Global"), constant$1("Workspace")),
        layoutName: nonEmptyStringDecoder$1,
        windowIds: array$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        instances: optional$1(array$1(nonEmptyStringDecoder$1)),
        ignoreInstances: optional$1(array$1(nonEmptyStringDecoder$1))
    });
    const setMaximizationBoundaryConfigDecoder = object$1({
        itemId: nonEmptyStringDecoder$1,
        enabled: boolean$1()
    });
    const workspaceWindowOnSaveDataDecoder = object$1({
        windowId: nonEmptyStringDecoder$1,
        windowContext: optional$1(anyJson$1())
    });
    const getWorkspaceWindowsOnLayoutSaveContextResult = object$1({
        windowsOnSaveData: array$1(workspaceWindowOnSaveDataDecoder)
    });
    const getWorkspacesLayoutsConfigDecoder = object$1({
        frameId: nonEmptyStringDecoder$1,
        layoutName: nonEmptyStringDecoder$1,
        layoutType: oneOf$1(constant$1("Global"), constant$1("Workspace")),
        context: optional$1(anyJson$1())
    });
    const getWorkspacesLayoutsResponseDecoder = object$1({
        workspaces: array$1(workspaceSnapshotResultDecoder)
    });

    class WindowsController$1 {
        constructor(glueController, sessionController, stateController, ioc) {
            this.glueController = glueController;
            this.sessionController = sessionController;
            this.stateController = stateController;
            this.ioc = ioc;
            this.started = false;
            this.operations = {
                openWindow: { name: "openWindow", execute: this.openWindow.bind(this), dataDecoder: openWindowConfigDecoder$1 },
                windowHello: { name: "windowHello", execute: this.handleWindowHello.bind(this) },
                getBounds: { name: "getBounds", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowBoundsResultDecoder$1, execute: this.handleGetBounds.bind(this) },
                getFrameBounds: { name: "getFrameBounds", dataDecoder: simpleWindowDecoder$1, resultDecoder: frameWindowBoundsResultDecoder$1, execute: this.handleGetBounds.bind(this) },
                getUrl: { name: "getUrl", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowUrlResultDecoder$1, execute: this.handleGetUrl.bind(this) },
                moveResize: { name: "moveResize", dataDecoder: windowMoveResizeConfigDecoder$1, execute: this.handleMoveResize.bind(this) },
                focus: { name: "focus", dataDecoder: simpleWindowDecoder$1, execute: this.handleFocus.bind(this) },
                close: { name: "close", dataDecoder: simpleWindowDecoder$1, execute: this.handleClose.bind(this) },
                getTitle: { name: "getTitle", dataDecoder: simpleWindowDecoder$1, resultDecoder: windowTitleConfigDecoder$1, execute: this.handleGetTitle.bind(this) },
                setTitle: { name: "setTitle", dataDecoder: windowTitleConfigDecoder$1, execute: this.handleSetTitle.bind(this) },
                registerWorkspaceWindow: { name: "registerWorkspaceWindow", dataDecoder: workspaceWindowDataDecoder, execute: this.registerWorkspaceWindow.bind(this) },
                unregisterWorkspaceWindow: { name: "unregisterWorkspaceWindow", dataDecoder: simpleWindowDecoder$1, execute: this.handleWorkspaceClientRemoval.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("windows.controller");
        }
        get moveResizeOperation() {
            return this.operations.moveResize;
        }
        get getFrameBoundsOperation() {
            return this.operations.getFrameBounds;
        }
        get setTitleOperation() {
            return this.operations.setTitle;
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this.clientResponseTimeoutMs = config.windows.windowResponseTimeoutMs;
                this.defaultBounds = config.windows.defaultWindowOpenBounds;
                this.started = true;
                this.stateController.onWindowDisappeared(this.cleanUpWindow.bind(this));
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const windowsData = args.data;
                const commandId = args.commandId;
                const operationValidation = windowOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This window request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(windowsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Windows request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(windowsData)}`);
                const result = yield this.operations[operationName].execute(windowsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Windows request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        getWindowTitle(windowId, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const boundsResult = yield this.handleGetTitle({ windowId }, commandId);
                return boundsResult.title;
            });
        }
        getWindowBounds(windowId, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const boundsResult = yield this.handleGetBounds({ windowId }, commandId);
                return boundsResult.bounds;
            });
        }
        processNewWindow(windowData, context, childWindow) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`processing a new window with id: ${windowData.windowId} and name: ${windowData.name}`);
                this.sessionController.saveWindowData(windowData);
                if (childWindow) {
                    this.stateController.add(childWindow, windowData.windowId);
                }
                if (context) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`setting the context for window ${windowData.windowId}`);
                    yield this.glueController.setWindowStartContext(windowData.windowId, context);
                }
                this.emitStreamData("windowAdded", windowData);
            });
        }
        handleWorkspaceClientRemoval(client) {
            return __awaiter(this, void 0, void 0, function* () {
                this.cleanUpWindow(client.windowId);
                this.ioc.portsBridge.removeGwClient(client.windowId);
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b, _c;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (!windowId) {
                return;
            }
            if (!win || win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, processing window cleanup`);
                return this.cleanUpWindow(windowId);
            }
            (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`${windowId} detected as not closed, adding to state controller`);
            this.stateController.add(win, windowId);
        }
        cleanUpWindow(windowId) {
            this.stateController.remove(windowId);
            const somethingRemoved = this.sessionController.fullWindowClean(windowId);
            if (somethingRemoved) {
                this.emitStreamData("windowRemoved", { windowId });
            }
        }
        registerWorkspaceWindow(data, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling workspace window registration with id: ${data.windowId} and name: ${data.name}`);
                this.sessionController.saveWindowData({ windowId: data.windowId, name: data.name });
                this.sessionController.saveWorkspaceClient({ windowId: data.windowId, frameId: data.frameId, initialTitle: data.title });
                this.sessionController.saveNonGlue({ windowId: data.windowId });
                if (data.context) {
                    yield this.glueController.setWindowStartContext(data.windowId, data.context);
                }
                this.emitStreamData("windowAdded", { windowId: data.windowId, name: data.name });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] workspace window registered successfully with id ${data.windowId} and name ${data.name}`);
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("windows", operation, data);
        }
        openWindow(config, commandId) {
            var _a, _b, _c, _d, _e, _f, _g;
            return __awaiter(this, void 0, void 0, function* () {
                const nameExists = this.sessionController.getWindowDataByName(config.name);
                if (nameExists) {
                    throw new Error(`Cannot open a window with name: ${config.name}, because a window with that name already exists.`);
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling open command with a valid name: ${config.name}, url: ${config.url} and options: ${JSON.stringify(config.options)}`);
                const openBounds = yield this.getStartingBounds(config, commandId);
                const windowId = (_c = (_b = config.options) === null || _b === void 0 ? void 0 : _b.windowId) !== null && _c !== void 0 ? _c : `g42-${shortid$2.generate()}`;
                const windowData = {
                    name: config.name,
                    windowId,
                    initialBounds: openBounds,
                    initialUrl: config.url,
                    initialContext: (_d = config.options) === null || _d === void 0 ? void 0 : _d.context
                };
                const options = `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] calling native window open with bounds: ${options}`);
                const childWindow = window.open(config.url, windowData.windowId, options);
                if (!childWindow) {
                    throw new Error(`Cannot open window with url: ${config.url} and name: ${config.name}. The most likely reason is that the user has not approved popups or has a blocker.`);
                }
                yield this.processNewWindow(windowData, (_f = config.options) === null || _f === void 0 ? void 0 : _f.context, childWindow);
                (_g = this.logger) === null || _g === void 0 ? void 0 : _g.trace(`[${commandId}] the new window is opened, saved in session, state and announced, responding to the caller`);
                return windowData;
            });
        }
        handleWindowHello(client, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a hello message from a real windowId: ${client.windowId}`);
                if (client.windowId) {
                    this.stateController.remove(client.windowId);
                    this.sessionController.removeNonGlue({ windowId: client.windowId });
                    const workspaceClient = this.sessionController.getWorkspaceClientById(client.windowId);
                    if (workspaceClient && workspaceClient.initialTitle) {
                        const windowId = client.windowId;
                        const title = workspaceClient.initialTitle;
                        PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.setTitle, { windowId, title }, windowId), this.clientResponseTimeoutMs)
                            .catch((err) => { var _a; return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] error while setting the workspace window title: ${err.message}`); });
                    }
                }
                const isWorkspaceFrame = !!(client.windowId && this.sessionController.getFrameData(client.windowId));
                const allWindows = this.sessionController.getAllWindowsData().map((w) => ({ windowId: w.windowId, name: w.name }));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] a full list of all current windows has been compiled, sending it to the caller`);
                return { windows: allWindows, isWorkspaceFrame };
            });
        }
        handleGetUrl(data, commandId) {
            var _a;
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the url of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get url request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the url of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.getUrl, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleGetTitle(data, commandId) {
            var _a;
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the title of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get title request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the title of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.getTitle, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleSetTitle(data, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot set the title of window: ${data.windowId}, because it is does not exist for the platform`);
                }
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    yield this.ioc.workspacesController.setItemTitle({ itemId: data.windowId, title: data.title }, commandId);
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a set title request for window ${data.windowId} and title: ${data.title}`);
                const timeoutMessage = `Cannot set the title of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
                yield PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.setTitle, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
            });
        }
        handleMoveResize(data, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    throw new Error(`Cannot move resize window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more control`);
                }
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot move resize window: ${data.windowId}, because it is does not exist for the platform`);
                }
                if (windowData.name === "Platform") {
                    throw new Error("Move-resizing the main application is not allowed");
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a move resize request for window ${data.windowId} and data: ${JSON.stringify(data)}`);
                const timeoutMessage = `Cannot move resize window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
                yield PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.moveResize, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
                yield this.pause(500);
            });
        }
        handleGetBounds(data, commandId) {
            var _a;
            const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
            if (workspaceClient) {
                throw new Error(`Cannot get bounds of window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more info`);
            }
            const windowData = this.sessionController.getWindowDataById(data.windowId);
            if (!windowData) {
                throw new Error(`Cannot get the bounds of window: ${data.windowId}, because it is does not exist for the platform`);
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get bounds request for window ${data.windowId}`);
            const timeoutMessage = `Cannot get the bounds of window: ${data.windowId}, because it is either a non-glue window or it hasn't initiated it's glue yet`;
            return PromiseWrap$1(() => this.glueController.callWindow("windows", this.operations.getBounds, data, data.windowId), this.clientResponseTimeoutMs, timeoutMessage);
        }
        handleFocus(data, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    throw new Error(`Cannot focus window id ${data.windowId}, because it is in a workspace. Consider using the workspaces API to get more control`);
                }
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot focus window: ${data.windowId}, because it is not known by the platform`);
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a focus request for window ${data.windowId}`);
                window.open(undefined, windowData.windowId);
            });
        }
        handleClose(data, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                const workspaceClient = this.sessionController.getWorkspaceClientById(data.windowId);
                if (workspaceClient) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] this window is detected as a workspace window, closing via the workspaces controller`);
                    yield this.ioc.workspacesController.closeItem({ itemId: data.windowId }, commandId);
                    return;
                }
                const applicationInstance = this.sessionController.getInstanceData(data.windowId);
                if (applicationInstance) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this window is detected as an application instance, closing via the appManager controller`);
                    yield this.ioc.applicationsController.handleInstanceStop({ id: data.windowId }, commandId);
                    return;
                }
                const windowData = this.sessionController.getWindowDataById(data.windowId);
                if (!windowData) {
                    throw new Error(`Cannot close window: ${data.windowId}, because it is not known by the platform`);
                }
                if (windowData.name === "Platform") {
                    throw new Error("Closing the main application is not allowed");
                }
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] handling a close request for window ${data.windowId}`);
                (_d = window.open(undefined, windowData.windowId)) === null || _d === void 0 ? void 0 : _d.close();
                this.cleanUpWindow(windowData.windowId);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] window ${data.windowId} has been closed, removed from session, state and announced`);
            });
        }
        getStartingBounds(config, commandId) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
            return __awaiter(this, void 0, void 0, function* () {
                const openBounds = {
                    top: (_b = (_a = config.options) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : this.defaultBounds.top,
                    left: (_d = (_c = config.options) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : this.defaultBounds.left,
                    height: (_f = (_e = config.options) === null || _e === void 0 ? void 0 : _e.height) !== null && _f !== void 0 ? _f : this.defaultBounds.height,
                    width: (_h = (_g = config.options) === null || _g === void 0 ? void 0 : _g.width) !== null && _h !== void 0 ? _h : this.defaultBounds.width
                };
                if (!((_j = config.options) === null || _j === void 0 ? void 0 : _j.relativeTo)) {
                    return openBounds;
                }
                const relativeWindowId = config.options.relativeTo;
                const windowData = this.sessionController.getWindowDataById(relativeWindowId);
                if (!windowData) {
                    return openBounds;
                }
                try {
                    const boundsResult = yield this.handleGetBounds({ windowId: windowData.windowId }, commandId);
                    const relativeWindowBounds = boundsResult.bounds;
                    const relativeDir = (_k = config.options.relativeDirection) !== null && _k !== void 0 ? _k : "right";
                    const newBounds = getRelativeBounds(openBounds, relativeWindowBounds, relativeDir);
                    return newBounds;
                }
                catch (error) {
                    return openBounds;
                }
            });
        }
        pause(ms) {
            return new Promise((resolve) => setTimeout(resolve, ms));
        }
    }

    class SessionStorageController {
        constructor() {
            this.windowsNamespace = "g42_core_windows";
            this.instancesNamespace = "g42_core_instances";
            this.bridgeInstancesNamespace = "g42_core_bridge";
            this.nonGlueNamespace = "g42_core_nonglue";
            this.workspaceWindowsNamespace = "g42_core_workspace_clients";
            this.workspaceFramesNamespace = "g42_core_workspace_frames";
            this.workspaceHibernationNamespace = "g42_core_workspace_hibernation";
            this.globalLayoutsNamespace = "g42_core_layouts_global";
            this.workspaceLayoutsNamespace = "g42_core_layouts_workspace";
            this.appDefsNamespace = "g42_core_app_definitions";
            this.appDefsInmemoryNamespace = "g42_core_app_definitions_inmemory";
            this.extNotificationsNamespace = "g42_ext_notifications";
            this.systemNamespace = "g42_system";
            this.sessionStorage = window.sessionStorage;
            [
                this.bridgeInstancesNamespace,
                this.windowsNamespace,
                this.instancesNamespace,
                this.nonGlueNamespace,
                this.workspaceWindowsNamespace,
                this.workspaceFramesNamespace,
                this.globalLayoutsNamespace,
                this.workspaceLayoutsNamespace,
                this.appDefsNamespace,
                this.workspaceHibernationNamespace,
                this.appDefsInmemoryNamespace,
                this.extNotificationsNamespace
            ].forEach((namespace) => {
                const data = this.sessionStorage.getItem(namespace);
                if (!data) {
                    this.sessionStorage.setItem(namespace, JSON.stringify([]));
                }
            });
        }
        get logger() {
            return logger.get("session.storage");
        }
        getSystemSettings() {
            const settingsAsString = this.sessionStorage.getItem(this.systemNamespace);
            if (!settingsAsString) {
                return;
            }
            return JSON.parse(settingsAsString);
        }
        saveSystemSettings(settings) {
            this.sessionStorage.setItem(this.systemNamespace, JSON.stringify(settings));
        }
        getTimeout(workspaceId) {
            var _a;
            const timers = JSON.parse(this.sessionStorage.getItem(this.workspaceHibernationNamespace));
            return (_a = timers.find((timer) => timer.workspaceId === workspaceId)) === null || _a === void 0 ? void 0 : _a.timeout;
        }
        removeTimeout(workspaceId) {
            const timers = JSON.parse(this.sessionStorage.getItem(this.workspaceHibernationNamespace));
            const timer = timers.find((timer) => timer.workspaceId === workspaceId);
            if (timer) {
                this.sessionStorage.setItem(this.workspaceHibernationNamespace, JSON.stringify(timers.filter((timer) => timer.workspaceId !== workspaceId)));
            }
        }
        saveTimeout(workspaceId, timeout) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceHibernationNamespace));
            if (allData.some((data) => data.workspaceId === workspaceId)) {
                return;
            }
            allData.push({ workspaceId, timeout });
            this.sessionStorage.setItem(this.workspaceHibernationNamespace, JSON.stringify(allData));
        }
        exportClearTimeouts() {
            const timers = JSON.parse(this.sessionStorage.getItem(this.workspaceHibernationNamespace));
            this.sessionStorage.setItem(this.workspaceHibernationNamespace, JSON.stringify([]));
            return timers;
        }
        getAllApps(type) {
            const namespace = type === "remote" ? this.appDefsNamespace : this.appDefsInmemoryNamespace;
            const appsString = JSON.parse(this.sessionStorage.getItem(namespace));
            return appsString;
        }
        overwriteApps(apps, type) {
            const namespace = type === "remote" ? this.appDefsNamespace : this.appDefsInmemoryNamespace;
            this.sessionStorage.setItem(namespace, JSON.stringify(apps));
        }
        removeApp(name, type) {
            const namespace = type === "remote" ? this.appDefsNamespace : this.appDefsInmemoryNamespace;
            const all = this.getAllApps(type);
            const app = all.find((app) => app.name === name);
            if (app) {
                this.sessionStorage.setItem(namespace, JSON.stringify(all.filter((a) => a.name !== name)));
            }
            return app;
        }
        getLayoutSnapshot(type) {
            const namespace = type === "Global" ? this.globalLayoutsNamespace : this.workspaceLayoutsNamespace;
            const snapsString = JSON.parse(this.sessionStorage.getItem(namespace));
            return { layouts: snapsString };
        }
        saveLayoutSnapshot(snapshot, type) {
            const namespace = type === "Global" ? this.globalLayoutsNamespace : this.workspaceLayoutsNamespace;
            this.sessionStorage.setItem(namespace, JSON.stringify(snapshot.layouts));
        }
        saveFrameData(frameData) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            if (allData.some((data) => data.windowId === frameData.windowId)) {
                return;
            }
            allData.push(frameData);
            this.sessionStorage.setItem(this.workspaceFramesNamespace, JSON.stringify(allData));
        }
        getPlatformFrame() {
            return this.getAllFrames().find((frame) => frame.isPlatform);
        }
        getAllFrames() {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            return allData;
        }
        getFrameData(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            return allData.find((data) => data.windowId === windowId);
        }
        setFrameActive(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceFramesNamespace));
            const frameData = allData.find((data) => data.windowId === windowId);
            if (!frameData || frameData.active) {
                return;
            }
            frameData.active = true;
            this.sessionStorage.setItem(this.workspaceFramesNamespace, JSON.stringify(allData));
        }
        removeFrameData(windowId) {
            if (!windowId) {
                return false;
            }
            return this.doRemove(windowId, this.workspaceFramesNamespace);
        }
        saveWorkspaceClient(windowData) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            if (allData.some((data) => data.windowId === windowData.windowId)) {
                return;
            }
            allData.push(windowData);
            this.sessionStorage.setItem(this.workspaceWindowsNamespace, JSON.stringify(allData));
        }
        getWorkspaceClientById(windowId) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            return allData.find((data) => data.windowId === windowId);
        }
        pickWorkspaceClients(predicate) {
            const allData = JSON.parse(this.sessionStorage.getItem(this.workspaceWindowsNamespace));
            return allData.filter(predicate);
        }
        removeWorkspaceClient(windowId) {
            if (!windowId) {
                return false;
            }
            return this.doRemove(windowId, this.workspaceWindowsNamespace);
        }
        getAllNonGlue() {
            return JSON.parse(this.sessionStorage.getItem(this.nonGlueNamespace));
        }
        saveNonGlue(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.nonGlueNamespace));
            if (allData.some((entry) => entry.windowId === data.windowId)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return false;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving non glue window with id: ${data.windowId}`);
            allData.push(data);
            this.sessionStorage.setItem(this.nonGlueNamespace, JSON.stringify(allData));
            return true;
        }
        removeNonGlue(data) {
            var _a;
            if (!data || !data.windowId) {
                return false;
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing non glue window with id: ${data.windowId}`);
            return this.doRemove(data.windowId, this.nonGlueNamespace);
        }
        saveBridgeInstanceData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            if (allData.some((entry) => entry.windowId === data.windowId)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving new instance with id: ${data.windowId} and app name: ${data.appName}`);
            allData.push(data);
            this.sessionStorage.setItem(this.bridgeInstancesNamespace, JSON.stringify(allData));
        }
        getBridgeInstanceData(windowId) {
            const all = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            return all.find((e) => e.windowId === windowId);
        }
        removeBridgeInstanceData(windowId) {
            const all = JSON.parse(this.sessionStorage.getItem(this.bridgeInstancesNamespace));
            this.sessionStorage.setItem(this.bridgeInstancesNamespace, JSON.stringify(all.filter((e) => e.windowId !== windowId)));
        }
        saveInstanceData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.instancesNamespace));
            if (allData.some((entry) => entry.id === data.id)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this id already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving new instance with id: ${data.id} and app name: ${data.applicationName}`);
            allData.push(data);
            this.sessionStorage.setItem(this.instancesNamespace, JSON.stringify(allData));
        }
        removeInstance(id) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing instance with id: ${id}`);
            const all = this.getAllInstancesData();
            this.sessionStorage.setItem(this.instancesNamespace, JSON.stringify(all.filter((e) => e.id !== id)));
            this.removeBridgeInstanceData(id);
        }
        getInstanceData(id) {
            const all = this.getAllInstancesData();
            return all.find((e) => e.id === id);
        }
        getAllInstancesData() {
            return JSON.parse(this.sessionStorage.getItem(this.instancesNamespace));
        }
        removeNotification(id) {
            const allNotifications = JSON.parse(this.sessionStorage.getItem(this.extNotificationsNamespace));
            const notification = allNotifications.find((notification) => notification.id === id);
            if (notification) {
                this.sessionStorage.setItem(this.extNotificationsNamespace, JSON.stringify(allNotifications.filter((notification) => notification.id !== id)));
            }
        }
        saveNotification(notification) {
            var _a, _b;
            const allNotifications = JSON.parse(this.sessionStorage.getItem(this.extNotificationsNamespace));
            if (allNotifications.some((entry) => entry.id === notification.id)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(notification)}, because an entry with this id already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving notification with id: ${notification.id}`);
            allNotifications.push(notification);
            this.sessionStorage.setItem(this.extNotificationsNamespace, JSON.stringify(allNotifications));
        }
        getNotification(id) {
            const allNotifications = JSON.parse(this.sessionStorage.getItem(this.extNotificationsNamespace));
            return allNotifications.find((notification) => notification.id === id);
        }
        saveWindowData(data) {
            var _a, _b;
            const allData = JSON.parse(this.sessionStorage.getItem(this.windowsNamespace));
            if (allData.some((entry) => entry.name === data.name)) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`did not save this data: ${JSON.stringify(data)}, because an entry with this name already exists`);
                return;
            }
            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`saving window with id: ${data.windowId} and name: ${data.name}`);
            allData.push(data);
            this.sessionStorage.setItem(this.windowsNamespace, JSON.stringify(allData));
        }
        getAllWindowsData() {
            return JSON.parse(this.sessionStorage.getItem(this.windowsNamespace));
        }
        getWindowDataById(windowId) {
            const all = this.getAllWindowsData();
            return all.find((entry) => entry.windowId === windowId);
        }
        getWindowDataByName(name) {
            const all = this.getAllWindowsData();
            return all.find((entry) => entry.name === name);
        }
        removeWindowData(windowId) {
            var _a;
            if (!windowId) {
                return false;
            }
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing window with id: ${windowId}`);
            return this.doRemove(windowId, this.windowsNamespace);
        }
        fullWindowClean(windowId) {
            const windowRemoved = this.removeWindowData(windowId);
            const nonGlueRemoved = this.removeNonGlue({ windowId });
            const workspaceClientRemoved = this.removeWorkspaceClient(windowId);
            return windowRemoved || nonGlueRemoved || workspaceClientRemoved;
        }
        doRemove(id, namespace) {
            const data = JSON.parse(this.sessionStorage.getItem(namespace));
            const result = data.reduce((soFar, entry) => {
                if (entry.windowId === id) {
                    soFar.removed = true;
                }
                else {
                    soFar.newData.push(entry);
                }
                return soFar;
            }, { removed: false, newData: [] });
            this.sessionStorage.setItem(namespace, JSON.stringify(result.newData));
            return result.removed;
        }
    }

    class WindowsStateController {
        constructor(sessionStorage) {
            this.sessionStorage = sessionStorage;
            this.registry = lib$5();
            this.checkIntervalMs = 500;
            this.childrenToCheck = [];
            this.checkerCancelled = false;
        }
        get logger() {
            return logger.get("state.controller");
        }
        start() {
            const nonGlueWindows = this.sessionStorage.getAllNonGlue();
            nonGlueWindows.forEach((w) => {
                var _a;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`detected non glue window with id ${w.windowId} from previous session, attempting reference refresh`);
                const nativeWindow = window.open(undefined, w.windowId);
                if (nativeWindow) {
                    this.childrenToCheck.push({ window: nativeWindow, windowId: w.windowId });
                }
            });
            this.checkWindows();
        }
        add(child, windowId) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`adding window id: ${windowId} to non glue state checking`);
            const saved = this.sessionStorage.saveNonGlue({ windowId });
            if (saved) {
                this.childrenToCheck.push({ window: child, windowId });
            }
        }
        remove(windowId) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`removing window id: ${windowId} from non glue state checking`);
            this.sessionStorage.removeNonGlue({ windowId });
            this.childrenToCheck = this.childrenToCheck.filter((w) => w.windowId !== windowId);
        }
        cancel() {
            if (this.currentTimeout) {
                clearTimeout(this.currentTimeout);
            }
            this.checkerCancelled = true;
        }
        onWindowDisappeared(cb) {
            return this.registry.add("window-disappear", cb);
        }
        checkWindows() {
            if (this.checkerCancelled) {
                return;
            }
            this.childrenToCheck.forEach((child) => {
                var _a;
                if (!child.window || child.window.closed) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`non glue window ${child.windowId} has disappeared, removing from collections and announcing.`);
                    this.remove(child.windowId);
                    this.registry.execute("window-disappear", child.windowId);
                    return;
                }
            });
            this.currentTimeout = setTimeout(this.checkWindows.bind(this), this.checkIntervalMs);
        }
    }

    const appManagerOperationTypesDecoder$1 = oneOf$1(constant$1("appHello"), constant$1("applicationStart"), constant$1("instanceStop"), constant$1("registerWorkspaceApp"), constant$1("unregisterWorkspaceApp"), constant$1("export"), constant$1("import"), constant$1("remove"), constant$1("clear"), constant$1("registerRemoteApps"), constant$1("operationCheck"));
    const basicInstanceDataDecoder$1 = object$1({
        id: nonEmptyStringDecoder$1
    });
    const instanceDataDecoder$1 = object$1({
        id: nonEmptyStringDecoder$1,
        applicationName: nonEmptyStringDecoder$1
    });
    const applicationDataDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        createOptions: applicationDetailsDecoder$1,
        instances: array$1(instanceDataDecoder$1),
        userProperties: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        icon: optional$1(nonEmptyStringDecoder$1),
        caption: optional$1(nonEmptyStringDecoder$1)
    });
    const baseApplicationDataDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: nonEmptyStringDecoder$1.where((s) => s === "window", "Expected a value of window"),
        createOptions: applicationDetailsDecoder$1,
        userProperties: optional$1(anyJson$1()),
        title: optional$1(nonEmptyStringDecoder$1),
        version: optional$1(nonEmptyStringDecoder$1),
        icon: optional$1(nonEmptyStringDecoder$1),
        caption: optional$1(nonEmptyStringDecoder$1)
    });
    const appHelloSuccessDecoder$1 = object$1({
        apps: array$1(applicationDataDecoder$1)
    });
    const appHelloDecoder = object$1({
        windowId: optional$1(nonEmptyStringDecoder$1)
    });
    const applicationStartConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        id: optional$1(nonEmptyStringDecoder$1),
        context: optional$1(anyJson$1()),
        top: optional$1(number$1()),
        left: optional$1(number$1()),
        width: optional$1(nonNegativeNumberDecoder$1),
        height: optional$1(nonNegativeNumberDecoder$1),
        relativeTo: optional$1(nonEmptyStringDecoder$1),
        relativeDirection: optional$1(oneOf$1(constant$1("top"), constant$1("left"), constant$1("right"), constant$1("bottom"))),
        waitForAGMReady: optional$1(boolean$1()),
        forceChromeTab: optional$1(boolean$1())
    });
    const appsImportOperationDecoder$1 = object$1({
        definitions: array$1(allApplicationDefinitionsDecoder$1),
        mode: oneOf$1(constant$1("replace"), constant$1("merge"))
    });
    const appRemoveConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1
    });
    const appsExportOperationDecoder$1 = object$1({
        definitions: array$1(glueCoreAppDefinitionDecoder)
    });
    const appsRemoteRegistrationDecoder = object$1({
        definitions: array$1(allApplicationDefinitionsDecoder$1)
    });

    class ApplicationsController {
        constructor(glueController, sessionStorage, stateController, appDirectory, ioc) {
            this.glueController = glueController;
            this.sessionStorage = sessionStorage;
            this.stateController = stateController;
            this.appDirectory = appDirectory;
            this.ioc = ioc;
            this.applicationStartTimeoutMs = 15000;
            this.started = false;
            this.locks = {};
            this.operations = {
                appHello: { name: "appHello", dataDecoder: appHelloDecoder, resultDecoder: appHelloSuccessDecoder$1, execute: this.handleAppHello.bind(this) },
                applicationStart: { name: "applicationStart", dataDecoder: applicationStartConfigDecoder$1, resultDecoder: instanceDataDecoder$1, execute: this.handleApplicationStart.bind(this) },
                instanceStop: { name: "instanceStop", dataDecoder: basicInstanceDataDecoder$1, execute: this.handleInstanceStop.bind(this) },
                registerWorkspaceApp: { name: "registerWorkspaceApp", dataDecoder: workspaceWindowDataDecoder, execute: this.registerWorkspaceApp.bind(this) },
                unregisterWorkspaceApp: { name: "unregisterWorkspaceApp", dataDecoder: simpleWindowDecoder$1, execute: this.unregisterWorkspaceApp.bind(this) },
                import: { name: "import", dataDecoder: appsImportOperationDecoder$1, execute: this.handleImport.bind(this) },
                remove: { name: "remove", dataDecoder: appRemoveConfigDecoder$1, execute: this.handleRemove.bind(this) },
                export: { name: "export", resultDecoder: appsExportOperationDecoder$1, execute: this.handleExport.bind(this) },
                clear: { name: "clear", execute: this.handleClear.bind(this) },
                registerRemoteApps: { name: "registerRemoteApps", dataDecoder: appsRemoteRegistrationDecoder, execute: this.handleRegisterRemoteApps.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("applications.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                this.defaultBounds = config.windows.defaultWindowOpenBounds;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("initializing applications");
                this.config = config.applications;
                yield this.appDirectory.start({
                    config: config.applications,
                    appsStateChange: (data) => this.emitStreamData("appDirectoryStateChange", data),
                    sequelizer: this.ioc.createSequelizer()
                });
                this.started = true;
                this.stateController.onWindowDisappeared(this.processInstanceClosed.bind(this));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const applicationData = args.data;
                const commandId = args.commandId;
                const operationValidation = appManagerOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This appManager request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(applicationData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`AppManager request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(applicationData)}`);
                const result = yield this.operations[operationName].execute(applicationData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`AppManager request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b, _c;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (!windowId) {
                return;
            }
            if (!win || win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, processing instance closed`);
                return this.processInstanceClosed(windowId);
            }
            (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`${windowId} detected as not closed, skipping instance closed procedure`);
        }
        unregisterWorkspaceApp(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this.processInstanceClosed(config.windowId);
                this.ioc.windowsController.cleanUpWindow(config.windowId);
                this.ioc.portsBridge.removeGwClient(config.windowId);
            });
        }
        handleApplicationStart(config, commandId) {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling application start command for application: ${config.name}`);
                const appDefinition = (yield this.appDirectory.getAll()).find((app) => app.name === config.name);
                if (!appDefinition) {
                    throw new Error(`Cannot start an instance of application: ${config.name}, because it is not found.`);
                }
                const id = (_b = config.id) !== null && _b !== void 0 ? _b : `g42-${shortid$2.generate()}`;
                const instance = {
                    id,
                    applicationName: config.name
                };
                const openBounds = yield this.getStartingBounds(appDefinition.createOptions, config, commandId);
                const options = config.forceChromeTab ?
                    undefined :
                    `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] open arguments are valid, opening to bounds: ${options}`);
                const childWindow = window.open(appDefinition.createOptions.url, instance.id, options);
                if (!childWindow) {
                    throw new Error(`Cannot an instance with url: ${appDefinition.createOptions.url} for application: ${config.name}. The most likely reason is that the user has not approved popups or has a blocker.`);
                }
                this.sessionStorage.saveBridgeInstanceData({ windowId: instance.id, appName: instance.applicationName });
                const processConfig = {
                    data: instance,
                    context: config.context
                };
                yield this.processNewInstance(processConfig);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] the new window has been opened successfully with id: ${instance.id}, checking for AGM ready and notifying windows`);
                if (config.waitForAGMReady) {
                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] wait for AGM is set, configuring the lock`);
                    this.setLock(instance.id);
                }
                yield this.notifyWindows(appDefinition.createOptions.url, instance, openBounds, config.context, childWindow);
                if (this.locks[instance.id]) {
                    try {
                        yield PromiseWrap$1(() => { var _a; return (_a = this.locks[instance.id]) === null || _a === void 0 ? void 0 : _a.keyOne; }, this.applicationStartTimeoutMs);
                    }
                    catch (error) {
                        delete this.locks[instance.id];
                        throw new Error(`Application start for ${config.name} timed out waiting for client to initialize Glue`);
                    }
                }
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] the windows controller has been successfully notified`);
                (_g = this.logger) === null || _g === void 0 ? void 0 : _g.trace(`[${commandId}] the new instance with id ${instance.id} has been saved, announced and context set, lifting key two and responding to caller`);
                (_h = this.locks[instance.id]) === null || _h === void 0 ? void 0 : _h.openKeyTwo();
                return instance;
            });
        }
        processInstanceClosed(selfWindowId) {
            if (!selfWindowId) {
                return;
            }
            const instanceData = this.sessionStorage.getInstanceData(selfWindowId);
            if (instanceData) {
                delete this.locks[instanceData.id];
                this.sessionStorage.removeInstance(instanceData.id);
                this.emitStreamData("instanceStopped", instanceData);
            }
        }
        notifyWindows(url, instance, initialBounds, context, child) {
            return __awaiter(this, void 0, void 0, function* () {
                const windowData = {
                    windowId: instance.id,
                    name: `${instance.applicationName}_${instance.id}`,
                    initialUrl: url,
                    initialContext: context,
                    initialBounds
                };
                yield this.ioc.windowsController.processNewWindow(windowData, context, child);
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        handleAppHello(helloMsg, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling hello message for id: ${helloMsg.windowId}`);
                if (helloMsg.windowId && this.locks[helloMsg.windowId]) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] found an app lock, unlocking key one and waiting for the second one`);
                    this.locks[helloMsg.windowId].openKeyOne();
                    yield this.locks[helloMsg.windowId].keyTwo;
                    delete this.locks[helloMsg.windowId];
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] the lock is lifted, proceeding`);
                }
                const allInstances = this.sessionStorage.getAllInstancesData();
                const allAppsFull = (yield this.appDirectory.getAll()).map((app) => {
                    const appInstances = allInstances.filter((inst) => inst.applicationName === app.name);
                    return Object.assign({}, app, { instances: appInstances });
                });
                if (helloMsg.windowId) {
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] there is a valid windowId, removing ${helloMsg.windowId} from the state controller`);
                    this.stateController.remove(helloMsg.windowId);
                    const foundApp = allAppsFull.find((app) => app.instances.some((inst) => inst.id === helloMsg.windowId));
                    if (foundApp && foundApp.title) {
                        const windowId = helloMsg.windowId;
                        const title = foundApp.title;
                        PromiseWrap$1(() => this.glueController.callWindow("windows", this.ioc.windowsController.setTitleOperation, { windowId, title }, windowId), 20000)
                            .catch((err) => { var _a; return (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] error while setting the application instance title: ${err.message}`); });
                    }
                }
                const helloSuccessMessage = { apps: allAppsFull };
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] compiled a list of all active applications and instances and returning it to the caller`);
                return helloSuccessMessage;
            });
        }
        handleInstanceStop(inst, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling stop command for instance: ${inst.id}`);
                const workspaceClient = this.sessionStorage.getWorkspaceClientById(inst.id);
                if (workspaceClient) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this instance is detected as a workspace window, closing via the workspaces controller`);
                    yield this.ioc.workspacesController.closeItem({ itemId: inst.id }, commandId);
                    return;
                }
                const instanceData = this.sessionStorage.getInstanceData(inst.id);
                if (!instanceData) {
                    throw new Error(`Cannot close instance: ${inst.id}, because it is not known by the platform`);
                }
                const windowData = this.sessionStorage.getWindowDataById(inst.id);
                if (!windowData) {
                    throw new Error(`Cannot close instance: ${inst.id}, because it's window is not known by the platform`);
                }
                (_c = window.open(undefined, windowData.windowId)) === null || _c === void 0 ? void 0 : _c.close();
                this.processInstanceClosed(inst.id);
                this.ioc.windowsController.cleanUpWindow(inst.id);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] instance ${inst.id} has been closed, removed from store, announced stopped and notified windows, responding to caller`);
            });
        }
        handleRegisterRemoteApps(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling remote bypass command`);
                if (this.config.remote) {
                    throw new Error(`[${commandId}] cannot accept remote apps from the protocol, because there is an active remote configuration.`);
                }
                yield this.appDirectory.processAppDefinitions(config.definitions, { mode: "replace", type: "remote" });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] remote bypass command completed`);
                return;
            });
        }
        handleImport(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling import command`);
                yield this.appDirectory.processAppDefinitions(config.definitions, { type: "inmemory", mode: config.mode });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] import command completed`);
                return;
            });
        }
        handleRemove(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling remove command for ${config.name}`);
                const removed = yield this.appDirectory.removeInMemory(config.name);
                if (removed) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`definition ${removed.name} removed successfully`);
                    this.emitStreamData("appDirectoryStateChange", { appsRemoved: [removed], appsAdded: [], appsChanged: [] });
                }
            });
        }
        handleExport(_, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling export command`);
                const definitions = yield this.appDirectory.exportInMemory();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] export command successful`);
                return { definitions };
            });
        }
        handleClear(_, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling clear command`);
                yield this.appDirectory.processAppDefinitions([], { type: "inmemory", mode: "replace" });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] all in-memory apps are cleared`);
            });
        }
        setLock(id) {
            const lock = {};
            const keyOne = new Promise((resolve) => {
                lock.openKeyOne = resolve;
            });
            const keyTwo = new Promise((resolve) => {
                lock.openKeyTwo = resolve;
            });
            lock.keyOne = keyOne;
            lock.keyTwo = keyTwo;
            this.locks[id] = lock;
        }
        registerWorkspaceApp(data, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (!data.appName) {
                    throw new Error(`Cannot register application with config: ${JSON.stringify(data)}, because no app name was found`);
                }
                const allAppDefinitions = yield this.appDirectory.getAll();
                if (data.appName === defaultNoAppWindowComponentAppName) {
                    return yield this.ioc.windowsController.registerWorkspaceWindow(data, commandId);
                }
                if (!allAppDefinitions.some((app) => app.name === data.appName)) {
                    throw new Error(`Cannot register application with config: ${JSON.stringify(data)}, because no app with this name name was found`);
                }
                this.sessionStorage.saveBridgeInstanceData({ windowId: data.windowId, appName: data.appName });
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] processing valid workspace application registration with id ${data.windowId}, app name ${data.appName} and frame ${data.frameId}`);
                if (data.context) {
                    yield this.glueController.setInstanceStartContext(data.windowId, data.context);
                }
                const instanceData = { id: data.windowId, applicationName: data.appName };
                this.sessionStorage.saveInstanceData(instanceData);
                this.emitStreamData("instanceStarted", instanceData);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] instance registration is completed and announced, calling windows registration`);
                yield this.ioc.windowsController.registerWorkspaceWindow(data, commandId);
            });
        }
        processNewInstance(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (config.context) {
                    yield this.glueController.setInstanceStartContext(config.data.id, config.context);
                }
                this.sessionStorage.saveInstanceData(config.data);
                this.emitStreamData("instanceStarted", config.data);
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("appManager", operation, data);
        }
        getStartingBounds(appDefOptions, openOptions, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const openBounds = {
                    top: openOptions.top || appDefOptions.top || this.defaultBounds.top,
                    left: openOptions.left || appDefOptions.left || this.defaultBounds.left,
                    width: openOptions.width || appDefOptions.width || this.defaultBounds.width,
                    height: openOptions.height || appDefOptions.height || this.defaultBounds.height
                };
                if (!openOptions.relativeTo) {
                    return openBounds;
                }
                try {
                    const relativeWindowBounds = yield this.ioc.windowsController.getWindowBounds(openOptions.relativeTo, commandId);
                    const relativeDir = (_a = openOptions.relativeDirection) !== null && _a !== void 0 ? _a : "right";
                    const newBounds = getRelativeBounds(openBounds, relativeWindowBounds, relativeDir);
                    return newBounds;
                }
                catch (error) {
                    return openBounds;
                }
            });
        }
    }

    const layoutsOperationTypesDecoder$1 = oneOf$1(constant$1("get"), constant$1("getAll"), constant$1("export"), constant$1("import"), constant$1("remove"), constant$1("save"), constant$1("restore"), constant$1("getRawWindowsLayoutData"), constant$1("clientSaveRequest"), constant$1("getGlobalPermissionState"), constant$1("checkGlobalActivated"), constant$1("requestGlobalPermission"), constant$1("operationCheck"));
    const newLayoutOptionsDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        context: optional$1(anyJson$1()),
        metadata: optional$1(anyJson$1()),
        instances: optional$1(array$1(nonEmptyStringDecoder$1)),
        ignoreInstances: optional$1(array$1(nonEmptyStringDecoder$1))
    });
    const restoreOptionsDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        context: optional$1(anyJson$1()),
        closeRunningInstance: optional$1(boolean$1()),
        closeMe: optional$1(boolean$1()),
        timeout: optional$1(nonNegativeNumberDecoder$1)
    });
    const simpleLayoutConfigDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        type: layoutTypeDecoder$1
    });
    const getAllLayoutsConfigDecoder$1 = object$1({
        type: layoutTypeDecoder$1
    });
    const saveLayoutConfigDecoder$1 = object$1({
        layout: newLayoutOptionsDecoder$1
    });
    const restoreLayoutConfigDecoder$1 = object$1({
        layout: restoreOptionsDecoder$1
    });
    const allLayoutsFullConfigDecoder$1 = object$1({
        layouts: array$1(glueLayoutDecoder$1)
    });
    const importModeDecoder$1 = oneOf$1(constant$1("replace"), constant$1("merge"));
    const layoutsImportConfigDecoder$1 = object$1({
        layouts: array$1(glueLayoutDecoder$1),
        mode: importModeDecoder$1
    });
    const allLayoutsSummariesResultDecoder$1 = object$1({
        summaries: array$1(layoutSummaryDecoder$1)
    });
    const simpleLayoutResult = object$1({
        layout: glueLayoutDecoder$1
    });
    const optionalSimpleLayoutResult$1 = object$1({
        layout: optional$1(glueLayoutDecoder$1)
    });
    const rawWindowsLayoutDataRequestConfigDecoder = object$1({
        layoutType: oneOf$1(constant$1("Global"), constant$1("Workspace")),
        layoutName: nonEmptyStringDecoder$1,
        context: optional$1(anyJson$1()),
        instances: optional$1(array$1(nonEmptyStringDecoder$1)),
        ignoreInstances: optional$1(array$1(nonEmptyStringDecoder$1))
    });
    const saveRequestClientResponseDecoder$1 = object$1({
        windowContext: optional$1(anyJson$1()),
    });
    const fullSaveRequestResponseDecoder = object$1({
        bounds: windowBoundsDecoder$1,
        windowContext: optional$1(anyJson$1()),
        url: nonEmptyStringDecoder$1,
        name: nonEmptyStringDecoder$1,
        application: nonEmptyStringDecoder$1,
        windowId: nonEmptyStringDecoder$1,
        initialContext: optional$1(anyJson$1())
    });
    const workspaceWindowRawLayoutDataDecoder = object$1({
        windowContext: optional$1(anyJson$1()),
        windowId: nonEmptyStringDecoder$1,
        frameId: nonEmptyStringDecoder$1
    });
    const windowsRawLayoutDataDecoder = object$1({
        windows: array$1(fullSaveRequestResponseDecoder)
    });
    const permissionStateResultDecoder$1 = object$1({
        state: oneOf$1(constant$1("prompt"), constant$1("denied"), constant$1("granted"))
    });
    const simpleAvailabilityResultDecoder$1 = object$1({
        isAvailable: boolean$1()
    });

    class LayoutsController$1 {
        constructor(glueController, idbStore, sessionStore, windowsController) {
            this.glueController = glueController;
            this.idbStore = idbStore;
            this.sessionStore = sessionStore;
            this.windowsController = windowsController;
            this.started = false;
            this.operations = {
                get: { name: "get", dataDecoder: simpleLayoutConfigDecoder$1, resultDecoder: optionalSimpleLayoutResult$1, execute: this.handleGetLayout.bind(this) },
                getAll: { name: "getAll", dataDecoder: getAllLayoutsConfigDecoder$1, resultDecoder: allLayoutsSummariesResultDecoder$1, execute: this.handleGetAll.bind(this) },
                export: { name: "export", dataDecoder: getAllLayoutsConfigDecoder$1, resultDecoder: allLayoutsFullConfigDecoder$1, execute: this.handleExport.bind(this) },
                import: { name: "import", dataDecoder: layoutsImportConfigDecoder$1, execute: this.handleImport.bind(this) },
                remove: { name: "remove", dataDecoder: simpleLayoutConfigDecoder$1, execute: this.handleRemove.bind(this) },
                save: { name: "save", dataDecoder: saveLayoutConfigDecoder$1, execute: this.handleSave.bind(this) },
                restore: { name: "restore", dataDecoder: restoreLayoutConfigDecoder$1, execute: this.handleRestore.bind(this) },
                getRawWindowsLayoutData: { name: "getRawWindowsLayoutData", dataDecoder: rawWindowsLayoutDataRequestConfigDecoder, resultDecoder: windowsRawLayoutDataDecoder, execute: this.handleGetRawWindowsLayoutData.bind(this) },
                clientSaveRequest: { name: "clientSaveRequest", dataDecoder: rawWindowsLayoutDataRequestConfigDecoder, resultDecoder: saveRequestClientResponseDecoder$1, execute: () => __awaiter(this, void 0, void 0, function* () { }) },
                getGlobalPermissionState: { name: "getGlobalPermissionState", resultDecoder: permissionStateResultDecoder$1, execute: this.handleGetGlobalPermissionState.bind(this) },
                requestGlobalPermission: { name: "requestGlobalPermission", resultDecoder: simpleAvailabilityResultDecoder$1, execute: this.handleRequestGlobalPermission.bind(this) },
                checkGlobalActivated: { name: "checkGlobalActivated", resultDecoder: simpleAvailabilityResultDecoder$1, execute: this.handleCheckGlobalActivated.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("layouts.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                this.config = config.layouts;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`initializing with mode: ${this.config.mode}`);
                if (this.config.local && this.config.local.length) {
                    const localGlobalLayouts = this.config.local.filter((layout) => layout.type === "Global");
                    const localWorkspaceLayouts = this.config.local.filter((layout) => layout.type === "Workspace");
                    yield Promise.all([
                        this.mergeImport(localGlobalLayouts, "Global"),
                        this.mergeImport(localWorkspaceLayouts, "Workspace")
                    ]);
                }
                this.started = true;
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const layoutsData = args.data;
                const commandId = args.commandId;
                const operationValidation = layoutsOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This layouts request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(layoutsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Layouts request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(layoutsData)}`);
                const result = yield this.operations[operationName].execute(layoutsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Layouts request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleSave(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling save layout with config: ${JSON.stringify(config)}`);
                throw new Error("This Web Platform cannot save Global Layouts.");
            });
        }
        handleRestore(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling restore layout with config: ${JSON.stringify(config)}`);
                throw new Error(`This Web Platform cannot restore Global Layouts.`);
            });
        }
        handleGetAll(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get all layout summaries request for type: ${config.type}`);
                const allLayouts = yield this.getAll(config.type);
                const summaries = allLayouts.map((layout) => {
                    return {
                        name: layout.name,
                        type: layout.type,
                        context: layout.context,
                        metadata: layout.metadata
                    };
                });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] all summaries have been compiled, responding to caller`);
                return { summaries };
            });
        }
        handleExport(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get all layout full request for type: ${config.type}`);
                const layouts = yield this.getAll(config.type);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] full layouts collection have been compiled, responding to caller`);
                return { layouts };
            });
        }
        handleImport(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling mass import request for layout names: ${config.layouts.map((l) => l.name).join(", ")}`);
                const importExecution = config.mode === "merge" ? this.mergeImport.bind(this) : this.replaceImport.bind(this);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] importing the layouts in ${config.mode} mode`);
                const workspaceLayouts = config.layouts.filter((layout) => layout.type === "Workspace");
                const globalLayouts = config.layouts.filter((layout) => layout.type === "Global");
                yield Promise.all([
                    importExecution(globalLayouts, "Global"),
                    importExecution(workspaceLayouts, "Workspace")
                ]);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] mass import completed, responding to caller`);
            });
        }
        handleRemove(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling remove request for ${JSON.stringify(config)}`);
                const layout = (yield this.getAll(config.type)).find((l) => l.name === config.name && l.type === config.type);
                if (layout) {
                    yield this.delete(config.name, config.type);
                    this.emitStreamData("layoutRemoved", layout);
                }
                const operationMessage = layout ? "has been removed" : "has not been removed, because it does not exist";
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] ${config.name} of type ${config.type} ${operationMessage}`);
            });
        }
        handleGetLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling get layout request for name: ${config.name} and type: ${config.type}`);
                const allLayouts = yield this.getAll(config.type);
                const layout = allLayouts.find((l) => l.name === config.name);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] request completed, responding to the caller`);
                return { layout };
            });
        }
        handleGetRawWindowsLayoutData(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling send save requests for layout: ${config.layoutName} to instances: ${(_b = config.instances) === null || _b === void 0 ? void 0 : _b.join(", ")}`);
                const glueWindowsRawData = yield Promise.all(this.getEligibleGlueWindows(config.instances, config.ignoreInstances).map((glueWindow) => this.buildRawGlueWindowData(glueWindow, config, commandId)));
                const nonGlueWindowsRawData = yield Promise.all(this.getEligibleNonGlueWindows(config.instances, config.ignoreInstances).map((glueWindow) => this.buildRawNonGlueWindowData(glueWindow, config, commandId)));
                const result = {
                    windows: [...glueWindowsRawData, ...nonGlueWindowsRawData]
                };
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] request completed, responding to the caller`);
                return result;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        buildRawGlueWindowData(windowData, requestConfig, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const timeoutMessage = `Cannot fetch the layout save data from: ${windowData.name} with id: ${windowData.windowId}`;
                if (!windowData.initialUrl) {
                    throw new Error(`Missing URL for client: ${windowData.name}`);
                }
                const saveRequestResponse = yield PromiseWrap$1(() => __awaiter(this, void 0, void 0, function* () {
                    try {
                        const clientResponse = yield this.glueController.callWindow("layouts", this.operations.clientSaveRequest, requestConfig, windowData.windowId);
                        return clientResponse;
                    }
                    catch (error) {
                        return {};
                    }
                }), 15000, timeoutMessage);
                const instanceData = this.sessionStore.getAllInstancesData().find((instance) => instance.id === windowData.windowId);
                const windowBounds = yield this.windowsController.getWindowBounds(windowData.windowId, commandId);
                const clientProvidedContext = (_a = saveRequestResponse.windowContext) !== null && _a !== void 0 ? _a : {};
                return {
                    bounds: windowBounds,
                    windowContext: clientProvidedContext,
                    url: windowData.initialUrl,
                    name: windowData.name,
                    application: instanceData ? instanceData.applicationName : defaultNoAppWindowComponentAppName,
                    initialContext: windowData.initialContext,
                    windowId: windowData.windowId
                };
            });
        }
        buildRawNonGlueWindowData(windowData, requestConfig, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                if (!windowData.initialUrl) {
                    throw new Error(`Missing URL for client: ${windowData.name}`);
                }
                const instanceData = this.sessionStore.getAllInstancesData().find((instance) => instance.id === windowData.windowId);
                return {
                    bounds: (_a = windowData.initialBounds) !== null && _a !== void 0 ? _a : defaultPlatformConfig.windows.defaultWindowOpenBounds,
                    windowContext: {},
                    url: windowData.initialUrl,
                    name: windowData.name,
                    application: instanceData ? instanceData.applicationName : defaultNoAppWindowComponentAppName,
                    initialContext: windowData.initialContext,
                    windowId: windowData.windowId
                };
            });
        }
        handleGetGlobalPermissionState(args, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling Get Global Permission State request`);
                const { state } = yield navigator.permissions.query({ name: "window-placement" });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] request completed with state: ${state}, responding to the caller`);
                return { state };
            });
        }
        handleRequestGlobalPermission(args, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling Request Global Permission command`);
                const { state } = yield navigator.permissions.query({ name: "window-placement" });
                if (state === "granted") {
                    return { isAvailable: true };
                }
                if (state === "denied") {
                    return { isAvailable: false };
                }
                try {
                    yield window.getScreenDetails();
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] request completed, responding to the caller`);
                    return { isAvailable: true };
                }
                catch (error) {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] request completed, responding to the caller`);
                    return { isAvailable: false };
                }
            });
        }
        handleCheckGlobalActivated(args, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling Check Global Activated request`);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] request completed, responding to the caller`);
                return { isAvailable: false };
            });
        }
        emitStreamData(operation, data) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`sending notification of event: ${operation} with data: ${JSON.stringify(data)}`);
            this.glueController.pushSystemMessage("layouts", operation, data);
        }
        mergeImport(layouts, type) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const currentLayouts = yield this.getAll(type);
                const pendingEvents = [];
                for (const layout of layouts) {
                    const defCurrentIdx = currentLayouts.findIndex((app) => app.name === layout.name);
                    if (defCurrentIdx > -1 && !objEqual(layout, currentLayouts[defCurrentIdx])) {
                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`change detected at layout ${layout.name}`);
                        pendingEvents.push({ operation: "layoutChanged", layout });
                        currentLayouts[defCurrentIdx] = layout;
                        continue;
                    }
                    if (defCurrentIdx < 0) {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`new layout: ${layout.name} detected, adding and announcing`);
                        pendingEvents.push({ operation: "layoutAdded", layout });
                        currentLayouts.push(layout);
                    }
                }
                yield this.cleanSave(currentLayouts, type);
                yield this.announceEvents(pendingEvents);
            });
        }
        replaceImport(layouts, type) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const currentLayouts = yield this.getAll(type);
                const pendingEvents = [];
                for (const layout of layouts) {
                    const defCurrentIdx = currentLayouts.findIndex((app) => app.name === layout.name);
                    if (defCurrentIdx < 0) {
                        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`new layout: ${layout.name} detected, adding and announcing`);
                        pendingEvents.push({ operation: "layoutAdded", layout });
                        continue;
                    }
                    if (!objEqual(layout, currentLayouts[defCurrentIdx])) {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`change detected at layout ${layout.name}`);
                        pendingEvents.push({ operation: "layoutChanged", layout });
                    }
                    currentLayouts.splice(defCurrentIdx, 1);
                }
                currentLayouts.forEach((layout) => {
                    var _a;
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`layout ${layout.name} missing, removing and announcing`);
                    pendingEvents.push({ operation: "layoutRemoved", layout });
                });
                yield this.cleanSave(layouts, type);
                yield this.announceEvents(pendingEvents);
            });
        }
        announceEvents(events) {
            return __awaiter(this, void 0, void 0, function* () {
                let batchCount = 0;
                for (const event of events) {
                    ++batchCount;
                    if (batchCount % 10 === 0) {
                        yield this.waitEventFlush();
                    }
                    this.emitStreamData(event.operation, event.layout);
                }
            });
        }
        getAll(type) {
            return __awaiter(this, void 0, void 0, function* () {
                let all;
                if (this.config.mode === "idb") {
                    all = yield this.idbStore.getAll(type);
                }
                else {
                    all = this.sessionStore.getLayoutSnapshot(type).layouts;
                }
                return all;
            });
        }
        cleanSave(layouts, type) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.config.mode === "idb") {
                    yield this.idbStore.clear(type);
                    for (const layout of layouts) {
                        yield this.idbStore.store(layout, layout.type);
                    }
                    return;
                }
                this.sessionStore.saveLayoutSnapshot({ layouts }, type);
            });
        }
        delete(name, type) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.config.mode === "idb") {
                    yield this.idbStore.delete(name, type);
                    return;
                }
                const all = this.sessionStore.getLayoutSnapshot(type).layouts;
                const idxToRemove = all.findIndex((l) => l.name === name && l.type);
                if (idxToRemove > -1) {
                    all.splice(idxToRemove, 1);
                }
                this.sessionStore.saveLayoutSnapshot({ layouts: all }, type);
            });
        }
        getEligibleNonGlueWindows(requestedInstances, ignoreInstances) {
            const allEligibleWindows = this.getAllEligibleWindows(requestedInstances, ignoreInstances);
            const allNonGlueWindows = this.sessionStore.getAllNonGlue();
            const allWorkspaceClients = this.sessionStore.pickWorkspaceClients(() => true);
            return allEligibleWindows
                .filter((eligibleWindow) => allNonGlueWindows.some((nonGlueWebWindow) => nonGlueWebWindow.windowId === eligibleWindow.windowId) &&
                allWorkspaceClients.every((workspaceClient) => workspaceClient.windowId !== eligibleWindow.windowId));
        }
        getEligibleGlueWorkspaceWindows(requestedInstances, ignoreInstances) {
            let allEligibleWindows = this.getAllEligibleWindows(requestedInstances, ignoreInstances);
            const allNonGlueWindows = this.sessionStore.getAllNonGlue();
            allEligibleWindows = allEligibleWindows.filter((eligibleWindow) => allNonGlueWindows.every((nonGlueWebWindow) => nonGlueWebWindow.windowId !== eligibleWindow.windowId));
            const allWorkspaceClients = this.sessionStore.pickWorkspaceClients(() => true);
            const allFrames = this.sessionStore.getAllFrames();
            const platformFrame = allFrames.find((frame) => frame.isPlatform);
            return allEligibleWindows
                .filter((eligibleWindow) => {
                const correspondingWorkspaceWindow = allWorkspaceClients.find((wspClient) => wspClient.windowId === eligibleWindow.windowId);
                if (platformFrame) {
                    return !(correspondingWorkspaceWindow && correspondingWorkspaceWindow.frameId === platformFrame.windowId);
                }
                return !!correspondingWorkspaceWindow;
            });
        }
        getEligibleGlueWindows(requestedInstances, ignoreInstances) {
            const allEligibleWindows = this.getAllEligibleWindows(requestedInstances, ignoreInstances);
            const allNonGlueWindows = this.sessionStore.getAllNonGlue();
            const allWorkspaceClients = this.sessionStore.pickWorkspaceClients(() => true);
            return allEligibleWindows
                .filter((eligibleWindow) => allWorkspaceClients.every((workspaceClient) => workspaceClient.windowId !== eligibleWindow.windowId) &&
                allNonGlueWindows.every((nonGlueWebWindow) => nonGlueWebWindow.windowId !== eligibleWindow.windowId));
        }
        getAllEligibleWindows(requestedInstances, ignoreInstances) {
            let allNonPlatformWindows = this.sessionStore.getAllWindowsData().filter((webWindow) => webWindow.name !== "Platform");
            if (requestedInstances && requestedInstances.length) {
                const requestedServers = this.glueController.getServers().filter((server) => requestedInstances.some((instanceId) => server.instance === instanceId));
                allNonPlatformWindows = allNonPlatformWindows.filter((eligibleWindow) => requestedServers.some((server) => server.windowId === eligibleWindow.windowId));
            }
            if (ignoreInstances && ignoreInstances.length) {
                const ignoredServers = this.glueController.getServers().filter((server) => ignoreInstances.some((instanceId) => server.instance === instanceId));
                allNonPlatformWindows = allNonPlatformWindows.filter((eligibleWindow) => ignoredServers.every((server) => server.windowId !== eligibleWindow.windowId));
            }
            return allNonPlatformWindows;
        }
        waitEventFlush() {
            return new Promise((resolve) => setTimeout(resolve, 10));
        }
    }

    class IdbLayoutsStore {
        constructor(ioc) {
            this.ioc = ioc;
            if (!("indexedDB" in window)) {
                throw new Error("Cannot initialize the local storage, because IndexedDb is not supported");
            }
        }
        get database() {
            return this.ioc.getDatabase();
        }
        getAll(layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).getAll("workspaceLayouts");
                    case "Global": return (yield this.database).getAll("globalLayouts");
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        delete(name, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).delete("workspaceLayouts", name);
                    case "Global": return (yield this.database).delete("globalLayouts", name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        clear(layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).clear("workspaceLayouts");
                    case "Global": return (yield this.database).clear("globalLayouts");
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        get(name, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                switch (layoutType) {
                    case "Workspace": return (yield this.database).get("workspaceLayouts", name);
                    case "Global": return (yield this.database).get("globalLayouts", name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
        store(layout, layoutType) {
            return __awaiter(this, void 0, void 0, function* () {
                glueLayoutDecoder$1.runWithException(layout);
                layoutTypeDecoder$1.runWithException(layoutType);
                switch (layoutType) {
                    case "Workspace": return (yield this.database).put("workspaceLayouts", layout, layout.name);
                    case "Global": return (yield this.database).put("globalLayouts", layout, layout.name);
                    default: throw new Error(`The provided layout type is not recognized: ${layoutType}`);
                }
            });
        }
    }

    const defaultLoadingConfig = {
        defaultStrategy: "direct",
        delayed: {
            batch: 1,
            initialOffsetInterval: 1000,
            interval: 5000
        },
        showDelayedIndicator: false
    };

    class WorkspacesController {
        constructor(framesController, glueController, stateController, hibernationWatcher, ioc) {
            this.framesController = framesController;
            this.glueController = glueController;
            this.stateController = stateController;
            this.hibernationWatcher = hibernationWatcher;
            this.ioc = ioc;
            this.started = false;
            this.operations = {
                frameHello: { name: "frameHello", dataDecoder: frameHelloDecoder, execute: this.handleFrameHello.bind(this) },
                isWindowInWorkspace: { name: "isWindowInWorkspace", dataDecoder: simpleItemConfigDecoder, resultDecoder: isWindowInSwimlaneResultDecoder, execute: this.isWindowInWorkspace.bind(this) },
                createWorkspace: { name: "createWorkspace", dataDecoder: workspaceCreateConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.createWorkspace.bind(this) },
                createFrame: { name: "createFrame", resultDecoder: frameSummaryResultDecoder, execute: this.createFrame.bind(this) },
                initFrame: { name: "initFrame", resultDecoder: voidResultDecoder, execute: this.initFrame.bind(this) },
                getAllFramesSummaries: { name: "getAllFramesSummaries", resultDecoder: frameSummariesResultDecoder, execute: this.getAllFramesSummaries.bind(this) },
                getFrameSummary: { name: "getFrameSummary", dataDecoder: getFrameSummaryConfigDecoder, resultDecoder: frameSummaryDecoder, execute: this.getFrameSummary.bind(this) },
                getAllWorkspacesSummaries: { name: "getAllWorkspacesSummaries", resultDecoder: workspaceSummariesResultDecoder, execute: this.getAllWorkspacesSummaries.bind(this) },
                getWorkspaceSnapshot: { name: "getWorkspaceSnapshot", dataDecoder: simpleItemConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.getWorkspaceSnapshot.bind(this) },
                getAllLayoutsSummaries: { name: "getAllLayoutsSummaries", resultDecoder: layoutSummariesDecoder, execute: this.getAllLayoutsSummaries.bind(this) },
                openWorkspace: { name: "openWorkspace", dataDecoder: openWorkspaceConfigDecoder, resultDecoder: workspaceSnapshotResultDecoder, execute: this.openWorkspace.bind(this) },
                deleteLayout: { name: "deleteLayout", dataDecoder: deleteLayoutConfigDecoder, resultDecoder: voidResultDecoder, execute: this.deleteLayout.bind(this) },
                saveLayout: { name: "saveLayout", dataDecoder: workspaceLayoutSaveConfigDecoder, resultDecoder: workspaceLayoutDecoder, execute: this.saveLayout.bind(this) },
                importLayout: { name: "importLayout", dataDecoder: workspacesLayoutImportConfigDecoder, resultDecoder: voidResultDecoder, execute: this.importLayout.bind(this) },
                exportAllLayouts: { name: "exportAllLayouts", resultDecoder: exportedLayoutsResultDecoder, execute: this.exportAllLayouts.bind(this) },
                restoreItem: { name: "restoreItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.restoreItem.bind(this) },
                maximizeItem: { name: "maximizeItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.maximizeItem.bind(this) },
                focusItem: { name: "focusItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.focusItem.bind(this) },
                closeItem: { name: "closeItem", dataDecoder: simpleItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.closeItem.bind(this) },
                resizeItem: { name: "resizeItem", dataDecoder: resizeItemConfigDecoder, resultDecoder: voidResultDecoder, execute: this.resizeItem.bind(this) },
                changeFrameState: { name: "changeFrameState", dataDecoder: frameStateConfigDecoder, resultDecoder: voidResultDecoder, execute: this.changeFrameState.bind(this) },
                getFrameState: { name: "getFrameState", dataDecoder: simpleItemConfigDecoder, resultDecoder: frameStateResultDecoder, execute: this.getFrameState.bind(this) },
                getFrameBounds: { name: "getFrameBounds", dataDecoder: simpleItemConfigDecoder, resultDecoder: frameBoundsResultDecoder, execute: this.getFrameBounds.bind(this) },
                moveFrame: { name: "moveFrame", dataDecoder: moveFrameConfigDecoder, resultDecoder: voidResultDecoder, execute: this.moveFrame.bind(this) },
                getFrameSnapshot: { name: "getFrameSnapshot", dataDecoder: frameSnapshotConfigDecoder, resultDecoder: frameSnapshotResultDecoder, execute: this.getFrameSnapshot.bind(this) },
                forceLoadWindow: { name: "forceLoadWindow", dataDecoder: simpleItemConfigDecoder, resultDecoder: simpleWindowOperationSuccessResultDecoder, execute: this.forceLoadWindow.bind(this) },
                ejectWindow: { name: "ejectWindow", dataDecoder: simpleItemConfigDecoder, resultDecoder: simpleWindowOperationSuccessResultDecoder, execute: this.ejectWindow.bind(this) },
                setItemTitle: { name: "setItemTitle", dataDecoder: setItemTitleConfigDecoder, resultDecoder: voidResultDecoder, execute: this.setItemTitle.bind(this) },
                moveWindowTo: { name: "moveWindowTo", dataDecoder: moveWindowConfigDecoder, resultDecoder: voidResultDecoder, execute: this.moveWindowTo.bind(this) },
                addWindow: { name: "addWindow", dataDecoder: addWindowConfigDecoder, resultDecoder: addItemResultDecoder, execute: this.addWindow.bind(this) },
                addContainer: { name: "addContainer", dataDecoder: addContainerConfigDecoder, resultDecoder: addItemResultDecoder, execute: this.addContainer.bind(this) },
                bundleWorkspace: { name: "bundleWorkspace", dataDecoder: bundleConfigDecoder, resultDecoder: voidResultDecoder, execute: this.bundleWorkspace.bind(this) },
                hibernateWorkspace: { name: "hibernateWorkspace", dataDecoder: workspaceSelectorDecoder, resultDecoder: voidResultDecoder, execute: this.hibernateWorkspace.bind(this) },
                resumeWorkspace: { name: "resumeWorkspace", dataDecoder: workspaceSelectorDecoder, resultDecoder: voidResultDecoder, execute: this.resumeWorkspace.bind(this) },
                getWorkspacesConfig: { name: "getWorkspacesConfig", resultDecoder: workspacesConfigDecoder, execute: this.getWorkspacesConfiguration.bind(this) },
                lockWorkspace: { name: "lockWorkspace", dataDecoder: lockWorkspaceDecoder, resultDecoder: voidResultDecoder, execute: this.lockWorkspace.bind(this) },
                lockWindow: { name: "lockWindow", dataDecoder: lockWindowDecoder, resultDecoder: voidResultDecoder, execute: this.lockWindow.bind(this) },
                lockContainer: { name: "lockContainer", dataDecoder: lockContainerDecoder, resultDecoder: voidResultDecoder, execute: this.lockContainer.bind(this) },
                pinWorkspace: { name: "pinWorkspace", dataDecoder: pinWorkspaceDecoder, resultDecoder: voidResultDecoder, execute: this.pinWorkspace.bind(this) },
                unpinWorkspace: { name: "unpinWorkspace", dataDecoder: workspaceSelectorDecoder, resultDecoder: voidResultDecoder, execute: this.unpinWorkspace.bind(this) },
                getWorkspaceIcon: { name: "getWorkspaceIcon", dataDecoder: workspaceSelectorDecoder, resultDecoder: workspaceIconDecoder, execute: this.getWorkspaceIcon.bind(this) },
                setWorkspaceIcon: { name: "setWorkspaceIcon", dataDecoder: setWorkspaceIconDecoder, resultDecoder: voidResultDecoder, execute: this.setWorkspaceIcon.bind(this) },
                checkStarted: { name: "checkStarted", execute: this.handleCheckStarted.bind(this) },
                getPlatformFrameId: { name: "getPlatformFrameId", execute: this.handleGetPlatformFrameId.bind(this) },
                getWorkspacesLayouts: { name: "getWorkspacesLayouts", dataDecoder: getWorkspacesLayoutsConfigDecoder, resultDecoder: getWorkspacesLayoutsResponseDecoder, execute: this.handleGetWorkspacesLayouts.bind(this) },
                getWorkspaceWindowsOnLayoutSaveContext: { name: "getWorkspaceWindowsOnLayoutSaveContext", dataDecoder: getWorkspaceWindowsOnLayoutSaveContextConfigDecoder, resultDecoder: getWorkspaceWindowsOnLayoutSaveContextResult, execute: this.handleGetWorkspaceWindowsOnLayoutSaveContext.bind(this) },
                setMaximizationBoundary: { name: "setMaximizationBoundary", dataDecoder: setMaximizationBoundaryConfigDecoder, resultDecoder: voidResultDecoder, execute: this.handleSetMaximizationBoundary.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!config.workspaces) {
                    this.started = false;
                    return;
                }
                this.settings = this.applyDefaults(config.workspaces);
                if (this.settings.hibernation) {
                    this.hibernationWatcher.start(this, this.settings.hibernation);
                }
                yield Promise.all([
                    this.glueController.createWorkspacesStream(),
                    this.glueController.createWorkspacesEventsReceiver(this.handleWorkspaceEvent.bind(this))
                ]);
                yield this.framesController.start(config.workspaces, config.windows.defaultWindowOpenBounds, this.operations.getFrameSummary);
                this.stateController.onWindowDisappeared((windowId) => this.framesController.handleFrameDisappeared(windowId));
                this.started = true;
            });
        }
        get logger() {
            return logger.get("workspaces.controller");
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) {
                    throw new Error("Cannot handle this workspaces control message, because the controller has not been started");
                }
                const workspacesData = args.data;
                const commandId = args.commandId;
                const operationValidation = workspacesOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This workspace request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(workspacesData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Workspace request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(workspacesData)}`);
                const result = yield this.operations[operationName].execute(workspacesData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Workspace request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleClientUnloaded(windowId, win) {
            var _a, _b;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`handling unloading of ${windowId}`);
            if (!win || win.closed) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`${windowId} detected as closed, checking if frame and processing close`);
                this.framesController.handleFrameDisappeared(windowId);
            }
        }
        handleWorkspaceEvent(data) {
            this.glueController.pushWorkspacesMessage(data);
            if (this.settings.hibernation) {
                this.hibernationWatcher.notifyEvent(data);
            }
        }
        closeItem(config, commandId) {
            var _a, _b, _c, _d, _e, _f;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling closeItem request with config ${JSON.stringify(config)}`);
                const frameToFocus = this.framesController.getAll().find((frame) => frame.windowId === config.itemId);
                if (frameToFocus) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this is targeted at a frame, closing the frame`);
                    (_c = window.open(undefined, frameToFocus.windowId)) === null || _c === void 0 ? void 0 : _c.close();
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] the frame window is closed`);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.closeItem, config, frame.windowId);
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        setItemTitle(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling setItemTitle request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.setItemTitle, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        hibernateWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling hibernateWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.hibernateWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        getWorkspacesConfiguration(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getWorkspacesConfiguration request`);
                return this.settings;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        handleFrameHello(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling handleFrameHello command with config: ${JSON.stringify(config)}`);
                if (config.windowId) {
                    this.framesController.processNewHello(config.windowId);
                }
            });
        }
        isWindowInWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling isWindowInWorkspace command with config: ${JSON.stringify(config)}`);
                const allFrames = this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending isWindowInWorkspace to all known frames: ${JSON.stringify(allFrames.join(", "))}`);
                const result = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.isWindowInWorkspace, config, frame.windowId)));
                const inWorkspace = result.some((res) => res.inWorkspace);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, returning ${inWorkspace} to the caller`);
                return { inWorkspace };
            });
        }
        createWorkspace(config, commandId) {
            var _a, _b, _c, _d, _e, _f;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling createWorkspace command`);
                const frameInstanceConfig = {
                    frameId: (_b = config.frame) === null || _b === void 0 ? void 0 : _b.reuseFrameId,
                    newFrame: (_c = config.frame) === null || _c === void 0 ? void 0 : _c.newFrame,
                    itemId: (_d = config.config) === null || _d === void 0 ? void 0 : _d.reuseWorkspaceId
                };
                const frame = yield this.framesController.getFrameInstance(frameInstanceConfig);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] calling frame: ${frame.windowId}, based on selection config: ${JSON.stringify(frameInstanceConfig)}`);
                const result = yield this.glueController.callFrame(this.operations.createWorkspace, config, frame.windowId);
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace(`[${commandId}] frame ${frame.windowId} responded with a valid snapshot, returning to caller`);
                return result;
            });
        }
        createFrame(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling createFrame command`);
                const frame = yield this.framesController.openFrame(config.frameConfig);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] calling frame: ${frame.windowId}}`);
                const result = yield this.glueController.callFrame(this.operations.createFrame, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded returning to caller`);
                return result;
            });
        }
        initFrame(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling initFrame command`);
                const frameInstanceConfig = {
                    frameId: config.frameId
                };
                const frame = yield this.framesController.getFrameInstance(frameInstanceConfig);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] calling frame: ${frame.windowId}, based on selection config: ${JSON.stringify(frameInstanceConfig)}`);
                yield this.glueController.callFrame(this.operations.initFrame, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded returning to caller`);
            });
        }
        getAllFramesSummaries(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllFramesSummaries request`);
                const allFrames = yield this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending getFrameSummary to all known frames: ${allFrames.join(", ")}`);
                const summaries = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.getFrameSummary, { itemId: frame.windowId }, frame.windowId)));
                const verifiedSummaries = summaries.filter((sum) => sum.id !== "none");
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, returning to caller`);
                return { summaries: verifiedSummaries };
            });
        }
        getFrameSummary(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getFrameSummary request for config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] forwarding getFrameSummary to frame ${frame.windowId}`);
                const summary = yield this.glueController.callFrame(this.operations.getFrameSummary, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid summary, returning to caller`);
                return summary;
            });
        }
        getAllWorkspacesSummaries(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllWorkspacesSummaries request`);
                const allFrames = this.framesController.getAll();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] sending getAllWorkspacesSummaries to all known frames: ${allFrames.join(", ")}`);
                const results = yield Promise.all(allFrames.map((frame) => this.glueController.callFrame(this.operations.getAllWorkspacesSummaries, {}, frame.windowId)));
                const summaries = results.reduce((soFar, result) => {
                    soFar.push(...result.summaries);
                    return soFar;
                }, []);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] all frames responded, results were aggregated, returning to caller`);
                return { summaries };
            });
        }
        getWorkspaceSnapshot(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getWorkspaceSnapshot for config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.getWorkspaceSnapshot, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid snapshot, retuning to caller`);
                return result;
            });
        }
        handleCheckStarted(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling handleCheckStarted request`);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] the controller has been started, responding to caller`);
                return { started: true };
            });
        }
        handleGetPlatformFrameId(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling GetPlatformFrameId request`);
                const platformFrameData = this.framesController.getPlatformFrameSessionData();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] GetPlatformFrameId completed, responding to caller`);
                return { id: platformFrameData === null || platformFrameData === void 0 ? void 0 : platformFrameData.windowId };
            });
        }
        handleGetWorkspacesLayouts(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling handleGetWorkspacesLayouts request for frame: ${config.frameId} for layout: ${config.layoutName} of type: ${config.layoutType}`);
                const response = yield this.glueController.callFrame(this.operations.getWorkspacesLayouts, config, config.frameId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] handleGetWorkspacesLayouts request completed for frame: ${config.frameId} for layout: ${config.layoutName} of type: ${config.layoutType}`);
                return response;
            });
        }
        getAllLayoutsSummaries(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getAllLayoutsSummaries command`);
                const all = yield this.ioc.layoutsController.handleGetAll({ type: "Workspace" }, commandId);
                const summaries = all.summaries.map((summary) => ({ name: summary.name }));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] all layouts retrieved and mapped, returning to caller`);
                return { summaries };
            });
        }
        openWorkspace(config, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling openWorkspace command for name: ${config.name}`);
                const frameQueryConfig = {
                    frameId: (_b = config.restoreOptions) === null || _b === void 0 ? void 0 : _b.frameId,
                    newFrame: (_c = config.restoreOptions) === null || _c === void 0 ? void 0 : _c.newFrame,
                    itemId: (_d = config.restoreOptions) === null || _d === void 0 ? void 0 : _d.reuseWorkspaceId
                };
                const frame = yield this.framesController.getFrameInstance(frameQueryConfig);
                const result = yield this.glueController.callFrame(this.operations.openWorkspace, config, frame.windowId);
                return result;
            });
        }
        deleteLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling deleteLayout request for name: ${config.name}`);
                yield this.ioc.layoutsController.handleRemove({ name: config.name, type: "Workspace" }, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] layouts reported this layout as deleted, responding to caller`);
            });
        }
        saveLayout(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling saveLayout request for workspace ${config.workspaceId} and name ${config.name}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] forwarding request to frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.saveLayout, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} responded with a valid layout, returning to caller`);
                return result;
            });
        }
        importLayout(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling importLayout command for layout ${config.layout.name}`);
                yield this.ioc.layoutsController.handleImport({ layouts: [config.layout], mode: config.mode }, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] the layouts controller successfully imported the layout, responding to caller`);
            });
        }
        exportAllLayouts(config, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling exportAllLayouts request`);
                const result = yield this.ioc.layoutsController.handleExport({ type: "Workspace" }, commandId);
                return result;
            });
        }
        restoreItem(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling restoreItem request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.restoreItem, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        maximizeItem(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling maximizeItem request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.maximizeItem, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        focusItem(config, commandId) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling focusItem request with config ${JSON.stringify(config)}`);
                const frameToFocus = this.framesController.getAll().find((frame) => frame.windowId === config.itemId);
                if (frameToFocus) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] this is targeted at a frame, focusing the frame`);
                    window.open(undefined, frameToFocus.windowId);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.focusItem, config, frame.windowId);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        resizeItem(config, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling resizeItem request with config ${JSON.stringify(config)}`);
                const targetedFrame = this.framesController.getAll().find((fr) => fr.windowId === config.itemId);
                if (targetedFrame) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] detected targeted item is frame, building window resize config`);
                    const resizeConfig = {
                        windowId: config.itemId,
                        width: config.width,
                        height: config.height,
                        relative: config.relative
                    };
                    yield this.glueController.callWindow("windows", this.ioc.windowsController.moveResizeOperation, resizeConfig, targetedFrame.windowId);
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] window resize responded with success, returning to caller`);
                    return;
                }
                const frame = yield this.framesController.getFrameInstance(config);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] targeted item is not a frame, it is located in frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.resizeItem, config, frame.windowId);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        getFrameSnapshot(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getFrameSnapshot request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.getFrameSnapshot, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        forceLoadWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling forceLoadWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.forceLoadWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        ejectWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling ejectWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.ejectWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        moveWindowTo(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling moveWindowTo request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.moveWindowTo, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        addWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling addWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.parentId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.addWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal: ${JSON.stringify(result)}, responding to caller`);
                return result;
            });
        }
        addContainer(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling addContainer request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.parentId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.addContainer, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal: ${JSON.stringify(result)}, responding to caller`);
                return result;
            });
        }
        bundleWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling bundleWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.bundleWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        resumeWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling resumeWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.resumeWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        lockWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling lockWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.lockWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        lockContainer(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling lockContainer request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.itemId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.lockContainer, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        lockWindow(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling lockWindow request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.windowPlacementId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.lockWindow, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        pinWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling pinWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.pinWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        unpinWorkspace(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling unpinWorkspace request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.unpinWorkspace, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        getWorkspaceIcon(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getWorkspaceIcon request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                const result = yield this.glueController.callFrame(this.operations.getWorkspaceIcon, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
                return result;
            });
        }
        setWorkspaceIcon(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling setWorkspaceIcon request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ itemId: config.workspaceId });
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.setWorkspaceIcon, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        handleGetWorkspaceWindowsOnLayoutSaveContext(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling GetWorkspaceWindowsOnLayoutSaveContext request with config: ${JSON.stringify(config)}`);
                const windowsOnSaveData = yield Promise.all(config.windowIds.map((windowId) => __awaiter(this, void 0, void 0, function* () {
                    return {
                        windowId,
                        windowContext: yield this.getWorkspaceWindowOnLayoutSaveData(windowId, config)
                    };
                })));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] operation GetWorkspaceWindowsOnLayoutSaveContext completed responding`);
                return { windowsOnSaveData };
            });
        }
        handleSetMaximizationBoundary(config, commandId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling setMaximizationBoundary request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance(config);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] targeting frame ${frame.windowId}`);
                yield this.glueController.callFrame(this.operations.setMaximizationBoundary, config, frame.windowId);
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] frame ${frame.windowId} gave a success signal, responding to caller`);
            });
        }
        changeFrameState(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error("Frame states are not supported in Glue42 Core");
            });
        }
        getFrameState(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error("Frame states are not supported in Glue42 Core");
            });
        }
        getFrameBounds(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getFrameBounds request with config ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ frameId: config.itemId });
                const frameWindowBounds = yield this.glueController.callWindow("windows", this.ioc.windowsController.getFrameBoundsOperation, { windowId: frame.windowId }, frame.windowId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] getFrameBounds completed`);
                return { bounds: frameWindowBounds.bounds };
            });
        }
        moveFrame(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling moveFrame command with config: ${JSON.stringify(config)}`);
                const frame = yield this.framesController.getFrameInstance({ frameId: config.itemId });
                const moveConfig = {
                    windowId: config.itemId,
                    top: config.top,
                    left: config.left,
                    relative: config.relative
                };
                yield this.glueController.callWindow("windows", this.ioc.windowsController.moveResizeOperation, moveConfig, frame.windowId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] frame with id ${frame.windowId} was successfully moved, responding to caller`);
            });
        }
        applyDefaults(config) {
            const providedHibernationConfig = (config === null || config === void 0 ? void 0 : config.hibernation) || {};
            const providedLoadingConfig = (config === null || config === void 0 ? void 0 : config.loadingStrategy) || {};
            const loadingConfig = cjs(defaultLoadingConfig, providedLoadingConfig);
            return Object.assign(Object.assign({}, config), { loadingStrategy: loadingConfig, hibernation: providedHibernationConfig });
        }
        getWorkspaceWindowOnLayoutSaveData(windowId, requestConfig) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const nonGlueWindows = this.ioc.sessionController.getAllNonGlue();
                if (nonGlueWindows.some((nonGlueWindow) => nonGlueWindow.windowId === windowId)) {
                    return {};
                }
                const workspaceWindow = this.ioc.sessionController.getWorkspaceClientById(windowId);
                if (!workspaceWindow) {
                    throw new Error(`Cannot ask window: ${windowId} for on layout save request, because it is not a known workspace window`);
                }
                const timeoutMessage = `Cannot fetch the on layout save context from: ${windowId}, because of timeout`;
                const saveRequestResponse = yield PromiseWrap$1(() => __awaiter(this, void 0, void 0, function* () {
                    try {
                        const clientResponse = yield this.glueController.callWindow("layouts", this.ioc.layoutsController.operations.clientSaveRequest, requestConfig, windowId);
                        return clientResponse;
                    }
                    catch (error) {
                        return {};
                    }
                }), 15000, timeoutMessage);
                return (_a = saveRequestResponse === null || saveRequestResponse === void 0 ? void 0 : saveRequestResponse.windowContext) !== null && _a !== void 0 ? _a : {};
            });
        }
    }

    const intentsOperationTypesDecoder$1 = oneOf$1(constant$1("findIntent"), constant$1("getIntents"), constant$1("raiseIntent"), constant$1("operationCheck"));
    const intentHandlerDecoder$1 = object$1({
        applicationName: nonEmptyStringDecoder$1,
        applicationTitle: string$1(),
        applicationDescription: optional$1(string$1()),
        applicationIcon: optional$1(string$1()),
        type: oneOf$1(constant$1("app"), constant$1("instance")),
        displayName: optional$1(string$1()),
        contextTypes: optional$1(array$1(nonEmptyStringDecoder$1)),
        instanceId: optional$1(string$1()),
        instanceTitle: optional$1(string$1()),
        resultType: optional$1(nonEmptyStringDecoder$1)
    });
    const intentDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        handlers: array$1(intentHandlerDecoder$1)
    });
    const intentTargetDecoder$1 = oneOf$1(constant$1("startNew"), constant$1("reuse"), object$1({
        app: optional$1(nonEmptyStringDecoder$1),
        instance: optional$1(nonEmptyStringDecoder$1)
    }));
    const intentContextDecoder$1 = object$1({
        type: optional$1(nonEmptyStringDecoder$1),
        data: optional$1(object$1())
    });
    const intentsDecoder$1 = array$1(intentDecoder$1);
    const wrappedIntentsDecoder$1 = object$1({
        intents: intentsDecoder$1
    });
    const wrappedIntentFilterDecoder$1 = object$1({
        filter: optional$1(object$1({
            name: optional$1(nonEmptyStringDecoder$1),
            contextType: optional$1(nonEmptyStringDecoder$1),
            resultType: optional$1(nonEmptyStringDecoder$1)
        }))
    });
    const intentRequestDecoder$1 = object$1({
        intent: nonEmptyStringDecoder$1,
        target: optional$1(intentTargetDecoder$1),
        context: optional$1(intentContextDecoder$1),
        options: optional$1(windowOpenSettingsDecoder$1)
    });
    const intentResultDecoder$1 = object$1({
        request: intentRequestDecoder$1,
        handler: intentHandlerDecoder$1,
        result: anyJson$1()
    });

    class IntentsController$1 {
        constructor(glueController, appDirectory, ioc) {
            this.glueController = glueController;
            this.appDirectory = appDirectory;
            this.ioc = ioc;
            this.operations = {
                getIntents: { name: "getIntents", resultDecoder: wrappedIntentsDecoder$1, execute: this.getWrappedIntents.bind(this) },
                findIntent: { name: "findIntent", dataDecoder: wrappedIntentFilterDecoder$1, resultDecoder: wrappedIntentsDecoder$1, execute: this.findIntent.bind(this) },
                raiseIntent: { name: "raiseIntent", dataDecoder: intentRequestDecoder$1, resultDecoder: intentResultDecoder$1, execute: this.raiseIntent.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
            this.started = false;
        }
        get logger() {
            return logger.get("intents.controller");
        }
        start() {
            return __awaiter(this, void 0, void 0, function* () {
                this.started = true;
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const intentsData = args.data;
                const commandId = args.commandId;
                const operationValidation = intentsOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This intents request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(intentsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Intents request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(intentsData)}`);
                const result = yield this.operations[operationName].execute(intentsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Intents request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        extractAppIntents(apps) {
            const intents = {};
            const appsWithIntents = apps.filter((app) => app.intents.length > 0);
            for (const app of appsWithIntents) {
                for (const intentDef of app.intents) {
                    if (!intents[intentDef.name]) {
                        intents[intentDef.name] = [];
                    }
                    const handler = {
                        applicationName: app.name,
                        applicationTitle: app.title,
                        applicationDescription: app.caption,
                        displayName: intentDef.displayName,
                        contextTypes: intentDef.contexts,
                        applicationIcon: app.icon,
                        type: "app",
                        resultType: intentDef.resultType
                    };
                    intents[intentDef.name].push(handler);
                }
            }
            return intents;
        }
        getInstanceIntents(apps, commandId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const intents = {};
                for (const server of this.glueController.getServers()) {
                    const serverIntentsMethods = (((_a = server.getMethods) === null || _a === void 0 ? void 0 : _a.call(server)) || []).filter((method) => method.name.startsWith(GlueWebIntentsPrefix));
                    yield Promise.all(serverIntentsMethods.map((method) => __awaiter(this, void 0, void 0, function* () {
                        const intentName = method.name.replace(GlueWebIntentsPrefix, "");
                        if (!intents[intentName]) {
                            intents[intentName] = [];
                        }
                        const info = method.flags.intent;
                        const app = apps.find((appDef) => appDef.name === server.application);
                        let appIntent;
                        if (app && app.intents) {
                            appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);
                        }
                        let title;
                        if (server.windowId) {
                            title = yield this.ioc.windowsController.getWindowTitle(server.windowId, commandId);
                        }
                        const handler = {
                            instanceId: server.windowId || server.instance,
                            applicationName: server.application || "",
                            applicationIcon: info.icon || (app === null || app === void 0 ? void 0 : app.icon),
                            applicationTitle: (app === null || app === void 0 ? void 0 : app.title) || "",
                            applicationDescription: info.description || (app === null || app === void 0 ? void 0 : app.caption),
                            displayName: info.displayName || (appIntent === null || appIntent === void 0 ? void 0 : appIntent.displayName),
                            contextTypes: info.contextTypes || (appIntent === null || appIntent === void 0 ? void 0 : appIntent.contexts),
                            instanceTitle: title,
                            type: "instance",
                            resultType: (appIntent === null || appIntent === void 0 ? void 0 : appIntent.resultType) || info.resultType
                        };
                        intents[intentName].push(handler);
                    })));
                }
                return intents;
            });
        }
        mergeIntentStores(storeOne, storeTwo) {
            const intents = {};
            for (const name of new Set([...Object.keys(storeOne), ...Object.keys(storeTwo)])) {
                intents[name] = [...(storeOne[name] || []), ...(storeTwo[name] || [])];
            }
            return intents;
        }
        wrapIntents(intents) {
            return {
                intents
            };
        }
        getIntents(commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const apps = (yield this.appDirectory.getAll()).map((app) => {
                    return {
                        name: app.name,
                        title: app.title || "",
                        icon: app.icon,
                        caption: app.caption,
                        intents: app.userProperties.intents || []
                    };
                });
                const appIntentsStore = this.extractAppIntents(apps);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] got app intents`);
                const instanceIntentsStore = yield this.getInstanceIntents(apps, commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] got instance intents`);
                const allIntentsStore = this.mergeIntentStores(appIntentsStore, instanceIntentsStore);
                const intents = Object.keys(allIntentsStore).map((name) => ({ name, handlers: allIntentsStore[name] }));
                return intents;
            });
        }
        getWrappedIntents(commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling getIntents command`);
                const intents = yield this.getIntents(commandId);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] getIntents command completed`);
                return this.wrapIntents(intents);
            });
        }
        findIntent(wrappedIntentFilter, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling findIntent command`);
                const intentFilter = wrappedIntentFilter.filter;
                let intents = yield this.getIntents(commandId);
                if (!intentFilter) {
                    return this.wrapIntents(intents);
                }
                if (typeof intentFilter === "string") {
                    return this.wrapIntents(intents.filter((intent) => intent.name === intentFilter));
                }
                if (intentFilter.contextType) {
                    const ctToLower = intentFilter.contextType.toLowerCase();
                    intents = intents.filter((intent) => intent.handlers.some((handler) => { var _a; return (_a = handler.contextTypes) === null || _a === void 0 ? void 0 : _a.some((ct) => ct.toLowerCase() === ctToLower); }));
                }
                if (intentFilter.name) {
                    intents = intents.filter((intent) => intent.name === intentFilter.name);
                }
                if (intentFilter.resultType) {
                    const resultTypeToLower = intentFilter.resultType.toLowerCase();
                    intents = intents.filter((intent) => intent.handlers.some(handler => { var _a; return ((_a = handler.resultType) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === resultTypeToLower; }));
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] findIntent command completed`);
                return this.wrapIntents(intents);
            });
        }
        getIntent(intent, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                return (yield this.getIntents(commandId)).find((registeredIntent) => registeredIntent.name === intent);
            });
        }
        startApp(config, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                const instance = yield this.ioc.applicationsController.handleApplicationStart(config, commandId);
                return instance.id;
            });
        }
        waitForServer(instanceId) {
            return __awaiter(this, void 0, void 0, function* () {
                let unsub;
                const executor = (resolve) => {
                    unsub = this.glueController.subscribeForServerAdded((server) => {
                        if (server.windowId === instanceId || server.instance === instanceId) {
                            resolve(server);
                        }
                    });
                };
                return PromisePlus$3(executor, 30 * 1000, `Can not find interop server for instance ${instanceId}`).finally(() => unsub());
            });
        }
        waitForMethod(methodName, instanceId) {
            return __awaiter(this, void 0, void 0, function* () {
                let unsub;
                const executor = (resolve) => {
                    unsub = this.glueController.subscribeForMethodAdded((addedMethod) => {
                        if (addedMethod.name === methodName) {
                            resolve(addedMethod);
                        }
                    });
                };
                return PromisePlus$3(executor, 10 * 1000, `Can not find interop method ${methodName} for instance ${instanceId}`).finally(() => unsub());
            });
        }
        instanceIdToInteropInstance(instanceId) {
            var _a;
            const servers = this.glueController.getServers();
            return (_a = servers.find((server) => server.windowId === instanceId || server.instance === instanceId)) === null || _a === void 0 ? void 0 : _a.instance;
        }
        raiseIntentToInstance(instanceId, intent, context) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const methodName = `${GlueWebIntentsPrefix}${intent}`;
                let interopServer = this.glueController.getServers().find((server) => server.windowId === instanceId || server.instance === instanceId);
                if (!interopServer) {
                    interopServer = yield this.waitForServer(instanceId);
                }
                const method = (_a = interopServer.getMethods) === null || _a === void 0 ? void 0 : _a.call(interopServer).find((registeredMethod) => registeredMethod.name === methodName);
                if (!method) {
                    yield this.waitForMethod(methodName, instanceId);
                }
                const result = yield this.glueController.invokeMethod(methodName, context, { instance: this.instanceIdToInteropInstance(instanceId) });
                return result.returned;
            });
        }
        raiseIntent(intentRequest, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling raiseIntent command`);
                const intentName = intentRequest.intent;
                const intentDef = yield this.getIntent(intentName, commandId);
                if (!intentDef) {
                    throw new Error(`Intent ${intentName} not found!`);
                }
                const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === "app");
                const target = intentRequest.target || (isDynamicIntent ? "reuse" : "startNew");
                let handler;
                const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === "app");
                if (target === "startNew") {
                    handler = anAppHandler;
                }
                else if (target === "reuse") {
                    const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === "instance");
                    handler = anInstanceHandler || anAppHandler;
                }
                else if (target.instance) {
                    handler = intentDef.handlers.find((intentHandler) => intentHandler.type === "instance" && intentHandler.instanceId === target.instance);
                }
                else if (target.app) {
                    handler = intentDef.handlers.find((intentHandler) => intentHandler.type === "app" && intentHandler.applicationName === target.app);
                }
                else {
                    throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);
                }
                if (!handler) {
                    throw new Error(`Can not raise intent for request ${JSON.stringify(intentRequest)} - can not find intent handler!`);
                }
                handler.instanceId;
                if (handler.type === "app") {
                    handler.instanceId = yield this.startApp(Object.assign({ name: handler.applicationName }, intentRequest.options), commandId);
                }
                if (!handler.instanceId) {
                    throw new Error(`Can not raise intent for request ${JSON.stringify(intentRequest)} - handler is missing instanceId!`);
                }
                const result = yield this.raiseIntentToInstance(handler.instanceId, intentName, intentRequest.context);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] raiseIntent command completed`);
                return {
                    request: intentRequest,
                    handler,
                    result
                };
            });
        }
    }

    const channelOperationDecoder = oneOf$1(constant$1("addChannel"), constant$1("operationCheck"));
    const channelContextDecoder$1 = object$1({
        name: nonEmptyStringDecoder$1,
        meta: object$1({
            color: nonEmptyStringDecoder$1
        }),
        data: optional$1(anyJson$1()),
    });

    class ChannelsController$1 {
        constructor(glueController) {
            this.glueController = glueController;
            this.operations = {
                addChannel: { name: "addChannel", execute: this.addChannel.bind(this), dataDecoder: channelContextDecoder$1 },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("channels.controller");
        }
        start(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const channelDefinitions = config.channels.definitions;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("initializing channels");
                yield this.setupChannels(channelDefinitions);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("initialization is completed");
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                const channelsData = args.data;
                const commandId = args.commandId;
                const operationValidation = channelOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This channels request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(channelsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Channels request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(channelsData)}`);
                const result = yield this.operations[operationName].execute(channelsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Channels request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        setupChannels(channels) {
            return __awaiter(this, void 0, void 0, function* () {
                yield Promise.all(channels.map((channel) => this.addChannel(channel)));
            });
        }
        addChannel(info, commandId) {
            return __awaiter(this, void 0, void 0, function* () {
                this.trace(`[${commandId}] handling addChannel command with a valid name: ${info.name}, color: ${info.meta.color} and data: ${JSON.stringify(info.data)}`, commandId);
                const context = {
                    name: info.name,
                    meta: info.meta,
                    data: info.data || {}
                };
                const contextName = this.createContextName(context.name);
                this.trace(`[${commandId}] setting a new channel context with name: ${contextName}`, commandId);
                yield this.glueController.setContext(contextName, context);
                this.trace(`[${commandId}] channel context with name: ${contextName} created successfully`, commandId);
            });
        }
        createContextName(channelName) {
            return `${ChannelContextPrefix}${channelName}`;
        }
        trace(msg, commandId) {
            var _a;
            if (commandId) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(msg);
            }
        }
    }

    class FramesController {
        constructor(sessionController, glueController, ioc) {
            this.sessionController = sessionController;
            this.glueController = glueController;
            this.ioc = ioc;
            this.locks = {};
            this.defaultFrameHelloTimeoutMs = 15000;
        }
        start(config, defaultBounds, frameSummaryOperation) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                this.config = config;
                this.defaultBounds = defaultBounds;
                this.frameSummaryOperation = frameSummaryOperation;
                if (config.isFrame) {
                    this.myFrameId = (_a = this.sessionController.getAllFrames().find((frame) => frame.isPlatform)) === null || _a === void 0 ? void 0 : _a.windowId;
                    window.addEventListener("unload", () => {
                        if (this.myFrameId) {
                            this.clearAllWorkspaceWindows(this.myFrameId);
                        }
                    });
                }
            });
        }
        openFrame(newFrameConfig) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                const providedBounds = typeof newFrameConfig === "object" ? (_a = newFrameConfig.bounds) !== null && _a !== void 0 ? _a : {} : {};
                const openBounds = {
                    top: (_b = providedBounds.top) !== null && _b !== void 0 ? _b : this.defaultBounds.top,
                    left: (_c = providedBounds.left) !== null && _c !== void 0 ? _c : this.defaultBounds.left,
                    width: (_d = providedBounds.width) !== null && _d !== void 0 ? _d : this.defaultBounds.width,
                    height: (_e = providedBounds.height) !== null && _e !== void 0 ? _e : this.defaultBounds.height
                };
                const frameWindowId = typeof newFrameConfig === "object" && (newFrameConfig === null || newFrameConfig === void 0 ? void 0 : newFrameConfig.frameId) ? newFrameConfig.frameId : shortid$2.generate();
                const allExistingFrames = this.sessionController.getAllFrames();
                if (allExistingFrames.some((frame) => frame.windowId === frameWindowId)) {
                    throw new Error(`Cannot open a frame with id: ${frameWindowId}, because a frame with this id already exists`);
                }
                const frameData = {
                    windowId: frameWindowId,
                    active: false,
                    isPlatform: false
                };
                const options = `left=${openBounds.left},top=${openBounds.top},width=${openBounds.width},height=${openBounds.height}`;
                const frameSrc = (yield this.getWorkspacesUrls()).workspacesUrl.current;
                const frameUrl = `${frameSrc}?emptyFrame=true`;
                const childWindow = window.open(frameUrl, frameData.windowId, options);
                if (!childWindow) {
                    throw new Error("Cannot open a new workspace frame, because the user has not allowed popups or uses a blocker");
                }
                this.sessionController.saveFrameData(frameData);
                try {
                    yield this.waitHello(frameData.windowId);
                    return { windowId: frameData.windowId };
                }
                catch (error) {
                    delete this.locks[frameData.windowId];
                    throw new Error("Cannot open a new frame, because the workspace frame app did not send a hello in time");
                }
            });
        }
        closeFrame(windowId) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const frameData = this.sessionController.getFrameData(windowId);
                if (!frameData) {
                    throw new Error(`Cannot close a frame with id: ${windowId}, because it is not known by the platform`);
                }
                this.handleFrameDisappeared(windowId);
                (_a = window.open(undefined, windowId)) === null || _a === void 0 ? void 0 : _a.close();
            });
        }
        processNewHello(windowId) {
            var _a;
            const frameData = this.sessionController.getFrameData(windowId);
            if (!frameData) {
                return;
            }
            this.sessionController.setFrameActive(windowId);
            (_a = this.locks[windowId]) === null || _a === void 0 ? void 0 : _a.lift();
        }
        handleFrameDisappeared(frameId) {
            const foundFrame = this.sessionController.getFrameData(frameId);
            if (!foundFrame) {
                return;
            }
            this.sessionController.removeFrameData(frameId);
            this.clearAllWorkspaceWindows(frameId);
        }
        getAll() {
            const allFrames = this.sessionController.getAllFrames();
            return allFrames.filter((frame) => frame.active).map((frame) => ({ windowId: frame.windowId }));
        }
        getFrameInstance(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const props = ["frameId", "itemId", "newFrame"];
                if (config) {
                    const definedKeys = props.reduce((soFar, prop) => {
                        if (config[prop]) {
                            soFar.push(prop);
                        }
                        return soFar;
                    }, []);
                    if (definedKeys.length > 1) {
                        throw new Error(`Cannot retrieve the frame, because of over-specification: the provided selection object must have either 1 or none of the possible properties: ${JSON.stringify(config)}`);
                    }
                }
                const allFrames = this.getAll();
                if (config === null || config === void 0 ? void 0 : config.frameId) {
                    const foundFrame = allFrames.find((frame) => frame.windowId === config.frameId);
                    if (!foundFrame) {
                        throw new Error(`Cannot retrieve a frame with Id: ${config.frameId}, because it is not known by the platform`);
                    }
                    return foundFrame;
                }
                if (config === null || config === void 0 ? void 0 : config.itemId) {
                    return this.getFrameByItemId(config.itemId, allFrames);
                }
                if (config === null || config === void 0 ? void 0 : config.newFrame) {
                    return this.openFrame(config.newFrame);
                }
                return allFrames.length ? this.getLastOpenedFrame() : this.openFrame();
            });
        }
        getPlatformFrameSessionData() {
            return this.sessionController.getAllFrames().find((frame) => frame.isPlatform);
        }
        clearAllWorkspaceWindows(frameId) {
            const workspaceWindows = this.sessionController.pickWorkspaceClients((client) => client.frameId === frameId);
            workspaceWindows.forEach((workspaceWindow) => this.ioc.applicationsController.unregisterWorkspaceApp({ windowId: workspaceWindow.windowId }));
        }
        waitHello(windowId) {
            return __awaiter(this, void 0, void 0, function* () {
                return PromisePlus$3((resolve) => {
                    this.locks[windowId] = { lift: resolve };
                }, this.defaultFrameHelloTimeoutMs, "Frame hello timed out");
            });
        }
        getLastOpenedFrame() {
            const allData = this.sessionController.getAllFrames().filter((frame) => frame.active);
            return allData[allData.length - 1];
        }
        getFrameByItemId(itemId, frames) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!frames.length) {
                    throw new Error(`Cannot get frame by item id for: ${itemId}, because not frames were found`);
                }
                for (const frame of frames) {
                    const queryResult = yield this.glueController.callFrame(this.frameSummaryOperation, { itemId }, frame.windowId);
                    if (queryResult.id !== "none") {
                        return frame;
                    }
                }
                throw new Error(`Cannot find frame for item: ${itemId}`);
            });
        }
        getWorkspacesUrls() {
            const currentProtocol = (new URL(window.location.href)).protocol;
            if (!currentProtocol.includes("extension")) {
                return Promise.resolve({ workspacesUrl: { current: this.config.src, default: this.config.src } });
            }
            return new Promise((resolve) => {
                chrome.storage.local.get("workspacesUrl", (entry) => {
                    resolve(entry);
                });
            });
        }
    }

    class WorkspaceHibernationWatcher {
        constructor(session) {
            this.session = session;
            this.maximumAmountCheckInProgress = false;
        }
        get logger() {
            return logger.get("workspaces.hibernation");
        }
        start(workspacesController, settings) {
            var _a, _b, _c, _d;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`starting the hibernation watcher with following settings: ${JSON.stringify(this.settings)}`);
            this.workspacesController = workspacesController;
            this.settings = settings;
            const allTimeoutData = this.session.exportClearTimeouts();
            if ((_c = (_b = this.settings) === null || _b === void 0 ? void 0 : _b.idleWorkspaces) === null || _c === void 0 ? void 0 : _c.idleMSThreshold) {
                allTimeoutData.forEach((timeoutData) => this.buildTimer(timeoutData.workspaceId));
            }
            (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace("The hibernation watcher has started successfully");
        }
        notifyEvent(event) {
            if (event.type === "window") {
                this.handleWorkspaceWindowEvent(event);
            }
            if (event.type === "workspace") {
                this.handleWorkspaceEvent(event);
            }
        }
        handleWorkspaceWindowEvent(event) {
            const isWindowOpened = event.action === "opened" || event.action === "added";
            if (!isWindowOpened) {
                return;
            }
            this.checkMaximumAmount();
            this.addTimersForWorkspacesInFrame(event.payload.windowSummary.config.frameId);
        }
        handleWorkspaceEvent(event) {
            const isWorkspaceSelected = event.action === "selected";
            const workspaceData = event.payload;
            if (event.action !== "selected" && event.action !== "opened") {
                return;
            }
            this.checkMaximumAmount();
            if (isWorkspaceSelected) {
                const timeout = this.session.getTimeout(workspaceData.workspaceSummary.id);
                if (timeout) {
                    clearTimeout(timeout);
                    this.session.removeTimeout(workspaceData.workspaceSummary.id);
                }
                this.addTimersForWorkspacesInFrame(workspaceData.frameSummary.id);
            }
        }
        compare(ws1, ws2) {
            if (ws1.config.lastActive > ws2.config.lastActive) {
                return 1;
            }
            if (ws1.config.lastActive < ws2.config.lastActive) {
                return -1;
            }
            return 0;
        }
        checkMaximumAmount() {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (this.maximumAmountCheckInProgress) {
                    return;
                }
                if (!((_b = (_a = this.settings) === null || _a === void 0 ? void 0 : _a.maximumActiveWorkspaces) === null || _b === void 0 ? void 0 : _b.threshold)) {
                    return;
                }
                this.maximumAmountCheckInProgress = true;
                try {
                    yield this.checkMaximumAmountCore(this.settings.maximumActiveWorkspaces.threshold);
                }
                finally {
                    this.maximumAmountCheckInProgress = false;
                }
            });
        }
        checkMaximumAmountCore(threshold) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Checking for maximum active workspaces rule. The threshold is ${(_c = (_b = this.settings) === null || _b === void 0 ? void 0 : _b.maximumActiveWorkspaces) === null || _c === void 0 ? void 0 : _c.threshold}`);
                const commandId = shortid$2.generate();
                const result = yield this.workspacesController.getAllWorkspacesSummaries({}, commandId);
                const snapshotsPromises = result.summaries.map(s => this.workspacesController.getWorkspaceSnapshot({ itemId: s.id }, commandId));
                const snapshots = yield Promise.all(snapshotsPromises);
                const eligibleForHibernation = snapshots.reduce((eligible, snapshot) => {
                    if (!this.isWorkspaceHibernated(snapshot.config) && !this.isWorkspaceEmpty(snapshot)) {
                        eligible.push(snapshot);
                    }
                    return eligible;
                }, []);
                if (eligibleForHibernation.length <= threshold) {
                    return;
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`Found ${eligibleForHibernation.length} eligible for hibernation workspaces`);
                const hibernationPromises = eligibleForHibernation
                    .sort(this.compare)
                    .slice(0, eligibleForHibernation.length - threshold)
                    .map((w) => this.tryHibernateWorkspace(w.id));
                yield Promise.all(hibernationPromises);
            });
        }
        tryHibernateWorkspace(workspaceId) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    const snapshot = yield this.workspacesController.getWorkspaceSnapshot({ itemId: workspaceId }, shortid$2.generate());
                    if (!this.canBeHibernated(snapshot)) {
                        return;
                    }
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`trying to hibernate workspace ${workspaceId}`);
                    yield this.workspacesController.hibernateWorkspace({ workspaceId }, shortid$2.generate());
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`workspace ${workspaceId} was hibernated successfully`);
                }
                catch (error) {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(error);
                }
            });
        }
        canBeHibernated(snapshot) {
            const isWorkspaceHibernated = this.isWorkspaceHibernated(snapshot.config);
            const isWorkspaceSelected = this.isWorkspaceSelected(snapshot.config);
            const isWorkspaceEmpty = this.isWorkspaceEmpty(snapshot);
            return !isWorkspaceHibernated && !isWorkspaceSelected && !isWorkspaceEmpty;
        }
        isWorkspaceHibernated(workspaceSnapshot) {
            return workspaceSnapshot.isHibernated;
        }
        isWorkspaceSelected(workspaceSnapshot) {
            return workspaceSnapshot.isSelected;
        }
        isWorkspaceEmpty(workspaceSnapshot) {
            return !workspaceSnapshot.children.length;
        }
        getWorkspacesInFrame(frameId) {
            return __awaiter(this, void 0, void 0, function* () {
                const result = yield this.workspacesController.getAllWorkspacesSummaries({}, shortid$2.generate());
                const snapshotPromises = result.summaries.reduce((promises, summary) => {
                    if (summary.config.frameId === frameId) {
                        promises.push(this.workspacesController.getWorkspaceSnapshot({ itemId: summary.id }, shortid$2.generate()));
                    }
                    return promises;
                }, []);
                return yield Promise.all(snapshotPromises);
            });
        }
        addTimersForWorkspacesInFrame(frameId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (!((_b = (_a = this.settings) === null || _a === void 0 ? void 0 : _a.idleWorkspaces) === null || _b === void 0 ? void 0 : _b.idleMSThreshold)) {
                    return;
                }
                const workspacesInFrame = yield this.getWorkspacesInFrame(frameId);
                workspacesInFrame.map((w) => {
                    var _a, _b, _c;
                    if (!this.canBeHibernated(w) || this.session.getTimeout(w.id)) {
                        return;
                    }
                    this.buildTimer(w.id);
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Starting workspace idle timer ( ${(_c = (_b = this.settings) === null || _b === void 0 ? void 0 : _b.idleWorkspaces) === null || _c === void 0 ? void 0 : _c.idleMSThreshold}ms ) for workspace ${w.id}`);
                });
            });
        }
        buildTimer(workspaceId) {
            var _a, _b;
            const timeout = window.setTimeout(() => {
                var _a;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Timer triggered will try to hibernated ${workspaceId}`);
                this.tryHibernateWorkspace(workspaceId);
                this.session.removeTimeout(workspaceId);
            }, (_b = (_a = this.settings) === null || _a === void 0 ? void 0 : _a.idleWorkspaces) === null || _b === void 0 ? void 0 : _b.idleMSThreshold);
            this.session.saveTimeout(workspaceId, timeout);
        }
    }

    class SystemController$1 {
        constructor(session) {
            this.session = session;
            this.base = {};
            this.started = false;
            this.platformOperations = [
                "cleanupClientsOnWorkspaceFrameUnregister"
            ];
            this.operations = {
                getEnvironment: { name: "getEnvironment", resultDecoder: anyDecoder$1, execute: this.handleGetEnvironment.bind(this) },
                getBase: { name: "getBase", resultDecoder: anyDecoder$1, execute: this.handleGetBase.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("applications.controller");
        }
        start(config) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                this.environment = config.environment;
                this.base = {
                    workspacesFrameCache: config.workspacesFrameCache,
                    communicationId: (_a = this.session.getSystemSettings()) === null || _a === void 0 ? void 0 : _a.systemInstanceId,
                    platformVersion: version$5
                };
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const applicationData = args.data;
                const commandId = args.commandId;
                const operationValidation = systemOperationTypesDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This system request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(applicationData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`System request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(applicationData)}`);
                const result = yield this.operations[operationName].execute(applicationData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`System request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupportedByController = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                const isSupportedByPlatform = this.platformOperations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported: isSupportedByController || isSupportedByPlatform };
            });
        }
        handleGetEnvironment() {
            return __awaiter(this, void 0, void 0, function* () {
                return this.environment;
            });
        }
        handleGetBase() {
            return __awaiter(this, void 0, void 0, function* () {
                return this.base;
            });
        }
    }

    class AppDirectory {
        constructor(sessionStorage, remoteWatcher) {
            this.sessionStorage = sessionStorage;
            this.remoteWatcher = remoteWatcher;
            this.maxAllowedApplicationsInStore = 10000;
            this.baseEventFlushDurationMs = 10;
        }
        start(setup) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("Starting the application directory");
                this.appsStateChange = setup.appsStateChange;
                this.sequelizer = setup.sequelizer;
                if (setup.config.local && setup.config.local.length) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("Detected local applications, parsing...");
                    yield this.processAppDefinitions(setup.config.local, { type: "inmemory", mode: "merge" });
                }
                if (setup.config.remote) {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace("Detected remote app store configuration, starting the watcher...");
                    this.remoteWatcher.start(setup.config.remote, (apps) => this.processAppDefinitions(apps, { type: "remote", mode: "replace" }));
                }
            });
        }
        processAppDefinitions(definitions, config) {
            return this.sequelizer.enqueue(() => __awaiter(this, void 0, void 0, function* () {
                const parsedDefinitions = definitions.map((def) => this.parseDefinition(def));
                const currentApps = this.sessionStorage.getAllApps(config.type);
                const mergeResult = this[config.mode](currentApps, parsedDefinitions);
                if (mergeResult.readyApps.length > this.maxAllowedApplicationsInStore) {
                    throw new Error("Cannot save the app definitions, because the total number exceeds 10000, which is the limit.");
                }
                this.sessionStorage.overwriteApps(mergeResult.readyApps, config.type);
                yield this.announceApps(mergeResult);
            }));
        }
        getAll() {
            return this.sequelizer.enqueue(() => __awaiter(this, void 0, void 0, function* () {
                const inMemory = this.sessionStorage.getAllApps("inmemory");
                const remote = this.sessionStorage.getAllApps("remote");
                return inMemory.concat(remote);
            }));
        }
        exportInMemory() {
            return this.sequelizer.enqueue(() => __awaiter(this, void 0, void 0, function* () {
                const allBaseApps = this.sessionStorage.getAllApps("inmemory");
                return allBaseApps.map(this.reverseParseDefinition);
            }));
        }
        removeInMemory(name) {
            return this.sequelizer.enqueue(() => __awaiter(this, void 0, void 0, function* () {
                return this.sessionStorage.removeApp(name, "inmemory");
            }));
        }
        merge(currentApps, parsedDefinitions) {
            const result = { readyApps: [], addedApps: [], changedApps: [], removedApps: [] };
            const currentAppsTable = currentApps.reduce((soFar, definition) => {
                soFar[definition.name] = definition;
                return soFar;
            }, {});
            parsedDefinitions.forEach((definition) => {
                if (currentAppsTable[definition.name] && !objEqualFast(definition, currentAppsTable[definition.name])) {
                    currentAppsTable[definition.name] = definition;
                    result.changedApps.push(definition);
                    return;
                }
                if (!currentAppsTable[definition.name]) {
                    currentAppsTable[definition.name] = definition;
                    result.addedApps.push(definition);
                    return;
                }
            });
            result.readyApps = Object.values(currentAppsTable);
            return result;
        }
        replace(currentApps, parsedDefinitions) {
            const result = { readyApps: [], addedApps: [], changedApps: [], removedApps: [] };
            const currentAppsTable = currentApps.reduce((soFar, definition) => {
                soFar[definition.name] = definition;
                return soFar;
            }, {});
            parsedDefinitions.forEach((definition) => {
                if (!currentAppsTable[definition.name]) {
                    result.addedApps.push(definition);
                }
                if (currentAppsTable[definition.name] && !objEqualFast(definition, currentAppsTable[definition.name])) {
                    result.changedApps.push(definition);
                }
                if (currentAppsTable[definition.name]) {
                    currentAppsTable[definition.name].isChecked = true;
                }
            });
            result.removedApps = currentApps.filter((app) => !app.isChecked);
            result.readyApps = parsedDefinitions;
            return result;
        }
        reverseParseDefinition(definition) {
            const definitionDetails = definition.userProperties.details;
            const _a = definition.userProperties, removedDetails = __rest(_a, ["details"]);
            return {
                name: definition.name,
                type: definition.type || "window",
                title: definition.title,
                version: definition.version,
                icon: definition.icon,
                caption: definition.caption,
                details: definitionDetails,
                customProperties: removedDetails
            };
        }
        parseDefinition(definition) {
            var _a;
            const glue42CoreAppProps = ["name", "title", "version", "customProperties", "icon", "caption", "type"];
            const userProperties = Object.fromEntries(Object.entries(definition).filter(([key]) => !glue42CoreAppProps.includes(key)));
            let createOptions = { url: "" };
            if (definition.manifest) {
                const parsedManifest = JSON.parse(definition.manifest);
                const url = ((_a = parsedManifest.details) === null || _a === void 0 ? void 0 : _a.url) || parsedManifest.url;
                if (!url || typeof url !== "string") {
                    throw new Error(`The FDC3 definition: ${definition.name} is not valid, because there is not url defined in the manifest`);
                }
                createOptions.url = url;
            }
            else {
                createOptions = definition.details;
            }
            const baseDefinition = {
                createOptions,
                type: definition.type || "window",
                name: definition.name,
                title: definition.title,
                version: definition.version,
                icon: definition.icon,
                caption: definition.caption,
                userProperties: Object.assign(Object.assign({}, userProperties), definition.customProperties)
            };
            if (!baseDefinition.userProperties.details) {
                baseDefinition.userProperties.details = createOptions;
            }
            Object
                .keys(baseDefinition)
                .forEach((key) => baseDefinition[key] === undefined && delete baseDefinition[key]);
            return baseDefinition;
        }
        get logger() {
            return logger.get("applications.remote.directory");
        }
        announceApps(mergeResult) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const appsStateChange = {
                    appsAdded: mergeResult.addedApps,
                    appsChanged: mergeResult.changedApps,
                    appsRemoved: mergeResult.removedApps
                };
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`announcing a change in the app directory state: ${JSON.stringify(appsStateChange)}`);
                this.appsStateChange(appsStateChange);
                yield this.waitEventFlush();
            });
        }
        waitEventFlush() {
            return new Promise((resolve) => setTimeout(resolve, this.baseEventFlushDurationMs));
        }
    }

    const fetchTimeout = (request, timeoutMilliseconds = defaultFetchTimeoutMs) => {
        return new Promise((resolve, reject) => {
            let timeoutHit = false;
            const timeout = setTimeout(() => {
                timeoutHit = true;
                reject(new Error(`Fetch request for: ${JSON.stringify(request)} timed out at: ${timeoutMilliseconds} milliseconds`));
            }, timeoutMilliseconds);
            fetch(request)
                .then((response) => {
                if (!timeoutHit) {
                    clearTimeout(timeout);
                    resolve(response);
                }
            })
                .catch((err) => {
                if (!timeoutHit) {
                    clearTimeout(timeout);
                    reject(err);
                }
            });
        });
    };

    const defaultRemoteWatcherHeaders = {
        "Content-Type": "application/json",
        "Accept": "application/json"
    };
    const defaultRemoteWatcherRequestTimeoutMS = 3000;

    class RemoteWatcher {
        start(config, handleApps) {
            var _a;
            this.url = config.url;
            this.handleApps = handleApps;
            this.requestTimeout = config.requestTimeout || defaultRemoteWatcherRequestTimeoutMS;
            this.pollingInterval = config.pollingInterval;
            this.setRequest(config.customHeaders);
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Remote watcher configured with timeout: ${this.requestTimeout} and interval: ${this.pollingInterval}`);
            this.poll();
        }
        poll() {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    const response = yield fetchTimeout(this.request, this.requestTimeout);
                    const responseJson = yield response.json();
                    if (!responseJson || !Array.isArray(responseJson.applications)) {
                        throw new Error("The remote response was either empty or did not contain an applications collection");
                    }
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("There is a valid response from the app store, processing definitions...");
                    const validatedApps = responseJson.applications.reduce((soFar, app) => {
                        var _a;
                        const result = allApplicationDefinitionsDecoder$1.run(app);
                        if (result.ok) {
                            soFar.push(app);
                        }
                        else {
                            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`Removing applications definition with name: ${app.name} from the remote response, because of validation error: ${JSON.stringify(result.error)}`);
                        }
                        return soFar;
                    }, []);
                    yield this.handleApps(validatedApps);
                }
                catch (error) {
                    const stringError = typeof error === "string" ? error : JSON.stringify(error.message);
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn(stringError);
                }
                finally {
                    if (this.pollingInterval) {
                        yield this.waitInterval();
                        this.poll();
                    }
                }
            });
        }
        setRequest(customHeaders = {}) {
            var _a;
            const requestHeaders = new Headers();
            for (const key in defaultRemoteWatcherHeaders) {
                requestHeaders.append(key, defaultRemoteWatcherHeaders[key]);
            }
            for (const key in customHeaders) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("Custom headers detected and set");
                requestHeaders.append(key, customHeaders[key]);
            }
            this.request = new Request(this.url, {
                method: "GET",
                headers: requestHeaders,
                mode: "cors",
                cache: "default"
            });
        }
        waitInterval() {
            return new Promise((resolve) => setTimeout(resolve, this.pollingInterval));
        }
        get logger() {
            return logger.get("applications.remote.directory");
        }
    }

    class ServiceWorkerController {
        constructor(ioc) {
            this.ioc = ioc;
            this.registry = lib$5();
        }
        get logger() {
            return logger.get("service.worker.web.platform");
        }
        get serviceWorkerRegistration() {
            if (!this._serviceWorkerRegistration) {
                throw new Error("Accessing missing service worker registration object. This is caused because the application is trying to raise a persistent notification, which requires a service worker. Please provide a service worker config when initializing GlueWebPlatform.");
            }
            return this._serviceWorkerRegistration;
        }
        connect(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (!config.serviceWorker) {
                    return;
                }
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.info("Detected service worker definition, connecting...");
                if (!config.serviceWorker.url && !config.serviceWorker.registrationPromise) {
                    throw new Error("The service worker config is defined, but it is missing a url or a registration promise, please provide one or the other");
                }
                if (config.serviceWorker.url && config.serviceWorker.registrationPromise) {
                    throw new Error("The service worker is over-specified, there is both defined url and a registration promise, please provide one or the other");
                }
                yield this.prepareSwDb();
                this._serviceWorkerRegistration = config.serviceWorker.url ?
                    yield this.registerWorker(config.serviceWorker.url) :
                    yield this.waitRegistration(config.serviceWorker.registrationPromise);
                if (this._serviceWorkerRegistration) {
                    this.setUpBroadcastChannelConnection();
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.info("Service worker connection completed.");
            });
        }
        showNotification(settings, id) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                const options = Object.assign({}, settings, { title: undefined, clickInterop: undefined, actions: undefined });
                options.actions = (_a = settings.actions) === null || _a === void 0 ? void 0 : _a.map((action) => {
                    return {
                        action: action.action,
                        title: action.title,
                        icon: action.icon
                    };
                });
                const glueData = {
                    focusPlatformOnDefaultClick: settings.focusPlatformOnDefaultClick,
                    clickInterop: settings.clickInterop,
                    actions: settings.actions,
                    id
                };
                if (options.data) {
                    options.data.glueData = glueData;
                }
                else {
                    options.data = { glueData };
                }
                yield this.serviceWorkerRegistration.showNotification(settings.title, options);
            });
        }
        notifyReady() {
            if (this._serviceWorkerRegistration) {
                this.channel.postMessage({ platformStarted: true });
            }
        }
        onNotificationClick(callback) {
            return this.registry.add("notification-click", callback);
        }
        setUpBroadcastChannelConnection() {
            this.channel = new BroadcastChannel(serviceWorkerBroadcastChannelName);
            this.channel.addEventListener("message", (event) => __awaiter(this, void 0, void 0, function* () {
                var _a;
                const eventData = event.data;
                const messageType = eventData === null || eventData === void 0 ? void 0 : eventData.messageType;
                if (!messageType) {
                    return;
                }
                if (messageType === "ping") {
                    this.channel.postMessage({ pong: true });
                    return;
                }
                if (messageType === "notificationClick") {
                    const action = eventData.action;
                    const glueData = eventData.glueData;
                    const definition = eventData.definition;
                    this.registry.execute("notification-click", { action, glueData, definition });
                    return;
                }
                if (messageType === "notificationError") {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(`Service worker error when raising notification: ${eventData.error}`);
                    return;
                }
            }));
        }
        registerWorker(workerUrl) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                if (!("serviceWorker" in navigator)) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`A defined service worker has not been registered at ${workerUrl} because this browser does not support it.`);
                    return;
                }
                try {
                    const registration = yield navigator.serviceWorker.register(workerUrl);
                    return registration;
                }
                catch (error) {
                    const stringError = typeof error === "string" ? error : JSON.stringify(error.message);
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn(stringError);
                }
            });
        }
        waitRegistration(registrationPromise) {
            return __awaiter(this, void 0, void 0, function* () {
                if (typeof registrationPromise.then !== "function" || typeof registrationPromise.catch !== "function") {
                    throw new Error("The provided service worker registration promise is not a promise");
                }
                const registration = yield registrationPromise;
                if (typeof registration.showNotification !== "function") {
                    throw new Error("The provided registration promise is a promise, but it resolved with an object which does not appear to be a ServiceWorkerRegistration");
                }
                return registration;
            });
        }
        prepareSwDb() {
            return __awaiter(this, void 0, void 0, function* () {
                const db = yield this.ioc.getDatabase();
                yield db.clear("serviceWorker");
                yield db.put("serviceWorker", { platformUrl: window.location.href }, "workerData");
            });
        }
    }

    const notificationsOperationDecoder = oneOf$1(constant$1("raiseNotification"), constant$1("requestPermission"), constant$1("getPermission"), constant$1("operationCheck"));
    const interopActionSettingsDecoder$1 = object$1({
        method: nonEmptyStringDecoder$1,
        arguments: optional$1(anyJson$1()),
        target: optional$1(oneOf$1(constant$1("all"), constant$1("best")))
    });
    const glue42NotificationActionDecoder$1 = object$1({
        action: string$1(),
        title: nonEmptyStringDecoder$1,
        icon: optional$1(string$1()),
        interop: optional$1(interopActionSettingsDecoder$1)
    });
    const glue42NotificationOptionsDecoder$1 = object$1({
        title: nonEmptyStringDecoder$1,
        clickInterop: optional$1(interopActionSettingsDecoder$1),
        actions: optional$1(array$1(glue42NotificationActionDecoder$1)),
        focusPlatformOnDefaultClick: optional$1(boolean$1()),
        badge: optional$1(string$1()),
        body: optional$1(string$1()),
        data: optional$1(anyJson$1()),
        dir: optional$1(oneOf$1(constant$1("auto"), constant$1("ltr"), constant$1("rtl"))),
        icon: optional$1(string$1()),
        image: optional$1(string$1()),
        lang: optional$1(string$1()),
        renotify: optional$1(boolean$1()),
        requireInteraction: optional$1(boolean$1()),
        silent: optional$1(boolean$1()),
        tag: optional$1(string$1()),
        timestamp: optional$1(nonNegativeNumberDecoder$1),
        vibrate: optional$1(array$1(number$1()))
    });
    const raiseNotificationDecoder$1 = object$1({
        settings: glue42NotificationOptionsDecoder$1,
        id: nonEmptyStringDecoder$1
    });
    const permissionRequestResultDecoder$1 = object$1({
        permissionGranted: boolean$1()
    });
    const permissionQueryResultDecoder$1 = object$1({
        permission: oneOf$1(constant$1("default"), constant$1("granted"), constant$1("denied"))
    });

    class NotificationsController$1 {
        constructor(glueController, serviceWorkerController, session) {
            this.glueController = glueController;
            this.serviceWorkerController = serviceWorkerController;
            this.session = session;
            this.started = false;
            this.isInExtension = false;
            this.operations = {
                raiseNotification: { name: "raiseNotification", execute: this.handleRaiseNotification.bind(this), dataDecoder: raiseNotificationDecoder$1 },
                requestPermission: { name: "requestPermission", resultDecoder: permissionRequestResultDecoder$1, execute: this.handleRequestPermission.bind(this) },
                getPermission: { name: "getPermission", resultDecoder: permissionQueryResultDecoder$1, execute: this.handleGetPermission.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("notifications.controller");
        }
        start() {
            return __awaiter(this, void 0, void 0, function* () {
                this.started = true;
                const currentProtocol = (new URL(window.location.href)).protocol;
                if (currentProtocol.includes("extension")) {
                    this.isInExtension = true;
                    this.extNotificationConfig = (yield this.getExtNotificationsConfig()).notifications;
                    this.listenForExtensionNotificationsEvents();
                }
                this.serviceWorkerController.onNotificationClick(this.handleNotificationClick.bind(this));
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        handleNotificationClick(clickData) {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            if (!clickData.action && ((_a = clickData.glueData) === null || _a === void 0 ? void 0 : _a.clickInterop)) {
                this.callDefinedInterop((_b = clickData.glueData) === null || _b === void 0 ? void 0 : _b.clickInterop);
            }
            if (clickData.action && ((_d = (_c = clickData.glueData) === null || _c === void 0 ? void 0 : _c.actions) === null || _d === void 0 ? void 0 : _d.some((actionDef) => actionDef.action === clickData.action))) {
                const notificationInteropAction = (_f = (_e = clickData.glueData) === null || _e === void 0 ? void 0 : _e.actions) === null || _f === void 0 ? void 0 : _f.find((action) => action.action === clickData.action);
                if (notificationInteropAction.interop) {
                    this.callDefinedInterop(notificationInteropAction.interop);
                }
            }
            if ((_g = clickData.definition.data) === null || _g === void 0 ? void 0 : _g.glueData) {
                delete clickData.definition.data.glueData;
            }
            const notificationEventPayload = {
                definition: clickData.definition,
                action: clickData.action,
                id: (_h = clickData.glueData) === null || _h === void 0 ? void 0 : _h.id
            };
            this.glueController.pushSystemMessage("notifications", "notificationClick", notificationEventPayload);
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const notificationsData = args.data;
                const commandId = args.commandId;
                const operationValidation = notificationsOperationDecoder.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This notifications request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(notificationsData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Notifications request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(notificationsData)}`);
                const result = yield this.operations[operationName].execute(notificationsData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Notifications request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleRaiseNotification({ settings, id }, commandId) {
            var _a, _b, _c, _d, _e;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a raise notification message with a title: ${settings.title}`);
                const hasDefinedActions = settings.actions && settings.actions.length;
                if (this.isInExtension) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] notification with a title: ${settings.title} will be raised with the native extension notifications API, because the platform is running in extension mode`);
                    yield this.raiseExtensionNotification(settings, id);
                }
                else if (hasDefinedActions) {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`[${commandId}] notification with a title: ${settings.title} was found to be persistent and therefore the service worker will be instructed to raise it.`);
                    yield this.serviceWorkerController.showNotification(settings, id);
                }
                else {
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] notification with a title: ${settings.title} was found to be non-persistent and therefore will be raised with the native notifications API`);
                    this.raiseSimpleNotification(settings, id);
                }
                const definition = Object.assign({}, settings, { title: undefined, clickInterop: undefined, actions: undefined });
                const notificationEventPayload = { definition, id };
                setTimeout(() => this.glueController.pushSystemMessage("notifications", "notificationShow", notificationEventPayload), 0);
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace(`[${commandId}] notification with a title: ${settings.title} was successfully raised`);
            });
        }
        handleGetPermission(_, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a get permission message`);
                const permissionValue = Notification.permission;
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] permission for raising notifications is: ${permissionValue}`);
                return { permission: permissionValue };
            });
        }
        handleRequestPermission(_, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling a request permission message`);
                let permissionValue = Notification.permission;
                if (permissionValue !== "granted") {
                    permissionValue = yield Notification.requestPermission();
                }
                const permissionGranted = permissionValue === "granted";
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] permission for raising notifications is: ${permissionValue}`);
                return { permissionGranted };
            });
        }
        callDefinedInterop(interopConfig) {
            const method = interopConfig.method;
            const args = interopConfig.arguments;
            const target = interopConfig.target;
            this.glueController.invokeMethod(method, args, target)
                .catch((err) => {
                var _a;
                const stringError = typeof err === "string" ? err : JSON.stringify(err.message);
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`The interop invocation defined in the clickInterop was rejected, reason: ${stringError}`);
            });
        }
        getExtNotificationsConfig() {
            return new Promise((resolve) => {
                chrome.storage.local.get("notifications", (entry) => {
                    resolve(entry);
                });
            });
        }
        raiseExtensionNotification(settings, id) {
            return new Promise((resolve, reject) => {
                if (!this.extNotificationConfig) {
                    return reject("Cannot raise a notification, because the environment settings for the extension mode are missing.");
                }
                const buttons = settings.actions ?
                    settings.actions.map((action) => ({ title: action.title, iconUrl: action.icon })) :
                    undefined;
                const chromeOptions = {
                    type: "basic",
                    iconUrl: settings.icon || this.extNotificationConfig.defaultIcon,
                    title: settings.title,
                    message: settings.body || this.extNotificationConfig.defaultMessage,
                    silent: settings.silent,
                    requireInteraction: settings.requireInteraction,
                    imageUrl: settings.image,
                    buttons
                };
                const extensionNotification = { id, settings };
                this.session.saveNotification(extensionNotification);
                chrome.notifications.create(id, chromeOptions, () => resolve());
            });
        }
        raiseSimpleNotification(settings, id) {
            const options = Object.assign({}, settings, { title: undefined, clickInterop: undefined });
            const notification = new Notification(settings.title, options);
            notification.onclick = (event) => {
                const glueData = {
                    id,
                    clickInterop: settings.clickInterop
                };
                const definition = {
                    badge: event.target.badge,
                    body: event.target.body,
                    data: event.target.data,
                    dir: event.target.dir,
                    icon: event.target.icon,
                    image: event.target.image,
                    lang: event.target.lang,
                    renotify: event.target.renotify,
                    requireInteraction: event.target.requireInteraction,
                    silent: event.target.silent,
                    tag: event.target.tag,
                    timestamp: event.target.timestamp,
                    vibrate: event.target.vibrate
                };
                if (settings.focusPlatformOnDefaultClick) {
                    window.focus();
                }
                this.handleNotificationClick({ action: "", glueData, definition });
            };
        }
        listenForExtensionNotificationsEvents() {
            chrome.notifications.onClicked.addListener((id) => {
                const notificationData = this.session.getNotification(id);
                if (!notificationData) {
                    return;
                }
                const glueData = {
                    id,
                    clickInterop: notificationData.settings.clickInterop
                };
                const definition = notificationData.settings;
                this.handleNotificationClick({ action: "", definition, glueData });
                this.session.removeNotification(id);
            });
            chrome.notifications.onButtonClicked.addListener((id, buttonIndex) => {
                const notificationData = this.session.getNotification(id);
                if (!notificationData) {
                    return;
                }
                if (!notificationData.settings.actions) {
                    return;
                }
                const glueData = {
                    id,
                    clickInterop: notificationData.settings.clickInterop
                };
                const definition = notificationData.settings;
                const action = notificationData.settings.actions[buttonIndex].action;
                this.handleNotificationClick({ action, definition, glueData });
                this.session.removeNotification(id);
            });
            chrome.notifications.onClosed.addListener((id) => this.session.removeNotification(id));
        }
    }

    const extensionOperationTypesDecoder$1 = oneOf$1(constant$1("clientHello"), constant$1("operationCheck"));
    const clientHelloResponseDecoder = object$1({
        widget: object$1({
            inject: boolean$1()
        })
    });
    const clientHelloDecoder = object$1({
        windowId: nonEmptyStringDecoder$1
    });

    class ExtensionController {
        constructor(session) {
            this.session = session;
            this.started = false;
            this.operations = {
                clientHello: { name: "appHello", resultDecoder: clientHelloResponseDecoder, dataDecoder: clientHelloDecoder, execute: this.handleClientHello.bind(this) },
                operationCheck: { name: "operationCheck", dataDecoder: operationCheckConfigDecoder, resultDecoder: operationCheckResultDecoder, execute: this.handleOperationCheck.bind(this) }
            };
        }
        get logger() {
            return logger.get("extension.controller");
        }
        start() {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                this.started = true;
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("initialization is completed");
            });
        }
        handleControl(args) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.started) ;
                const applicationData = args.data;
                const commandId = args.commandId;
                const operationValidation = extensionOperationTypesDecoder$1.run(args.operation);
                if (!operationValidation.ok) {
                    throw new Error(`This extension request cannot be completed, because the operation name did not pass validation: ${JSON.stringify(operationValidation.error)}`);
                }
                const operationName = operationValidation.result;
                const incomingValidation = (_a = this.operations[operationName].dataDecoder) === null || _a === void 0 ? void 0 : _a.run(applicationData);
                if (incomingValidation && !incomingValidation.ok) {
                    throw new Error(`Extension request for ${operationName} rejected, because the provided arguments did not pass the validation: ${JSON.stringify(incomingValidation.error)}`);
                }
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug(`[${commandId}] ${operationName} command is valid with data: ${JSON.stringify(applicationData)}`);
                const result = yield this.operations[operationName].execute(applicationData, commandId);
                const resultValidation = (_c = this.operations[operationName].resultDecoder) === null || _c === void 0 ? void 0 : _c.run(result);
                if (resultValidation && !resultValidation.ok) {
                    throw new Error(`Extension request for ${operationName} could not be completed, because the operation result did not pass the validation: ${JSON.stringify(resultValidation.error)}`);
                }
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`[${commandId}] ${operationName} command was executed successfully`);
                return result;
            });
        }
        handleClientHello(config, commandId) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`[${commandId}] handling client hello command`);
                const widgetConfig = (yield this.getWidgetConfig()).widget;
                const isWorkspaceFrame = !!this.session.getFrameData(config.windowId);
                const shouldInjectWidget = isWorkspaceFrame ? false :
                    widgetConfig ? widgetConfig.enable : false;
                const response = {
                    widget: {
                        inject: shouldInjectWidget
                    }
                };
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace(`[${commandId}] responding to client hello command with: ${JSON.stringify(response)}`);
                return response;
            });
        }
        handleOperationCheck(config) {
            return __awaiter(this, void 0, void 0, function* () {
                const operations = Object.keys(this.operations);
                const isSupported = operations.some((operation) => operation.toLowerCase() === config.operation.toLowerCase());
                return { isSupported };
            });
        }
        getWidgetConfig() {
            const currentProtocol = (new URL(window.location.href)).protocol;
            if (!currentProtocol.includes("extension")) {
                return Promise.resolve({ widget: { enable: false } });
            }
            return new Promise((resolve) => {
                chrome.storage.local.get("widget", (entry) => {
                    resolve(entry);
                });
            });
        }
    }

    class AsyncSequelizer$2 {
        constructor(minSequenceInterval = 0) {
            this.minSequenceInterval = minSequenceInterval;
            this.queue = [];
            this.isExecutingQueue = false;
        }
        enqueue(action) {
            return new Promise((resolve, reject) => {
                this.queue.push({ action, resolve, reject });
                this.executeQueue();
            });
        }
        executeQueue() {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.isExecutingQueue) {
                    return;
                }
                this.isExecutingQueue = true;
                while (this.queue.length) {
                    const operation = this.queue.shift();
                    if (!operation) {
                        this.isExecutingQueue = false;
                        return;
                    }
                    try {
                        const actionResult = yield operation.action();
                        operation.resolve(actionResult);
                    }
                    catch (error) {
                        operation.reject(error);
                    }
                    yield this.intervalBreak();
                }
                this.isExecutingQueue = false;
            });
        }
        intervalBreak() {
            return new Promise((res) => setTimeout(res, this.minSequenceInterval));
        }
    }

    class PreferredConnectionController$1 {
        constructor(glueController, portsBridge, sequelizer) {
            this.glueController = glueController;
            this.portsBridge = portsBridge;
            this.sequelizer = sequelizer;
            this.registry = lib$5();
        }
        get logger() {
            return logger.get("preferred.connection.controller");
        }
        start(config) {
            var _a, _b, _c;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Starting the preferred connection with config: ${JSON.stringify(config)}`);
                this.preferredUrl = config.url;
                this.preferredAuth = Object.assign({}, { provider: "core" }, config.auth);
                this.shouldForceTransfer = typeof config.forceIncompleteSwitch === "boolean" ? config.forceIncompleteSwitch : false;
                this.discoveryInterval = typeof config.discoveryIntervalMS === "number" ? config.discoveryIntervalMS : defaultPreferredDiscoveryIntervalMS;
                this.portsBridge.setPreferredActivated();
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("Starting the initial preferred connection check");
                yield this.connectPreferred();
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace("The preferred connection controller initiated.");
            });
        }
        onReconnect(callback) {
            return this.registry.add("system-reconnect", callback);
        }
        connectPreferred() {
            var _a, _b, _c, _d, _e, _f;
            return __awaiter(this, void 0, void 0, function* () {
                const check = yield this.checkPreFlight();
                if (!check.ready) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("The preflight is not ready, restarting the preferred tracking.");
                    wait(this.discoveryInterval).then(() => this.connectPreferred());
                    return;
                }
                const transportSwitchConfig = {
                    type: "secondary",
                    transportConfig: Object.assign({ url: this.preferredUrl }, { auth: this.preferredAuth })
                };
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("Switching the system glue.");
                const switched = (yield this.glueController.switchTransport(transportSwitchConfig, "system")).success;
                if (!switched) {
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace("The switch attempt was not successful, revered to default.");
                    wait(this.discoveryInterval).then(() => this.connectPreferred());
                    return;
                }
                this.portsBridge.setActivePreferredTransportConfig(transportSwitchConfig);
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace("The switch to the preferred connection was successful, transferring all children.");
                try {
                    yield this.changeClientsConnection(transportSwitchConfig);
                }
                catch (error) {
                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.warn(`Some platform clients could not connect to the preferred connection, reverting all to the default connection. Reason: ${JSON.stringify(error)}`);
                    this.fullDefaultRevert()
                        .then(() => wait(this.discoveryInterval).then(() => this.connectPreferred()))
                        .catch(() => wait(this.discoveryInterval).then(() => this.connectPreferred()));
                    return;
                }
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace("The platform is now fully connected to the preferred connection, hooking up disconnection logic.");
                this.registry.execute("system-reconnect");
                const unsub = this.glueController.onDisconnected(() => this.handleDisconnected(unsub));
            });
        }
        handleDisconnected(unsub) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("The platform has been disconnected from the preferred transport, reverting all to the default one.");
            unsub();
            this.fullDefaultRevert()
                .then(() => {
                var _a;
                this.registry.execute("system-reconnect");
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("The platform reversion to default completed, restarting the preferred tracking.");
                wait(this.discoveryInterval).then(() => this.connectPreferred());
            })
                .catch(() => wait(this.discoveryInterval).then(() => this.connectPreferred()));
        }
        changeClientsConnection(config) {
            return this.sequelizer.enqueue(() => __awaiter(this, void 0, void 0, function* () {
                var _a, _b, _c;
                try {
                    yield Promise.all([
                        this.glueController.switchTransport(config, "client"),
                        this.portsBridge.switchAllClientsTransport(config)
                    ]);
                }
                catch (error) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`Some clients could not connect to the preferred transport with error: ${JSON.stringify(error)}`);
                    if (!this.shouldForceTransfer) {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("The platform is not forcing a transfer in cases of errors, re-throwing.");
                        throw new Error(error);
                    }
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace("The platform is forcing a transfer regardless of the errors.");
                }
                yield this.glueController.switchTransport(config, "contextsTrack");
            }));
        }
        checkPreferredConnection(url) {
            return new Promise((resolve) => {
                const ws = new WebSocket(url);
                ws.onerror = () => resolve({ live: false });
                ws.onopen = () => {
                    ws.close();
                    resolve({ live: true });
                };
            });
        }
        fullDefaultRevert() {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.glueController.switchTransport({ type: "default" }, "system");
                this.portsBridge.setActivePreferredTransportConfig({ type: "default" });
                yield this.changeClientsConnection({ type: "default" });
            });
        }
        checkPreFlight() {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("Starting the preflight check");
                const isPreferredLive = (yield this.checkPreferredConnection(this.preferredUrl)).live;
                if (!isPreferredLive) {
                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("The preferred connection is not live.");
                    return { ready: false };
                }
                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.trace(`Found a live preferred connection at: ${this.preferredUrl}, testing the availability of transport switching logic in all current clients`);
                const logicTestResult = yield this.portsBridge.checkClientsPreferredLogic();
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.trace(`The logic check returned: ${JSON.stringify(logicTestResult)}`);
                if (!logicTestResult.success && !this.shouldForceTransfer) {
                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.trace("The preflight check is marked as not ready");
                    return { ready: false };
                }
                (_f = this.logger) === null || _f === void 0 ? void 0 : _f.trace("Checking the possibility of all clients to connect to the preferred connection");
                const connectionTest = yield this.portsBridge.checkClientsPreferredConnection(this.preferredUrl);
                (_g = this.logger) === null || _g === void 0 ? void 0 : _g.trace(`The connection check returned: ${JSON.stringify(connectionTest)}`);
                if (!connectionTest.success && !this.shouldForceTransfer) {
                    (_h = this.logger) === null || _h === void 0 ? void 0 : _h.trace("The preflight check is marked as not ready");
                    return { ready: false };
                }
                (_j = this.logger) === null || _j === void 0 ? void 0 : _j.trace("The preflight check is marked as ready");
                return { ready: true };
            });
        }
    }

    const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);

    let idbProxyableTypes;
    let cursorAdvanceMethods;
    // This is a function to prevent it throwing up in node environments.
    function getIdbProxyableTypes() {
        return (idbProxyableTypes ||
            (idbProxyableTypes = [
                IDBDatabase,
                IDBObjectStore,
                IDBIndex,
                IDBCursor,
                IDBTransaction,
            ]));
    }
    // This is a function to prevent it throwing up in node environments.
    function getCursorAdvanceMethods() {
        return (cursorAdvanceMethods ||
            (cursorAdvanceMethods = [
                IDBCursor.prototype.advance,
                IDBCursor.prototype.continue,
                IDBCursor.prototype.continuePrimaryKey,
            ]));
    }
    const cursorRequestMap = new WeakMap();
    const transactionDoneMap = new WeakMap();
    const transactionStoreNamesMap = new WeakMap();
    const transformCache = new WeakMap();
    const reverseTransformCache = new WeakMap();
    function promisifyRequest(request) {
        const promise = new Promise((resolve, reject) => {
            const unlisten = () => {
                request.removeEventListener('success', success);
                request.removeEventListener('error', error);
            };
            const success = () => {
                resolve(wrap(request.result));
                unlisten();
            };
            const error = () => {
                reject(request.error);
                unlisten();
            };
            request.addEventListener('success', success);
            request.addEventListener('error', error);
        });
        promise
            .then((value) => {
            // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval
            // (see wrapFunction).
            if (value instanceof IDBCursor) {
                cursorRequestMap.set(value, request);
            }
            // Catching to avoid "Uncaught Promise exceptions"
        })
            .catch(() => { });
        // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This
        // is because we create many promises from a single IDBRequest.
        reverseTransformCache.set(promise, request);
        return promise;
    }
    function cacheDonePromiseForTransaction(tx) {
        // Early bail if we've already created a done promise for this transaction.
        if (transactionDoneMap.has(tx))
            return;
        const done = new Promise((resolve, reject) => {
            const unlisten = () => {
                tx.removeEventListener('complete', complete);
                tx.removeEventListener('error', error);
                tx.removeEventListener('abort', error);
            };
            const complete = () => {
                resolve();
                unlisten();
            };
            const error = () => {
                reject(tx.error || new DOMException('AbortError', 'AbortError'));
                unlisten();
            };
            tx.addEventListener('complete', complete);
            tx.addEventListener('error', error);
            tx.addEventListener('abort', error);
        });
        // Cache it for later retrieval.
        transactionDoneMap.set(tx, done);
    }
    let idbProxyTraps = {
        get(target, prop, receiver) {
            if (target instanceof IDBTransaction) {
                // Special handling for transaction.done.
                if (prop === 'done')
                    return transactionDoneMap.get(target);
                // Polyfill for objectStoreNames because of Edge.
                if (prop === 'objectStoreNames') {
                    return target.objectStoreNames || transactionStoreNamesMap.get(target);
                }
                // Make tx.store return the only store in the transaction, or undefined if there are many.
                if (prop === 'store') {
                    return receiver.objectStoreNames[1]
                        ? undefined
                        : receiver.objectStore(receiver.objectStoreNames[0]);
                }
            }
            // Else transform whatever we get back.
            return wrap(target[prop]);
        },
        set(target, prop, value) {
            target[prop] = value;
            return true;
        },
        has(target, prop) {
            if (target instanceof IDBTransaction &&
                (prop === 'done' || prop === 'store')) {
                return true;
            }
            return prop in target;
        },
    };
    function replaceTraps(callback) {
        idbProxyTraps = callback(idbProxyTraps);
    }
    function wrapFunction(func) {
        // Due to expected object equality (which is enforced by the caching in `wrap`), we
        // only create one new func per func.
        // Edge doesn't support objectStoreNames (booo), so we polyfill it here.
        if (func === IDBDatabase.prototype.transaction &&
            !('objectStoreNames' in IDBTransaction.prototype)) {
            return function (storeNames, ...args) {
                const tx = func.call(unwrap(this), storeNames, ...args);
                transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);
                return wrap(tx);
            };
        }
        // Cursor methods are special, as the behaviour is a little more different to standard IDB. In
        // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the
        // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense
        // with real promises, so each advance methods returns a new promise for the cursor object, or
        // undefined if the end of the cursor has been reached.
        if (getCursorAdvanceMethods().includes(func)) {
            return function (...args) {
                // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
                // the original object.
                func.apply(unwrap(this), args);
                return wrap(cursorRequestMap.get(this));
            };
        }
        return function (...args) {
            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
            // the original object.
            return wrap(func.apply(unwrap(this), args));
        };
    }
    function transformCachableValue(value) {
        if (typeof value === 'function')
            return wrapFunction(value);
        // This doesn't return, it just creates a 'done' promise for the transaction,
        // which is later returned for transaction.done (see idbObjectHandler).
        if (value instanceof IDBTransaction)
            cacheDonePromiseForTransaction(value);
        if (instanceOfAny(value, getIdbProxyableTypes()))
            return new Proxy(value, idbProxyTraps);
        // Return the same value back if we're not going to transform it.
        return value;
    }
    function wrap(value) {
        // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because
        // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.
        if (value instanceof IDBRequest)
            return promisifyRequest(value);
        // If we've already transformed this value before, reuse the transformed value.
        // This is faster, but it also provides object equality.
        if (transformCache.has(value))
            return transformCache.get(value);
        const newValue = transformCachableValue(value);
        // Not all types are transformed.
        // These may be primitive types, so they can't be WeakMap keys.
        if (newValue !== value) {
            transformCache.set(value, newValue);
            reverseTransformCache.set(newValue, value);
        }
        return newValue;
    }
    const unwrap = (value) => reverseTransformCache.get(value);

    /**
     * Open a database.
     *
     * @param name Name of the database.
     * @param version Schema version.
     * @param callbacks Additional callbacks.
     */
    function openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {
        const request = indexedDB.open(name, version);
        const openPromise = wrap(request);
        if (upgrade) {
            request.addEventListener('upgradeneeded', (event) => {
                upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));
            });
        }
        if (blocked)
            request.addEventListener('blocked', () => blocked());
        openPromise
            .then((db) => {
            if (terminated)
                db.addEventListener('close', () => terminated());
            if (blocking)
                db.addEventListener('versionchange', () => blocking());
        })
            .catch(() => { });
        return openPromise;
    }

    const readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];
    const writeMethods = ['put', 'add', 'delete', 'clear'];
    const cachedMethods = new Map();
    function getMethod(target, prop) {
        if (!(target instanceof IDBDatabase &&
            !(prop in target) &&
            typeof prop === 'string')) {
            return;
        }
        if (cachedMethods.get(prop))
            return cachedMethods.get(prop);
        const targetFuncName = prop.replace(/FromIndex$/, '');
        const useIndex = prop !== targetFuncName;
        const isWrite = writeMethods.includes(targetFuncName);
        if (
        // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.
        !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||
            !(isWrite || readMethods.includes(targetFuncName))) {
            return;
        }
        const method = async function (storeName, ...args) {
            // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(
            const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');
            let target = tx.store;
            if (useIndex)
                target = target.index(args.shift());
            const returnVal = await target[targetFuncName](...args);
            if (isWrite)
                await tx.done;
            return returnVal;
        };
        cachedMethods.set(prop, method);
        return method;
    }
    replaceTraps((oldTraps) => ({
        ...oldTraps,
        get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),
        has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),
    }));

    class TransactionsController {
        constructor() {
            this.transactionLocks = {};
        }
        get logger() {
            return logger.get("transactions.controller");
        }
        completeTransaction(id, transactionData) {
            var _a;
            if (typeof id !== "string") {
                throw new Error(`Cannot complete the transaction, because the provided id is not a string: ${JSON.stringify(id)}`);
            }
            const foundTransaction = this.transactionLocks[id];
            if (!foundTransaction) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`Cannot mark a transaction as complete, because there is not lock with id ${id}`);
                return;
            }
            foundTransaction.lift(transactionData);
        }
        failTransaction(id, reason) {
            var _a;
            const foundTransaction = this.transactionLocks[id];
            if (!foundTransaction) {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`Cannot mark a transaction as failed, because there is not lock with id ${id}`);
                return;
            }
            foundTransaction.fail(reason);
        }
        createTransaction(operation, timeout) {
            const transaction = {};
            const transactionId = shortid$2.generate();
            const transactionLock = new Promise((resolve, reject) => {
                let transactionLive = true;
                transaction.lift = (args) => {
                    transactionLive = false;
                    delete this.transactionLocks[transactionId];
                    resolve(args);
                };
                transaction.fail = (reason) => {
                    transactionLive = false;
                    delete this.transactionLocks[transactionId];
                    reject(reason);
                };
                setTimeout(() => {
                    var _a;
                    if (!transactionLive) {
                        return;
                    }
                    transactionLive = false;
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`Transaction for operation: ${operation} timed out.`);
                    delete this.transactionLocks[transactionId];
                    reject(`Transaction for operation: ${operation} timed out.`);
                }, timeout);
            });
            transaction.lock = transactionLock;
            transaction.id = transactionId;
            this.transactionLocks[transactionId] = transaction;
            return transaction;
        }
    }

    class InterceptionController {
        constructor() {
            this.interceptions = [];
        }
        registerInterceptor(request, registrantName) {
            return __awaiter(this, void 0, void 0, function* () {
                interceptorRegistrationRequestDecoder.runWithException(request);
                nonEmptyStringDecoder$1.runWithException(registrantName);
                const collisions = request.interceptions.reduce((collisions, interception) => {
                    const foundCollision = this.interceptions.some((registeredInterception) => registeredInterception.domain === interception.domain && registeredInterception.operation === interception.operation);
                    if (foundCollision) {
                        collisions.push({ domain: interception.domain, operation: interception.operation });
                    }
                    return collisions;
                }, []);
                if (collisions.length) {
                    const collisionsAsString = collisions.map((collision) => `${collision.domain} - ${collision.operation}`).join(", ");
                    throw new Error(`Interception registration is rejected, because the following collisions where found: ${collisionsAsString}`);
                }
                request.interceptions.forEach((interception) => {
                    this.interceptions.push({
                        domain: interception.domain,
                        operation: interception.operation,
                        callInterceptor: request.callInterceptor,
                        registrantName
                    });
                });
            });
        }
        getOperationInterceptor(inquiry) {
            const foundEntry = this.interceptions.find((registeredInterception) => registeredInterception.domain === inquiry.domain && registeredInterception.operation === inquiry.operation);
            if (foundEntry) {
                return {
                    name: foundEntry.registrantName,
                    intercept: foundEntry.callInterceptor
                };
            }
        }
    }

    class PluginsController {
        constructor(interceptionController, glueController, startCore) {
            this.interceptionController = interceptionController;
            this.glueController = glueController;
            this.startCore = startCore;
            this.registeredPlugins = [];
        }
        get logger() {
            return logger.get("plugins.controller");
        }
        start(config) {
            return __awaiter(this, void 0, void 0, function* () {
                this.handlePluginMessage = config.handlePluginMessage;
                this.platformApi = config.api;
                if (!config.plugins || !config.plugins.length) {
                    return;
                }
                const criticalPlugins = [];
                for (const plugin of config.plugins) {
                    const startPromise = this.startPlugin(plugin);
                    if (plugin.critical) {
                        criticalPlugins.push(startPromise);
                    }
                }
                yield Promise.all(criticalPlugins);
            });
        }
        startCorePlus(platformConfig) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!platformConfig.corePlus) {
                    return;
                }
                yield this.startCore(platformConfig);
            });
        }
        startPlugin(definition) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    const platformControls = this.buildPlatformControls(definition.name, this.platformApi);
                    yield definition.start(this.glueController.clientGlue, definition.config, platformControls);
                    this.registerPlugin(definition.name, (_a = definition.version) !== null && _a !== void 0 ? _a : "N/A");
                }
                catch (error) {
                    const stringError = typeof error === "string" ? error : JSON.stringify(error.message);
                    const message = `Plugin: ${definition.name} threw while initiating: ${stringError}`;
                    if (definition.critical) {
                        throw new Error(message);
                    }
                    else {
                        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn(message);
                    }
                }
            });
        }
        buildPlatformControls(pluginName, api) {
            return {
                control: (args) => this.handlePluginMessage(args, pluginName),
                logger: logger.get(pluginName),
                platformApi: api,
                interception: {
                    register: (request) => this.interceptionController.registerInterceptor(request, pluginName)
                },
                system: {
                    sendControl: (args) => this.handlePluginMessage(args, pluginName)
                }
            };
        }
        registerPlugin(name, version) {
            if (typeof name !== "string" || !name.length) {
                return;
            }
            const existingPlugin = this.registeredPlugins.some((plugin) => plugin.name === name);
            if (existingPlugin) {
                return;
            }
            this.registeredPlugins.push({ name, version });
        }
    }

    class DomainsController {
        constructor(systemController, windowsController, applicationsController, layoutsController, workspacesController, intentsController, channelsController, notificationsController, extensionController) {
            this.systemController = systemController;
            this.windowsController = windowsController;
            this.applicationsController = applicationsController;
            this.layoutsController = layoutsController;
            this.workspacesController = workspacesController;
            this.intentsController = intentsController;
            this.channelsController = channelsController;
            this.notificationsController = notificationsController;
            this.extensionController = extensionController;
            this.defaultDomainNames = ["system", "windows", "appManager", "layouts", "workspaces", "intents", "channels", "notifications", "extension"];
            this.domains = {
                system: { name: "system", libController: this.systemController },
                windows: { name: "windows", libController: this.windowsController },
                appManager: { name: "appManager", libController: this.applicationsController },
                layouts: { name: "layouts", libController: this.layoutsController },
                workspaces: { name: "workspaces", libController: this.workspacesController },
                intents: { name: "intents", libController: this.intentsController },
                channels: { name: "channels", libController: this.channelsController },
                notifications: { name: "notifications", libController: this.notificationsController },
                extension: { name: "extension", libController: this.extensionController }
            };
        }
        get logger() {
            return logger.get("domains.controller");
        }
        validateDomain(domainName) {
            const domain = this.domains[domainName];
            const decoder = domain.domainNameDecoder ? domain.domainNameDecoder : libDomainDecoder$1;
            decoder === null || decoder === void 0 ? void 0 : decoder.runWithException(domainName);
        }
        startAllDomains(config) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace("Starting all domains lib controllers");
                yield Promise.all(Object.values(this.domains).map((controller) => controller.libController.start(config)));
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.trace("All domains have been initialized");
            });
        }
        notifyDomainsClientUnloaded(client) {
            var _a;
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace(`detected unloading of client: ${client.windowId}, notifying all controllers`);
            Object.values(this.domains).forEach((domain) => {
                var _a, _b, _c;
                try {
                    (_b = (_a = domain.libController).handleClientUnloaded) === null || _b === void 0 ? void 0 : _b.call(_a, client.windowId, client.win);
                }
                catch (error) {
                    const stringError = typeof error === "string" ? error : JSON.stringify(error.message);
                    const controllerName = domain.name;
                    (_c = this.logger) === null || _c === void 0 ? void 0 : _c.error(`${controllerName} controller threw when handling unloaded client ${client.windowId} with error message: ${stringError}`);
                }
            });
        }
        executeControlMessage(controlMessage) {
            const domain = this.domains[controlMessage.domain];
            if (!domain) {
                throw new Error(`Cannot process message for domain: ${controlMessage.domain} and operation ${controlMessage.operation}, because no domain can service it.`);
            }
            return domain.libController.handleControl(controlMessage);
        }
        registerDynamicDomain(domain) {
            const currentDomainNames = Object.values(this.domains).map((registeredDomain) => registeredDomain.name);
            if (currentDomainNames.some((domainName) => domainName === domain.name)) {
                throw new Error(`Cannot register a domain with name: ${domain.name}, because it is already registered`);
            }
            if (!domain.libController || !domain.libController.start || !domain.libController.handleControl || !domain.libController.handleClientUnloaded) {
                throw new Error(`Cannot register a domain with name: ${domain.name}, because it does not have a valid libController`);
            }
            if (!domain.domainNameDecoder) {
                throw new Error(`Cannot register a domain with name: ${domain.name}, because it does not have a domain decoder`);
            }
            this.domains[domain.name] = domain;
        }
        unregisterDynamicDomain(domainName) {
            if (this.defaultDomainNames.some((defaultDomainName) => defaultDomainName === domainName)) {
                throw new Error(`Cannot unregister a domain: ${domainName}, because it is a reserved default domain`);
            }
            delete this.domains[domainName];
        }
    }

    class IoC$1 {
        constructor(config) {
            this.config = config;
        }
        get gateway() {
            if (!this._gatewayInstance) {
                this._gatewayInstance = new Gateway();
            }
            return this._gatewayInstance;
        }
        get platform() {
            if (!this._platformInstance) {
                this._platformInstance = new Platform(this.controller, this.sessionController, this.config);
            }
            return this._platformInstance;
        }
        get domainsController() {
            if (!this._domainsController) {
                this._domainsController = new DomainsController(this.systemController, this.windowsController, this.applicationsController, this.layoutsController, this.workspacesController, this.intentsController, this.channelsController, this.notificationsController, this.extensionController);
            }
            return this._domainsController;
        }
        get controller() {
            if (!this._mainController) {
                this._mainController = new PlatformController(this.domainsController, this.glueController, this.portsBridge, this.stateController, this.serviceWorkerController, this.preferredConnectionController, this.interceptionController, this.pluginsController);
            }
            return this._mainController;
        }
        get glueController() {
            if (!this._glueController) {
                this._glueController = new GlueController(this.portsBridge, this.sessionController);
            }
            return this._glueController;
        }
        get systemController() {
            if (!this._systemController) {
                this._systemController = new SystemController$1(this.sessionController);
            }
            return this._systemController;
        }
        get sessionController() {
            if (!this._sessionController) {
                this._sessionController = new SessionStorageController();
            }
            return this._sessionController;
        }
        get stateController() {
            if (!this._stateChecker) {
                this._stateChecker = new WindowsStateController(this.sessionController);
            }
            return this._stateChecker;
        }
        get windowsController() {
            if (!this._windowsController) {
                this._windowsController = new WindowsController$1(this.glueController, this.sessionController, this.stateController, this);
            }
            return this._windowsController;
        }
        get applicationsController() {
            if (!this._applicationsController) {
                this._applicationsController = new ApplicationsController(this.glueController, this.sessionController, this.stateController, this.appDirectory, this);
            }
            return this._applicationsController;
        }
        get appDirectory() {
            if (!this._appDirectory) {
                this._appDirectory = new AppDirectory(this.sessionController, this.remoteWatcher);
            }
            return this._appDirectory;
        }
        get remoteWatcher() {
            if (!this._remoteWatcher) {
                this._remoteWatcher = new RemoteWatcher();
            }
            return this._remoteWatcher;
        }
        get layoutsController() {
            if (!this._layoutsController) {
                this._layoutsController = new LayoutsController$1(this.glueController, this.idbStore, this.sessionController, this.windowsController);
            }
            return this._layoutsController;
        }
        get workspacesController() {
            if (!this._workspacesController) {
                this._workspacesController = new WorkspacesController(this.framesController, this.glueController, this.stateController, this.hibernationWatcher, this);
            }
            return this._workspacesController;
        }
        get hibernationWatcher() {
            if (!this._hibernationWatcher) {
                this._hibernationWatcher = new WorkspaceHibernationWatcher(this.sessionController);
            }
            return this._hibernationWatcher;
        }
        get intentsController() {
            if (!this._intentsController) {
                this._intentsController = new IntentsController$1(this.glueController, this.appDirectory, this);
            }
            return this._intentsController;
        }
        get channelsController() {
            if (!this._channelsController) {
                this._channelsController = new ChannelsController$1(this.glueController);
            }
            return this._channelsController;
        }
        get extensionController() {
            if (!this._extensionController) {
                this._extensionController = new ExtensionController(this.sessionController);
            }
            return this._extensionController;
        }
        get notificationsController() {
            if (!this._notificationsController) {
                this._notificationsController = new NotificationsController$1(this.glueController, this.serviceWorkerController, this.sessionController);
            }
            return this._notificationsController;
        }
        get framesController() {
            if (!this._framesController) {
                this._framesController = new FramesController(this.sessionController, this.glueController, this);
            }
            return this._framesController;
        }
        get idbStore() {
            if (!this._idbStore) {
                this._idbStore = new IdbLayoutsStore(this);
            }
            return this._idbStore;
        }
        get portsBridge() {
            if (!this._portsBridge) {
                this._portsBridge = new PortsBridge(this.gateway, this.sessionController, this);
            }
            return this._portsBridge;
        }
        get serviceWorkerController() {
            if (!this._serviceWorkerController) {
                this._serviceWorkerController = new ServiceWorkerController(this);
            }
            return this._serviceWorkerController;
        }
        get transactionsController() {
            if (!this._transactionsController) {
                this._transactionsController = new TransactionsController();
            }
            return this._transactionsController;
        }
        get interceptionController() {
            if (!this._interceptionController) {
                this._interceptionController = new InterceptionController();
            }
            return this._interceptionController;
        }
        get pluginsController() {
            if (!this._pluginsController) {
                this._pluginsController = new PluginsController(this.interceptionController, this.glueController, this.startCore.bind(this));
            }
            return this._pluginsController;
        }
        getDatabase() {
            if (this._database) {
                return Promise.resolve(this._database);
            }
            return new Promise((resolve) => {
                openDB(dbName, dbVersion, { upgrade: this.setUpDb.bind(this) })
                    .then((database) => {
                    this._database = database;
                    resolve(this._database);
                });
            });
        }
        get preferredConnectionController() {
            if (!this._preferredConnectionController) {
                this._preferredConnectionController = new PreferredConnectionController$1(this.glueController, this.portsBridge, this.createSequelizer());
            }
            return this._preferredConnectionController;
        }
        createMessageChannel() {
            return new MessageChannel();
        }
        createSequelizer(looseInterval) {
            return new AsyncSequelizer$2(looseInterval);
        }
        startCore(platformConfig) {
            var _a;
            return __awaiter(this, void 0, void 0, function* () {
                yield ((_a = platformConfig.corePlus) === null || _a === void 0 ? void 0 : _a.start(this, platformConfig));
            });
        }
        setUpDb(database) {
            if (!database.objectStoreNames.contains("workspaceLayouts")) {
                database.createObjectStore("workspaceLayouts");
            }
            if (!database.objectStoreNames.contains("globalLayouts")) {
                database.createObjectStore("globalLayouts");
            }
            if (!database.objectStoreNames.contains("serviceWorker")) {
                database.createObjectStore("serviceWorker");
            }
        }
    }

    const glueWebPlatformFactory = (config) => __awaiter(void 0, void 0, void 0, function* () {
        if (window.glue42gd) {
            return fallbackToEnterprise(config);
        }
        const isOpenerGlue = yield checkIsOpenerGlue();
        const isPlacedInWorkspace = checkIfPlacedInWorkspace();
        if ((config === null || config === void 0 ? void 0 : config.clientOnly) || isOpenerGlue || isPlacedInWorkspace) {
            const glue = (config === null || config === void 0 ? void 0 : config.glueFactory) ?
                yield (config === null || config === void 0 ? void 0 : config.glueFactory(config === null || config === void 0 ? void 0 : config.glue)) :
                yield glueWebFactory(config === null || config === void 0 ? void 0 : config.glue);
            return { glue };
        }
        const ioc = new IoC$1(config);
        yield ioc.platform.ready();
        const glue = ioc.platform.getClientGlue();
        return { glue, platform: ioc === null || ioc === void 0 ? void 0 : ioc.platform.getPlatformApi() };
    });

    if (typeof window !== "undefined") {
        window.GlueWebPlatform = glueWebPlatformFactory;
    }
    if (!window.glue42gd && !window.glue42core) {
        window.glue42core = { webStarted: false };
    }

    return glueWebPlatformFactory;

})));
//# sourceMappingURL=platform.web.umd.js.map
